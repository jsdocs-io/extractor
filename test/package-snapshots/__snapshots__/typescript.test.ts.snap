// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`typescript 4.1.3 1`] = `
Object {
  "declarations": Object {
    "classes": Array [
      Object {
        "constructors": Array [],
        "docs": Array [],
        "id": "OperationCanceledException",
        "isAbstract": false,
        "kind": "ClassDeclaration",
        "members": Object {
          "methods": Array [],
          "properties": Array [],
        },
        "name": "OperationCanceledException",
        "signature": "class OperationCanceledException {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 2043,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2043",
        },
      },
    ],
    "enums": Array [
      Object {
        "docs": Array [],
        "id": "ClassificationType",
        "isConst": false,
        "kind": "EnumDeclaration",
        "members": Array [
          Object {
            "docs": Array [],
            "id": "ClassificationType.bigintLiteral",
            "kind": "EnumMemberDeclaration",
            "name": "bigintLiteral",
            "signature": "bigintLiteral = 25",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 6312,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6312",
            },
            "value": 25,
          },
          Object {
            "docs": Array [],
            "id": "ClassificationType.className",
            "kind": "EnumMemberDeclaration",
            "name": "className",
            "signature": "className = 11",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 6298,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6298",
            },
            "value": 11,
          },
          Object {
            "docs": Array [],
            "id": "ClassificationType.comment",
            "kind": "EnumMemberDeclaration",
            "name": "comment",
            "signature": "comment = 1",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 6288,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6288",
            },
            "value": 1,
          },
          Object {
            "docs": Array [],
            "id": "ClassificationType.docCommentTagName",
            "kind": "EnumMemberDeclaration",
            "name": "docCommentTagName",
            "signature": "docCommentTagName = 18",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 6305,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6305",
            },
            "value": 18,
          },
          Object {
            "docs": Array [],
            "id": "ClassificationType.enumName",
            "kind": "EnumMemberDeclaration",
            "name": "enumName",
            "signature": "enumName = 12",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 6299,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6299",
            },
            "value": 12,
          },
          Object {
            "docs": Array [],
            "id": "ClassificationType.identifier",
            "kind": "EnumMemberDeclaration",
            "name": "identifier",
            "signature": "identifier = 2",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 6289,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6289",
            },
            "value": 2,
          },
          Object {
            "docs": Array [],
            "id": "ClassificationType.interfaceName",
            "kind": "EnumMemberDeclaration",
            "name": "interfaceName",
            "signature": "interfaceName = 13",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 6300,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6300",
            },
            "value": 13,
          },
          Object {
            "docs": Array [],
            "id": "ClassificationType.jsxAttribute",
            "kind": "EnumMemberDeclaration",
            "name": "jsxAttribute",
            "signature": "jsxAttribute = 22",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 6309,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6309",
            },
            "value": 22,
          },
          Object {
            "docs": Array [],
            "id": "ClassificationType.jsxAttributeStringLiteralValue",
            "kind": "EnumMemberDeclaration",
            "name": "jsxAttributeStringLiteralValue",
            "signature": "jsxAttributeStringLiteralValue = 24",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 6311,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6311",
            },
            "value": 24,
          },
          Object {
            "docs": Array [],
            "id": "ClassificationType.jsxCloseTagName",
            "kind": "EnumMemberDeclaration",
            "name": "jsxCloseTagName",
            "signature": "jsxCloseTagName = 20",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 6307,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6307",
            },
            "value": 20,
          },
          Object {
            "docs": Array [],
            "id": "ClassificationType.jsxOpenTagName",
            "kind": "EnumMemberDeclaration",
            "name": "jsxOpenTagName",
            "signature": "jsxOpenTagName = 19",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 6306,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6306",
            },
            "value": 19,
          },
          Object {
            "docs": Array [],
            "id": "ClassificationType.jsxSelfClosingTagName",
            "kind": "EnumMemberDeclaration",
            "name": "jsxSelfClosingTagName",
            "signature": "jsxSelfClosingTagName = 21",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 6308,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6308",
            },
            "value": 21,
          },
          Object {
            "docs": Array [],
            "id": "ClassificationType.jsxText",
            "kind": "EnumMemberDeclaration",
            "name": "jsxText",
            "signature": "jsxText = 23",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 6310,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6310",
            },
            "value": 23,
          },
          Object {
            "docs": Array [],
            "id": "ClassificationType.keyword",
            "kind": "EnumMemberDeclaration",
            "name": "keyword",
            "signature": "keyword = 3",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 6290,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6290",
            },
            "value": 3,
          },
          Object {
            "docs": Array [],
            "id": "ClassificationType.moduleName",
            "kind": "EnumMemberDeclaration",
            "name": "moduleName",
            "signature": "moduleName = 14",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 6301,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6301",
            },
            "value": 14,
          },
          Object {
            "docs": Array [],
            "id": "ClassificationType.numericLiteral",
            "kind": "EnumMemberDeclaration",
            "name": "numericLiteral",
            "signature": "numericLiteral = 4",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 6291,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6291",
            },
            "value": 4,
          },
          Object {
            "docs": Array [],
            "id": "ClassificationType.operator",
            "kind": "EnumMemberDeclaration",
            "name": "operator",
            "signature": "operator = 5",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 6292,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6292",
            },
            "value": 5,
          },
          Object {
            "docs": Array [],
            "id": "ClassificationType.parameterName",
            "kind": "EnumMemberDeclaration",
            "name": "parameterName",
            "signature": "parameterName = 17",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 6304,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6304",
            },
            "value": 17,
          },
          Object {
            "docs": Array [],
            "id": "ClassificationType.punctuation",
            "kind": "EnumMemberDeclaration",
            "name": "punctuation",
            "signature": "punctuation = 10",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 6297,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6297",
            },
            "value": 10,
          },
          Object {
            "docs": Array [],
            "id": "ClassificationType.regularExpressionLiteral",
            "kind": "EnumMemberDeclaration",
            "name": "regularExpressionLiteral",
            "signature": "regularExpressionLiteral = 7",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 6294,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6294",
            },
            "value": 7,
          },
          Object {
            "docs": Array [],
            "id": "ClassificationType.stringLiteral",
            "kind": "EnumMemberDeclaration",
            "name": "stringLiteral",
            "signature": "stringLiteral = 6",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 6293,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6293",
            },
            "value": 6,
          },
          Object {
            "docs": Array [],
            "id": "ClassificationType.text",
            "kind": "EnumMemberDeclaration",
            "name": "text",
            "signature": "text = 9",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 6296,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6296",
            },
            "value": 9,
          },
          Object {
            "docs": Array [],
            "id": "ClassificationType.typeAliasName",
            "kind": "EnumMemberDeclaration",
            "name": "typeAliasName",
            "signature": "typeAliasName = 16",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 6303,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6303",
            },
            "value": 16,
          },
          Object {
            "docs": Array [],
            "id": "ClassificationType.typeParameterName",
            "kind": "EnumMemberDeclaration",
            "name": "typeParameterName",
            "signature": "typeParameterName = 15",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 6302,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6302",
            },
            "value": 15,
          },
          Object {
            "docs": Array [],
            "id": "ClassificationType.whiteSpace",
            "kind": "EnumMemberDeclaration",
            "name": "whiteSpace",
            "signature": "whiteSpace = 8",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 6295,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6295",
            },
            "value": 8,
          },
        ],
        "name": "ClassificationType",
        "signature": "enum ClassificationType {
    comment = 1,
    identifier = 2,
    keyword = 3,
    numericLiteral = 4,
    operator = 5,
    stringLiteral = 6,
    regularExpressionLiteral = 7,
    whiteSpace = 8,
    text = 9,
    punctuation = 10,
    className = 11,
    enumName = 12,
    interfaceName = 13,
    moduleName = 14,
    typeParameterName = 15,
    typeAliasName = 16,
    parameterName = 17,
    docCommentTagName = 18,
    jsxOpenTagName = 19,
    jsxCloseTagName = 20,
    jsxSelfClosingTagName = 21,
    jsxAttribute = 22,
    jsxText = 23,
    jsxAttributeStringLiteralValue = 24,
    bigintLiteral = 25,
}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 6287,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6287",
        },
      },
      Object {
        "docs": Array [],
        "id": "ClassificationTypeNames",
        "isConst": false,
        "kind": "EnumDeclaration",
        "members": Array [
          Object {
            "docs": Array [],
            "id": "ClassificationTypeNames.bigintLiteral",
            "kind": "EnumMemberDeclaration",
            "name": "bigintLiteral",
            "signature": "bigintLiteral = 'bigint'",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 6266,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6266",
            },
            "value": "bigint",
          },
          Object {
            "docs": Array [],
            "id": "ClassificationTypeNames.className",
            "kind": "EnumMemberDeclaration",
            "name": "className",
            "signature": "className = 'class name'",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 6272,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6272",
            },
            "value": "class name",
          },
          Object {
            "docs": Array [],
            "id": "ClassificationTypeNames.comment",
            "kind": "EnumMemberDeclaration",
            "name": "comment",
            "signature": "comment = 'comment'",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 6262,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6262",
            },
            "value": "comment",
          },
          Object {
            "docs": Array [],
            "id": "ClassificationTypeNames.docCommentTagName",
            "kind": "EnumMemberDeclaration",
            "name": "docCommentTagName",
            "signature": "docCommentTagName = 'doc comment tag name'",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 6279,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6279",
            },
            "value": "doc comment tag name",
          },
          Object {
            "docs": Array [],
            "id": "ClassificationTypeNames.enumName",
            "kind": "EnumMemberDeclaration",
            "name": "enumName",
            "signature": "enumName = 'enum name'",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 6273,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6273",
            },
            "value": "enum name",
          },
          Object {
            "docs": Array [],
            "id": "ClassificationTypeNames.identifier",
            "kind": "EnumMemberDeclaration",
            "name": "identifier",
            "signature": "identifier = 'identifier'",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 6263,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6263",
            },
            "value": "identifier",
          },
          Object {
            "docs": Array [],
            "id": "ClassificationTypeNames.interfaceName",
            "kind": "EnumMemberDeclaration",
            "name": "interfaceName",
            "signature": "interfaceName = 'interface name'",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 6274,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6274",
            },
            "value": "interface name",
          },
          Object {
            "docs": Array [],
            "id": "ClassificationTypeNames.jsxAttribute",
            "kind": "EnumMemberDeclaration",
            "name": "jsxAttribute",
            "signature": "jsxAttribute = 'jsx attribute'",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 6283,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6283",
            },
            "value": "jsx attribute",
          },
          Object {
            "docs": Array [],
            "id": "ClassificationTypeNames.jsxAttributeStringLiteralValue",
            "kind": "EnumMemberDeclaration",
            "name": "jsxAttributeStringLiteralValue",
            "signature": "jsxAttributeStringLiteralValue = 'jsx attribute string literal value'",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 6285,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6285",
            },
            "value": "jsx attribute string literal value",
          },
          Object {
            "docs": Array [],
            "id": "ClassificationTypeNames.jsxCloseTagName",
            "kind": "EnumMemberDeclaration",
            "name": "jsxCloseTagName",
            "signature": "jsxCloseTagName = 'jsx close tag name'",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 6281,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6281",
            },
            "value": "jsx close tag name",
          },
          Object {
            "docs": Array [],
            "id": "ClassificationTypeNames.jsxOpenTagName",
            "kind": "EnumMemberDeclaration",
            "name": "jsxOpenTagName",
            "signature": "jsxOpenTagName = 'jsx open tag name'",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 6280,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6280",
            },
            "value": "jsx open tag name",
          },
          Object {
            "docs": Array [],
            "id": "ClassificationTypeNames.jsxSelfClosingTagName",
            "kind": "EnumMemberDeclaration",
            "name": "jsxSelfClosingTagName",
            "signature": "jsxSelfClosingTagName = 'jsx self closing tag name'",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 6282,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6282",
            },
            "value": "jsx self closing tag name",
          },
          Object {
            "docs": Array [],
            "id": "ClassificationTypeNames.jsxText",
            "kind": "EnumMemberDeclaration",
            "name": "jsxText",
            "signature": "jsxText = 'jsx text'",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 6284,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6284",
            },
            "value": "jsx text",
          },
          Object {
            "docs": Array [],
            "id": "ClassificationTypeNames.keyword",
            "kind": "EnumMemberDeclaration",
            "name": "keyword",
            "signature": "keyword = 'keyword'",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 6264,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6264",
            },
            "value": "keyword",
          },
          Object {
            "docs": Array [],
            "id": "ClassificationTypeNames.moduleName",
            "kind": "EnumMemberDeclaration",
            "name": "moduleName",
            "signature": "moduleName = 'module name'",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 6275,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6275",
            },
            "value": "module name",
          },
          Object {
            "docs": Array [],
            "id": "ClassificationTypeNames.numericLiteral",
            "kind": "EnumMemberDeclaration",
            "name": "numericLiteral",
            "signature": "numericLiteral = 'number'",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 6265,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6265",
            },
            "value": "number",
          },
          Object {
            "docs": Array [],
            "id": "ClassificationTypeNames.operator",
            "kind": "EnumMemberDeclaration",
            "name": "operator",
            "signature": "operator = 'operator'",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 6267,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6267",
            },
            "value": "operator",
          },
          Object {
            "docs": Array [],
            "id": "ClassificationTypeNames.parameterName",
            "kind": "EnumMemberDeclaration",
            "name": "parameterName",
            "signature": "parameterName = 'parameter name'",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 6278,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6278",
            },
            "value": "parameter name",
          },
          Object {
            "docs": Array [],
            "id": "ClassificationTypeNames.punctuation",
            "kind": "EnumMemberDeclaration",
            "name": "punctuation",
            "signature": "punctuation = 'punctuation'",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 6271,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6271",
            },
            "value": "punctuation",
          },
          Object {
            "docs": Array [],
            "id": "ClassificationTypeNames.stringLiteral",
            "kind": "EnumMemberDeclaration",
            "name": "stringLiteral",
            "signature": "stringLiteral = 'string'",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 6268,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6268",
            },
            "value": "string",
          },
          Object {
            "docs": Array [],
            "id": "ClassificationTypeNames.text",
            "kind": "EnumMemberDeclaration",
            "name": "text",
            "signature": "text = 'text'",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 6270,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6270",
            },
            "value": "text",
          },
          Object {
            "docs": Array [],
            "id": "ClassificationTypeNames.typeAliasName",
            "kind": "EnumMemberDeclaration",
            "name": "typeAliasName",
            "signature": "typeAliasName = 'type alias name'",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 6277,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6277",
            },
            "value": "type alias name",
          },
          Object {
            "docs": Array [],
            "id": "ClassificationTypeNames.typeParameterName",
            "kind": "EnumMemberDeclaration",
            "name": "typeParameterName",
            "signature": "typeParameterName = 'type parameter name'",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 6276,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6276",
            },
            "value": "type parameter name",
          },
          Object {
            "docs": Array [],
            "id": "ClassificationTypeNames.whiteSpace",
            "kind": "EnumMemberDeclaration",
            "name": "whiteSpace",
            "signature": "whiteSpace = 'whitespace'",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 6269,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6269",
            },
            "value": "whitespace",
          },
        ],
        "name": "ClassificationTypeNames",
        "signature": "enum ClassificationTypeNames {
    comment = 'comment',
    identifier = 'identifier',
    keyword = 'keyword',
    numericLiteral = 'number',
    bigintLiteral = 'bigint',
    operator = 'operator',
    stringLiteral = 'string',
    whiteSpace = 'whitespace',
    text = 'text',
    punctuation = 'punctuation',
    className = 'class name',
    enumName = 'enum name',
    interfaceName = 'interface name',
    moduleName = 'module name',
    typeParameterName = 'type parameter name',
    typeAliasName = 'type alias name',
    parameterName = 'parameter name',
    docCommentTagName = 'doc comment tag name',
    jsxOpenTagName = 'jsx open tag name',
    jsxCloseTagName = 'jsx close tag name',
    jsxSelfClosingTagName = 'jsx self closing tag name',
    jsxAttribute = 'jsx attribute',
    jsxText = 'jsx text',
    jsxAttributeStringLiteralValue = 'jsx attribute string literal value',
}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 6261,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6261",
        },
      },
      Object {
        "docs": Array [],
        "id": "DiagnosticCategory",
        "isConst": false,
        "kind": "EnumDeclaration",
        "members": Array [
          Object {
            "docs": Array [],
            "id": "DiagnosticCategory.Error",
            "kind": "EnumMemberDeclaration",
            "name": "Error",
            "signature": "Error = 1",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 2746,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2746",
            },
            "value": 1,
          },
          Object {
            "docs": Array [],
            "id": "DiagnosticCategory.Message",
            "kind": "EnumMemberDeclaration",
            "name": "Message",
            "signature": "Message = 3",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 2748,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2748",
            },
            "value": 3,
          },
          Object {
            "docs": Array [],
            "id": "DiagnosticCategory.Suggestion",
            "kind": "EnumMemberDeclaration",
            "name": "Suggestion",
            "signature": "Suggestion = 2",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 2747,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2747",
            },
            "value": 2,
          },
          Object {
            "docs": Array [],
            "id": "DiagnosticCategory.Warning",
            "kind": "EnumMemberDeclaration",
            "name": "Warning",
            "signature": "Warning = 0",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 2745,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2745",
            },
            "value": 0,
          },
        ],
        "name": "DiagnosticCategory",
        "signature": "enum DiagnosticCategory {
    Warning = 0,
    Error = 1,
    Suggestion = 2,
    Message = 3,
}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 2744,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2744",
        },
      },
      Object {
        "docs": Array [],
        "id": "ElementFlags",
        "isConst": false,
        "kind": "EnumDeclaration",
        "members": Array [
          Object {
            "docs": Array [],
            "id": "ElementFlags.Optional",
            "kind": "EnumMemberDeclaration",
            "name": "Optional",
            "signature": "Optional = 2",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 2590,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2590",
            },
            "value": 2,
          },
          Object {
            "docs": Array [],
            "id": "ElementFlags.Required",
            "kind": "EnumMemberDeclaration",
            "name": "Required",
            "signature": "Required = 1",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 2589,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2589",
            },
            "value": 1,
          },
          Object {
            "docs": Array [],
            "id": "ElementFlags.Rest",
            "kind": "EnumMemberDeclaration",
            "name": "Rest",
            "signature": "Rest = 4",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 2591,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2591",
            },
            "value": 4,
          },
          Object {
            "docs": Array [],
            "id": "ElementFlags.Variable",
            "kind": "EnumMemberDeclaration",
            "name": "Variable",
            "signature": "Variable = 12",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 2593,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2593",
            },
            "value": 12,
          },
          Object {
            "docs": Array [],
            "id": "ElementFlags.Variadic",
            "kind": "EnumMemberDeclaration",
            "name": "Variadic",
            "signature": "Variadic = 8",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 2592,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2592",
            },
            "value": 8,
          },
        ],
        "name": "ElementFlags",
        "signature": "enum ElementFlags {
    Required = 1,
    Optional = 2,
    Rest = 4,
    Variadic = 8,
    Variable = 12,
}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 2588,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2588",
        },
      },
      Object {
        "docs": Array [],
        "id": "EmitFlags",
        "isConst": false,
        "kind": "EnumDeclaration",
        "members": Array [
          Object {
            "docs": Array [],
            "id": "EmitFlags.AdviseOnEmitNode",
            "kind": "EnumMemberDeclaration",
            "name": "AdviseOnEmitNode",
            "signature": "AdviseOnEmitNode = 2",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 3100,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3100",
            },
            "value": 2,
          },
          Object {
            "docs": Array [],
            "id": "EmitFlags.AsyncFunctionBody",
            "kind": "EnumMemberDeclaration",
            "name": "AsyncFunctionBody",
            "signature": "AsyncFunctionBody = 262144",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 3120,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3120",
            },
            "value": 262144,
          },
          Object {
            "docs": Array [],
            "id": "EmitFlags.CapturesThis",
            "kind": "EnumMemberDeclaration",
            "name": "CapturesThis",
            "signature": "CapturesThis = 8",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 3102,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3102",
            },
            "value": 8,
          },
          Object {
            "docs": Array [],
            "id": "EmitFlags.CustomPrologue",
            "kind": "EnumMemberDeclaration",
            "name": "CustomPrologue",
            "signature": "CustomPrologue = 1048576",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 3122,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3122",
            },
            "value": 1048576,
          },
          Object {
            "docs": Array [],
            "id": "EmitFlags.ExportName",
            "kind": "EnumMemberDeclaration",
            "name": "ExportName",
            "signature": "ExportName = 8192",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 3115,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3115",
            },
            "value": 8192,
          },
          Object {
            "docs": Array [],
            "id": "EmitFlags.HasEndOfDeclarationMarker",
            "kind": "EnumMemberDeclaration",
            "name": "HasEndOfDeclarationMarker",
            "signature": "HasEndOfDeclarationMarker = 4194304",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 3124,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3124",
            },
            "value": 4194304,
          },
          Object {
            "docs": Array [],
            "id": "EmitFlags.HelperName",
            "kind": "EnumMemberDeclaration",
            "name": "HelperName",
            "signature": "HelperName = 4096",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 3114,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3114",
            },
            "value": 4096,
          },
          Object {
            "docs": Array [],
            "id": "EmitFlags.Indented",
            "kind": "EnumMemberDeclaration",
            "name": "Indented",
            "signature": "Indented = 65536",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 3118,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3118",
            },
            "value": 65536,
          },
          Object {
            "docs": Array [],
            "id": "EmitFlags.InternalName",
            "kind": "EnumMemberDeclaration",
            "name": "InternalName",
            "signature": "InternalName = 32768",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 3117,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3117",
            },
            "value": 32768,
          },
          Object {
            "docs": Array [],
            "id": "EmitFlags.Iterator",
            "kind": "EnumMemberDeclaration",
            "name": "Iterator",
            "signature": "Iterator = 8388608",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 3125,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3125",
            },
            "value": 8388608,
          },
          Object {
            "docs": Array [],
            "id": "EmitFlags.LocalName",
            "kind": "EnumMemberDeclaration",
            "name": "LocalName",
            "signature": "LocalName = 16384",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 3116,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3116",
            },
            "value": 16384,
          },
          Object {
            "docs": Array [],
            "id": "EmitFlags.NoAsciiEscaping",
            "kind": "EnumMemberDeclaration",
            "name": "NoAsciiEscaping",
            "signature": "NoAsciiEscaping = 16777216",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 3126,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3126",
            },
            "value": 16777216,
          },
          Object {
            "docs": Array [],
            "id": "EmitFlags.NoComments",
            "kind": "EnumMemberDeclaration",
            "name": "NoComments",
            "signature": "NoComments = 1536",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 3112,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3112",
            },
            "value": 1536,
          },
          Object {
            "docs": Array [],
            "id": "EmitFlags.NoHoisting",
            "kind": "EnumMemberDeclaration",
            "name": "NoHoisting",
            "signature": "NoHoisting = 2097152",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 3123,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3123",
            },
            "value": 2097152,
          },
          Object {
            "docs": Array [],
            "id": "EmitFlags.NoIndentation",
            "kind": "EnumMemberDeclaration",
            "name": "NoIndentation",
            "signature": "NoIndentation = 131072",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 3119,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3119",
            },
            "value": 131072,
          },
          Object {
            "docs": Array [],
            "id": "EmitFlags.NoLeadingComments",
            "kind": "EnumMemberDeclaration",
            "name": "NoLeadingComments",
            "signature": "NoLeadingComments = 512",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 3110,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3110",
            },
            "value": 512,
          },
          Object {
            "docs": Array [],
            "id": "EmitFlags.NoLeadingSourceMap",
            "kind": "EnumMemberDeclaration",
            "name": "NoLeadingSourceMap",
            "signature": "NoLeadingSourceMap = 16",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 3103,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3103",
            },
            "value": 16,
          },
          Object {
            "docs": Array [],
            "id": "EmitFlags.None",
            "kind": "EnumMemberDeclaration",
            "name": "None",
            "signature": "None = 0",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 3098,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3098",
            },
            "value": 0,
          },
          Object {
            "docs": Array [],
            "id": "EmitFlags.NoNestedComments",
            "kind": "EnumMemberDeclaration",
            "name": "NoNestedComments",
            "signature": "NoNestedComments = 2048",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 3113,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3113",
            },
            "value": 2048,
          },
          Object {
            "docs": Array [],
            "id": "EmitFlags.NoNestedSourceMaps",
            "kind": "EnumMemberDeclaration",
            "name": "NoNestedSourceMaps",
            "signature": "NoNestedSourceMaps = 64",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 3106,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3106",
            },
            "value": 64,
          },
          Object {
            "docs": Array [],
            "id": "EmitFlags.NoSourceMap",
            "kind": "EnumMemberDeclaration",
            "name": "NoSourceMap",
            "signature": "NoSourceMap = 48",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 3105,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3105",
            },
            "value": 48,
          },
          Object {
            "docs": Array [],
            "id": "EmitFlags.NoSubstitution",
            "kind": "EnumMemberDeclaration",
            "name": "NoSubstitution",
            "signature": "NoSubstitution = 4",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 3101,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3101",
            },
            "value": 4,
          },
          Object {
            "docs": Array [],
            "id": "EmitFlags.NoTokenLeadingSourceMaps",
            "kind": "EnumMemberDeclaration",
            "name": "NoTokenLeadingSourceMaps",
            "signature": "NoTokenLeadingSourceMaps = 128",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 3107,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3107",
            },
            "value": 128,
          },
          Object {
            "docs": Array [],
            "id": "EmitFlags.NoTokenSourceMaps",
            "kind": "EnumMemberDeclaration",
            "name": "NoTokenSourceMaps",
            "signature": "NoTokenSourceMaps = 384",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 3109,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3109",
            },
            "value": 384,
          },
          Object {
            "docs": Array [],
            "id": "EmitFlags.NoTokenTrailingSourceMaps",
            "kind": "EnumMemberDeclaration",
            "name": "NoTokenTrailingSourceMaps",
            "signature": "NoTokenTrailingSourceMaps = 256",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 3108,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3108",
            },
            "value": 256,
          },
          Object {
            "docs": Array [],
            "id": "EmitFlags.NoTrailingComments",
            "kind": "EnumMemberDeclaration",
            "name": "NoTrailingComments",
            "signature": "NoTrailingComments = 1024",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 3111,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3111",
            },
            "value": 1024,
          },
          Object {
            "docs": Array [],
            "id": "EmitFlags.NoTrailingSourceMap",
            "kind": "EnumMemberDeclaration",
            "name": "NoTrailingSourceMap",
            "signature": "NoTrailingSourceMap = 32",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 3104,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3104",
            },
            "value": 32,
          },
          Object {
            "docs": Array [],
            "id": "EmitFlags.ReuseTempVariableScope",
            "kind": "EnumMemberDeclaration",
            "name": "ReuseTempVariableScope",
            "signature": "ReuseTempVariableScope = 524288",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 3121,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3121",
            },
            "value": 524288,
          },
          Object {
            "docs": Array [],
            "id": "EmitFlags.SingleLine",
            "kind": "EnumMemberDeclaration",
            "name": "SingleLine",
            "signature": "SingleLine = 1",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 3099,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3099",
            },
            "value": 1,
          },
        ],
        "name": "EmitFlags",
        "signature": "enum EmitFlags {
    None = 0,
    SingleLine = 1,
    AdviseOnEmitNode = 2,
    NoSubstitution = 4,
    CapturesThis = 8,
    NoLeadingSourceMap = 16,
    NoTrailingSourceMap = 32,
    NoSourceMap = 48,
    NoNestedSourceMaps = 64,
    NoTokenLeadingSourceMaps = 128,
    NoTokenTrailingSourceMaps = 256,
    NoTokenSourceMaps = 384,
    NoLeadingComments = 512,
    NoTrailingComments = 1024,
    NoComments = 1536,
    NoNestedComments = 2048,
    HelperName = 4096,
    ExportName = 8192,
    LocalName = 16384,
    InternalName = 32768,
    Indented = 65536,
    NoIndentation = 131072,
    AsyncFunctionBody = 262144,
    ReuseTempVariableScope = 524288,
    CustomPrologue = 1048576,
    NoHoisting = 2097152,
    HasEndOfDeclarationMarker = 4194304,
    Iterator = 8388608,
    NoAsciiEscaping = 16777216,
}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 3097,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3097",
        },
      },
      Object {
        "docs": Array [],
        "id": "EmitHint",
        "isConst": false,
        "kind": "EnumDeclaration",
        "members": Array [
          Object {
            "docs": Array [],
            "id": "EmitHint.EmbeddedStatement",
            "kind": "EnumMemberDeclaration",
            "name": "EmbeddedStatement",
            "signature": "EmbeddedStatement = 5",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 3146,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3146",
            },
            "value": 5,
          },
          Object {
            "docs": Array [],
            "id": "EmitHint.Expression",
            "kind": "EnumMemberDeclaration",
            "name": "Expression",
            "signature": "Expression = 1",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 3142,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3142",
            },
            "value": 1,
          },
          Object {
            "docs": Array [],
            "id": "EmitHint.IdentifierName",
            "kind": "EnumMemberDeclaration",
            "name": "IdentifierName",
            "signature": "IdentifierName = 2",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 3143,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3143",
            },
            "value": 2,
          },
          Object {
            "docs": Array [],
            "id": "EmitHint.JsxAttributeValue",
            "kind": "EnumMemberDeclaration",
            "name": "JsxAttributeValue",
            "signature": "JsxAttributeValue = 6",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 3147,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3147",
            },
            "value": 6,
          },
          Object {
            "docs": Array [],
            "id": "EmitHint.MappedTypeParameter",
            "kind": "EnumMemberDeclaration",
            "name": "MappedTypeParameter",
            "signature": "MappedTypeParameter = 3",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 3144,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3144",
            },
            "value": 3,
          },
          Object {
            "docs": Array [],
            "id": "EmitHint.SourceFile",
            "kind": "EnumMemberDeclaration",
            "name": "SourceFile",
            "signature": "SourceFile = 0",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 3141,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3141",
            },
            "value": 0,
          },
          Object {
            "docs": Array [],
            "id": "EmitHint.Unspecified",
            "kind": "EnumMemberDeclaration",
            "name": "Unspecified",
            "signature": "Unspecified = 4",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 3145,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3145",
            },
            "value": 4,
          },
        ],
        "name": "EmitHint",
        "signature": "enum EmitHint {
    SourceFile = 0,
    Expression = 1,
    IdentifierName = 2,
    MappedTypeParameter = 3,
    Unspecified = 4,
    EmbeddedStatement = 5,
    JsxAttributeValue = 6,
}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 3140,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3140",
        },
      },
      Object {
        "docs": Array [],
        "id": "EndOfLineState",
        "isConst": false,
        "kind": "EnumDeclaration",
        "members": Array [
          Object {
            "docs": Array [],
            "id": "EndOfLineState.InDoubleQuoteStringLiteral",
            "kind": "EnumMemberDeclaration",
            "name": "InDoubleQuoteStringLiteral",
            "signature": "InDoubleQuoteStringLiteral = 3",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 6125,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6125",
            },
            "value": 3,
          },
          Object {
            "docs": Array [],
            "id": "EndOfLineState.InMultiLineCommentTrivia",
            "kind": "EnumMemberDeclaration",
            "name": "InMultiLineCommentTrivia",
            "signature": "InMultiLineCommentTrivia = 1",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 6123,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6123",
            },
            "value": 1,
          },
          Object {
            "docs": Array [],
            "id": "EndOfLineState.InSingleQuoteStringLiteral",
            "kind": "EnumMemberDeclaration",
            "name": "InSingleQuoteStringLiteral",
            "signature": "InSingleQuoteStringLiteral = 2",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 6124,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6124",
            },
            "value": 2,
          },
          Object {
            "docs": Array [],
            "id": "EndOfLineState.InTemplateHeadOrNoSubstitutionTemplate",
            "kind": "EnumMemberDeclaration",
            "name": "InTemplateHeadOrNoSubstitutionTemplate",
            "signature": "InTemplateHeadOrNoSubstitutionTemplate = 4",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 6126,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6126",
            },
            "value": 4,
          },
          Object {
            "docs": Array [],
            "id": "EndOfLineState.InTemplateMiddleOrTail",
            "kind": "EnumMemberDeclaration",
            "name": "InTemplateMiddleOrTail",
            "signature": "InTemplateMiddleOrTail = 5",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 6127,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6127",
            },
            "value": 5,
          },
          Object {
            "docs": Array [],
            "id": "EndOfLineState.InTemplateSubstitutionPosition",
            "kind": "EnumMemberDeclaration",
            "name": "InTemplateSubstitutionPosition",
            "signature": "InTemplateSubstitutionPosition = 6",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 6128,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6128",
            },
            "value": 6,
          },
          Object {
            "docs": Array [],
            "id": "EndOfLineState.None",
            "kind": "EnumMemberDeclaration",
            "name": "None",
            "signature": "None = 0",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 6122,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6122",
            },
            "value": 0,
          },
        ],
        "name": "EndOfLineState",
        "signature": "enum EndOfLineState {
    None = 0,
    InMultiLineCommentTrivia = 1,
    InSingleQuoteStringLiteral = 2,
    InDoubleQuoteStringLiteral = 3,
    InTemplateHeadOrNoSubstitutionTemplate = 4,
    InTemplateMiddleOrTail = 5,
    InTemplateSubstitutionPosition = 6,
}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 6121,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6121",
        },
      },
      Object {
        "docs": Array [
          "/** Return code used by getEmitOutput function to indicate status of the function */",
        ],
        "id": "ExitStatus",
        "isConst": false,
        "kind": "EnumDeclaration",
        "members": Array [
          Object {
            "docs": Array [],
            "id": "ExitStatus.DiagnosticsPresent_OutputsGenerated",
            "kind": "EnumMemberDeclaration",
            "name": "DiagnosticsPresent_OutputsGenerated",
            "signature": "DiagnosticsPresent_OutputsGenerated = 2",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 2135,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2135",
            },
            "value": 2,
          },
          Object {
            "docs": Array [],
            "id": "ExitStatus.DiagnosticsPresent_OutputsSkipped",
            "kind": "EnumMemberDeclaration",
            "name": "DiagnosticsPresent_OutputsSkipped",
            "signature": "DiagnosticsPresent_OutputsSkipped = 1",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 2134,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2134",
            },
            "value": 1,
          },
          Object {
            "docs": Array [],
            "id": "ExitStatus.InvalidProject_OutputsSkipped",
            "kind": "EnumMemberDeclaration",
            "name": "InvalidProject_OutputsSkipped",
            "signature": "InvalidProject_OutputsSkipped = 3",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 2136,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2136",
            },
            "value": 3,
          },
          Object {
            "docs": Array [],
            "id": "ExitStatus.ProjectReferenceCycle_OutputsSkipped",
            "kind": "EnumMemberDeclaration",
            "name": "ProjectReferenceCycle_OutputsSkipped",
            "signature": "ProjectReferenceCycle_OutputsSkipped = 4",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 2137,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2137",
            },
            "value": 4,
          },
          Object {
            "docs": Array [
              "/** @deprecated Use ProjectReferenceCycle_OutputsSkipped instead. */",
            ],
            "id": "ExitStatus.ProjectReferenceCycle_OutputsSkupped",
            "kind": "EnumMemberDeclaration",
            "name": "ProjectReferenceCycle_OutputsSkupped",
            "signature": "ProjectReferenceCycle_OutputsSkupped = 4",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 2139,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2139",
            },
            "value": 4,
          },
          Object {
            "docs": Array [],
            "id": "ExitStatus.Success",
            "kind": "EnumMemberDeclaration",
            "name": "Success",
            "signature": "Success = 0",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 2133,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2133",
            },
            "value": 0,
          },
        ],
        "name": "ExitStatus",
        "signature": "enum ExitStatus {
    Success = 0,
    DiagnosticsPresent_OutputsSkipped = 1,
    DiagnosticsPresent_OutputsGenerated = 2,
    InvalidProject_OutputsSkipped = 3,
    ProjectReferenceCycle_OutputsSkipped = 4,
    ProjectReferenceCycle_OutputsSkupped = 4,
}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 2132,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2132",
        },
      },
      Object {
        "docs": Array [],
        "id": "Extension",
        "isConst": false,
        "kind": "EnumDeclaration",
        "members": Array [
          Object {
            "docs": Array [],
            "id": "Extension.Dts",
            "kind": "EnumMemberDeclaration",
            "name": "Dts",
            "signature": "Dts = '.d.ts'",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 3048,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3048",
            },
            "value": ".d.ts",
          },
          Object {
            "docs": Array [],
            "id": "Extension.Js",
            "kind": "EnumMemberDeclaration",
            "name": "Js",
            "signature": "Js = '.js'",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 3049,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3049",
            },
            "value": ".js",
          },
          Object {
            "docs": Array [],
            "id": "Extension.Json",
            "kind": "EnumMemberDeclaration",
            "name": "Json",
            "signature": "Json = '.json'",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 3051,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3051",
            },
            "value": ".json",
          },
          Object {
            "docs": Array [],
            "id": "Extension.Jsx",
            "kind": "EnumMemberDeclaration",
            "name": "Jsx",
            "signature": "Jsx = '.jsx'",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 3050,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3050",
            },
            "value": ".jsx",
          },
          Object {
            "docs": Array [],
            "id": "Extension.Ts",
            "kind": "EnumMemberDeclaration",
            "name": "Ts",
            "signature": "Ts = '.ts'",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 3046,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3046",
            },
            "value": ".ts",
          },
          Object {
            "docs": Array [],
            "id": "Extension.TsBuildInfo",
            "kind": "EnumMemberDeclaration",
            "name": "TsBuildInfo",
            "signature": "TsBuildInfo = '.tsbuildinfo'",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 3052,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3052",
            },
            "value": ".tsbuildinfo",
          },
          Object {
            "docs": Array [],
            "id": "Extension.Tsx",
            "kind": "EnumMemberDeclaration",
            "name": "Tsx",
            "signature": "Tsx = '.tsx'",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 3047,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3047",
            },
            "value": ".tsx",
          },
        ],
        "name": "Extension",
        "signature": "enum Extension {
    Ts = '.ts',
    Tsx = '.tsx',
    Dts = '.d.ts',
    Js = '.js',
    Jsx = '.jsx',
    Json = '.json',
    TsBuildInfo = '.tsbuildinfo',
}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 3045,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3045",
        },
      },
      Object {
        "docs": Array [],
        "id": "FileWatcherEventKind",
        "isConst": false,
        "kind": "EnumDeclaration",
        "members": Array [
          Object {
            "docs": Array [],
            "id": "FileWatcherEventKind.Changed",
            "kind": "EnumMemberDeclaration",
            "name": "Changed",
            "signature": "Changed = 1",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 3885,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3885",
            },
            "value": 1,
          },
          Object {
            "docs": Array [],
            "id": "FileWatcherEventKind.Created",
            "kind": "EnumMemberDeclaration",
            "name": "Created",
            "signature": "Created = 0",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 3884,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3884",
            },
            "value": 0,
          },
          Object {
            "docs": Array [],
            "id": "FileWatcherEventKind.Deleted",
            "kind": "EnumMemberDeclaration",
            "name": "Deleted",
            "signature": "Deleted = 2",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 3886,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3886",
            },
            "value": 2,
          },
        ],
        "name": "FileWatcherEventKind",
        "signature": "enum FileWatcherEventKind {
    Created = 0,
    Changed = 1,
    Deleted = 2,
}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 3883,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3883",
        },
      },
      Object {
        "docs": Array [],
        "id": "FlowFlags",
        "isConst": false,
        "kind": "EnumDeclaration",
        "members": Array [
          Object {
            "docs": Array [],
            "id": "FlowFlags.ArrayMutation",
            "kind": "EnumMemberDeclaration",
            "name": "ArrayMutation",
            "signature": "ArrayMutation = 256",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 1866,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1866",
            },
            "value": 256,
          },
          Object {
            "docs": Array [],
            "id": "FlowFlags.Assignment",
            "kind": "EnumMemberDeclaration",
            "name": "Assignment",
            "signature": "Assignment = 16",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 1862,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1862",
            },
            "value": 16,
          },
          Object {
            "docs": Array [],
            "id": "FlowFlags.BranchLabel",
            "kind": "EnumMemberDeclaration",
            "name": "BranchLabel",
            "signature": "BranchLabel = 4",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 1860,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1860",
            },
            "value": 4,
          },
          Object {
            "docs": Array [],
            "id": "FlowFlags.Call",
            "kind": "EnumMemberDeclaration",
            "name": "Call",
            "signature": "Call = 512",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 1867,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1867",
            },
            "value": 512,
          },
          Object {
            "docs": Array [],
            "id": "FlowFlags.Condition",
            "kind": "EnumMemberDeclaration",
            "name": "Condition",
            "signature": "Condition = 96",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 1872,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1872",
            },
            "value": 96,
          },
          Object {
            "docs": Array [],
            "id": "FlowFlags.FalseCondition",
            "kind": "EnumMemberDeclaration",
            "name": "FalseCondition",
            "signature": "FalseCondition = 64",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 1864,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1864",
            },
            "value": 64,
          },
          Object {
            "docs": Array [],
            "id": "FlowFlags.Label",
            "kind": "EnumMemberDeclaration",
            "name": "Label",
            "signature": "Label = 12",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 1871,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1871",
            },
            "value": 12,
          },
          Object {
            "docs": Array [],
            "id": "FlowFlags.LoopLabel",
            "kind": "EnumMemberDeclaration",
            "name": "LoopLabel",
            "signature": "LoopLabel = 8",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 1861,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1861",
            },
            "value": 8,
          },
          Object {
            "docs": Array [],
            "id": "FlowFlags.ReduceLabel",
            "kind": "EnumMemberDeclaration",
            "name": "ReduceLabel",
            "signature": "ReduceLabel = 1024",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 1868,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1868",
            },
            "value": 1024,
          },
          Object {
            "docs": Array [],
            "id": "FlowFlags.Referenced",
            "kind": "EnumMemberDeclaration",
            "name": "Referenced",
            "signature": "Referenced = 2048",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 1869,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1869",
            },
            "value": 2048,
          },
          Object {
            "docs": Array [],
            "id": "FlowFlags.Shared",
            "kind": "EnumMemberDeclaration",
            "name": "Shared",
            "signature": "Shared = 4096",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 1870,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1870",
            },
            "value": 4096,
          },
          Object {
            "docs": Array [],
            "id": "FlowFlags.Start",
            "kind": "EnumMemberDeclaration",
            "name": "Start",
            "signature": "Start = 2",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 1859,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1859",
            },
            "value": 2,
          },
          Object {
            "docs": Array [],
            "id": "FlowFlags.SwitchClause",
            "kind": "EnumMemberDeclaration",
            "name": "SwitchClause",
            "signature": "SwitchClause = 128",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 1865,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1865",
            },
            "value": 128,
          },
          Object {
            "docs": Array [],
            "id": "FlowFlags.TrueCondition",
            "kind": "EnumMemberDeclaration",
            "name": "TrueCondition",
            "signature": "TrueCondition = 32",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 1863,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1863",
            },
            "value": 32,
          },
          Object {
            "docs": Array [],
            "id": "FlowFlags.Unreachable",
            "kind": "EnumMemberDeclaration",
            "name": "Unreachable",
            "signature": "Unreachable = 1",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 1858,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1858",
            },
            "value": 1,
          },
        ],
        "name": "FlowFlags",
        "signature": "enum FlowFlags {
    Unreachable = 1,
    Start = 2,
    BranchLabel = 4,
    LoopLabel = 8,
    Assignment = 16,
    TrueCondition = 32,
    FalseCondition = 64,
    SwitchClause = 128,
    ArrayMutation = 256,
    Call = 512,
    ReduceLabel = 1024,
    Referenced = 2048,
    Shared = 4096,
    Label = 12,
    Condition = 96,
}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 1857,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1857",
        },
      },
      Object {
        "docs": Array [],
        "id": "GeneratedIdentifierFlags",
        "isConst": false,
        "kind": "EnumDeclaration",
        "members": Array [
          Object {
            "docs": Array [],
            "id": "GeneratedIdentifierFlags.AllowNameSubstitution",
            "kind": "EnumMemberDeclaration",
            "name": "AllowNameSubstitution",
            "signature": "AllowNameSubstitution = 64",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 619,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L619",
            },
            "value": 64,
          },
          Object {
            "docs": Array [],
            "id": "GeneratedIdentifierFlags.FileLevel",
            "kind": "EnumMemberDeclaration",
            "name": "FileLevel",
            "signature": "FileLevel = 32",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 618,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L618",
            },
            "value": 32,
          },
          Object {
            "docs": Array [],
            "id": "GeneratedIdentifierFlags.None",
            "kind": "EnumMemberDeclaration",
            "name": "None",
            "signature": "None = 0",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 615,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L615",
            },
            "value": 0,
          },
          Object {
            "docs": Array [],
            "id": "GeneratedIdentifierFlags.Optimistic",
            "kind": "EnumMemberDeclaration",
            "name": "Optimistic",
            "signature": "Optimistic = 16",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 617,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L617",
            },
            "value": 16,
          },
          Object {
            "docs": Array [],
            "id": "GeneratedIdentifierFlags.ReservedInNestedScopes",
            "kind": "EnumMemberDeclaration",
            "name": "ReservedInNestedScopes",
            "signature": "ReservedInNestedScopes = 8",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 616,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L616",
            },
            "value": 8,
          },
        ],
        "name": "GeneratedIdentifierFlags",
        "signature": "enum GeneratedIdentifierFlags {
    None = 0,
    ReservedInNestedScopes = 8,
    Optimistic = 16,
    FileLevel = 32,
    AllowNameSubstitution = 64,
}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 614,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L614",
        },
      },
      Object {
        "docs": Array [],
        "id": "HighlightSpanKind",
        "isConst": false,
        "kind": "EnumDeclaration",
        "members": Array [
          Object {
            "docs": Array [],
            "id": "HighlightSpanKind.definition",
            "kind": "EnumMemberDeclaration",
            "name": "definition",
            "signature": "definition = 'definition'",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 5842,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5842",
            },
            "value": "definition",
          },
          Object {
            "docs": Array [],
            "id": "HighlightSpanKind.none",
            "kind": "EnumMemberDeclaration",
            "name": "none",
            "signature": "none = 'none'",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 5841,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5841",
            },
            "value": "none",
          },
          Object {
            "docs": Array [],
            "id": "HighlightSpanKind.reference",
            "kind": "EnumMemberDeclaration",
            "name": "reference",
            "signature": "reference = 'reference'",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 5843,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5843",
            },
            "value": "reference",
          },
          Object {
            "docs": Array [],
            "id": "HighlightSpanKind.writtenReference",
            "kind": "EnumMemberDeclaration",
            "name": "writtenReference",
            "signature": "writtenReference = 'writtenReference'",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 5844,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5844",
            },
            "value": "writtenReference",
          },
        ],
        "name": "HighlightSpanKind",
        "signature": "enum HighlightSpanKind {
    none = 'none',
    definition = 'definition',
    reference = 'reference',
    writtenReference = 'writtenReference',
}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 5840,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5840",
        },
      },
      Object {
        "docs": Array [],
        "id": "ImportsNotUsedAsValues",
        "isConst": false,
        "kind": "EnumDeclaration",
        "members": Array [
          Object {
            "docs": Array [],
            "id": "ImportsNotUsedAsValues.Error",
            "kind": "EnumMemberDeclaration",
            "name": "Error",
            "signature": "Error = 2",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 2917,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2917",
            },
            "value": 2,
          },
          Object {
            "docs": Array [],
            "id": "ImportsNotUsedAsValues.Preserve",
            "kind": "EnumMemberDeclaration",
            "name": "Preserve",
            "signature": "Preserve = 1",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 2916,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2916",
            },
            "value": 1,
          },
          Object {
            "docs": Array [],
            "id": "ImportsNotUsedAsValues.Remove",
            "kind": "EnumMemberDeclaration",
            "name": "Remove",
            "signature": "Remove = 0",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 2915,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2915",
            },
            "value": 0,
          },
        ],
        "name": "ImportsNotUsedAsValues",
        "signature": "enum ImportsNotUsedAsValues {
    Remove = 0,
    Preserve = 1,
    Error = 2,
}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 2914,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2914",
        },
      },
      Object {
        "docs": Array [],
        "id": "IndentStyle",
        "isConst": false,
        "kind": "EnumDeclaration",
        "members": Array [
          Object {
            "docs": Array [],
            "id": "IndentStyle.Block",
            "kind": "EnumMemberDeclaration",
            "name": "Block",
            "signature": "Block = 1",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 5866,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5866",
            },
            "value": 1,
          },
          Object {
            "docs": Array [],
            "id": "IndentStyle.None",
            "kind": "EnumMemberDeclaration",
            "name": "None",
            "signature": "None = 0",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 5865,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5865",
            },
            "value": 0,
          },
          Object {
            "docs": Array [],
            "id": "IndentStyle.Smart",
            "kind": "EnumMemberDeclaration",
            "name": "Smart",
            "signature": "Smart = 2",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 5867,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5867",
            },
            "value": 2,
          },
        ],
        "name": "IndentStyle",
        "signature": "enum IndentStyle {
    None = 0,
    Block = 1,
    Smart = 2,
}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 5864,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5864",
        },
      },
      Object {
        "docs": Array [],
        "id": "IndexKind",
        "isConst": false,
        "kind": "EnumDeclaration",
        "members": Array [
          Object {
            "docs": Array [],
            "id": "IndexKind.Number",
            "kind": "EnumMemberDeclaration",
            "name": "Number",
            "signature": "Number = 1",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 2675,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2675",
            },
            "value": 1,
          },
          Object {
            "docs": Array [],
            "id": "IndexKind.String",
            "kind": "EnumMemberDeclaration",
            "name": "String",
            "signature": "String = 0",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 2674,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2674",
            },
            "value": 0,
          },
        ],
        "name": "IndexKind",
        "signature": "enum IndexKind {
    String = 0,
    Number = 1,
}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 2673,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2673",
        },
      },
      Object {
        "docs": Array [],
        "id": "InferencePriority",
        "isConst": false,
        "kind": "EnumDeclaration",
        "members": Array [
          Object {
            "docs": Array [],
            "id": "InferencePriority.AlwaysStrict",
            "kind": "EnumMemberDeclaration",
            "name": "AlwaysStrict",
            "signature": "AlwaysStrict = 512",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 2692,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2692",
            },
            "value": 512,
          },
          Object {
            "docs": Array [],
            "id": "InferencePriority.Circularity",
            "kind": "EnumMemberDeclaration",
            "name": "Circularity",
            "signature": "Circularity = -1",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 2695,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2695",
            },
            "value": -1,
          },
          Object {
            "docs": Array [],
            "id": "InferencePriority.ContravariantConditional",
            "kind": "EnumMemberDeclaration",
            "name": "ContravariantConditional",
            "signature": "ContravariantConditional = 32",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 2688,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2688",
            },
            "value": 32,
          },
          Object {
            "docs": Array [],
            "id": "InferencePriority.HomomorphicMappedType",
            "kind": "EnumMemberDeclaration",
            "name": "HomomorphicMappedType",
            "signature": "HomomorphicMappedType = 4",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 2685,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2685",
            },
            "value": 4,
          },
          Object {
            "docs": Array [],
            "id": "InferencePriority.LiteralKeyof",
            "kind": "EnumMemberDeclaration",
            "name": "LiteralKeyof",
            "signature": "LiteralKeyof = 128",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 2690,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2690",
            },
            "value": 128,
          },
          Object {
            "docs": Array [],
            "id": "InferencePriority.MappedTypeConstraint",
            "kind": "EnumMemberDeclaration",
            "name": "MappedTypeConstraint",
            "signature": "MappedTypeConstraint = 16",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 2687,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2687",
            },
            "value": 16,
          },
          Object {
            "docs": Array [],
            "id": "InferencePriority.MaxValue",
            "kind": "EnumMemberDeclaration",
            "name": "MaxValue",
            "signature": "MaxValue = 1024",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 2693,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2693",
            },
            "value": 1024,
          },
          Object {
            "docs": Array [],
            "id": "InferencePriority.NakedTypeVariable",
            "kind": "EnumMemberDeclaration",
            "name": "NakedTypeVariable",
            "signature": "NakedTypeVariable = 1",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 2683,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2683",
            },
            "value": 1,
          },
          Object {
            "docs": Array [],
            "id": "InferencePriority.NoConstraints",
            "kind": "EnumMemberDeclaration",
            "name": "NoConstraints",
            "signature": "NoConstraints = 256",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 2691,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2691",
            },
            "value": 256,
          },
          Object {
            "docs": Array [],
            "id": "InferencePriority.PartialHomomorphicMappedType",
            "kind": "EnumMemberDeclaration",
            "name": "PartialHomomorphicMappedType",
            "signature": "PartialHomomorphicMappedType = 8",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 2686,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2686",
            },
            "value": 8,
          },
          Object {
            "docs": Array [],
            "id": "InferencePriority.PriorityImpliesCombination",
            "kind": "EnumMemberDeclaration",
            "name": "PriorityImpliesCombination",
            "signature": "PriorityImpliesCombination = 208",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 2694,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2694",
            },
            "value": 208,
          },
          Object {
            "docs": Array [],
            "id": "InferencePriority.ReturnType",
            "kind": "EnumMemberDeclaration",
            "name": "ReturnType",
            "signature": "ReturnType = 64",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 2689,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2689",
            },
            "value": 64,
          },
          Object {
            "docs": Array [],
            "id": "InferencePriority.SpeculativeTuple",
            "kind": "EnumMemberDeclaration",
            "name": "SpeculativeTuple",
            "signature": "SpeculativeTuple = 2",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 2684,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2684",
            },
            "value": 2,
          },
        ],
        "name": "InferencePriority",
        "signature": "enum InferencePriority {
    NakedTypeVariable = 1,
    SpeculativeTuple = 2,
    HomomorphicMappedType = 4,
    PartialHomomorphicMappedType = 8,
    MappedTypeConstraint = 16,
    ContravariantConditional = 32,
    ReturnType = 64,
    LiteralKeyof = 128,
    NoConstraints = 256,
    AlwaysStrict = 512,
    MaxValue = 1024,
    PriorityImpliesCombination = 208,
    Circularity = -1,
}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 2682,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2682",
        },
      },
      Object {
        "docs": Array [],
        "id": "InternalSymbolName",
        "isConst": false,
        "kind": "EnumDeclaration",
        "members": Array [
          Object {
            "docs": Array [],
            "id": "InternalSymbolName.Call",
            "kind": "EnumMemberDeclaration",
            "name": "Call",
            "signature": "Call = '__call'",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 2414,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2414",
            },
            "value": "__call",
          },
          Object {
            "docs": Array [],
            "id": "InternalSymbolName.Class",
            "kind": "EnumMemberDeclaration",
            "name": "Class",
            "signature": "Class = '__class'",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 2424,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2424",
            },
            "value": "__class",
          },
          Object {
            "docs": Array [],
            "id": "InternalSymbolName.Computed",
            "kind": "EnumMemberDeclaration",
            "name": "Computed",
            "signature": "Computed = '__computed'",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 2426,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2426",
            },
            "value": "__computed",
          },
          Object {
            "docs": Array [],
            "id": "InternalSymbolName.Constructor",
            "kind": "EnumMemberDeclaration",
            "name": "Constructor",
            "signature": "Constructor = '__constructor'",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 2415,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2415",
            },
            "value": "__constructor",
          },
          Object {
            "docs": Array [],
            "id": "InternalSymbolName.Default",
            "kind": "EnumMemberDeclaration",
            "name": "Default",
            "signature": "Default = 'default'",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 2429,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2429",
            },
            "value": "default",
          },
          Object {
            "docs": Array [],
            "id": "InternalSymbolName.ExportEquals",
            "kind": "EnumMemberDeclaration",
            "name": "ExportEquals",
            "signature": "ExportEquals = 'export='",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 2428,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2428",
            },
            "value": "export=",
          },
          Object {
            "docs": Array [],
            "id": "InternalSymbolName.ExportStar",
            "kind": "EnumMemberDeclaration",
            "name": "ExportStar",
            "signature": "ExportStar = '__export'",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 2418,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2418",
            },
            "value": "__export",
          },
          Object {
            "docs": Array [],
            "id": "InternalSymbolName.Function",
            "kind": "EnumMemberDeclaration",
            "name": "Function",
            "signature": "Function = '__function'",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 2425,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2425",
            },
            "value": "__function",
          },
          Object {
            "docs": Array [],
            "id": "InternalSymbolName.Global",
            "kind": "EnumMemberDeclaration",
            "name": "Global",
            "signature": "Global = '__global'",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 2419,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2419",
            },
            "value": "__global",
          },
          Object {
            "docs": Array [],
            "id": "InternalSymbolName.Index",
            "kind": "EnumMemberDeclaration",
            "name": "Index",
            "signature": "Index = '__index'",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 2417,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2417",
            },
            "value": "__index",
          },
          Object {
            "docs": Array [],
            "id": "InternalSymbolName.JSXAttributes",
            "kind": "EnumMemberDeclaration",
            "name": "JSXAttributes",
            "signature": "JSXAttributes = '__jsxAttributes'",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 2423,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2423",
            },
            "value": "__jsxAttributes",
          },
          Object {
            "docs": Array [],
            "id": "InternalSymbolName.Missing",
            "kind": "EnumMemberDeclaration",
            "name": "Missing",
            "signature": "Missing = '__missing'",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 2420,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2420",
            },
            "value": "__missing",
          },
          Object {
            "docs": Array [],
            "id": "InternalSymbolName.New",
            "kind": "EnumMemberDeclaration",
            "name": "New",
            "signature": "New = '__new'",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 2416,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2416",
            },
            "value": "__new",
          },
          Object {
            "docs": Array [],
            "id": "InternalSymbolName.Object",
            "kind": "EnumMemberDeclaration",
            "name": "Object",
            "signature": "Object = '__object'",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 2422,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2422",
            },
            "value": "__object",
          },
          Object {
            "docs": Array [],
            "id": "InternalSymbolName.Resolving",
            "kind": "EnumMemberDeclaration",
            "name": "Resolving",
            "signature": "Resolving = '__resolving__'",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 2427,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2427",
            },
            "value": "__resolving__",
          },
          Object {
            "docs": Array [],
            "id": "InternalSymbolName.This",
            "kind": "EnumMemberDeclaration",
            "name": "This",
            "signature": "This = 'this'",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 2430,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2430",
            },
            "value": "this",
          },
          Object {
            "docs": Array [],
            "id": "InternalSymbolName.Type",
            "kind": "EnumMemberDeclaration",
            "name": "Type",
            "signature": "Type = '__type'",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 2421,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2421",
            },
            "value": "__type",
          },
        ],
        "name": "InternalSymbolName",
        "signature": "enum InternalSymbolName {
    Call = '__call',
    Constructor = '__constructor',
    New = '__new',
    Index = '__index',
    ExportStar = '__export',
    Global = '__global',
    Missing = '__missing',
    Type = '__type',
    Object = '__object',
    JSXAttributes = '__jsxAttributes',
    Class = '__class',
    Function = '__function',
    Computed = '__computed',
    Resolving = '__resolving__',
    ExportEquals = 'export=',
    Default = 'default',
    This = 'this',
}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 2413,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2413",
        },
      },
      Object {
        "docs": Array [],
        "id": "InvalidatedProjectKind",
        "isConst": false,
        "kind": "EnumDeclaration",
        "members": Array [
          Object {
            "docs": Array [],
            "id": "InvalidatedProjectKind.Build",
            "kind": "EnumMemberDeclaration",
            "name": "Build",
            "signature": "Build = 0",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 5140,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5140",
            },
            "value": 0,
          },
          Object {
            "docs": Array [],
            "id": "InvalidatedProjectKind.UpdateBundle",
            "kind": "EnumMemberDeclaration",
            "name": "UpdateBundle",
            "signature": "UpdateBundle = 1",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 5141,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5141",
            },
            "value": 1,
          },
          Object {
            "docs": Array [],
            "id": "InvalidatedProjectKind.UpdateOutputFileStamps",
            "kind": "EnumMemberDeclaration",
            "name": "UpdateOutputFileStamps",
            "signature": "UpdateOutputFileStamps = 2",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 5142,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5142",
            },
            "value": 2,
          },
        ],
        "name": "InvalidatedProjectKind",
        "signature": "enum InvalidatedProjectKind {
    Build = 0,
    UpdateBundle = 1,
    UpdateOutputFileStamps = 2,
}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 5139,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5139",
        },
      },
      Object {
        "docs": Array [],
        "id": "JsxEmit",
        "isConst": false,
        "kind": "EnumDeclaration",
        "members": Array [
          Object {
            "docs": Array [],
            "id": "JsxEmit.None",
            "kind": "EnumMemberDeclaration",
            "name": "None",
            "signature": "None = 0",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 2907,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2907",
            },
            "value": 0,
          },
          Object {
            "docs": Array [],
            "id": "JsxEmit.Preserve",
            "kind": "EnumMemberDeclaration",
            "name": "Preserve",
            "signature": "Preserve = 1",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 2908,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2908",
            },
            "value": 1,
          },
          Object {
            "docs": Array [],
            "id": "JsxEmit.React",
            "kind": "EnumMemberDeclaration",
            "name": "React",
            "signature": "React = 2",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 2909,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2909",
            },
            "value": 2,
          },
          Object {
            "docs": Array [],
            "id": "JsxEmit.ReactJSX",
            "kind": "EnumMemberDeclaration",
            "name": "ReactJSX",
            "signature": "ReactJSX = 4",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 2911,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2911",
            },
            "value": 4,
          },
          Object {
            "docs": Array [],
            "id": "JsxEmit.ReactJSXDev",
            "kind": "EnumMemberDeclaration",
            "name": "ReactJSXDev",
            "signature": "ReactJSXDev = 5",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 2912,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2912",
            },
            "value": 5,
          },
          Object {
            "docs": Array [],
            "id": "JsxEmit.ReactNative",
            "kind": "EnumMemberDeclaration",
            "name": "ReactNative",
            "signature": "ReactNative = 3",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 2910,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2910",
            },
            "value": 3,
          },
        ],
        "name": "JsxEmit",
        "signature": "enum JsxEmit {
    None = 0,
    Preserve = 1,
    React = 2,
    ReactNative = 3,
    ReactJSX = 4,
    ReactJSXDev = 5,
}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 2906,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2906",
        },
      },
      Object {
        "docs": Array [],
        "id": "JsxFlags",
        "isConst": false,
        "kind": "EnumDeclaration",
        "members": Array [
          Object {
            "docs": Array [],
            "id": "JsxFlags.IntrinsicElement",
            "kind": "EnumMemberDeclaration",
            "name": "IntrinsicElement",
            "signature": "IntrinsicElement = 3",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 550,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L550",
            },
            "value": 3,
          },
          Object {
            "docs": Array [
              "/** An element inferred from the string index signature of the JSX.IntrinsicElements interface */",
            ],
            "id": "JsxFlags.IntrinsicIndexedElement",
            "kind": "EnumMemberDeclaration",
            "name": "IntrinsicIndexedElement",
            "signature": "IntrinsicIndexedElement = 2",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 549,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L549",
            },
            "value": 2,
          },
          Object {
            "docs": Array [
              "/** An element from a named property of the JSX.IntrinsicElements interface */",
            ],
            "id": "JsxFlags.IntrinsicNamedElement",
            "kind": "EnumMemberDeclaration",
            "name": "IntrinsicNamedElement",
            "signature": "IntrinsicNamedElement = 1",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 547,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L547",
            },
            "value": 1,
          },
          Object {
            "docs": Array [],
            "id": "JsxFlags.None",
            "kind": "EnumMemberDeclaration",
            "name": "None",
            "signature": "None = 0",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 545,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L545",
            },
            "value": 0,
          },
        ],
        "name": "JsxFlags",
        "signature": "enum JsxFlags {
    None = 0,
    IntrinsicNamedElement = 1,
    IntrinsicIndexedElement = 2,
    IntrinsicElement = 3,
}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 544,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L544",
        },
      },
      Object {
        "docs": Array [],
        "id": "LanguageServiceMode",
        "isConst": false,
        "kind": "EnumDeclaration",
        "members": Array [
          Object {
            "docs": Array [],
            "id": "LanguageServiceMode.PartialSemantic",
            "kind": "EnumMemberDeclaration",
            "name": "PartialSemantic",
            "signature": "PartialSemantic = 1",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 5380,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5380",
            },
            "value": 1,
          },
          Object {
            "docs": Array [],
            "id": "LanguageServiceMode.Semantic",
            "kind": "EnumMemberDeclaration",
            "name": "Semantic",
            "signature": "Semantic = 0",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 5379,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5379",
            },
            "value": 0,
          },
          Object {
            "docs": Array [],
            "id": "LanguageServiceMode.Syntactic",
            "kind": "EnumMemberDeclaration",
            "name": "Syntactic",
            "signature": "Syntactic = 2",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 5381,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5381",
            },
            "value": 2,
          },
        ],
        "name": "LanguageServiceMode",
        "signature": "enum LanguageServiceMode {
    Semantic = 0,
    PartialSemantic = 1,
    Syntactic = 2,
}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 5378,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5378",
        },
      },
      Object {
        "docs": Array [],
        "id": "LanguageVariant",
        "isConst": false,
        "kind": "EnumDeclaration",
        "members": Array [
          Object {
            "docs": Array [],
            "id": "LanguageVariant.JSX",
            "kind": "EnumMemberDeclaration",
            "name": "JSX",
            "signature": "JSX = 1",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 2957,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2957",
            },
            "value": 1,
          },
          Object {
            "docs": Array [],
            "id": "LanguageVariant.Standard",
            "kind": "EnumMemberDeclaration",
            "name": "Standard",
            "signature": "Standard = 0",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 2956,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2956",
            },
            "value": 0,
          },
        ],
        "name": "LanguageVariant",
        "signature": "enum LanguageVariant {
    Standard = 0,
    JSX = 1,
}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 2955,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2955",
        },
      },
      Object {
        "docs": Array [],
        "id": "ListFormat",
        "isConst": false,
        "kind": "EnumDeclaration",
        "members": Array [
          Object {
            "docs": Array [],
            "id": "ListFormat.AllowTrailingComma",
            "kind": "EnumMemberDeclaration",
            "name": "AllowTrailingComma",
            "signature": "AllowTrailingComma = 64",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 3802,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3802",
            },
            "value": 64,
          },
          Object {
            "docs": Array [],
            "id": "ListFormat.AmpersandDelimited",
            "kind": "EnumMemberDeclaration",
            "name": "AmpersandDelimited",
            "signature": "AmpersandDelimited = 8",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 3798,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3798",
            },
            "value": 8,
          },
          Object {
            "docs": Array [],
            "id": "ListFormat.AngleBrackets",
            "kind": "EnumMemberDeclaration",
            "name": "AngleBrackets",
            "signature": "AngleBrackets = 4096",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 3808,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3808",
            },
            "value": 4096,
          },
          Object {
            "docs": Array [],
            "id": "ListFormat.ArrayBindingPatternElements",
            "kind": "EnumMemberDeclaration",
            "name": "ArrayBindingPatternElements",
            "signature": "ArrayBindingPatternElements = 524880",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 3829,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3829",
            },
            "value": 524880,
          },
          Object {
            "docs": Array [],
            "id": "ListFormat.ArrayLiteralExpressionElements",
            "kind": "EnumMemberDeclaration",
            "name": "ArrayLiteralExpressionElements",
            "signature": "ArrayLiteralExpressionElements = 8914",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 3831,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3831",
            },
            "value": 8914,
          },
          Object {
            "docs": Array [],
            "id": "ListFormat.AsteriskDelimited",
            "kind": "EnumMemberDeclaration",
            "name": "AsteriskDelimited",
            "signature": "AsteriskDelimited = 32",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 3800,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3800",
            },
            "value": 32,
          },
          Object {
            "docs": Array [],
            "id": "ListFormat.BarDelimited",
            "kind": "EnumMemberDeclaration",
            "name": "BarDelimited",
            "signature": "BarDelimited = 4",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 3797,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3797",
            },
            "value": 4,
          },
          Object {
            "docs": Array [],
            "id": "ListFormat.Braces",
            "kind": "EnumMemberDeclaration",
            "name": "Braces",
            "signature": "Braces = 1024",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 3806,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3806",
            },
            "value": 1024,
          },
          Object {
            "docs": Array [],
            "id": "ListFormat.BracketsMask",
            "kind": "EnumMemberDeclaration",
            "name": "BracketsMask",
            "signature": "BracketsMask = 15360",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 3810,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3810",
            },
            "value": 15360,
          },
          Object {
            "docs": Array [],
            "id": "ListFormat.CallExpressionArguments",
            "kind": "EnumMemberDeclaration",
            "name": "CallExpressionArguments",
            "signature": "CallExpressionArguments = 2576",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 3833,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3833",
            },
            "value": 2576,
          },
          Object {
            "docs": Array [],
            "id": "ListFormat.CaseBlockClauses",
            "kind": "EnumMemberDeclaration",
            "name": "CaseBlockClauses",
            "signature": "CaseBlockClauses = 129",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 3845,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3845",
            },
            "value": 129,
          },
          Object {
            "docs": Array [],
            "id": "ListFormat.CaseOrDefaultClauseStatements",
            "kind": "EnumMemberDeclaration",
            "name": "CaseOrDefaultClauseStatements",
            "signature": "CaseOrDefaultClauseStatements = 163969",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 3849,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3849",
            },
            "value": 163969,
          },
          Object {
            "docs": Array [],
            "id": "ListFormat.ClassHeritageClauses",
            "kind": "EnumMemberDeclaration",
            "name": "ClassHeritageClauses",
            "signature": "ClassHeritageClauses = 0",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 3841,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3841",
            },
            "value": 0,
          },
          Object {
            "docs": Array [],
            "id": "ListFormat.ClassMembers",
            "kind": "EnumMemberDeclaration",
            "name": "ClassMembers",
            "signature": "ClassMembers = 129",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 3842,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3842",
            },
            "value": 129,
          },
          Object {
            "docs": Array [],
            "id": "ListFormat.CommaDelimited",
            "kind": "EnumMemberDeclaration",
            "name": "CommaDelimited",
            "signature": "CommaDelimited = 16",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 3799,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3799",
            },
            "value": 16,
          },
          Object {
            "docs": Array [],
            "id": "ListFormat.CommaListElements",
            "kind": "EnumMemberDeclaration",
            "name": "CommaListElements",
            "signature": "CommaListElements = 528",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 3832,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3832",
            },
            "value": 528,
          },
          Object {
            "docs": Array [],
            "id": "ListFormat.Decorators",
            "kind": "EnumMemberDeclaration",
            "name": "Decorators",
            "signature": "Decorators = 2146305",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 3852,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3852",
            },
            "value": 2146305,
          },
          Object {
            "docs": Array [],
            "id": "ListFormat.DelimitersMask",
            "kind": "EnumMemberDeclaration",
            "name": "DelimitersMask",
            "signature": "DelimitersMask = 60",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 3801,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3801",
            },
            "value": 60,
          },
          Object {
            "docs": Array [],
            "id": "ListFormat.EnumMembers",
            "kind": "EnumMemberDeclaration",
            "name": "EnumMembers",
            "signature": "EnumMembers = 145",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 3844,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3844",
            },
            "value": 145,
          },
          Object {
            "docs": Array [],
            "id": "ListFormat.HeritageClauses",
            "kind": "EnumMemberDeclaration",
            "name": "HeritageClauses",
            "signature": "HeritageClauses = 512",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 3821,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3821",
            },
            "value": 512,
          },
          Object {
            "docs": Array [],
            "id": "ListFormat.HeritageClauseTypes",
            "kind": "EnumMemberDeclaration",
            "name": "HeritageClauseTypes",
            "signature": "HeritageClauseTypes = 528",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 3850,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3850",
            },
            "value": 528,
          },
          Object {
            "docs": Array [],
            "id": "ListFormat.Indented",
            "kind": "EnumMemberDeclaration",
            "name": "Indented",
            "signature": "Indented = 128",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 3803,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3803",
            },
            "value": 128,
          },
          Object {
            "docs": Array [],
            "id": "ListFormat.IndexSignatureParameters",
            "kind": "EnumMemberDeclaration",
            "name": "IndexSignatureParameters",
            "signature": "IndexSignatureParameters = 8848",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 3856,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3856",
            },
            "value": 8848,
          },
          Object {
            "docs": Array [],
            "id": "ListFormat.InterfaceMembers",
            "kind": "EnumMemberDeclaration",
            "name": "InterfaceMembers",
            "signature": "InterfaceMembers = 129",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 3843,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3843",
            },
            "value": 129,
          },
          Object {
            "docs": Array [],
            "id": "ListFormat.IntersectionTypeConstituents",
            "kind": "EnumMemberDeclaration",
            "name": "IntersectionTypeConstituents",
            "signature": "IntersectionTypeConstituents = 520",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 3827,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3827",
            },
            "value": 520,
          },
          Object {
            "docs": Array [],
            "id": "ListFormat.JSDocComment",
            "kind": "EnumMemberDeclaration",
            "name": "JSDocComment",
            "signature": "JSDocComment = 33",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 3857,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3857",
            },
            "value": 33,
          },
          Object {
            "docs": Array [],
            "id": "ListFormat.JsxElementAttributes",
            "kind": "EnumMemberDeclaration",
            "name": "JsxElementAttributes",
            "signature": "JsxElementAttributes = 262656",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 3848,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3848",
            },
            "value": 262656,
          },
          Object {
            "docs": Array [],
            "id": "ListFormat.JsxElementOrFragmentChildren",
            "kind": "EnumMemberDeclaration",
            "name": "JsxElementOrFragmentChildren",
            "signature": "JsxElementOrFragmentChildren = 262144",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 3847,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3847",
            },
            "value": 262144,
          },
          Object {
            "docs": Array [],
            "id": "ListFormat.LinesMask",
            "kind": "EnumMemberDeclaration",
            "name": "LinesMask",
            "signature": "LinesMask = 3",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 3795,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3795",
            },
            "value": 3,
          },
          Object {
            "docs": Array [],
            "id": "ListFormat.Modifiers",
            "kind": "EnumMemberDeclaration",
            "name": "Modifiers",
            "signature": "Modifiers = 262656",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 3820,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3820",
            },
            "value": 262656,
          },
          Object {
            "docs": Array [],
            "id": "ListFormat.MultiLine",
            "kind": "EnumMemberDeclaration",
            "name": "MultiLine",
            "signature": "MultiLine = 1",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 3793,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3793",
            },
            "value": 1,
          },
          Object {
            "docs": Array [],
            "id": "ListFormat.MultiLineBlockStatements",
            "kind": "EnumMemberDeclaration",
            "name": "MultiLineBlockStatements",
            "signature": "MultiLineBlockStatements = 129",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 3837,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3837",
            },
            "value": 129,
          },
          Object {
            "docs": Array [],
            "id": "ListFormat.MultiLineFunctionBodyStatements",
            "kind": "EnumMemberDeclaration",
            "name": "MultiLineFunctionBodyStatements",
            "signature": "MultiLineFunctionBodyStatements = 1",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 3840,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3840",
            },
            "value": 1,
          },
          Object {
            "docs": Array [],
            "id": "ListFormat.MultiLineTupleTypeElements",
            "kind": "EnumMemberDeclaration",
            "name": "MultiLineTupleTypeElements",
            "signature": "MultiLineTupleTypeElements = 657",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 3825,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3825",
            },
            "value": 657,
          },
          Object {
            "docs": Array [],
            "id": "ListFormat.MultiLineTypeLiteralMembers",
            "kind": "EnumMemberDeclaration",
            "name": "MultiLineTypeLiteralMembers",
            "signature": "MultiLineTypeLiteralMembers = 32897",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 3823,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3823",
            },
            "value": 32897,
          },
          Object {
            "docs": Array [],
            "id": "ListFormat.NamedImportsOrExportsElements",
            "kind": "EnumMemberDeclaration",
            "name": "NamedImportsOrExportsElements",
            "signature": "NamedImportsOrExportsElements = 525136",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 3846,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3846",
            },
            "value": 525136,
          },
          Object {
            "docs": Array [],
            "id": "ListFormat.NewExpressionArguments",
            "kind": "EnumMemberDeclaration",
            "name": "NewExpressionArguments",
            "signature": "NewExpressionArguments = 18960",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 3834,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3834",
            },
            "value": 18960,
          },
          Object {
            "docs": Array [],
            "id": "ListFormat.NoInterveningComments",
            "kind": "EnumMemberDeclaration",
            "name": "NoInterveningComments",
            "signature": "NoInterveningComments = 262144",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 3816,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3816",
            },
            "value": 262144,
          },
          Object {
            "docs": Array [],
            "id": "ListFormat.None",
            "kind": "EnumMemberDeclaration",
            "name": "None",
            "signature": "None = 0",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 3791,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3791",
            },
            "value": 0,
          },
          Object {
            "docs": Array [],
            "id": "ListFormat.NoSpaceIfEmpty",
            "kind": "EnumMemberDeclaration",
            "name": "NoSpaceIfEmpty",
            "signature": "NoSpaceIfEmpty = 524288",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 3817,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3817",
            },
            "value": 524288,
          },
          Object {
            "docs": Array [],
            "id": "ListFormat.NotDelimited",
            "kind": "EnumMemberDeclaration",
            "name": "NotDelimited",
            "signature": "NotDelimited = 0",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 3796,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3796",
            },
            "value": 0,
          },
          Object {
            "docs": Array [],
            "id": "ListFormat.NoTrailingNewLine",
            "kind": "EnumMemberDeclaration",
            "name": "NoTrailingNewLine",
            "signature": "NoTrailingNewLine = 131072",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 3815,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3815",
            },
            "value": 131072,
          },
          Object {
            "docs": Array [],
            "id": "ListFormat.ObjectBindingPatternElements",
            "kind": "EnumMemberDeclaration",
            "name": "ObjectBindingPatternElements",
            "signature": "ObjectBindingPatternElements = 525136",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 3828,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3828",
            },
            "value": 525136,
          },
          Object {
            "docs": Array [],
            "id": "ListFormat.ObjectLiteralExpressionProperties",
            "kind": "EnumMemberDeclaration",
            "name": "ObjectLiteralExpressionProperties",
            "signature": "ObjectLiteralExpressionProperties = 526226",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 3830,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3830",
            },
            "value": 526226,
          },
          Object {
            "docs": Array [],
            "id": "ListFormat.Optional",
            "kind": "EnumMemberDeclaration",
            "name": "Optional",
            "signature": "Optional = 49152",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 3813,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3813",
            },
            "value": 49152,
          },
          Object {
            "docs": Array [],
            "id": "ListFormat.OptionalIfEmpty",
            "kind": "EnumMemberDeclaration",
            "name": "OptionalIfEmpty",
            "signature": "OptionalIfEmpty = 32768",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 3812,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3812",
            },
            "value": 32768,
          },
          Object {
            "docs": Array [],
            "id": "ListFormat.OptionalIfUndefined",
            "kind": "EnumMemberDeclaration",
            "name": "OptionalIfUndefined",
            "signature": "OptionalIfUndefined = 16384",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 3811,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3811",
            },
            "value": 16384,
          },
          Object {
            "docs": Array [],
            "id": "ListFormat.Parameters",
            "kind": "EnumMemberDeclaration",
            "name": "Parameters",
            "signature": "Parameters = 2576",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 3855,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3855",
            },
            "value": 2576,
          },
          Object {
            "docs": Array [],
            "id": "ListFormat.Parenthesis",
            "kind": "EnumMemberDeclaration",
            "name": "Parenthesis",
            "signature": "Parenthesis = 2048",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 3807,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3807",
            },
            "value": 2048,
          },
          Object {
            "docs": Array [],
            "id": "ListFormat.PreferNewLine",
            "kind": "EnumMemberDeclaration",
            "name": "PreferNewLine",
            "signature": "PreferNewLine = 65536",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 3814,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3814",
            },
            "value": 65536,
          },
          Object {
            "docs": Array [],
            "id": "ListFormat.PreserveLines",
            "kind": "EnumMemberDeclaration",
            "name": "PreserveLines",
            "signature": "PreserveLines = 2",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 3794,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3794",
            },
            "value": 2,
          },
          Object {
            "docs": Array [],
            "id": "ListFormat.SingleElement",
            "kind": "EnumMemberDeclaration",
            "name": "SingleElement",
            "signature": "SingleElement = 1048576",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 3818,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3818",
            },
            "value": 1048576,
          },
          Object {
            "docs": Array [],
            "id": "ListFormat.SingleLine",
            "kind": "EnumMemberDeclaration",
            "name": "SingleLine",
            "signature": "SingleLine = 0",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 3792,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3792",
            },
            "value": 0,
          },
          Object {
            "docs": Array [],
            "id": "ListFormat.SingleLineBlockStatements",
            "kind": "EnumMemberDeclaration",
            "name": "SingleLineBlockStatements",
            "signature": "SingleLineBlockStatements = 768",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 3836,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3836",
            },
            "value": 768,
          },
          Object {
            "docs": Array [],
            "id": "ListFormat.SingleLineFunctionBodyStatements",
            "kind": "EnumMemberDeclaration",
            "name": "SingleLineFunctionBodyStatements",
            "signature": "SingleLineFunctionBodyStatements = 768",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 3839,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3839",
            },
            "value": 768,
          },
          Object {
            "docs": Array [],
            "id": "ListFormat.SingleLineTupleTypeElements",
            "kind": "EnumMemberDeclaration",
            "name": "SingleLineTupleTypeElements",
            "signature": "SingleLineTupleTypeElements = 528",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 3824,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3824",
            },
            "value": 528,
          },
          Object {
            "docs": Array [],
            "id": "ListFormat.SingleLineTypeLiteralMembers",
            "kind": "EnumMemberDeclaration",
            "name": "SingleLineTypeLiteralMembers",
            "signature": "SingleLineTypeLiteralMembers = 768",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 3822,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3822",
            },
            "value": 768,
          },
          Object {
            "docs": Array [],
            "id": "ListFormat.SourceFileStatements",
            "kind": "EnumMemberDeclaration",
            "name": "SourceFileStatements",
            "signature": "SourceFileStatements = 131073",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 3851,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3851",
            },
            "value": 131073,
          },
          Object {
            "docs": Array [],
            "id": "ListFormat.SpaceAfterList",
            "kind": "EnumMemberDeclaration",
            "name": "SpaceAfterList",
            "signature": "SpaceAfterList = 2097152",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 3819,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3819",
            },
            "value": 2097152,
          },
          Object {
            "docs": Array [],
            "id": "ListFormat.SpaceBetweenBraces",
            "kind": "EnumMemberDeclaration",
            "name": "SpaceBetweenBraces",
            "signature": "SpaceBetweenBraces = 256",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 3804,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3804",
            },
            "value": 256,
          },
          Object {
            "docs": Array [],
            "id": "ListFormat.SpaceBetweenSiblings",
            "kind": "EnumMemberDeclaration",
            "name": "SpaceBetweenSiblings",
            "signature": "SpaceBetweenSiblings = 512",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 3805,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3805",
            },
            "value": 512,
          },
          Object {
            "docs": Array [],
            "id": "ListFormat.SquareBrackets",
            "kind": "EnumMemberDeclaration",
            "name": "SquareBrackets",
            "signature": "SquareBrackets = 8192",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 3809,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3809",
            },
            "value": 8192,
          },
          Object {
            "docs": Array [],
            "id": "ListFormat.TemplateExpressionSpans",
            "kind": "EnumMemberDeclaration",
            "name": "TemplateExpressionSpans",
            "signature": "TemplateExpressionSpans = 262144",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 3835,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3835",
            },
            "value": 262144,
          },
          Object {
            "docs": Array [],
            "id": "ListFormat.TypeArguments",
            "kind": "EnumMemberDeclaration",
            "name": "TypeArguments",
            "signature": "TypeArguments = 53776",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 3853,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3853",
            },
            "value": 53776,
          },
          Object {
            "docs": Array [],
            "id": "ListFormat.TypeParameters",
            "kind": "EnumMemberDeclaration",
            "name": "TypeParameters",
            "signature": "TypeParameters = 53776",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 3854,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3854",
            },
            "value": 53776,
          },
          Object {
            "docs": Array [],
            "id": "ListFormat.UnionTypeConstituents",
            "kind": "EnumMemberDeclaration",
            "name": "UnionTypeConstituents",
            "signature": "UnionTypeConstituents = 516",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 3826,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3826",
            },
            "value": 516,
          },
          Object {
            "docs": Array [],
            "id": "ListFormat.VariableDeclarationList",
            "kind": "EnumMemberDeclaration",
            "name": "VariableDeclarationList",
            "signature": "VariableDeclarationList = 528",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 3838,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3838",
            },
            "value": 528,
          },
        ],
        "name": "ListFormat",
        "signature": "enum ListFormat {
    None = 0,
    SingleLine = 0,
    MultiLine = 1,
    PreserveLines = 2,
    LinesMask = 3,
    NotDelimited = 0,
    BarDelimited = 4,
    AmpersandDelimited = 8,
    CommaDelimited = 16,
    AsteriskDelimited = 32,
    DelimitersMask = 60,
    AllowTrailingComma = 64,
    Indented = 128,
    SpaceBetweenBraces = 256,
    SpaceBetweenSiblings = 512,
    Braces = 1024,
    Parenthesis = 2048,
    AngleBrackets = 4096,
    SquareBrackets = 8192,
    BracketsMask = 15360,
    OptionalIfUndefined = 16384,
    OptionalIfEmpty = 32768,
    Optional = 49152,
    PreferNewLine = 65536,
    NoTrailingNewLine = 131072,
    NoInterveningComments = 262144,
    NoSpaceIfEmpty = 524288,
    SingleElement = 1048576,
    SpaceAfterList = 2097152,
    Modifiers = 262656,
    HeritageClauses = 512,
    SingleLineTypeLiteralMembers = 768,
    MultiLineTypeLiteralMembers = 32897,
    SingleLineTupleTypeElements = 528,
    MultiLineTupleTypeElements = 657,
    UnionTypeConstituents = 516,
    IntersectionTypeConstituents = 520,
    ObjectBindingPatternElements = 525136,
    ArrayBindingPatternElements = 524880,
    ObjectLiteralExpressionProperties = 526226,
    ArrayLiteralExpressionElements = 8914,
    CommaListElements = 528,
    CallExpressionArguments = 2576,
    NewExpressionArguments = 18960,
    TemplateExpressionSpans = 262144,
    SingleLineBlockStatements = 768,
    MultiLineBlockStatements = 129,
    VariableDeclarationList = 528,
    SingleLineFunctionBodyStatements = 768,
    MultiLineFunctionBodyStatements = 1,
    ClassHeritageClauses = 0,
    ClassMembers = 129,
    InterfaceMembers = 129,
    EnumMembers = 145,
    CaseBlockClauses = 129,
    NamedImportsOrExportsElements = 525136,
    JsxElementOrFragmentChildren = 262144,
    JsxElementAttributes = 262656,
    CaseOrDefaultClauseStatements = 163969,
    HeritageClauseTypes = 528,
    SourceFileStatements = 131073,
    Decorators = 2146305,
    TypeArguments = 53776,
    TypeParameters = 53776,
    Parameters = 2576,
    IndexSignatureParameters = 8848,
    JSDocComment = 33,
}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 3790,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3790",
        },
      },
      Object {
        "docs": Array [],
        "id": "ModifierFlags",
        "isConst": false,
        "kind": "EnumDeclaration",
        "members": Array [
          Object {
            "docs": Array [],
            "id": "ModifierFlags.Abstract",
            "kind": "EnumMemberDeclaration",
            "name": "Abstract",
            "signature": "Abstract = 128",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 530,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L530",
            },
            "value": 128,
          },
          Object {
            "docs": Array [],
            "id": "ModifierFlags.AccessibilityModifier",
            "kind": "EnumMemberDeclaration",
            "name": "AccessibilityModifier",
            "signature": "AccessibilityModifier = 28",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 537,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L537",
            },
            "value": 28,
          },
          Object {
            "docs": Array [],
            "id": "ModifierFlags.All",
            "kind": "EnumMemberDeclaration",
            "name": "All",
            "signature": "All = 11263",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 542,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L542",
            },
            "value": 11263,
          },
          Object {
            "docs": Array [],
            "id": "ModifierFlags.Ambient",
            "kind": "EnumMemberDeclaration",
            "name": "Ambient",
            "signature": "Ambient = 2",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 524,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L524",
            },
            "value": 2,
          },
          Object {
            "docs": Array [],
            "id": "ModifierFlags.Async",
            "kind": "EnumMemberDeclaration",
            "name": "Async",
            "signature": "Async = 256",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 531,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L531",
            },
            "value": 256,
          },
          Object {
            "docs": Array [],
            "id": "ModifierFlags.Const",
            "kind": "EnumMemberDeclaration",
            "name": "Const",
            "signature": "Const = 2048",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 533,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L533",
            },
            "value": 2048,
          },
          Object {
            "docs": Array [],
            "id": "ModifierFlags.Default",
            "kind": "EnumMemberDeclaration",
            "name": "Default",
            "signature": "Default = 512",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 532,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L532",
            },
            "value": 512,
          },
          Object {
            "docs": Array [],
            "id": "ModifierFlags.Deprecated",
            "kind": "EnumMemberDeclaration",
            "name": "Deprecated",
            "signature": "Deprecated = 8192",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 535,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L535",
            },
            "value": 8192,
          },
          Object {
            "docs": Array [],
            "id": "ModifierFlags.Export",
            "kind": "EnumMemberDeclaration",
            "name": "Export",
            "signature": "Export = 1",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 523,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L523",
            },
            "value": 1,
          },
          Object {
            "docs": Array [],
            "id": "ModifierFlags.ExportDefault",
            "kind": "EnumMemberDeclaration",
            "name": "ExportDefault",
            "signature": "ExportDefault = 513",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 541,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L541",
            },
            "value": 513,
          },
          Object {
            "docs": Array [],
            "id": "ModifierFlags.HasComputedFlags",
            "kind": "EnumMemberDeclaration",
            "name": "HasComputedFlags",
            "signature": "HasComputedFlags = 536870912",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 536,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L536",
            },
            "value": 536870912,
          },
          Object {
            "docs": Array [],
            "id": "ModifierFlags.HasComputedJSDocModifiers",
            "kind": "EnumMemberDeclaration",
            "name": "HasComputedJSDocModifiers",
            "signature": "HasComputedJSDocModifiers = 4096",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 534,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L534",
            },
            "value": 4096,
          },
          Object {
            "docs": Array [],
            "id": "ModifierFlags.None",
            "kind": "EnumMemberDeclaration",
            "name": "None",
            "signature": "None = 0",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 522,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L522",
            },
            "value": 0,
          },
          Object {
            "docs": Array [],
            "id": "ModifierFlags.NonPublicAccessibilityModifier",
            "kind": "EnumMemberDeclaration",
            "name": "NonPublicAccessibilityModifier",
            "signature": "NonPublicAccessibilityModifier = 24",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 539,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L539",
            },
            "value": 24,
          },
          Object {
            "docs": Array [],
            "id": "ModifierFlags.ParameterPropertyModifier",
            "kind": "EnumMemberDeclaration",
            "name": "ParameterPropertyModifier",
            "signature": "ParameterPropertyModifier = 92",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 538,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L538",
            },
            "value": 92,
          },
          Object {
            "docs": Array [],
            "id": "ModifierFlags.Private",
            "kind": "EnumMemberDeclaration",
            "name": "Private",
            "signature": "Private = 8",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 526,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L526",
            },
            "value": 8,
          },
          Object {
            "docs": Array [],
            "id": "ModifierFlags.Protected",
            "kind": "EnumMemberDeclaration",
            "name": "Protected",
            "signature": "Protected = 16",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 527,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L527",
            },
            "value": 16,
          },
          Object {
            "docs": Array [],
            "id": "ModifierFlags.Public",
            "kind": "EnumMemberDeclaration",
            "name": "Public",
            "signature": "Public = 4",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 525,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L525",
            },
            "value": 4,
          },
          Object {
            "docs": Array [],
            "id": "ModifierFlags.Readonly",
            "kind": "EnumMemberDeclaration",
            "name": "Readonly",
            "signature": "Readonly = 64",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 529,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L529",
            },
            "value": 64,
          },
          Object {
            "docs": Array [],
            "id": "ModifierFlags.Static",
            "kind": "EnumMemberDeclaration",
            "name": "Static",
            "signature": "Static = 32",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 528,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L528",
            },
            "value": 32,
          },
          Object {
            "docs": Array [],
            "id": "ModifierFlags.TypeScriptModifier",
            "kind": "EnumMemberDeclaration",
            "name": "TypeScriptModifier",
            "signature": "TypeScriptModifier = 2270",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 540,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L540",
            },
            "value": 2270,
          },
        ],
        "name": "ModifierFlags",
        "signature": "enum ModifierFlags {
    None = 0,
    Export = 1,
    Ambient = 2,
    Public = 4,
    Private = 8,
    Protected = 16,
    Static = 32,
    Readonly = 64,
    Abstract = 128,
    Async = 256,
    Default = 512,
    Const = 2048,
    HasComputedJSDocModifiers = 4096,
    Deprecated = 8192,
    HasComputedFlags = 536870912,
    AccessibilityModifier = 28,
    ParameterPropertyModifier = 92,
    NonPublicAccessibilityModifier = 24,
    TypeScriptModifier = 2270,
    ExportDefault = 513,
    All = 11263,
}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 521,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L521",
        },
      },
      Object {
        "docs": Array [],
        "id": "ModuleKind",
        "isConst": false,
        "kind": "EnumDeclaration",
        "members": Array [
          Object {
            "docs": Array [],
            "id": "ModuleKind.AMD",
            "kind": "EnumMemberDeclaration",
            "name": "AMD",
            "signature": "AMD = 2",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 2899,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2899",
            },
            "value": 2,
          },
          Object {
            "docs": Array [],
            "id": "ModuleKind.CommonJS",
            "kind": "EnumMemberDeclaration",
            "name": "CommonJS",
            "signature": "CommonJS = 1",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 2898,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2898",
            },
            "value": 1,
          },
          Object {
            "docs": Array [],
            "id": "ModuleKind.ES2015",
            "kind": "EnumMemberDeclaration",
            "name": "ES2015",
            "signature": "ES2015 = 5",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 2902,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2902",
            },
            "value": 5,
          },
          Object {
            "docs": Array [],
            "id": "ModuleKind.ES2020",
            "kind": "EnumMemberDeclaration",
            "name": "ES2020",
            "signature": "ES2020 = 6",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 2903,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2903",
            },
            "value": 6,
          },
          Object {
            "docs": Array [],
            "id": "ModuleKind.ESNext",
            "kind": "EnumMemberDeclaration",
            "name": "ESNext",
            "signature": "ESNext = 99",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 2904,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2904",
            },
            "value": 99,
          },
          Object {
            "docs": Array [],
            "id": "ModuleKind.None",
            "kind": "EnumMemberDeclaration",
            "name": "None",
            "signature": "None = 0",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 2897,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2897",
            },
            "value": 0,
          },
          Object {
            "docs": Array [],
            "id": "ModuleKind.System",
            "kind": "EnumMemberDeclaration",
            "name": "System",
            "signature": "System = 4",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 2901,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2901",
            },
            "value": 4,
          },
          Object {
            "docs": Array [],
            "id": "ModuleKind.UMD",
            "kind": "EnumMemberDeclaration",
            "name": "UMD",
            "signature": "UMD = 3",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 2900,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2900",
            },
            "value": 3,
          },
        ],
        "name": "ModuleKind",
        "signature": "enum ModuleKind {
    None = 0,
    CommonJS = 1,
    AMD = 2,
    UMD = 3,
    System = 4,
    ES2015 = 5,
    ES2020 = 6,
    ESNext = 99,
}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 2896,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2896",
        },
      },
      Object {
        "docs": Array [],
        "id": "ModuleResolutionKind",
        "isConst": false,
        "kind": "EnumDeclaration",
        "members": Array [
          Object {
            "docs": Array [],
            "id": "ModuleResolutionKind.Classic",
            "kind": "EnumMemberDeclaration",
            "name": "Classic",
            "signature": "Classic = 1",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 2751,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2751",
            },
            "value": 1,
          },
          Object {
            "docs": Array [],
            "id": "ModuleResolutionKind.NodeJs",
            "kind": "EnumMemberDeclaration",
            "name": "NodeJs",
            "signature": "NodeJs = 2",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 2752,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2752",
            },
            "value": 2,
          },
        ],
        "name": "ModuleResolutionKind",
        "signature": "enum ModuleResolutionKind {
    Classic = 1,
    NodeJs = 2,
}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 2750,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2750",
        },
      },
      Object {
        "docs": Array [],
        "id": "NewLineKind",
        "isConst": false,
        "kind": "EnumDeclaration",
        "members": Array [
          Object {
            "docs": Array [],
            "id": "NewLineKind.CarriageReturnLineFeed",
            "kind": "EnumMemberDeclaration",
            "name": "CarriageReturnLineFeed",
            "signature": "CarriageReturnLineFeed = 0",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 2920,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2920",
            },
            "value": 0,
          },
          Object {
            "docs": Array [],
            "id": "NewLineKind.LineFeed",
            "kind": "EnumMemberDeclaration",
            "name": "LineFeed",
            "signature": "LineFeed = 1",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 2921,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2921",
            },
            "value": 1,
          },
        ],
        "name": "NewLineKind",
        "signature": "enum NewLineKind {
    CarriageReturnLineFeed = 0,
    LineFeed = 1,
}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 2919,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2919",
        },
      },
      Object {
        "docs": Array [],
        "id": "NodeBuilderFlags",
        "isConst": false,
        "kind": "EnumDeclaration",
        "members": Array [
          Object {
            "docs": Array [],
            "id": "NodeBuilderFlags.AllowAnonymousIdentifier",
            "kind": "EnumMemberDeclaration",
            "name": "AllowAnonymousIdentifier",
            "signature": "AllowAnonymousIdentifier = 131072",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 2264,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2264",
            },
            "value": 131072,
          },
          Object {
            "docs": Array [],
            "id": "NodeBuilderFlags.AllowEmptyIndexInfoType",
            "kind": "EnumMemberDeclaration",
            "name": "AllowEmptyIndexInfoType",
            "signature": "AllowEmptyIndexInfoType = 2097152",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 2268,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2268",
            },
            "value": 2097152,
          },
          Object {
            "docs": Array [],
            "id": "NodeBuilderFlags.AllowEmptyTuple",
            "kind": "EnumMemberDeclaration",
            "name": "AllowEmptyTuple",
            "signature": "AllowEmptyTuple = 524288",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 2266,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2266",
            },
            "value": 524288,
          },
          Object {
            "docs": Array [],
            "id": "NodeBuilderFlags.AllowEmptyUnionOrIntersection",
            "kind": "EnumMemberDeclaration",
            "name": "AllowEmptyUnionOrIntersection",
            "signature": "AllowEmptyUnionOrIntersection = 262144",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 2265,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2265",
            },
            "value": 262144,
          },
          Object {
            "docs": Array [],
            "id": "NodeBuilderFlags.AllowNodeModulesRelativePaths",
            "kind": "EnumMemberDeclaration",
            "name": "AllowNodeModulesRelativePaths",
            "signature": "AllowNodeModulesRelativePaths = 67108864",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 2269,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2269",
            },
            "value": 67108864,
          },
          Object {
            "docs": Array [],
            "id": "NodeBuilderFlags.AllowQualifedNameInPlaceOfIdentifier",
            "kind": "EnumMemberDeclaration",
            "name": "AllowQualifedNameInPlaceOfIdentifier",
            "signature": "AllowQualifedNameInPlaceOfIdentifier = 65536",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 2263,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2263",
            },
            "value": 65536,
          },
          Object {
            "docs": Array [],
            "id": "NodeBuilderFlags.AllowThisInObjectLiteral",
            "kind": "EnumMemberDeclaration",
            "name": "AllowThisInObjectLiteral",
            "signature": "AllowThisInObjectLiteral = 32768",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 2262,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2262",
            },
            "value": 32768,
          },
          Object {
            "docs": Array [],
            "id": "NodeBuilderFlags.AllowUniqueESSymbolType",
            "kind": "EnumMemberDeclaration",
            "name": "AllowUniqueESSymbolType",
            "signature": "AllowUniqueESSymbolType = 1048576",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 2267,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2267",
            },
            "value": 1048576,
          },
          Object {
            "docs": Array [],
            "id": "NodeBuilderFlags.ForbidIndexedAccessSymbolReferences",
            "kind": "EnumMemberDeclaration",
            "name": "ForbidIndexedAccessSymbolReferences",
            "signature": "ForbidIndexedAccessSymbolReferences = 16",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 2248,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2248",
            },
            "value": 16,
          },
          Object {
            "docs": Array [],
            "id": "NodeBuilderFlags.GenerateNamesForShadowedTypeParams",
            "kind": "EnumMemberDeclaration",
            "name": "GenerateNamesForShadowedTypeParams",
            "signature": "GenerateNamesForShadowedTypeParams = 4",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 2246,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2246",
            },
            "value": 4,
          },
          Object {
            "docs": Array [],
            "id": "NodeBuilderFlags.IgnoreErrors",
            "kind": "EnumMemberDeclaration",
            "name": "IgnoreErrors",
            "signature": "IgnoreErrors = 70221824",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 2270,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2270",
            },
            "value": 70221824,
          },
          Object {
            "docs": Array [],
            "id": "NodeBuilderFlags.InInitialEntityName",
            "kind": "EnumMemberDeclaration",
            "name": "InInitialEntityName",
            "signature": "InInitialEntityName = 16777216",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 2273,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2273",
            },
            "value": 16777216,
          },
          Object {
            "docs": Array [],
            "id": "NodeBuilderFlags.InObjectTypeLiteral",
            "kind": "EnumMemberDeclaration",
            "name": "InObjectTypeLiteral",
            "signature": "InObjectTypeLiteral = 4194304",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 2271,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2271",
            },
            "value": 4194304,
          },
          Object {
            "docs": Array [],
            "id": "NodeBuilderFlags.InReverseMappedType",
            "kind": "EnumMemberDeclaration",
            "name": "InReverseMappedType",
            "signature": "InReverseMappedType = 33554432",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 2274,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2274",
            },
            "value": 33554432,
          },
          Object {
            "docs": Array [],
            "id": "NodeBuilderFlags.InTypeAlias",
            "kind": "EnumMemberDeclaration",
            "name": "InTypeAlias",
            "signature": "InTypeAlias = 8388608",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 2272,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2272",
            },
            "value": 8388608,
          },
          Object {
            "docs": Array [],
            "id": "NodeBuilderFlags.MultilineObjectLiterals",
            "kind": "EnumMemberDeclaration",
            "name": "MultilineObjectLiterals",
            "signature": "MultilineObjectLiterals = 1024",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 2254,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2254",
            },
            "value": 1024,
          },
          Object {
            "docs": Array [],
            "id": "NodeBuilderFlags.None",
            "kind": "EnumMemberDeclaration",
            "name": "None",
            "signature": "None = 0",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 2243,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2243",
            },
            "value": 0,
          },
          Object {
            "docs": Array [],
            "id": "NodeBuilderFlags.NoTruncation",
            "kind": "EnumMemberDeclaration",
            "name": "NoTruncation",
            "signature": "NoTruncation = 1",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 2244,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2244",
            },
            "value": 1,
          },
          Object {
            "docs": Array [],
            "id": "NodeBuilderFlags.NoTypeReduction",
            "kind": "EnumMemberDeclaration",
            "name": "NoTypeReduction",
            "signature": "NoTypeReduction = 536870912",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 2260,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2260",
            },
            "value": 536870912,
          },
          Object {
            "docs": Array [],
            "id": "NodeBuilderFlags.NoUndefinedOptionalParameterType",
            "kind": "EnumMemberDeclaration",
            "name": "NoUndefinedOptionalParameterType",
            "signature": "NoUndefinedOptionalParameterType = 1073741824",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 2261,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2261",
            },
            "value": 1073741824,
          },
          Object {
            "docs": Array [],
            "id": "NodeBuilderFlags.OmitParameterModifiers",
            "kind": "EnumMemberDeclaration",
            "name": "OmitParameterModifiers",
            "signature": "OmitParameterModifiers = 8192",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 2257,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2257",
            },
            "value": 8192,
          },
          Object {
            "docs": Array [],
            "id": "NodeBuilderFlags.SuppressAnyReturnType",
            "kind": "EnumMemberDeclaration",
            "name": "SuppressAnyReturnType",
            "signature": "SuppressAnyReturnType = 256",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 2252,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2252",
            },
            "value": 256,
          },
          Object {
            "docs": Array [],
            "id": "NodeBuilderFlags.UseAliasDefinedOutsideCurrentScope",
            "kind": "EnumMemberDeclaration",
            "name": "UseAliasDefinedOutsideCurrentScope",
            "signature": "UseAliasDefinedOutsideCurrentScope = 16384",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 2258,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2258",
            },
            "value": 16384,
          },
          Object {
            "docs": Array [],
            "id": "NodeBuilderFlags.UseFullyQualifiedType",
            "kind": "EnumMemberDeclaration",
            "name": "UseFullyQualifiedType",
            "signature": "UseFullyQualifiedType = 64",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 2250,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2250",
            },
            "value": 64,
          },
          Object {
            "docs": Array [],
            "id": "NodeBuilderFlags.UseOnlyExternalAliasing",
            "kind": "EnumMemberDeclaration",
            "name": "UseOnlyExternalAliasing",
            "signature": "UseOnlyExternalAliasing = 128",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 2251,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2251",
            },
            "value": 128,
          },
          Object {
            "docs": Array [],
            "id": "NodeBuilderFlags.UseSingleQuotesForStringLiteralType",
            "kind": "EnumMemberDeclaration",
            "name": "UseSingleQuotesForStringLiteralType",
            "signature": "UseSingleQuotesForStringLiteralType = 268435456",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 2259,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2259",
            },
            "value": 268435456,
          },
          Object {
            "docs": Array [],
            "id": "NodeBuilderFlags.UseStructuralFallback",
            "kind": "EnumMemberDeclaration",
            "name": "UseStructuralFallback",
            "signature": "UseStructuralFallback = 8",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 2247,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2247",
            },
            "value": 8,
          },
          Object {
            "docs": Array [],
            "id": "NodeBuilderFlags.UseTypeOfFunction",
            "kind": "EnumMemberDeclaration",
            "name": "UseTypeOfFunction",
            "signature": "UseTypeOfFunction = 4096",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 2256,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2256",
            },
            "value": 4096,
          },
          Object {
            "docs": Array [],
            "id": "NodeBuilderFlags.WriteArrayAsGenericType",
            "kind": "EnumMemberDeclaration",
            "name": "WriteArrayAsGenericType",
            "signature": "WriteArrayAsGenericType = 2",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 2245,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2245",
            },
            "value": 2,
          },
          Object {
            "docs": Array [],
            "id": "NodeBuilderFlags.WriteClassExpressionAsTypeLiteral",
            "kind": "EnumMemberDeclaration",
            "name": "WriteClassExpressionAsTypeLiteral",
            "signature": "WriteClassExpressionAsTypeLiteral = 2048",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 2255,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2255",
            },
            "value": 2048,
          },
          Object {
            "docs": Array [],
            "id": "NodeBuilderFlags.WriteTypeArgumentsOfSignature",
            "kind": "EnumMemberDeclaration",
            "name": "WriteTypeArgumentsOfSignature",
            "signature": "WriteTypeArgumentsOfSignature = 32",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 2249,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2249",
            },
            "value": 32,
          },
          Object {
            "docs": Array [],
            "id": "NodeBuilderFlags.WriteTypeParametersInQualifiedName",
            "kind": "EnumMemberDeclaration",
            "name": "WriteTypeParametersInQualifiedName",
            "signature": "WriteTypeParametersInQualifiedName = 512",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 2253,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2253",
            },
            "value": 512,
          },
        ],
        "name": "NodeBuilderFlags",
        "signature": "enum NodeBuilderFlags {
    None = 0,
    NoTruncation = 1,
    WriteArrayAsGenericType = 2,
    GenerateNamesForShadowedTypeParams = 4,
    UseStructuralFallback = 8,
    ForbidIndexedAccessSymbolReferences = 16,
    WriteTypeArgumentsOfSignature = 32,
    UseFullyQualifiedType = 64,
    UseOnlyExternalAliasing = 128,
    SuppressAnyReturnType = 256,
    WriteTypeParametersInQualifiedName = 512,
    MultilineObjectLiterals = 1024,
    WriteClassExpressionAsTypeLiteral = 2048,
    UseTypeOfFunction = 4096,
    OmitParameterModifiers = 8192,
    UseAliasDefinedOutsideCurrentScope = 16384,
    UseSingleQuotesForStringLiteralType = 268435456,
    NoTypeReduction = 536870912,
    NoUndefinedOptionalParameterType = 1073741824,
    AllowThisInObjectLiteral = 32768,
    AllowQualifedNameInPlaceOfIdentifier = 65536,
    AllowAnonymousIdentifier = 131072,
    AllowEmptyUnionOrIntersection = 262144,
    AllowEmptyTuple = 524288,
    AllowUniqueESSymbolType = 1048576,
    AllowEmptyIndexInfoType = 2097152,
    AllowNodeModulesRelativePaths = 67108864,
    IgnoreErrors = 70221824,
    InObjectTypeLiteral = 4194304,
    InTypeAlias = 8388608,
    InInitialEntityName = 16777216,
    InReverseMappedType = 33554432,
}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 2242,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2242",
        },
      },
      Object {
        "docs": Array [],
        "id": "NodeFlags",
        "isConst": false,
        "kind": "EnumDeclaration",
        "members": Array [
          Object {
            "docs": Array [],
            "id": "NodeFlags.AwaitContext",
            "kind": "EnumMemberDeclaration",
            "name": "AwaitContext",
            "signature": "AwaitContext = 32768",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 508,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L508",
            },
            "value": 32768,
          },
          Object {
            "docs": Array [],
            "id": "NodeFlags.BlockScoped",
            "kind": "EnumMemberDeclaration",
            "name": "BlockScoped",
            "signature": "BlockScoped = 3",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 515,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L515",
            },
            "value": 3,
          },
          Object {
            "docs": Array [],
            "id": "NodeFlags.Const",
            "kind": "EnumMemberDeclaration",
            "name": "Const",
            "signature": "Const = 2",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 494,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L494",
            },
            "value": 2,
          },
          Object {
            "docs": Array [],
            "id": "NodeFlags.ContainsThis",
            "kind": "EnumMemberDeclaration",
            "name": "ContainsThis",
            "signature": "ContainsThis = 128",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 500,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L500",
            },
            "value": 128,
          },
          Object {
            "docs": Array [],
            "id": "NodeFlags.ContextFlags",
            "kind": "EnumMemberDeclaration",
            "name": "ContextFlags",
            "signature": "ContextFlags = 25358336",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 518,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L518",
            },
            "value": 25358336,
          },
          Object {
            "docs": Array [],
            "id": "NodeFlags.DecoratorContext",
            "kind": "EnumMemberDeclaration",
            "name": "DecoratorContext",
            "signature": "DecoratorContext = 16384",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 507,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L507",
            },
            "value": 16384,
          },
          Object {
            "docs": Array [],
            "id": "NodeFlags.DisallowInContext",
            "kind": "EnumMemberDeclaration",
            "name": "DisallowInContext",
            "signature": "DisallowInContext = 4096",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 505,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L505",
            },
            "value": 4096,
          },
          Object {
            "docs": Array [],
            "id": "NodeFlags.ExportContext",
            "kind": "EnumMemberDeclaration",
            "name": "ExportContext",
            "signature": "ExportContext = 64",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 499,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L499",
            },
            "value": 64,
          },
          Object {
            "docs": Array [],
            "id": "NodeFlags.GlobalAugmentation",
            "kind": "EnumMemberDeclaration",
            "name": "GlobalAugmentation",
            "signature": "GlobalAugmentation = 1024",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 503,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L503",
            },
            "value": 1024,
          },
          Object {
            "docs": Array [],
            "id": "NodeFlags.HasAggregatedChildData",
            "kind": "EnumMemberDeclaration",
            "name": "HasAggregatedChildData",
            "signature": "HasAggregatedChildData = 524288",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 512,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L512",
            },
            "value": 524288,
          },
          Object {
            "docs": Array [],
            "id": "NodeFlags.HasAsyncFunctions",
            "kind": "EnumMemberDeclaration",
            "name": "HasAsyncFunctions",
            "signature": "HasAsyncFunctions = 2048",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 504,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L504",
            },
            "value": 2048,
          },
          Object {
            "docs": Array [],
            "id": "NodeFlags.HasExplicitReturn",
            "kind": "EnumMemberDeclaration",
            "name": "HasExplicitReturn",
            "signature": "HasExplicitReturn = 512",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 502,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L502",
            },
            "value": 512,
          },
          Object {
            "docs": Array [],
            "id": "NodeFlags.HasImplicitReturn",
            "kind": "EnumMemberDeclaration",
            "name": "HasImplicitReturn",
            "signature": "HasImplicitReturn = 256",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 501,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L501",
            },
            "value": 256,
          },
          Object {
            "docs": Array [],
            "id": "NodeFlags.JavaScriptFile",
            "kind": "EnumMemberDeclaration",
            "name": "JavaScriptFile",
            "signature": "JavaScriptFile = 131072",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 510,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L510",
            },
            "value": 131072,
          },
          Object {
            "docs": Array [],
            "id": "NodeFlags.JSDoc",
            "kind": "EnumMemberDeclaration",
            "name": "JSDoc",
            "signature": "JSDoc = 4194304",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 513,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L513",
            },
            "value": 4194304,
          },
          Object {
            "docs": Array [],
            "id": "NodeFlags.JsonFile",
            "kind": "EnumMemberDeclaration",
            "name": "JsonFile",
            "signature": "JsonFile = 33554432",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 514,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L514",
            },
            "value": 33554432,
          },
          Object {
            "docs": Array [],
            "id": "NodeFlags.Let",
            "kind": "EnumMemberDeclaration",
            "name": "Let",
            "signature": "Let = 1",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 493,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L493",
            },
            "value": 1,
          },
          Object {
            "docs": Array [],
            "id": "NodeFlags.Namespace",
            "kind": "EnumMemberDeclaration",
            "name": "Namespace",
            "signature": "Namespace = 16",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 497,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L497",
            },
            "value": 16,
          },
          Object {
            "docs": Array [],
            "id": "NodeFlags.NestedNamespace",
            "kind": "EnumMemberDeclaration",
            "name": "NestedNamespace",
            "signature": "NestedNamespace = 4",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 495,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L495",
            },
            "value": 4,
          },
          Object {
            "docs": Array [],
            "id": "NodeFlags.None",
            "kind": "EnumMemberDeclaration",
            "name": "None",
            "signature": "None = 0",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 492,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L492",
            },
            "value": 0,
          },
          Object {
            "docs": Array [],
            "id": "NodeFlags.OptionalChain",
            "kind": "EnumMemberDeclaration",
            "name": "OptionalChain",
            "signature": "OptionalChain = 32",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 498,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L498",
            },
            "value": 32,
          },
          Object {
            "docs": Array [],
            "id": "NodeFlags.ReachabilityAndEmitFlags",
            "kind": "EnumMemberDeclaration",
            "name": "ReachabilityAndEmitFlags",
            "signature": "ReachabilityAndEmitFlags = 2816",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 517,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L517",
            },
            "value": 2816,
          },
          Object {
            "docs": Array [],
            "id": "NodeFlags.ReachabilityCheckFlags",
            "kind": "EnumMemberDeclaration",
            "name": "ReachabilityCheckFlags",
            "signature": "ReachabilityCheckFlags = 768",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 516,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L516",
            },
            "value": 768,
          },
          Object {
            "docs": Array [],
            "id": "NodeFlags.Synthesized",
            "kind": "EnumMemberDeclaration",
            "name": "Synthesized",
            "signature": "Synthesized = 8",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 496,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L496",
            },
            "value": 8,
          },
          Object {
            "docs": Array [],
            "id": "NodeFlags.ThisNodeHasError",
            "kind": "EnumMemberDeclaration",
            "name": "ThisNodeHasError",
            "signature": "ThisNodeHasError = 65536",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 509,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L509",
            },
            "value": 65536,
          },
          Object {
            "docs": Array [],
            "id": "NodeFlags.ThisNodeOrAnySubNodesHasError",
            "kind": "EnumMemberDeclaration",
            "name": "ThisNodeOrAnySubNodesHasError",
            "signature": "ThisNodeOrAnySubNodesHasError = 262144",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 511,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L511",
            },
            "value": 262144,
          },
          Object {
            "docs": Array [],
            "id": "NodeFlags.TypeExcludesFlags",
            "kind": "EnumMemberDeclaration",
            "name": "TypeExcludesFlags",
            "signature": "TypeExcludesFlags = 40960",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 519,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L519",
            },
            "value": 40960,
          },
          Object {
            "docs": Array [],
            "id": "NodeFlags.YieldContext",
            "kind": "EnumMemberDeclaration",
            "name": "YieldContext",
            "signature": "YieldContext = 8192",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 506,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L506",
            },
            "value": 8192,
          },
        ],
        "name": "NodeFlags",
        "signature": "enum NodeFlags {
    None = 0,
    Let = 1,
    Const = 2,
    NestedNamespace = 4,
    Synthesized = 8,
    Namespace = 16,
    OptionalChain = 32,
    ExportContext = 64,
    ContainsThis = 128,
    HasImplicitReturn = 256,
    HasExplicitReturn = 512,
    GlobalAugmentation = 1024,
    HasAsyncFunctions = 2048,
    DisallowInContext = 4096,
    YieldContext = 8192,
    DecoratorContext = 16384,
    AwaitContext = 32768,
    ThisNodeHasError = 65536,
    JavaScriptFile = 131072,
    ThisNodeOrAnySubNodesHasError = 262144,
    HasAggregatedChildData = 524288,
    JSDoc = 4194304,
    JsonFile = 33554432,
    BlockScoped = 3,
    ReachabilityCheckFlags = 768,
    ReachabilityAndEmitFlags = 2816,
    ContextFlags = 25358336,
    TypeExcludesFlags = 40960,
}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 491,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L491",
        },
      },
      Object {
        "docs": Array [],
        "id": "ObjectFlags",
        "isConst": false,
        "kind": "EnumDeclaration",
        "members": Array [
          Object {
            "docs": Array [],
            "id": "ObjectFlags.Anonymous",
            "kind": "EnumMemberDeclaration",
            "name": "Anonymous",
            "signature": "Anonymous = 16",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 2536,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2536",
            },
            "value": 16,
          },
          Object {
            "docs": Array [],
            "id": "ObjectFlags.ArrayLiteral",
            "kind": "EnumMemberDeclaration",
            "name": "ArrayLiteral",
            "signature": "ArrayLiteral = 65536",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 2548,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2548",
            },
            "value": 65536,
          },
          Object {
            "docs": Array [],
            "id": "ObjectFlags.Class",
            "kind": "EnumMemberDeclaration",
            "name": "Class",
            "signature": "Class = 1",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 2532,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2532",
            },
            "value": 1,
          },
          Object {
            "docs": Array [],
            "id": "ObjectFlags.ClassOrInterface",
            "kind": "EnumMemberDeclaration",
            "name": "ClassOrInterface",
            "signature": "ClassOrInterface = 3",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 2550,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2550",
            },
            "value": 3,
          },
          Object {
            "docs": Array [],
            "id": "ObjectFlags.ContainsSpread",
            "kind": "EnumMemberDeclaration",
            "name": "ContainsSpread",
            "signature": "ContainsSpread = 1024",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 2542,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2542",
            },
            "value": 1024,
          },
          Object {
            "docs": Array [],
            "id": "ObjectFlags.EvolvingArray",
            "kind": "EnumMemberDeclaration",
            "name": "EvolvingArray",
            "signature": "EvolvingArray = 256",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 2540,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2540",
            },
            "value": 256,
          },
          Object {
            "docs": Array [],
            "id": "ObjectFlags.FreshLiteral",
            "kind": "EnumMemberDeclaration",
            "name": "FreshLiteral",
            "signature": "FreshLiteral = 32768",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 2547,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2547",
            },
            "value": 32768,
          },
          Object {
            "docs": Array [],
            "id": "ObjectFlags.Instantiated",
            "kind": "EnumMemberDeclaration",
            "name": "Instantiated",
            "signature": "Instantiated = 64",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 2538,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2538",
            },
            "value": 64,
          },
          Object {
            "docs": Array [],
            "id": "ObjectFlags.Interface",
            "kind": "EnumMemberDeclaration",
            "name": "Interface",
            "signature": "Interface = 2",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 2533,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2533",
            },
            "value": 2,
          },
          Object {
            "docs": Array [],
            "id": "ObjectFlags.JSLiteral",
            "kind": "EnumMemberDeclaration",
            "name": "JSLiteral",
            "signature": "JSLiteral = 16384",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 2546,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2546",
            },
            "value": 16384,
          },
          Object {
            "docs": Array [],
            "id": "ObjectFlags.JsxAttributes",
            "kind": "EnumMemberDeclaration",
            "name": "JsxAttributes",
            "signature": "JsxAttributes = 4096",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 2544,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2544",
            },
            "value": 4096,
          },
          Object {
            "docs": Array [],
            "id": "ObjectFlags.Mapped",
            "kind": "EnumMemberDeclaration",
            "name": "Mapped",
            "signature": "Mapped = 32",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 2537,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2537",
            },
            "value": 32,
          },
          Object {
            "docs": Array [],
            "id": "ObjectFlags.MarkerType",
            "kind": "EnumMemberDeclaration",
            "name": "MarkerType",
            "signature": "MarkerType = 8192",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 2545,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2545",
            },
            "value": 8192,
          },
          Object {
            "docs": Array [],
            "id": "ObjectFlags.ObjectLiteral",
            "kind": "EnumMemberDeclaration",
            "name": "ObjectLiteral",
            "signature": "ObjectLiteral = 128",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 2539,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2539",
            },
            "value": 128,
          },
          Object {
            "docs": Array [],
            "id": "ObjectFlags.ObjectLiteralPatternWithComputedProperties",
            "kind": "EnumMemberDeclaration",
            "name": "ObjectLiteralPatternWithComputedProperties",
            "signature": "ObjectLiteralPatternWithComputedProperties = 512",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 2541,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2541",
            },
            "value": 512,
          },
          Object {
            "docs": Array [],
            "id": "ObjectFlags.ObjectRestType",
            "kind": "EnumMemberDeclaration",
            "name": "ObjectRestType",
            "signature": "ObjectRestType = 131072",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 2549,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2549",
            },
            "value": 131072,
          },
          Object {
            "docs": Array [],
            "id": "ObjectFlags.Reference",
            "kind": "EnumMemberDeclaration",
            "name": "Reference",
            "signature": "Reference = 4",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 2534,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2534",
            },
            "value": 4,
          },
          Object {
            "docs": Array [],
            "id": "ObjectFlags.ReverseMapped",
            "kind": "EnumMemberDeclaration",
            "name": "ReverseMapped",
            "signature": "ReverseMapped = 2048",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 2543,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2543",
            },
            "value": 2048,
          },
          Object {
            "docs": Array [],
            "id": "ObjectFlags.Tuple",
            "kind": "EnumMemberDeclaration",
            "name": "Tuple",
            "signature": "Tuple = 8",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 2535,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2535",
            },
            "value": 8,
          },
        ],
        "name": "ObjectFlags",
        "signature": "enum ObjectFlags {
    Class = 1,
    Interface = 2,
    Reference = 4,
    Tuple = 8,
    Anonymous = 16,
    Mapped = 32,
    Instantiated = 64,
    ObjectLiteral = 128,
    EvolvingArray = 256,
    ObjectLiteralPatternWithComputedProperties = 512,
    ContainsSpread = 1024,
    ReverseMapped = 2048,
    JsxAttributes = 4096,
    MarkerType = 8192,
    JSLiteral = 16384,
    FreshLiteral = 32768,
    ArrayLiteral = 65536,
    ObjectRestType = 131072,
    ClassOrInterface = 3,
}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 2531,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2531",
        },
      },
      Object {
        "docs": Array [],
        "id": "OuterExpressionKinds",
        "isConst": false,
        "kind": "EnumDeclaration",
        "members": Array [
          Object {
            "docs": Array [],
            "id": "OuterExpressionKinds.All",
            "kind": "EnumMemberDeclaration",
            "name": "All",
            "signature": "All = 15",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 3155,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3155",
            },
            "value": 15,
          },
          Object {
            "docs": Array [],
            "id": "OuterExpressionKinds.Assertions",
            "kind": "EnumMemberDeclaration",
            "name": "Assertions",
            "signature": "Assertions = 6",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 3154,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3154",
            },
            "value": 6,
          },
          Object {
            "docs": Array [],
            "id": "OuterExpressionKinds.NonNullAssertions",
            "kind": "EnumMemberDeclaration",
            "name": "NonNullAssertions",
            "signature": "NonNullAssertions = 4",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 3152,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3152",
            },
            "value": 4,
          },
          Object {
            "docs": Array [],
            "id": "OuterExpressionKinds.Parentheses",
            "kind": "EnumMemberDeclaration",
            "name": "Parentheses",
            "signature": "Parentheses = 1",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 3150,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3150",
            },
            "value": 1,
          },
          Object {
            "docs": Array [],
            "id": "OuterExpressionKinds.PartiallyEmittedExpressions",
            "kind": "EnumMemberDeclaration",
            "name": "PartiallyEmittedExpressions",
            "signature": "PartiallyEmittedExpressions = 8",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 3153,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3153",
            },
            "value": 8,
          },
          Object {
            "docs": Array [],
            "id": "OuterExpressionKinds.TypeAssertions",
            "kind": "EnumMemberDeclaration",
            "name": "TypeAssertions",
            "signature": "TypeAssertions = 2",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 3151,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3151",
            },
            "value": 2,
          },
        ],
        "name": "OuterExpressionKinds",
        "signature": "enum OuterExpressionKinds {
    Parentheses = 1,
    TypeAssertions = 2,
    NonNullAssertions = 4,
    PartiallyEmittedExpressions = 8,
    Assertions = 6,
    All = 15,
}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 3149,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3149",
        },
      },
      Object {
        "docs": Array [],
        "id": "OutliningSpanKind",
        "isConst": false,
        "kind": "EnumDeclaration",
        "members": Array [
          Object {
            "docs": Array [
              "/** Declarations and expressions */",
            ],
            "id": "OutliningSpanKind.Code",
            "kind": "EnumMemberDeclaration",
            "name": "Code",
            "signature": "Code = 'code'",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 6112,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6112",
            },
            "value": "code",
          },
          Object {
            "docs": Array [
              "/** Single or multi-line comments */",
            ],
            "id": "OutliningSpanKind.Comment",
            "kind": "EnumMemberDeclaration",
            "name": "Comment",
            "signature": "Comment = 'comment'",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 6108,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6108",
            },
            "value": "comment",
          },
          Object {
            "docs": Array [
              "/** Contiguous blocks of import declarations */",
            ],
            "id": "OutliningSpanKind.Imports",
            "kind": "EnumMemberDeclaration",
            "name": "Imports",
            "signature": "Imports = 'imports'",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 6114,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6114",
            },
            "value": "imports",
          },
          Object {
            "docs": Array [
              "/** Sections marked by '// #region' and '// #endregion' comments */",
            ],
            "id": "OutliningSpanKind.Region",
            "kind": "EnumMemberDeclaration",
            "name": "Region",
            "signature": "Region = 'region'",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 6110,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6110",
            },
            "value": "region",
          },
        ],
        "name": "OutliningSpanKind",
        "signature": "enum OutliningSpanKind {
    Comment = 'comment',
    Region = 'region',
    Code = 'code',
    Imports = 'imports',
}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 6106,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6106",
        },
      },
      Object {
        "docs": Array [],
        "id": "OutputFileType",
        "isConst": false,
        "kind": "EnumDeclaration",
        "members": Array [
          Object {
            "docs": Array [],
            "id": "OutputFileType.Declaration",
            "kind": "EnumMemberDeclaration",
            "name": "Declaration",
            "signature": "Declaration = 2",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 6119,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6119",
            },
            "value": 2,
          },
          Object {
            "docs": Array [],
            "id": "OutputFileType.JavaScript",
            "kind": "EnumMemberDeclaration",
            "name": "JavaScript",
            "signature": "JavaScript = 0",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 6117,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6117",
            },
            "value": 0,
          },
          Object {
            "docs": Array [],
            "id": "OutputFileType.SourceMap",
            "kind": "EnumMemberDeclaration",
            "name": "SourceMap",
            "signature": "SourceMap = 1",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 6118,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6118",
            },
            "value": 1,
          },
        ],
        "name": "OutputFileType",
        "signature": "enum OutputFileType {
    JavaScript = 0,
    SourceMap = 1,
    Declaration = 2,
}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 6116,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6116",
        },
      },
      Object {
        "docs": Array [],
        "id": "PollingWatchKind",
        "isConst": false,
        "kind": "EnumDeclaration",
        "members": Array [
          Object {
            "docs": Array [],
            "id": "PollingWatchKind.DynamicPriority",
            "kind": "EnumMemberDeclaration",
            "name": "DynamicPriority",
            "signature": "DynamicPriority = 2",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 2782,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2782",
            },
            "value": 2,
          },
          Object {
            "docs": Array [],
            "id": "PollingWatchKind.FixedInterval",
            "kind": "EnumMemberDeclaration",
            "name": "FixedInterval",
            "signature": "FixedInterval = 0",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 2780,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2780",
            },
            "value": 0,
          },
          Object {
            "docs": Array [],
            "id": "PollingWatchKind.PriorityInterval",
            "kind": "EnumMemberDeclaration",
            "name": "PriorityInterval",
            "signature": "PriorityInterval = 1",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 2781,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2781",
            },
            "value": 1,
          },
        ],
        "name": "PollingWatchKind",
        "signature": "enum PollingWatchKind {
    FixedInterval = 0,
    PriorityInterval = 1,
    DynamicPriority = 2,
}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 2779,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2779",
        },
      },
      Object {
        "docs": Array [],
        "id": "ScriptElementKind",
        "isConst": false,
        "kind": "EnumDeclaration",
        "members": Array [
          Object {
            "docs": Array [],
            "id": "ScriptElementKind.alias",
            "kind": "EnumMemberDeclaration",
            "name": "alias",
            "signature": "alias = 'alias'",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 6231,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6231",
            },
            "value": "alias",
          },
          Object {
            "docs": Array [
              "/** interface Y { ():number; } */",
            ],
            "id": "ScriptElementKind.callSignatureElement",
            "kind": "EnumMemberDeclaration",
            "name": "callSignatureElement",
            "signature": "callSignatureElement = 'call'",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 6221,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6221",
            },
            "value": "call",
          },
          Object {
            "docs": Array [
              "/** class X {} */",
            ],
            "id": "ScriptElementKind.classElement",
            "kind": "EnumMemberDeclaration",
            "name": "classElement",
            "signature": "classElement = 'class'",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 6184,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6184",
            },
            "value": "class",
          },
          Object {
            "docs": Array [],
            "id": "ScriptElementKind.constElement",
            "kind": "EnumMemberDeclaration",
            "name": "constElement",
            "signature": "constElement = 'const'",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 6232,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6232",
            },
            "value": "const",
          },
          Object {
            "docs": Array [
              "/** class X { constructor() { } } */",
            ],
            "id": "ScriptElementKind.constructorImplementationElement",
            "kind": "EnumMemberDeclaration",
            "name": "constructorImplementationElement",
            "signature": "constructorImplementationElement = 'constructor'",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 6219,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6219",
            },
            "value": "constructor",
          },
          Object {
            "docs": Array [
              "/** interface Y { new():Y; } */",
            ],
            "id": "ScriptElementKind.constructSignatureElement",
            "kind": "EnumMemberDeclaration",
            "name": "constructSignatureElement",
            "signature": "constructSignatureElement = 'construct'",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 6225,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6225",
            },
            "value": "construct",
          },
          Object {
            "docs": Array [],
            "id": "ScriptElementKind.directory",
            "kind": "EnumMemberDeclaration",
            "name": "directory",
            "signature": "directory = 'directory'",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 6234,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6234",
            },
            "value": "directory",
          },
          Object {
            "docs": Array [
              "/** enum E */",
            ],
            "id": "ScriptElementKind.enumElement",
            "kind": "EnumMemberDeclaration",
            "name": "enumElement",
            "signature": "enumElement = 'enum'",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 6192,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6192",
            },
            "value": "enum",
          },
          Object {
            "docs": Array [],
            "id": "ScriptElementKind.enumMemberElement",
            "kind": "EnumMemberDeclaration",
            "name": "enumMemberElement",
            "signature": "enumMemberElement = 'enum member'",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 6193,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6193",
            },
            "value": "enum member",
          },
          Object {
            "docs": Array [],
            "id": "ScriptElementKind.externalModuleName",
            "kind": "EnumMemberDeclaration",
            "name": "externalModuleName",
            "signature": "externalModuleName = 'external module name'",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 6235,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6235",
            },
            "value": "external module name",
          },
          Object {
            "docs": Array [
              "/**
         * Inside module and script only
         * function f() { }
         */",
            ],
            "id": "ScriptElementKind.functionElement",
            "kind": "EnumMemberDeclaration",
            "name": "functionElement",
            "signature": "functionElement = 'function'",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 6205,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6205",
            },
            "value": "function",
          },
          Object {
            "docs": Array [
              "/** interface Y { []:number; } */",
            ],
            "id": "ScriptElementKind.indexSignatureElement",
            "kind": "EnumMemberDeclaration",
            "name": "indexSignatureElement",
            "signature": "indexSignatureElement = 'index'",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 6223,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6223",
            },
            "value": "index",
          },
          Object {
            "docs": Array [
              "/** interface Y {} */",
            ],
            "id": "ScriptElementKind.interfaceElement",
            "kind": "EnumMemberDeclaration",
            "name": "interfaceElement",
            "signature": "interfaceElement = 'interface'",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 6188,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6188",
            },
            "value": "interface",
          },
          Object {
            "docs": Array [
              "/**
         * <JsxTagName attribute1 attribute2={0} />
         */",
            ],
            "id": "ScriptElementKind.jsxAttribute",
            "kind": "EnumMemberDeclaration",
            "name": "jsxAttribute",
            "signature": "jsxAttribute = 'JSX attribute'",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 6239,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6239",
            },
            "value": "JSX attribute",
          },
          Object {
            "docs": Array [
              "/** predefined type (void) or keyword (class) */",
            ],
            "id": "ScriptElementKind.keyword",
            "kind": "EnumMemberDeclaration",
            "name": "keyword",
            "signature": "keyword = 'keyword'",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 6178,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6178",
            },
            "value": "keyword",
          },
          Object {
            "docs": Array [],
            "id": "ScriptElementKind.label",
            "kind": "EnumMemberDeclaration",
            "name": "label",
            "signature": "label = 'label'",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 6230,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6230",
            },
            "value": "label",
          },
          Object {
            "docs": Array [],
            "id": "ScriptElementKind.letElement",
            "kind": "EnumMemberDeclaration",
            "name": "letElement",
            "signature": "letElement = 'let'",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 6233,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6233",
            },
            "value": "let",
          },
          Object {
            "docs": Array [
              "/** var x = class X {} */",
            ],
            "id": "ScriptElementKind.localClassElement",
            "kind": "EnumMemberDeclaration",
            "name": "localClassElement",
            "signature": "localClassElement = 'local class'",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 6186,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6186",
            },
            "value": "local class",
          },
          Object {
            "docs": Array [
              "/** Inside function */",
            ],
            "id": "ScriptElementKind.localFunctionElement",
            "kind": "EnumMemberDeclaration",
            "name": "localFunctionElement",
            "signature": "localFunctionElement = 'local function'",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 6207,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6207",
            },
            "value": "local function",
          },
          Object {
            "docs": Array [
              "/** Inside function */",
            ],
            "id": "ScriptElementKind.localVariableElement",
            "kind": "EnumMemberDeclaration",
            "name": "localVariableElement",
            "signature": "localVariableElement = 'local var'",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 6200,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6200",
            },
            "value": "local var",
          },
          Object {
            "docs": Array [
              "/** class X { [public|private]* foo() {} } */",
            ],
            "id": "ScriptElementKind.memberFunctionElement",
            "kind": "EnumMemberDeclaration",
            "name": "memberFunctionElement",
            "signature": "memberFunctionElement = 'method'",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 6209,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6209",
            },
            "value": "method",
          },
          Object {
            "docs": Array [
              "/** class X { [public|private]* [get|set] foo:number; } */",
            ],
            "id": "ScriptElementKind.memberGetAccessorElement",
            "kind": "EnumMemberDeclaration",
            "name": "memberGetAccessorElement",
            "signature": "memberGetAccessorElement = 'getter'",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 6211,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6211",
            },
            "value": "getter",
          },
          Object {
            "docs": Array [],
            "id": "ScriptElementKind.memberSetAccessorElement",
            "kind": "EnumMemberDeclaration",
            "name": "memberSetAccessorElement",
            "signature": "memberSetAccessorElement = 'setter'",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 6212,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6212",
            },
            "value": "setter",
          },
          Object {
            "docs": Array [
              "/**
         * class X { [public|private]* foo:number; }
         * interface Y { foo:number; }
         */",
            ],
            "id": "ScriptElementKind.memberVariableElement",
            "kind": "EnumMemberDeclaration",
            "name": "memberVariableElement",
            "signature": "memberVariableElement = 'property'",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 6217,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6217",
            },
            "value": "property",
          },
          Object {
            "docs": Array [
              "/** module foo {} */",
            ],
            "id": "ScriptElementKind.moduleElement",
            "kind": "EnumMemberDeclaration",
            "name": "moduleElement",
            "signature": "moduleElement = 'module'",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 6182,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6182",
            },
            "value": "module",
          },
          Object {
            "docs": Array [
              "/** function foo(*Y*: string) */",
            ],
            "id": "ScriptElementKind.parameterElement",
            "kind": "EnumMemberDeclaration",
            "name": "parameterElement",
            "signature": "parameterElement = 'parameter'",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 6227,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6227",
            },
            "value": "parameter",
          },
          Object {
            "docs": Array [],
            "id": "ScriptElementKind.primitiveType",
            "kind": "EnumMemberDeclaration",
            "name": "primitiveType",
            "signature": "primitiveType = 'primitive type'",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 6229,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6229",
            },
            "value": "primitive type",
          },
          Object {
            "docs": Array [
              "/** top level script node */",
            ],
            "id": "ScriptElementKind.scriptElement",
            "kind": "EnumMemberDeclaration",
            "name": "scriptElement",
            "signature": "scriptElement = 'script'",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 6180,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6180",
            },
            "value": "script",
          },
          Object {
            "docs": Array [
              "/** String literal */",
            ],
            "id": "ScriptElementKind.string",
            "kind": "EnumMemberDeclaration",
            "name": "string",
            "signature": "string = 'string'",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 6241,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6241",
            },
            "value": "string",
          },
          Object {
            "docs": Array [
              "/** type T = ... */",
            ],
            "id": "ScriptElementKind.typeElement",
            "kind": "EnumMemberDeclaration",
            "name": "typeElement",
            "signature": "typeElement = 'type'",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 6190,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6190",
            },
            "value": "type",
          },
          Object {
            "docs": Array [],
            "id": "ScriptElementKind.typeParameterElement",
            "kind": "EnumMemberDeclaration",
            "name": "typeParameterElement",
            "signature": "typeParameterElement = 'type parameter'",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 6228,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6228",
            },
            "value": "type parameter",
          },
          Object {
            "docs": Array [],
            "id": "ScriptElementKind.unknown",
            "kind": "EnumMemberDeclaration",
            "name": "unknown",
            "signature": "unknown = ''",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 6175,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6175",
            },
            "value": "",
          },
          Object {
            "docs": Array [
              "/**
         * Inside module and script only
         * const v = ..
         */",
            ],
            "id": "ScriptElementKind.variableElement",
            "kind": "EnumMemberDeclaration",
            "name": "variableElement",
            "signature": "variableElement = 'var'",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 6198,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6198",
            },
            "value": "var",
          },
          Object {
            "docs": Array [],
            "id": "ScriptElementKind.warning",
            "kind": "EnumMemberDeclaration",
            "name": "warning",
            "signature": "warning = 'warning'",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 6176,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6176",
            },
            "value": "warning",
          },
        ],
        "name": "ScriptElementKind",
        "signature": "enum ScriptElementKind {
    unknown = '',
    warning = 'warning',
    keyword = 'keyword',
    scriptElement = 'script',
    moduleElement = 'module',
    classElement = 'class',
    localClassElement = 'local class',
    interfaceElement = 'interface',
    typeElement = 'type',
    enumElement = 'enum',
    enumMemberElement = 'enum member',
    variableElement = 'var',
    localVariableElement = 'local var',
    functionElement = 'function',
    localFunctionElement = 'local function',
    memberFunctionElement = 'method',
    memberGetAccessorElement = 'getter',
    memberSetAccessorElement = 'setter',
    memberVariableElement = 'property',
    constructorImplementationElement = 'constructor',
    callSignatureElement = 'call',
    indexSignatureElement = 'index',
    constructSignatureElement = 'construct',
    parameterElement = 'parameter',
    typeParameterElement = 'type parameter',
    primitiveType = 'primitive type',
    label = 'label',
    alias = 'alias',
    constElement = 'const',
    letElement = 'let',
    directory = 'directory',
    externalModuleName = 'external module name',
    jsxAttribute = 'JSX attribute',
    string = 'string',
}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 6174,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6174",
        },
      },
      Object {
        "docs": Array [],
        "id": "ScriptElementKindModifier",
        "isConst": false,
        "kind": "EnumDeclaration",
        "members": Array [
          Object {
            "docs": Array [],
            "id": "ScriptElementKindModifier.abstractModifier",
            "kind": "EnumMemberDeclaration",
            "name": "abstractModifier",
            "signature": "abstractModifier = 'abstract'",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 6251,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6251",
            },
            "value": "abstract",
          },
          Object {
            "docs": Array [],
            "id": "ScriptElementKindModifier.ambientModifier",
            "kind": "EnumMemberDeclaration",
            "name": "ambientModifier",
            "signature": "ambientModifier = 'declare'",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 6249,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6249",
            },
            "value": "declare",
          },
          Object {
            "docs": Array [],
            "id": "ScriptElementKindModifier.deprecatedModifier",
            "kind": "EnumMemberDeclaration",
            "name": "deprecatedModifier",
            "signature": "deprecatedModifier = 'deprecated'",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 6253,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6253",
            },
            "value": "deprecated",
          },
          Object {
            "docs": Array [],
            "id": "ScriptElementKindModifier.dtsModifier",
            "kind": "EnumMemberDeclaration",
            "name": "dtsModifier",
            "signature": "dtsModifier = '.d.ts'",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 6254,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6254",
            },
            "value": ".d.ts",
          },
          Object {
            "docs": Array [],
            "id": "ScriptElementKindModifier.exportedModifier",
            "kind": "EnumMemberDeclaration",
            "name": "exportedModifier",
            "signature": "exportedModifier = 'export'",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 6248,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6248",
            },
            "value": "export",
          },
          Object {
            "docs": Array [],
            "id": "ScriptElementKindModifier.jsModifier",
            "kind": "EnumMemberDeclaration",
            "name": "jsModifier",
            "signature": "jsModifier = '.js'",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 6257,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6257",
            },
            "value": ".js",
          },
          Object {
            "docs": Array [],
            "id": "ScriptElementKindModifier.jsonModifier",
            "kind": "EnumMemberDeclaration",
            "name": "jsonModifier",
            "signature": "jsonModifier = '.json'",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 6259,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6259",
            },
            "value": ".json",
          },
          Object {
            "docs": Array [],
            "id": "ScriptElementKindModifier.jsxModifier",
            "kind": "EnumMemberDeclaration",
            "name": "jsxModifier",
            "signature": "jsxModifier = '.jsx'",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 6258,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6258",
            },
            "value": ".jsx",
          },
          Object {
            "docs": Array [],
            "id": "ScriptElementKindModifier.none",
            "kind": "EnumMemberDeclaration",
            "name": "none",
            "signature": "none = ''",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 6244,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6244",
            },
            "value": "",
          },
          Object {
            "docs": Array [],
            "id": "ScriptElementKindModifier.optionalModifier",
            "kind": "EnumMemberDeclaration",
            "name": "optionalModifier",
            "signature": "optionalModifier = 'optional'",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 6252,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6252",
            },
            "value": "optional",
          },
          Object {
            "docs": Array [],
            "id": "ScriptElementKindModifier.privateMemberModifier",
            "kind": "EnumMemberDeclaration",
            "name": "privateMemberModifier",
            "signature": "privateMemberModifier = 'private'",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 6246,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6246",
            },
            "value": "private",
          },
          Object {
            "docs": Array [],
            "id": "ScriptElementKindModifier.protectedMemberModifier",
            "kind": "EnumMemberDeclaration",
            "name": "protectedMemberModifier",
            "signature": "protectedMemberModifier = 'protected'",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 6247,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6247",
            },
            "value": "protected",
          },
          Object {
            "docs": Array [],
            "id": "ScriptElementKindModifier.publicMemberModifier",
            "kind": "EnumMemberDeclaration",
            "name": "publicMemberModifier",
            "signature": "publicMemberModifier = 'public'",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 6245,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6245",
            },
            "value": "public",
          },
          Object {
            "docs": Array [],
            "id": "ScriptElementKindModifier.staticModifier",
            "kind": "EnumMemberDeclaration",
            "name": "staticModifier",
            "signature": "staticModifier = 'static'",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 6250,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6250",
            },
            "value": "static",
          },
          Object {
            "docs": Array [],
            "id": "ScriptElementKindModifier.tsModifier",
            "kind": "EnumMemberDeclaration",
            "name": "tsModifier",
            "signature": "tsModifier = '.ts'",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 6255,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6255",
            },
            "value": ".ts",
          },
          Object {
            "docs": Array [],
            "id": "ScriptElementKindModifier.tsxModifier",
            "kind": "EnumMemberDeclaration",
            "name": "tsxModifier",
            "signature": "tsxModifier = '.tsx'",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 6256,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6256",
            },
            "value": ".tsx",
          },
        ],
        "name": "ScriptElementKindModifier",
        "signature": "enum ScriptElementKindModifier {
    none = '',
    publicMemberModifier = 'public',
    privateMemberModifier = 'private',
    protectedMemberModifier = 'protected',
    exportedModifier = 'export',
    ambientModifier = 'declare',
    staticModifier = 'static',
    abstractModifier = 'abstract',
    optionalModifier = 'optional',
    deprecatedModifier = 'deprecated',
    dtsModifier = '.d.ts',
    tsModifier = '.ts',
    tsxModifier = '.tsx',
    jsModifier = '.js',
    jsxModifier = '.jsx',
    jsonModifier = '.json',
}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 6243,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6243",
        },
      },
      Object {
        "docs": Array [],
        "id": "ScriptKind",
        "isConst": false,
        "kind": "EnumDeclaration",
        "members": Array [
          Object {
            "docs": Array [
              "/**
         * Used on extensions that doesn't define the ScriptKind but the content defines it.
         * Deferred extensions are going to be included in all project contexts.
         */",
            ],
            "id": "ScriptKind.Deferred",
            "kind": "EnumMemberDeclaration",
            "name": "Deferred",
            "signature": "Deferred = 7",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 2940,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2940",
            },
            "value": 7,
          },
          Object {
            "docs": Array [],
            "id": "ScriptKind.External",
            "kind": "EnumMemberDeclaration",
            "name": "External",
            "signature": "External = 5",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 2934,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2934",
            },
            "value": 5,
          },
          Object {
            "docs": Array [],
            "id": "ScriptKind.JS",
            "kind": "EnumMemberDeclaration",
            "name": "JS",
            "signature": "JS = 1",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 2930,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2930",
            },
            "value": 1,
          },
          Object {
            "docs": Array [],
            "id": "ScriptKind.JSON",
            "kind": "EnumMemberDeclaration",
            "name": "JSON",
            "signature": "JSON = 6",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 2935,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2935",
            },
            "value": 6,
          },
          Object {
            "docs": Array [],
            "id": "ScriptKind.JSX",
            "kind": "EnumMemberDeclaration",
            "name": "JSX",
            "signature": "JSX = 2",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 2931,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2931",
            },
            "value": 2,
          },
          Object {
            "docs": Array [],
            "id": "ScriptKind.TS",
            "kind": "EnumMemberDeclaration",
            "name": "TS",
            "signature": "TS = 3",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 2932,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2932",
            },
            "value": 3,
          },
          Object {
            "docs": Array [],
            "id": "ScriptKind.TSX",
            "kind": "EnumMemberDeclaration",
            "name": "TSX",
            "signature": "TSX = 4",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 2933,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2933",
            },
            "value": 4,
          },
          Object {
            "docs": Array [],
            "id": "ScriptKind.Unknown",
            "kind": "EnumMemberDeclaration",
            "name": "Unknown",
            "signature": "Unknown = 0",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 2929,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2929",
            },
            "value": 0,
          },
        ],
        "name": "ScriptKind",
        "signature": "enum ScriptKind {
    Unknown = 0,
    JS = 1,
    JSX = 2,
    TS = 3,
    TSX = 4,
    External = 5,
    JSON = 6,
    Deferred = 7,
}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 2928,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2928",
        },
      },
      Object {
        "docs": Array [],
        "id": "ScriptTarget",
        "isConst": false,
        "kind": "EnumDeclaration",
        "members": Array [
          Object {
            "docs": Array [],
            "id": "ScriptTarget.ES2015",
            "kind": "EnumMemberDeclaration",
            "name": "ES2015",
            "signature": "ES2015 = 2",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 2945,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2945",
            },
            "value": 2,
          },
          Object {
            "docs": Array [],
            "id": "ScriptTarget.ES2016",
            "kind": "EnumMemberDeclaration",
            "name": "ES2016",
            "signature": "ES2016 = 3",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 2946,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2946",
            },
            "value": 3,
          },
          Object {
            "docs": Array [],
            "id": "ScriptTarget.ES2017",
            "kind": "EnumMemberDeclaration",
            "name": "ES2017",
            "signature": "ES2017 = 4",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 2947,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2947",
            },
            "value": 4,
          },
          Object {
            "docs": Array [],
            "id": "ScriptTarget.ES2018",
            "kind": "EnumMemberDeclaration",
            "name": "ES2018",
            "signature": "ES2018 = 5",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 2948,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2948",
            },
            "value": 5,
          },
          Object {
            "docs": Array [],
            "id": "ScriptTarget.ES2019",
            "kind": "EnumMemberDeclaration",
            "name": "ES2019",
            "signature": "ES2019 = 6",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 2949,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2949",
            },
            "value": 6,
          },
          Object {
            "docs": Array [],
            "id": "ScriptTarget.ES2020",
            "kind": "EnumMemberDeclaration",
            "name": "ES2020",
            "signature": "ES2020 = 7",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 2950,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2950",
            },
            "value": 7,
          },
          Object {
            "docs": Array [],
            "id": "ScriptTarget.ES3",
            "kind": "EnumMemberDeclaration",
            "name": "ES3",
            "signature": "ES3 = 0",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 2943,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2943",
            },
            "value": 0,
          },
          Object {
            "docs": Array [],
            "id": "ScriptTarget.ES5",
            "kind": "EnumMemberDeclaration",
            "name": "ES5",
            "signature": "ES5 = 1",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 2944,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2944",
            },
            "value": 1,
          },
          Object {
            "docs": Array [],
            "id": "ScriptTarget.ESNext",
            "kind": "EnumMemberDeclaration",
            "name": "ESNext",
            "signature": "ESNext = 99",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 2951,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2951",
            },
            "value": 99,
          },
          Object {
            "docs": Array [],
            "id": "ScriptTarget.JSON",
            "kind": "EnumMemberDeclaration",
            "name": "JSON",
            "signature": "JSON = 100",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 2952,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2952",
            },
            "value": 100,
          },
          Object {
            "docs": Array [],
            "id": "ScriptTarget.Latest",
            "kind": "EnumMemberDeclaration",
            "name": "Latest",
            "signature": "Latest = 99",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 2953,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2953",
            },
            "value": 99,
          },
        ],
        "name": "ScriptTarget",
        "signature": "enum ScriptTarget {
    ES3 = 0,
    ES5 = 1,
    ES2015 = 2,
    ES2016 = 3,
    ES2017 = 4,
    ES2018 = 5,
    ES2019 = 6,
    ES2020 = 7,
    ESNext = 99,
    JSON = 100,
    Latest = 99,
}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 2942,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2942",
        },
      },
      Object {
        "docs": Array [],
        "id": "SemanticClassificationFormat",
        "isConst": false,
        "kind": "EnumDeclaration",
        "members": Array [
          Object {
            "docs": Array [],
            "id": "SemanticClassificationFormat.Original",
            "kind": "EnumMemberDeclaration",
            "name": "Original",
            "signature": "Original = 'original'",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 5421,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5421",
            },
            "value": "original",
          },
          Object {
            "docs": Array [],
            "id": "SemanticClassificationFormat.TwentyTwenty",
            "kind": "EnumMemberDeclaration",
            "name": "TwentyTwenty",
            "signature": "TwentyTwenty = '2020'",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 5422,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5422",
            },
            "value": "2020",
          },
        ],
        "name": "SemanticClassificationFormat",
        "signature": "enum SemanticClassificationFormat {
    Original = 'original',
    TwentyTwenty = '2020',
}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 5420,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5420",
        },
      },
      Object {
        "docs": Array [],
        "id": "SemicolonPreference",
        "isConst": false,
        "kind": "EnumDeclaration",
        "members": Array [
          Object {
            "docs": Array [],
            "id": "SemicolonPreference.Ignore",
            "kind": "EnumMemberDeclaration",
            "name": "Ignore",
            "signature": "Ignore = 'ignore'",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 5870,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5870",
            },
            "value": "ignore",
          },
          Object {
            "docs": Array [],
            "id": "SemicolonPreference.Insert",
            "kind": "EnumMemberDeclaration",
            "name": "Insert",
            "signature": "Insert = 'insert'",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 5871,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5871",
            },
            "value": "insert",
          },
          Object {
            "docs": Array [],
            "id": "SemicolonPreference.Remove",
            "kind": "EnumMemberDeclaration",
            "name": "Remove",
            "signature": "Remove = 'remove'",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 5872,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5872",
            },
            "value": "remove",
          },
        ],
        "name": "SemicolonPreference",
        "signature": "enum SemicolonPreference {
    Ignore = 'ignore',
    Insert = 'insert',
    Remove = 'remove',
}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 5869,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5869",
        },
      },
      Object {
        "docs": Array [],
        "id": "SignatureKind",
        "isConst": false,
        "kind": "EnumDeclaration",
        "members": Array [
          Object {
            "docs": Array [],
            "id": "SignatureKind.Call",
            "kind": "EnumMemberDeclaration",
            "name": "Call",
            "signature": "Call = 0",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 2665,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2665",
            },
            "value": 0,
          },
          Object {
            "docs": Array [],
            "id": "SignatureKind.Construct",
            "kind": "EnumMemberDeclaration",
            "name": "Construct",
            "signature": "Construct = 1",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 2666,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2666",
            },
            "value": 1,
          },
        ],
        "name": "SignatureKind",
        "signature": "enum SignatureKind {
    Call = 0,
    Construct = 1,
}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 2664,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2664",
        },
      },
      Object {
        "docs": Array [],
        "id": "SymbolDisplayPartKind",
        "isConst": false,
        "kind": "EnumDeclaration",
        "members": Array [
          Object {
            "docs": Array [],
            "id": "SymbolDisplayPartKind.aliasName",
            "kind": "EnumMemberDeclaration",
            "name": "aliasName",
            "signature": "aliasName = 0",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 5949,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5949",
            },
            "value": 0,
          },
          Object {
            "docs": Array [],
            "id": "SymbolDisplayPartKind.className",
            "kind": "EnumMemberDeclaration",
            "name": "className",
            "signature": "className = 1",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 5950,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5950",
            },
            "value": 1,
          },
          Object {
            "docs": Array [],
            "id": "SymbolDisplayPartKind.enumMemberName",
            "kind": "EnumMemberDeclaration",
            "name": "enumMemberName",
            "signature": "enumMemberName = 19",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 5968,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5968",
            },
            "value": 19,
          },
          Object {
            "docs": Array [],
            "id": "SymbolDisplayPartKind.enumName",
            "kind": "EnumMemberDeclaration",
            "name": "enumName",
            "signature": "enumName = 2",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 5951,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5951",
            },
            "value": 2,
          },
          Object {
            "docs": Array [],
            "id": "SymbolDisplayPartKind.fieldName",
            "kind": "EnumMemberDeclaration",
            "name": "fieldName",
            "signature": "fieldName = 3",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 5952,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5952",
            },
            "value": 3,
          },
          Object {
            "docs": Array [],
            "id": "SymbolDisplayPartKind.functionName",
            "kind": "EnumMemberDeclaration",
            "name": "functionName",
            "signature": "functionName = 20",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 5969,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5969",
            },
            "value": 20,
          },
          Object {
            "docs": Array [],
            "id": "SymbolDisplayPartKind.interfaceName",
            "kind": "EnumMemberDeclaration",
            "name": "interfaceName",
            "signature": "interfaceName = 4",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 5953,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5953",
            },
            "value": 4,
          },
          Object {
            "docs": Array [],
            "id": "SymbolDisplayPartKind.keyword",
            "kind": "EnumMemberDeclaration",
            "name": "keyword",
            "signature": "keyword = 5",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 5954,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5954",
            },
            "value": 5,
          },
          Object {
            "docs": Array [],
            "id": "SymbolDisplayPartKind.lineBreak",
            "kind": "EnumMemberDeclaration",
            "name": "lineBreak",
            "signature": "lineBreak = 6",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 5955,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5955",
            },
            "value": 6,
          },
          Object {
            "docs": Array [],
            "id": "SymbolDisplayPartKind.localName",
            "kind": "EnumMemberDeclaration",
            "name": "localName",
            "signature": "localName = 9",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 5958,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5958",
            },
            "value": 9,
          },
          Object {
            "docs": Array [],
            "id": "SymbolDisplayPartKind.methodName",
            "kind": "EnumMemberDeclaration",
            "name": "methodName",
            "signature": "methodName = 10",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 5959,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5959",
            },
            "value": 10,
          },
          Object {
            "docs": Array [],
            "id": "SymbolDisplayPartKind.moduleName",
            "kind": "EnumMemberDeclaration",
            "name": "moduleName",
            "signature": "moduleName = 11",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 5960,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5960",
            },
            "value": 11,
          },
          Object {
            "docs": Array [],
            "id": "SymbolDisplayPartKind.numericLiteral",
            "kind": "EnumMemberDeclaration",
            "name": "numericLiteral",
            "signature": "numericLiteral = 7",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 5956,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5956",
            },
            "value": 7,
          },
          Object {
            "docs": Array [],
            "id": "SymbolDisplayPartKind.operator",
            "kind": "EnumMemberDeclaration",
            "name": "operator",
            "signature": "operator = 12",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 5961,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5961",
            },
            "value": 12,
          },
          Object {
            "docs": Array [],
            "id": "SymbolDisplayPartKind.parameterName",
            "kind": "EnumMemberDeclaration",
            "name": "parameterName",
            "signature": "parameterName = 13",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 5962,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5962",
            },
            "value": 13,
          },
          Object {
            "docs": Array [],
            "id": "SymbolDisplayPartKind.propertyName",
            "kind": "EnumMemberDeclaration",
            "name": "propertyName",
            "signature": "propertyName = 14",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 5963,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5963",
            },
            "value": 14,
          },
          Object {
            "docs": Array [],
            "id": "SymbolDisplayPartKind.punctuation",
            "kind": "EnumMemberDeclaration",
            "name": "punctuation",
            "signature": "punctuation = 15",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 5964,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5964",
            },
            "value": 15,
          },
          Object {
            "docs": Array [],
            "id": "SymbolDisplayPartKind.regularExpressionLiteral",
            "kind": "EnumMemberDeclaration",
            "name": "regularExpressionLiteral",
            "signature": "regularExpressionLiteral = 21",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 5970,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5970",
            },
            "value": 21,
          },
          Object {
            "docs": Array [],
            "id": "SymbolDisplayPartKind.space",
            "kind": "EnumMemberDeclaration",
            "name": "space",
            "signature": "space = 16",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 5965,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5965",
            },
            "value": 16,
          },
          Object {
            "docs": Array [],
            "id": "SymbolDisplayPartKind.stringLiteral",
            "kind": "EnumMemberDeclaration",
            "name": "stringLiteral",
            "signature": "stringLiteral = 8",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 5957,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5957",
            },
            "value": 8,
          },
          Object {
            "docs": Array [],
            "id": "SymbolDisplayPartKind.text",
            "kind": "EnumMemberDeclaration",
            "name": "text",
            "signature": "text = 17",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 5966,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5966",
            },
            "value": 17,
          },
          Object {
            "docs": Array [],
            "id": "SymbolDisplayPartKind.typeParameterName",
            "kind": "EnumMemberDeclaration",
            "name": "typeParameterName",
            "signature": "typeParameterName = 18",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 5967,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5967",
            },
            "value": 18,
          },
        ],
        "name": "SymbolDisplayPartKind",
        "signature": "enum SymbolDisplayPartKind {
    aliasName = 0,
    className = 1,
    enumName = 2,
    fieldName = 3,
    interfaceName = 4,
    keyword = 5,
    lineBreak = 6,
    numericLiteral = 7,
    stringLiteral = 8,
    localName = 9,
    methodName = 10,
    moduleName = 11,
    operator = 12,
    parameterName = 13,
    propertyName = 14,
    punctuation = 15,
    space = 16,
    text = 17,
    typeParameterName = 18,
    enumMemberName = 19,
    functionName = 20,
    regularExpressionLiteral = 21,
}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 5948,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5948",
        },
      },
      Object {
        "docs": Array [],
        "id": "SymbolFlags",
        "isConst": false,
        "kind": "EnumDeclaration",
        "members": Array [
          Object {
            "docs": Array [],
            "id": "SymbolFlags.Accessor",
            "kind": "EnumMemberDeclaration",
            "name": "Accessor",
            "signature": "Accessor = 98304",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 2379,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2379",
            },
            "value": 98304,
          },
          Object {
            "docs": Array [],
            "id": "SymbolFlags.Alias",
            "kind": "EnumMemberDeclaration",
            "name": "Alias",
            "signature": "Alias = 2097152",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 2366,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2366",
            },
            "value": 2097152,
          },
          Object {
            "docs": Array [],
            "id": "SymbolFlags.AliasExcludes",
            "kind": "EnumMemberDeclaration",
            "name": "AliasExcludes",
            "signature": "AliasExcludes = 2097152",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 2397,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2397",
            },
            "value": 2097152,
          },
          Object {
            "docs": Array [],
            "id": "SymbolFlags.Assignment",
            "kind": "EnumMemberDeclaration",
            "name": "Assignment",
            "signature": "Assignment = 67108864",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 2371,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2371",
            },
            "value": 67108864,
          },
          Object {
            "docs": Array [],
            "id": "SymbolFlags.BlockScoped",
            "kind": "EnumMemberDeclaration",
            "name": "BlockScoped",
            "signature": "BlockScoped = 418",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 2400,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2400",
            },
            "value": 418,
          },
          Object {
            "docs": Array [],
            "id": "SymbolFlags.BlockScopedVariable",
            "kind": "EnumMemberDeclaration",
            "name": "BlockScopedVariable",
            "signature": "BlockScopedVariable = 2",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 2346,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2346",
            },
            "value": 2,
          },
          Object {
            "docs": Array [],
            "id": "SymbolFlags.BlockScopedVariableExcludes",
            "kind": "EnumMemberDeclaration",
            "name": "BlockScopedVariableExcludes",
            "signature": "BlockScopedVariableExcludes = 111551",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 2381,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2381",
            },
            "value": 111551,
          },
          Object {
            "docs": Array [],
            "id": "SymbolFlags.Class",
            "kind": "EnumMemberDeclaration",
            "name": "Class",
            "signature": "Class = 32",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 2350,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2350",
            },
            "value": 32,
          },
          Object {
            "docs": Array [],
            "id": "SymbolFlags.ClassExcludes",
            "kind": "EnumMemberDeclaration",
            "name": "ClassExcludes",
            "signature": "ClassExcludes = 899503",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 2386,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2386",
            },
            "value": 899503,
          },
          Object {
            "docs": Array [],
            "id": "SymbolFlags.ClassMember",
            "kind": "EnumMemberDeclaration",
            "name": "ClassMember",
            "signature": "ClassMember = 106500",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 2402,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2402",
            },
            "value": 106500,
          },
          Object {
            "docs": Array [],
            "id": "SymbolFlags.ConstEnum",
            "kind": "EnumMemberDeclaration",
            "name": "ConstEnum",
            "signature": "ConstEnum = 128",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 2352,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2352",
            },
            "value": 128,
          },
          Object {
            "docs": Array [],
            "id": "SymbolFlags.ConstEnumExcludes",
            "kind": "EnumMemberDeclaration",
            "name": "ConstEnumExcludes",
            "signature": "ConstEnumExcludes = 899967",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 2389,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2389",
            },
            "value": 899967,
          },
          Object {
            "docs": Array [],
            "id": "SymbolFlags.Constructor",
            "kind": "EnumMemberDeclaration",
            "name": "Constructor",
            "signature": "Constructor = 16384",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 2359,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2359",
            },
            "value": 16384,
          },
          Object {
            "docs": Array [],
            "id": "SymbolFlags.Enum",
            "kind": "EnumMemberDeclaration",
            "name": "Enum",
            "signature": "Enum = 384",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 2373,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2373",
            },
            "value": 384,
          },
          Object {
            "docs": Array [],
            "id": "SymbolFlags.EnumMember",
            "kind": "EnumMemberDeclaration",
            "name": "EnumMember",
            "signature": "EnumMember = 8",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 2348,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2348",
            },
            "value": 8,
          },
          Object {
            "docs": Array [],
            "id": "SymbolFlags.EnumMemberExcludes",
            "kind": "EnumMemberDeclaration",
            "name": "EnumMemberExcludes",
            "signature": "EnumMemberExcludes = 900095",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 2384,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2384",
            },
            "value": 900095,
          },
          Object {
            "docs": Array [],
            "id": "SymbolFlags.ExportHasLocal",
            "kind": "EnumMemberDeclaration",
            "name": "ExportHasLocal",
            "signature": "ExportHasLocal = 944",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 2399,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2399",
            },
            "value": 944,
          },
          Object {
            "docs": Array [],
            "id": "SymbolFlags.ExportStar",
            "kind": "EnumMemberDeclaration",
            "name": "ExportStar",
            "signature": "ExportStar = 8388608",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 2368,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2368",
            },
            "value": 8388608,
          },
          Object {
            "docs": Array [],
            "id": "SymbolFlags.ExportValue",
            "kind": "EnumMemberDeclaration",
            "name": "ExportValue",
            "signature": "ExportValue = 1048576",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 2365,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2365",
            },
            "value": 1048576,
          },
          Object {
            "docs": Array [],
            "id": "SymbolFlags.Function",
            "kind": "EnumMemberDeclaration",
            "name": "Function",
            "signature": "Function = 16",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 2349,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2349",
            },
            "value": 16,
          },
          Object {
            "docs": Array [],
            "id": "SymbolFlags.FunctionExcludes",
            "kind": "EnumMemberDeclaration",
            "name": "FunctionExcludes",
            "signature": "FunctionExcludes = 110991",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 2385,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2385",
            },
            "value": 110991,
          },
          Object {
            "docs": Array [],
            "id": "SymbolFlags.FunctionScopedVariable",
            "kind": "EnumMemberDeclaration",
            "name": "FunctionScopedVariable",
            "signature": "FunctionScopedVariable = 1",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 2345,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2345",
            },
            "value": 1,
          },
          Object {
            "docs": Array [],
            "id": "SymbolFlags.FunctionScopedVariableExcludes",
            "kind": "EnumMemberDeclaration",
            "name": "FunctionScopedVariableExcludes",
            "signature": "FunctionScopedVariableExcludes = 111550",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 2380,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2380",
            },
            "value": 111550,
          },
          Object {
            "docs": Array [],
            "id": "SymbolFlags.GetAccessor",
            "kind": "EnumMemberDeclaration",
            "name": "GetAccessor",
            "signature": "GetAccessor = 32768",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 2360,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2360",
            },
            "value": 32768,
          },
          Object {
            "docs": Array [],
            "id": "SymbolFlags.GetAccessorExcludes",
            "kind": "EnumMemberDeclaration",
            "name": "GetAccessorExcludes",
            "signature": "GetAccessorExcludes = 46015",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 2393,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2393",
            },
            "value": 46015,
          },
          Object {
            "docs": Array [],
            "id": "SymbolFlags.Interface",
            "kind": "EnumMemberDeclaration",
            "name": "Interface",
            "signature": "Interface = 64",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 2351,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2351",
            },
            "value": 64,
          },
          Object {
            "docs": Array [],
            "id": "SymbolFlags.InterfaceExcludes",
            "kind": "EnumMemberDeclaration",
            "name": "InterfaceExcludes",
            "signature": "InterfaceExcludes = 788872",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 2387,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2387",
            },
            "value": 788872,
          },
          Object {
            "docs": Array [],
            "id": "SymbolFlags.Method",
            "kind": "EnumMemberDeclaration",
            "name": "Method",
            "signature": "Method = 8192",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 2358,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2358",
            },
            "value": 8192,
          },
          Object {
            "docs": Array [],
            "id": "SymbolFlags.MethodExcludes",
            "kind": "EnumMemberDeclaration",
            "name": "MethodExcludes",
            "signature": "MethodExcludes = 103359",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 2392,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2392",
            },
            "value": 103359,
          },
          Object {
            "docs": Array [],
            "id": "SymbolFlags.Module",
            "kind": "EnumMemberDeclaration",
            "name": "Module",
            "signature": "Module = 1536",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 2378,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2378",
            },
            "value": 1536,
          },
          Object {
            "docs": Array [],
            "id": "SymbolFlags.ModuleExports",
            "kind": "EnumMemberDeclaration",
            "name": "ModuleExports",
            "signature": "ModuleExports = 134217728",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 2372,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2372",
            },
            "value": 134217728,
          },
          Object {
            "docs": Array [],
            "id": "SymbolFlags.ModuleMember",
            "kind": "EnumMemberDeclaration",
            "name": "ModuleMember",
            "signature": "ModuleMember = 2623475",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 2398,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2398",
            },
            "value": 2623475,
          },
          Object {
            "docs": Array [],
            "id": "SymbolFlags.Namespace",
            "kind": "EnumMemberDeclaration",
            "name": "Namespace",
            "signature": "Namespace = 1920",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 2377,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2377",
            },
            "value": 1920,
          },
          Object {
            "docs": Array [],
            "id": "SymbolFlags.NamespaceModule",
            "kind": "EnumMemberDeclaration",
            "name": "NamespaceModule",
            "signature": "NamespaceModule = 1024",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 2355,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2355",
            },
            "value": 1024,
          },
          Object {
            "docs": Array [],
            "id": "SymbolFlags.NamespaceModuleExcludes",
            "kind": "EnumMemberDeclaration",
            "name": "NamespaceModuleExcludes",
            "signature": "NamespaceModuleExcludes = 0",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 2391,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2391",
            },
            "value": 0,
          },
          Object {
            "docs": Array [],
            "id": "SymbolFlags.None",
            "kind": "EnumMemberDeclaration",
            "name": "None",
            "signature": "None = 0",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 2344,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2344",
            },
            "value": 0,
          },
          Object {
            "docs": Array [],
            "id": "SymbolFlags.ObjectLiteral",
            "kind": "EnumMemberDeclaration",
            "name": "ObjectLiteral",
            "signature": "ObjectLiteral = 4096",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 2357,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2357",
            },
            "value": 4096,
          },
          Object {
            "docs": Array [],
            "id": "SymbolFlags.Optional",
            "kind": "EnumMemberDeclaration",
            "name": "Optional",
            "signature": "Optional = 16777216",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 2369,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2369",
            },
            "value": 16777216,
          },
          Object {
            "docs": Array [],
            "id": "SymbolFlags.ParameterExcludes",
            "kind": "EnumMemberDeclaration",
            "name": "ParameterExcludes",
            "signature": "ParameterExcludes = 111551",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 2382,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2382",
            },
            "value": 111551,
          },
          Object {
            "docs": Array [],
            "id": "SymbolFlags.Property",
            "kind": "EnumMemberDeclaration",
            "name": "Property",
            "signature": "Property = 4",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 2347,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2347",
            },
            "value": 4,
          },
          Object {
            "docs": Array [],
            "id": "SymbolFlags.PropertyExcludes",
            "kind": "EnumMemberDeclaration",
            "name": "PropertyExcludes",
            "signature": "PropertyExcludes = 0",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 2383,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2383",
            },
            "value": 0,
          },
          Object {
            "docs": Array [],
            "id": "SymbolFlags.PropertyOrAccessor",
            "kind": "EnumMemberDeclaration",
            "name": "PropertyOrAccessor",
            "signature": "PropertyOrAccessor = 98308",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 2401,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2401",
            },
            "value": 98308,
          },
          Object {
            "docs": Array [],
            "id": "SymbolFlags.Prototype",
            "kind": "EnumMemberDeclaration",
            "name": "Prototype",
            "signature": "Prototype = 4194304",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 2367,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2367",
            },
            "value": 4194304,
          },
          Object {
            "docs": Array [],
            "id": "SymbolFlags.RegularEnum",
            "kind": "EnumMemberDeclaration",
            "name": "RegularEnum",
            "signature": "RegularEnum = 256",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 2353,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2353",
            },
            "value": 256,
          },
          Object {
            "docs": Array [],
            "id": "SymbolFlags.RegularEnumExcludes",
            "kind": "EnumMemberDeclaration",
            "name": "RegularEnumExcludes",
            "signature": "RegularEnumExcludes = 899327",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 2388,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2388",
            },
            "value": 899327,
          },
          Object {
            "docs": Array [],
            "id": "SymbolFlags.SetAccessor",
            "kind": "EnumMemberDeclaration",
            "name": "SetAccessor",
            "signature": "SetAccessor = 65536",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 2361,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2361",
            },
            "value": 65536,
          },
          Object {
            "docs": Array [],
            "id": "SymbolFlags.SetAccessorExcludes",
            "kind": "EnumMemberDeclaration",
            "name": "SetAccessorExcludes",
            "signature": "SetAccessorExcludes = 78783",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 2394,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2394",
            },
            "value": 78783,
          },
          Object {
            "docs": Array [],
            "id": "SymbolFlags.Signature",
            "kind": "EnumMemberDeclaration",
            "name": "Signature",
            "signature": "Signature = 131072",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 2362,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2362",
            },
            "value": 131072,
          },
          Object {
            "docs": Array [],
            "id": "SymbolFlags.Transient",
            "kind": "EnumMemberDeclaration",
            "name": "Transient",
            "signature": "Transient = 33554432",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 2370,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2370",
            },
            "value": 33554432,
          },
          Object {
            "docs": Array [],
            "id": "SymbolFlags.Type",
            "kind": "EnumMemberDeclaration",
            "name": "Type",
            "signature": "Type = 788968",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 2376,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2376",
            },
            "value": 788968,
          },
          Object {
            "docs": Array [],
            "id": "SymbolFlags.TypeAlias",
            "kind": "EnumMemberDeclaration",
            "name": "TypeAlias",
            "signature": "TypeAlias = 524288",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 2364,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2364",
            },
            "value": 524288,
          },
          Object {
            "docs": Array [],
            "id": "SymbolFlags.TypeAliasExcludes",
            "kind": "EnumMemberDeclaration",
            "name": "TypeAliasExcludes",
            "signature": "TypeAliasExcludes = 788968",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 2396,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2396",
            },
            "value": 788968,
          },
          Object {
            "docs": Array [],
            "id": "SymbolFlags.TypeLiteral",
            "kind": "EnumMemberDeclaration",
            "name": "TypeLiteral",
            "signature": "TypeLiteral = 2048",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 2356,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2356",
            },
            "value": 2048,
          },
          Object {
            "docs": Array [],
            "id": "SymbolFlags.TypeParameter",
            "kind": "EnumMemberDeclaration",
            "name": "TypeParameter",
            "signature": "TypeParameter = 262144",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 2363,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2363",
            },
            "value": 262144,
          },
          Object {
            "docs": Array [],
            "id": "SymbolFlags.TypeParameterExcludes",
            "kind": "EnumMemberDeclaration",
            "name": "TypeParameterExcludes",
            "signature": "TypeParameterExcludes = 526824",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 2395,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2395",
            },
            "value": 526824,
          },
          Object {
            "docs": Array [],
            "id": "SymbolFlags.Value",
            "kind": "EnumMemberDeclaration",
            "name": "Value",
            "signature": "Value = 111551",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 2375,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2375",
            },
            "value": 111551,
          },
          Object {
            "docs": Array [],
            "id": "SymbolFlags.ValueModule",
            "kind": "EnumMemberDeclaration",
            "name": "ValueModule",
            "signature": "ValueModule = 512",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 2354,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2354",
            },
            "value": 512,
          },
          Object {
            "docs": Array [],
            "id": "SymbolFlags.ValueModuleExcludes",
            "kind": "EnumMemberDeclaration",
            "name": "ValueModuleExcludes",
            "signature": "ValueModuleExcludes = 110735",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 2390,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2390",
            },
            "value": 110735,
          },
          Object {
            "docs": Array [],
            "id": "SymbolFlags.Variable",
            "kind": "EnumMemberDeclaration",
            "name": "Variable",
            "signature": "Variable = 3",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 2374,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2374",
            },
            "value": 3,
          },
        ],
        "name": "SymbolFlags",
        "signature": "enum SymbolFlags {
    None = 0,
    FunctionScopedVariable = 1,
    BlockScopedVariable = 2,
    Property = 4,
    EnumMember = 8,
    Function = 16,
    Class = 32,
    Interface = 64,
    ConstEnum = 128,
    RegularEnum = 256,
    ValueModule = 512,
    NamespaceModule = 1024,
    TypeLiteral = 2048,
    ObjectLiteral = 4096,
    Method = 8192,
    Constructor = 16384,
    GetAccessor = 32768,
    SetAccessor = 65536,
    Signature = 131072,
    TypeParameter = 262144,
    TypeAlias = 524288,
    ExportValue = 1048576,
    Alias = 2097152,
    Prototype = 4194304,
    ExportStar = 8388608,
    Optional = 16777216,
    Transient = 33554432,
    Assignment = 67108864,
    ModuleExports = 134217728,
    Enum = 384,
    Variable = 3,
    Value = 111551,
    Type = 788968,
    Namespace = 1920,
    Module = 1536,
    Accessor = 98304,
    FunctionScopedVariableExcludes = 111550,
    BlockScopedVariableExcludes = 111551,
    ParameterExcludes = 111551,
    PropertyExcludes = 0,
    EnumMemberExcludes = 900095,
    FunctionExcludes = 110991,
    ClassExcludes = 899503,
    InterfaceExcludes = 788872,
    RegularEnumExcludes = 899327,
    ConstEnumExcludes = 899967,
    ValueModuleExcludes = 110735,
    NamespaceModuleExcludes = 0,
    MethodExcludes = 103359,
    GetAccessorExcludes = 46015,
    SetAccessorExcludes = 78783,
    TypeParameterExcludes = 526824,
    TypeAliasExcludes = 788968,
    AliasExcludes = 2097152,
    ModuleMember = 2623475,
    ExportHasLocal = 944,
    BlockScoped = 418,
    PropertyOrAccessor = 98308,
    ClassMember = 106500,
}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 2343,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2343",
        },
      },
      Object {
        "docs": Array [],
        "id": "SymbolFormatFlags",
        "isConst": false,
        "kind": "EnumDeclaration",
        "members": Array [
          Object {
            "docs": Array [],
            "id": "SymbolFormatFlags.AllowAnyNodeKind",
            "kind": "EnumMemberDeclaration",
            "name": "AllowAnyNodeKind",
            "signature": "AllowAnyNodeKind = 4",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 2305,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2305",
            },
            "value": 4,
          },
          Object {
            "docs": Array [],
            "id": "SymbolFormatFlags.None",
            "kind": "EnumMemberDeclaration",
            "name": "None",
            "signature": "None = 0",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 2302,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2302",
            },
            "value": 0,
          },
          Object {
            "docs": Array [],
            "id": "SymbolFormatFlags.UseAliasDefinedOutsideCurrentScope",
            "kind": "EnumMemberDeclaration",
            "name": "UseAliasDefinedOutsideCurrentScope",
            "signature": "UseAliasDefinedOutsideCurrentScope = 8",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 2306,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2306",
            },
            "value": 8,
          },
          Object {
            "docs": Array [],
            "id": "SymbolFormatFlags.UseOnlyExternalAliasing",
            "kind": "EnumMemberDeclaration",
            "name": "UseOnlyExternalAliasing",
            "signature": "UseOnlyExternalAliasing = 2",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 2304,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2304",
            },
            "value": 2,
          },
          Object {
            "docs": Array [],
            "id": "SymbolFormatFlags.WriteTypeParametersOrArguments",
            "kind": "EnumMemberDeclaration",
            "name": "WriteTypeParametersOrArguments",
            "signature": "WriteTypeParametersOrArguments = 1",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 2303,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2303",
            },
            "value": 1,
          },
        ],
        "name": "SymbolFormatFlags",
        "signature": "enum SymbolFormatFlags {
    None = 0,
    WriteTypeParametersOrArguments = 1,
    UseOnlyExternalAliasing = 2,
    AllowAnyNodeKind = 4,
    UseAliasDefinedOutsideCurrentScope = 8,
}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 2301,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2301",
        },
      },
      Object {
        "docs": Array [],
        "id": "SyntaxKind",
        "isConst": false,
        "kind": "EnumDeclaration",
        "members": Array [
          Object {
            "docs": Array [],
            "id": "SyntaxKind.AbstractKeyword",
            "kind": "EnumMemberDeclaration",
            "name": "AbstractKeyword",
            "signature": "AbstractKeyword = 125",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 232,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L232",
            },
            "value": 125,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.AmpersandAmpersandEqualsToken",
            "kind": "EnumMemberDeclaration",
            "name": "AmpersandAmpersandEqualsToken",
            "signature": "AmpersandAmpersandEqualsToken = 75",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 182,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L182",
            },
            "value": 75,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.AmpersandAmpersandToken",
            "kind": "EnumMemberDeclaration",
            "name": "AmpersandAmpersandToken",
            "signature": "AmpersandAmpersandToken = 55",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 161,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L161",
            },
            "value": 55,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.AmpersandEqualsToken",
            "kind": "EnumMemberDeclaration",
            "name": "AmpersandEqualsToken",
            "signature": "AmpersandEqualsToken = 72",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 179,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L179",
            },
            "value": 72,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.AmpersandToken",
            "kind": "EnumMemberDeclaration",
            "name": "AmpersandToken",
            "signature": "AmpersandToken = 50",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 156,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L156",
            },
            "value": 50,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.AnyKeyword",
            "kind": "EnumMemberDeclaration",
            "name": "AnyKeyword",
            "signature": "AnyKeyword = 128",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 235,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L235",
            },
            "value": 128,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.ArrayBindingPattern",
            "kind": "EnumMemberDeclaration",
            "name": "ArrayBindingPattern",
            "signature": "ArrayBindingPattern = 197",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 304,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L304",
            },
            "value": 197,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.ArrayLiteralExpression",
            "kind": "EnumMemberDeclaration",
            "name": "ArrayLiteralExpression",
            "signature": "ArrayLiteralExpression = 199",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 306,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L306",
            },
            "value": 199,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.ArrayType",
            "kind": "EnumMemberDeclaration",
            "name": "ArrayType",
            "signature": "ArrayType = 178",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 285,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L285",
            },
            "value": 178,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.ArrowFunction",
            "kind": "EnumMemberDeclaration",
            "name": "ArrowFunction",
            "signature": "ArrowFunction = 209",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 316,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L316",
            },
            "value": 209,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.AsExpression",
            "kind": "EnumMemberDeclaration",
            "name": "AsExpression",
            "signature": "AsExpression = 224",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 331,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L331",
            },
            "value": 224,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.AsKeyword",
            "kind": "EnumMemberDeclaration",
            "name": "AsKeyword",
            "signature": "AsKeyword = 126",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 233,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L233",
            },
            "value": 126,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.AssertsKeyword",
            "kind": "EnumMemberDeclaration",
            "name": "AssertsKeyword",
            "signature": "AssertsKeyword = 127",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 234,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L234",
            },
            "value": 127,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.AsteriskAsteriskEqualsToken",
            "kind": "EnumMemberDeclaration",
            "name": "AsteriskAsteriskEqualsToken",
            "signature": "AsteriskAsteriskEqualsToken = 66",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 173,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L173",
            },
            "value": 66,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.AsteriskAsteriskToken",
            "kind": "EnumMemberDeclaration",
            "name": "AsteriskAsteriskToken",
            "signature": "AsteriskAsteriskToken = 42",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 148,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L148",
            },
            "value": 42,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.AsteriskEqualsToken",
            "kind": "EnumMemberDeclaration",
            "name": "AsteriskEqualsToken",
            "signature": "AsteriskEqualsToken = 65",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 172,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L172",
            },
            "value": 65,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.AsteriskToken",
            "kind": "EnumMemberDeclaration",
            "name": "AsteriskToken",
            "signature": "AsteriskToken = 41",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 147,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L147",
            },
            "value": 41,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.AsyncKeyword",
            "kind": "EnumMemberDeclaration",
            "name": "AsyncKeyword",
            "signature": "AsyncKeyword = 129",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 236,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L236",
            },
            "value": 129,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.AtToken",
            "kind": "EnumMemberDeclaration",
            "name": "AtToken",
            "signature": "AtToken = 59",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 165,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L165",
            },
            "value": 59,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.AwaitExpression",
            "kind": "EnumMemberDeclaration",
            "name": "AwaitExpression",
            "signature": "AwaitExpression = 213",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 320,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L320",
            },
            "value": 213,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.AwaitKeyword",
            "kind": "EnumMemberDeclaration",
            "name": "AwaitKeyword",
            "signature": "AwaitKeyword = 130",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 237,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L237",
            },
            "value": 130,
          },
          Object {
            "docs": Array [
              "/** Only the JSDoc scanner produces BacktickToken. The normal scanner produces NoSubstitutionTemplateLiteral and related kinds. */",
            ],
            "id": "SyntaxKind.BacktickToken",
            "kind": "EnumMemberDeclaration",
            "name": "BacktickToken",
            "signature": "BacktickToken = 61",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 168,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L168",
            },
            "value": 61,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.BarBarEqualsToken",
            "kind": "EnumMemberDeclaration",
            "name": "BarBarEqualsToken",
            "signature": "BarBarEqualsToken = 74",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 181,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L181",
            },
            "value": 74,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.BarBarToken",
            "kind": "EnumMemberDeclaration",
            "name": "BarBarToken",
            "signature": "BarBarToken = 56",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 162,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L162",
            },
            "value": 56,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.BarEqualsToken",
            "kind": "EnumMemberDeclaration",
            "name": "BarEqualsToken",
            "signature": "BarEqualsToken = 73",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 180,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L180",
            },
            "value": 73,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.BarToken",
            "kind": "EnumMemberDeclaration",
            "name": "BarToken",
            "signature": "BarToken = 51",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 157,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L157",
            },
            "value": 51,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.BigIntKeyword",
            "kind": "EnumMemberDeclaration",
            "name": "BigIntKeyword",
            "signature": "BigIntKeyword = 155",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 262,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L262",
            },
            "value": 155,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.BigIntLiteral",
            "kind": "EnumMemberDeclaration",
            "name": "BigIntLiteral",
            "signature": "BigIntLiteral = 9",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 115,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L115",
            },
            "value": 9,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.BinaryExpression",
            "kind": "EnumMemberDeclaration",
            "name": "BinaryExpression",
            "signature": "BinaryExpression = 216",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 323,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L323",
            },
            "value": 216,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.BindingElement",
            "kind": "EnumMemberDeclaration",
            "name": "BindingElement",
            "signature": "BindingElement = 198",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 305,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L305",
            },
            "value": 198,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.Block",
            "kind": "EnumMemberDeclaration",
            "name": "Block",
            "signature": "Block = 230",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 337,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L337",
            },
            "value": 230,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.BooleanKeyword",
            "kind": "EnumMemberDeclaration",
            "name": "BooleanKeyword",
            "signature": "BooleanKeyword = 131",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 238,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L238",
            },
            "value": 131,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.BreakKeyword",
            "kind": "EnumMemberDeclaration",
            "name": "BreakKeyword",
            "signature": "BreakKeyword = 80",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 187,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L187",
            },
            "value": 80,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.BreakStatement",
            "kind": "EnumMemberDeclaration",
            "name": "BreakStatement",
            "signature": "BreakStatement = 241",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 348,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L348",
            },
            "value": 241,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.Bundle",
            "kind": "EnumMemberDeclaration",
            "name": "Bundle",
            "signature": "Bundle = 298",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 405,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L405",
            },
            "value": 298,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.CallExpression",
            "kind": "EnumMemberDeclaration",
            "name": "CallExpression",
            "signature": "CallExpression = 203",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 310,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L310",
            },
            "value": 203,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.CallSignature",
            "kind": "EnumMemberDeclaration",
            "name": "CallSignature",
            "signature": "CallSignature = 169",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 276,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L276",
            },
            "value": 169,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.CaretEqualsToken",
            "kind": "EnumMemberDeclaration",
            "name": "CaretEqualsToken",
            "signature": "CaretEqualsToken = 77",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 184,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L184",
            },
            "value": 77,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.CaretToken",
            "kind": "EnumMemberDeclaration",
            "name": "CaretToken",
            "signature": "CaretToken = 52",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 158,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L158",
            },
            "value": 52,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.CaseBlock",
            "kind": "EnumMemberDeclaration",
            "name": "CaseBlock",
            "signature": "CaseBlock = 258",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 365,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L365",
            },
            "value": 258,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.CaseClause",
            "kind": "EnumMemberDeclaration",
            "name": "CaseClause",
            "signature": "CaseClause = 284",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 391,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L391",
            },
            "value": 284,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.CaseKeyword",
            "kind": "EnumMemberDeclaration",
            "name": "CaseKeyword",
            "signature": "CaseKeyword = 81",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 188,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L188",
            },
            "value": 81,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.CatchClause",
            "kind": "EnumMemberDeclaration",
            "name": "CatchClause",
            "signature": "CatchClause = 287",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 394,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L394",
            },
            "value": 287,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.CatchKeyword",
            "kind": "EnumMemberDeclaration",
            "name": "CatchKeyword",
            "signature": "CatchKeyword = 82",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 189,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L189",
            },
            "value": 82,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.ClassDeclaration",
            "kind": "EnumMemberDeclaration",
            "name": "ClassDeclaration",
            "signature": "ClassDeclaration = 252",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 359,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L359",
            },
            "value": 252,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.ClassExpression",
            "kind": "EnumMemberDeclaration",
            "name": "ClassExpression",
            "signature": "ClassExpression = 221",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 328,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L328",
            },
            "value": 221,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.ClassKeyword",
            "kind": "EnumMemberDeclaration",
            "name": "ClassKeyword",
            "signature": "ClassKeyword = 83",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 190,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L190",
            },
            "value": 83,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.CloseBraceToken",
            "kind": "EnumMemberDeclaration",
            "name": "CloseBraceToken",
            "signature": "CloseBraceToken = 19",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 125,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L125",
            },
            "value": 19,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.CloseBracketToken",
            "kind": "EnumMemberDeclaration",
            "name": "CloseBracketToken",
            "signature": "CloseBracketToken = 23",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 129,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L129",
            },
            "value": 23,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.CloseParenToken",
            "kind": "EnumMemberDeclaration",
            "name": "CloseParenToken",
            "signature": "CloseParenToken = 21",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 127,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L127",
            },
            "value": 21,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.ColonToken",
            "kind": "EnumMemberDeclaration",
            "name": "ColonToken",
            "signature": "ColonToken = 58",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 164,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L164",
            },
            "value": 58,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.CommaListExpression",
            "kind": "EnumMemberDeclaration",
            "name": "CommaListExpression",
            "signature": "CommaListExpression = 337",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 444,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L444",
            },
            "value": 337,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.CommaToken",
            "kind": "EnumMemberDeclaration",
            "name": "CommaToken",
            "signature": "CommaToken = 27",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 133,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L133",
            },
            "value": 27,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.ComputedPropertyName",
            "kind": "EnumMemberDeclaration",
            "name": "ComputedPropertyName",
            "signature": "ComputedPropertyName = 158",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 265,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L265",
            },
            "value": 158,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.ConditionalExpression",
            "kind": "EnumMemberDeclaration",
            "name": "ConditionalExpression",
            "signature": "ConditionalExpression = 217",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 324,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L324",
            },
            "value": 217,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.ConditionalType",
            "kind": "EnumMemberDeclaration",
            "name": "ConditionalType",
            "signature": "ConditionalType = 184",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 291,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L291",
            },
            "value": 184,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.ConflictMarkerTrivia",
            "kind": "EnumMemberDeclaration",
            "name": "ConflictMarkerTrivia",
            "signature": "ConflictMarkerTrivia = 7",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 113,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L113",
            },
            "value": 7,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.ConstKeyword",
            "kind": "EnumMemberDeclaration",
            "name": "ConstKeyword",
            "signature": "ConstKeyword = 84",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 191,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L191",
            },
            "value": 84,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.Constructor",
            "kind": "EnumMemberDeclaration",
            "name": "Constructor",
            "signature": "Constructor = 166",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 273,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L273",
            },
            "value": 166,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.ConstructorKeyword",
            "kind": "EnumMemberDeclaration",
            "name": "ConstructorKeyword",
            "signature": "ConstructorKeyword = 132",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 239,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L239",
            },
            "value": 132,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.ConstructorType",
            "kind": "EnumMemberDeclaration",
            "name": "ConstructorType",
            "signature": "ConstructorType = 175",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 282,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L282",
            },
            "value": 175,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.ConstructSignature",
            "kind": "EnumMemberDeclaration",
            "name": "ConstructSignature",
            "signature": "ConstructSignature = 170",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 277,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L277",
            },
            "value": 170,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.ContinueKeyword",
            "kind": "EnumMemberDeclaration",
            "name": "ContinueKeyword",
            "signature": "ContinueKeyword = 85",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 192,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L192",
            },
            "value": 85,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.ContinueStatement",
            "kind": "EnumMemberDeclaration",
            "name": "ContinueStatement",
            "signature": "ContinueStatement = 240",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 347,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L347",
            },
            "value": 240,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.Count",
            "kind": "EnumMemberDeclaration",
            "name": "Count",
            "signature": "Count = 341",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 448,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L448",
            },
            "value": 341,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.DebuggerKeyword",
            "kind": "EnumMemberDeclaration",
            "name": "DebuggerKeyword",
            "signature": "DebuggerKeyword = 86",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 193,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L193",
            },
            "value": 86,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.DebuggerStatement",
            "kind": "EnumMemberDeclaration",
            "name": "DebuggerStatement",
            "signature": "DebuggerStatement = 248",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 355,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L355",
            },
            "value": 248,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.DeclareKeyword",
            "kind": "EnumMemberDeclaration",
            "name": "DeclareKeyword",
            "signature": "DeclareKeyword = 133",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 240,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L240",
            },
            "value": 133,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.Decorator",
            "kind": "EnumMemberDeclaration",
            "name": "Decorator",
            "signature": "Decorator = 161",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 268,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L268",
            },
            "value": 161,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.DefaultClause",
            "kind": "EnumMemberDeclaration",
            "name": "DefaultClause",
            "signature": "DefaultClause = 285",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 392,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L392",
            },
            "value": 285,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.DefaultKeyword",
            "kind": "EnumMemberDeclaration",
            "name": "DefaultKeyword",
            "signature": "DefaultKeyword = 87",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 194,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L194",
            },
            "value": 87,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.DeleteExpression",
            "kind": "EnumMemberDeclaration",
            "name": "DeleteExpression",
            "signature": "DeleteExpression = 210",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 317,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L317",
            },
            "value": 210,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.DeleteKeyword",
            "kind": "EnumMemberDeclaration",
            "name": "DeleteKeyword",
            "signature": "DeleteKeyword = 88",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 195,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L195",
            },
            "value": 88,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.DoKeyword",
            "kind": "EnumMemberDeclaration",
            "name": "DoKeyword",
            "signature": "DoKeyword = 89",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 196,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L196",
            },
            "value": 89,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.DoStatement",
            "kind": "EnumMemberDeclaration",
            "name": "DoStatement",
            "signature": "DoStatement = 235",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 342,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L342",
            },
            "value": 235,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.DotDotDotToken",
            "kind": "EnumMemberDeclaration",
            "name": "DotDotDotToken",
            "signature": "DotDotDotToken = 25",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 131,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L131",
            },
            "value": 25,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.DotToken",
            "kind": "EnumMemberDeclaration",
            "name": "DotToken",
            "signature": "DotToken = 24",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 130,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L130",
            },
            "value": 24,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.ElementAccessExpression",
            "kind": "EnumMemberDeclaration",
            "name": "ElementAccessExpression",
            "signature": "ElementAccessExpression = 202",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 309,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L309",
            },
            "value": 202,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.ElseKeyword",
            "kind": "EnumMemberDeclaration",
            "name": "ElseKeyword",
            "signature": "ElseKeyword = 90",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 197,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L197",
            },
            "value": 90,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.EmptyStatement",
            "kind": "EnumMemberDeclaration",
            "name": "EmptyStatement",
            "signature": "EmptyStatement = 231",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 338,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L338",
            },
            "value": 231,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.EndOfDeclarationMarker",
            "kind": "EnumMemberDeclaration",
            "name": "EndOfDeclarationMarker",
            "signature": "EndOfDeclarationMarker = 339",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 446,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L446",
            },
            "value": 339,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.EndOfFileToken",
            "kind": "EnumMemberDeclaration",
            "name": "EndOfFileToken",
            "signature": "EndOfFileToken = 1",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 107,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L107",
            },
            "value": 1,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.EnumDeclaration",
            "kind": "EnumMemberDeclaration",
            "name": "EnumDeclaration",
            "signature": "EnumDeclaration = 255",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 362,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L362",
            },
            "value": 255,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.EnumKeyword",
            "kind": "EnumMemberDeclaration",
            "name": "EnumKeyword",
            "signature": "EnumKeyword = 91",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 198,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L198",
            },
            "value": 91,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.EnumMember",
            "kind": "EnumMemberDeclaration",
            "name": "EnumMember",
            "signature": "EnumMember = 291",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 398,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L398",
            },
            "value": 291,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.EqualsEqualsEqualsToken",
            "kind": "EnumMemberDeclaration",
            "name": "EqualsEqualsEqualsToken",
            "signature": "EqualsEqualsEqualsToken = 36",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 142,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L142",
            },
            "value": 36,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.EqualsEqualsToken",
            "kind": "EnumMemberDeclaration",
            "name": "EqualsEqualsToken",
            "signature": "EqualsEqualsToken = 34",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 140,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L140",
            },
            "value": 34,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.EqualsGreaterThanToken",
            "kind": "EnumMemberDeclaration",
            "name": "EqualsGreaterThanToken",
            "signature": "EqualsGreaterThanToken = 38",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 144,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L144",
            },
            "value": 38,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.EqualsToken",
            "kind": "EnumMemberDeclaration",
            "name": "EqualsToken",
            "signature": "EqualsToken = 62",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 169,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L169",
            },
            "value": 62,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.ExclamationEqualsEqualsToken",
            "kind": "EnumMemberDeclaration",
            "name": "ExclamationEqualsEqualsToken",
            "signature": "ExclamationEqualsEqualsToken = 37",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 143,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L143",
            },
            "value": 37,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.ExclamationEqualsToken",
            "kind": "EnumMemberDeclaration",
            "name": "ExclamationEqualsToken",
            "signature": "ExclamationEqualsToken = 35",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 141,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L141",
            },
            "value": 35,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.ExclamationToken",
            "kind": "EnumMemberDeclaration",
            "name": "ExclamationToken",
            "signature": "ExclamationToken = 53",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 159,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L159",
            },
            "value": 53,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.ExportAssignment",
            "kind": "EnumMemberDeclaration",
            "name": "ExportAssignment",
            "signature": "ExportAssignment = 266",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 373,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L373",
            },
            "value": 266,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.ExportDeclaration",
            "kind": "EnumMemberDeclaration",
            "name": "ExportDeclaration",
            "signature": "ExportDeclaration = 267",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 374,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L374",
            },
            "value": 267,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.ExportKeyword",
            "kind": "EnumMemberDeclaration",
            "name": "ExportKeyword",
            "signature": "ExportKeyword = 92",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 199,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L199",
            },
            "value": 92,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.ExportSpecifier",
            "kind": "EnumMemberDeclaration",
            "name": "ExportSpecifier",
            "signature": "ExportSpecifier = 270",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 377,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L377",
            },
            "value": 270,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.ExpressionStatement",
            "kind": "EnumMemberDeclaration",
            "name": "ExpressionStatement",
            "signature": "ExpressionStatement = 233",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 340,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L340",
            },
            "value": 233,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.ExpressionWithTypeArguments",
            "kind": "EnumMemberDeclaration",
            "name": "ExpressionWithTypeArguments",
            "signature": "ExpressionWithTypeArguments = 223",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 330,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L330",
            },
            "value": 223,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.ExtendsKeyword",
            "kind": "EnumMemberDeclaration",
            "name": "ExtendsKeyword",
            "signature": "ExtendsKeyword = 93",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 200,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L200",
            },
            "value": 93,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.ExternalModuleReference",
            "kind": "EnumMemberDeclaration",
            "name": "ExternalModuleReference",
            "signature": "ExternalModuleReference = 272",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 379,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L379",
            },
            "value": 272,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.FalseKeyword",
            "kind": "EnumMemberDeclaration",
            "name": "FalseKeyword",
            "signature": "FalseKeyword = 94",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 201,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L201",
            },
            "value": 94,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.FinallyKeyword",
            "kind": "EnumMemberDeclaration",
            "name": "FinallyKeyword",
            "signature": "FinallyKeyword = 95",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 202,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L202",
            },
            "value": 95,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.FirstAssignment",
            "kind": "EnumMemberDeclaration",
            "name": "FirstAssignment",
            "signature": "FirstAssignment = 62",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 449,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L449",
            },
            "value": 62,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.FirstBinaryOperator",
            "kind": "EnumMemberDeclaration",
            "name": "FirstBinaryOperator",
            "signature": "FirstBinaryOperator = 29",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 471,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L471",
            },
            "value": 29,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.FirstCompoundAssignment",
            "kind": "EnumMemberDeclaration",
            "name": "FirstCompoundAssignment",
            "signature": "FirstCompoundAssignment = 63",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 451,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L451",
            },
            "value": 63,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.FirstFutureReservedWord",
            "kind": "EnumMemberDeclaration",
            "name": "FirstFutureReservedWord",
            "signature": "FirstFutureReservedWord = 116",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 457,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L457",
            },
            "value": 116,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.FirstJSDocNode",
            "kind": "EnumMemberDeclaration",
            "name": "FirstJSDocNode",
            "signature": "FirstJSDocNode = 301",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 476,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L476",
            },
            "value": 301,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.FirstJSDocTagNode",
            "kind": "EnumMemberDeclaration",
            "name": "FirstJSDocTagNode",
            "signature": "FirstJSDocTagNode = 314",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 478,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L478",
            },
            "value": 314,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.FirstKeyword",
            "kind": "EnumMemberDeclaration",
            "name": "FirstKeyword",
            "signature": "FirstKeyword = 80",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 455,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L455",
            },
            "value": 80,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.FirstLiteralToken",
            "kind": "EnumMemberDeclaration",
            "name": "FirstLiteralToken",
            "signature": "FirstLiteralToken = 8",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 467,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L467",
            },
            "value": 8,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.FirstNode",
            "kind": "EnumMemberDeclaration",
            "name": "FirstNode",
            "signature": "FirstNode = 157",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 475,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L475",
            },
            "value": 157,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.FirstPunctuation",
            "kind": "EnumMemberDeclaration",
            "name": "FirstPunctuation",
            "signature": "FirstPunctuation = 18",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 461,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L461",
            },
            "value": 18,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.FirstReservedWord",
            "kind": "EnumMemberDeclaration",
            "name": "FirstReservedWord",
            "signature": "FirstReservedWord = 80",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 453,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L453",
            },
            "value": 80,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.FirstStatement",
            "kind": "EnumMemberDeclaration",
            "name": "FirstStatement",
            "signature": "FirstStatement = 232",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 473,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L473",
            },
            "value": 232,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.FirstTemplateToken",
            "kind": "EnumMemberDeclaration",
            "name": "FirstTemplateToken",
            "signature": "FirstTemplateToken = 14",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 469,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L469",
            },
            "value": 14,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.FirstToken",
            "kind": "EnumMemberDeclaration",
            "name": "FirstToken",
            "signature": "FirstToken = 0",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 463,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L463",
            },
            "value": 0,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.FirstTriviaToken",
            "kind": "EnumMemberDeclaration",
            "name": "FirstTriviaToken",
            "signature": "FirstTriviaToken = 2",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 465,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L465",
            },
            "value": 2,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.FirstTypeNode",
            "kind": "EnumMemberDeclaration",
            "name": "FirstTypeNode",
            "signature": "FirstTypeNode = 172",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 459,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L459",
            },
            "value": 172,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.ForInStatement",
            "kind": "EnumMemberDeclaration",
            "name": "ForInStatement",
            "signature": "ForInStatement = 238",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 345,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L345",
            },
            "value": 238,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.ForKeyword",
            "kind": "EnumMemberDeclaration",
            "name": "ForKeyword",
            "signature": "ForKeyword = 96",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 203,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L203",
            },
            "value": 96,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.ForOfStatement",
            "kind": "EnumMemberDeclaration",
            "name": "ForOfStatement",
            "signature": "ForOfStatement = 239",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 346,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L346",
            },
            "value": 239,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.ForStatement",
            "kind": "EnumMemberDeclaration",
            "name": "ForStatement",
            "signature": "ForStatement = 237",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 344,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L344",
            },
            "value": 237,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.FromKeyword",
            "kind": "EnumMemberDeclaration",
            "name": "FromKeyword",
            "signature": "FromKeyword = 153",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 260,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L260",
            },
            "value": 153,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.FunctionDeclaration",
            "kind": "EnumMemberDeclaration",
            "name": "FunctionDeclaration",
            "signature": "FunctionDeclaration = 251",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 358,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L358",
            },
            "value": 251,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.FunctionExpression",
            "kind": "EnumMemberDeclaration",
            "name": "FunctionExpression",
            "signature": "FunctionExpression = 208",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 315,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L315",
            },
            "value": 208,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.FunctionKeyword",
            "kind": "EnumMemberDeclaration",
            "name": "FunctionKeyword",
            "signature": "FunctionKeyword = 97",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 204,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L204",
            },
            "value": 97,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.FunctionType",
            "kind": "EnumMemberDeclaration",
            "name": "FunctionType",
            "signature": "FunctionType = 174",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 281,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L281",
            },
            "value": 174,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.GetAccessor",
            "kind": "EnumMemberDeclaration",
            "name": "GetAccessor",
            "signature": "GetAccessor = 167",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 274,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L274",
            },
            "value": 167,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.GetKeyword",
            "kind": "EnumMemberDeclaration",
            "name": "GetKeyword",
            "signature": "GetKeyword = 134",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 241,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L241",
            },
            "value": 134,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.GlobalKeyword",
            "kind": "EnumMemberDeclaration",
            "name": "GlobalKeyword",
            "signature": "GlobalKeyword = 154",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 261,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L261",
            },
            "value": 154,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.GreaterThanEqualsToken",
            "kind": "EnumMemberDeclaration",
            "name": "GreaterThanEqualsToken",
            "signature": "GreaterThanEqualsToken = 33",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 139,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L139",
            },
            "value": 33,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.GreaterThanGreaterThanEqualsToken",
            "kind": "EnumMemberDeclaration",
            "name": "GreaterThanGreaterThanEqualsToken",
            "signature": "GreaterThanGreaterThanEqualsToken = 70",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 177,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L177",
            },
            "value": 70,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.GreaterThanGreaterThanGreaterThanEqualsToken",
            "kind": "EnumMemberDeclaration",
            "name": "GreaterThanGreaterThanGreaterThanEqualsToken",
            "signature": "GreaterThanGreaterThanGreaterThanEqualsToken = 71",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 178,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L178",
            },
            "value": 71,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.GreaterThanGreaterThanGreaterThanToken",
            "kind": "EnumMemberDeclaration",
            "name": "GreaterThanGreaterThanGreaterThanToken",
            "signature": "GreaterThanGreaterThanGreaterThanToken = 49",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 155,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L155",
            },
            "value": 49,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.GreaterThanGreaterThanToken",
            "kind": "EnumMemberDeclaration",
            "name": "GreaterThanGreaterThanToken",
            "signature": "GreaterThanGreaterThanToken = 48",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 154,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L154",
            },
            "value": 48,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.GreaterThanToken",
            "kind": "EnumMemberDeclaration",
            "name": "GreaterThanToken",
            "signature": "GreaterThanToken = 31",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 137,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L137",
            },
            "value": 31,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.HeritageClause",
            "kind": "EnumMemberDeclaration",
            "name": "HeritageClause",
            "signature": "HeritageClause = 286",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 393,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L393",
            },
            "value": 286,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.Identifier",
            "kind": "EnumMemberDeclaration",
            "name": "Identifier",
            "signature": "Identifier = 78",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 185,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L185",
            },
            "value": 78,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.IfKeyword",
            "kind": "EnumMemberDeclaration",
            "name": "IfKeyword",
            "signature": "IfKeyword = 98",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 205,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L205",
            },
            "value": 98,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.IfStatement",
            "kind": "EnumMemberDeclaration",
            "name": "IfStatement",
            "signature": "IfStatement = 234",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 341,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L341",
            },
            "value": 234,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.ImplementsKeyword",
            "kind": "EnumMemberDeclaration",
            "name": "ImplementsKeyword",
            "signature": "ImplementsKeyword = 116",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 223,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L223",
            },
            "value": 116,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.ImportClause",
            "kind": "EnumMemberDeclaration",
            "name": "ImportClause",
            "signature": "ImportClause = 262",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 369,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L369",
            },
            "value": 262,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.ImportDeclaration",
            "kind": "EnumMemberDeclaration",
            "name": "ImportDeclaration",
            "signature": "ImportDeclaration = 261",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 368,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L368",
            },
            "value": 261,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.ImportEqualsDeclaration",
            "kind": "EnumMemberDeclaration",
            "name": "ImportEqualsDeclaration",
            "signature": "ImportEqualsDeclaration = 260",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 367,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L367",
            },
            "value": 260,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.ImportKeyword",
            "kind": "EnumMemberDeclaration",
            "name": "ImportKeyword",
            "signature": "ImportKeyword = 99",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 206,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L206",
            },
            "value": 99,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.ImportSpecifier",
            "kind": "EnumMemberDeclaration",
            "name": "ImportSpecifier",
            "signature": "ImportSpecifier = 265",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 372,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L372",
            },
            "value": 265,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.ImportType",
            "kind": "EnumMemberDeclaration",
            "name": "ImportType",
            "signature": "ImportType = 195",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 302,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L302",
            },
            "value": 195,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.IndexedAccessType",
            "kind": "EnumMemberDeclaration",
            "name": "IndexedAccessType",
            "signature": "IndexedAccessType = 189",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 296,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L296",
            },
            "value": 189,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.IndexSignature",
            "kind": "EnumMemberDeclaration",
            "name": "IndexSignature",
            "signature": "IndexSignature = 171",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 278,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L278",
            },
            "value": 171,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.InferKeyword",
            "kind": "EnumMemberDeclaration",
            "name": "InferKeyword",
            "signature": "InferKeyword = 135",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 242,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L242",
            },
            "value": 135,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.InferType",
            "kind": "EnumMemberDeclaration",
            "name": "InferType",
            "signature": "InferType = 185",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 292,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L292",
            },
            "value": 185,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.InKeyword",
            "kind": "EnumMemberDeclaration",
            "name": "InKeyword",
            "signature": "InKeyword = 100",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 207,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L207",
            },
            "value": 100,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.InputFiles",
            "kind": "EnumMemberDeclaration",
            "name": "InputFiles",
            "signature": "InputFiles = 300",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 407,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L407",
            },
            "value": 300,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.InstanceOfKeyword",
            "kind": "EnumMemberDeclaration",
            "name": "InstanceOfKeyword",
            "signature": "InstanceOfKeyword = 101",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 208,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L208",
            },
            "value": 101,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.InterfaceDeclaration",
            "kind": "EnumMemberDeclaration",
            "name": "InterfaceDeclaration",
            "signature": "InterfaceDeclaration = 253",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 360,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L360",
            },
            "value": 253,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.InterfaceKeyword",
            "kind": "EnumMemberDeclaration",
            "name": "InterfaceKeyword",
            "signature": "InterfaceKeyword = 117",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 224,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L224",
            },
            "value": 117,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.IntersectionType",
            "kind": "EnumMemberDeclaration",
            "name": "IntersectionType",
            "signature": "IntersectionType = 183",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 290,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L290",
            },
            "value": 183,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.IntrinsicKeyword",
            "kind": "EnumMemberDeclaration",
            "name": "IntrinsicKeyword",
            "signature": "IntrinsicKeyword = 136",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 243,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L243",
            },
            "value": 136,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.IsKeyword",
            "kind": "EnumMemberDeclaration",
            "name": "IsKeyword",
            "signature": "IsKeyword = 137",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 244,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L244",
            },
            "value": 137,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.JSDocAllType",
            "kind": "EnumMemberDeclaration",
            "name": "JSDocAllType",
            "signature": "JSDocAllType = 303",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 410,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L410",
            },
            "value": 303,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.JSDocAugmentsTag",
            "kind": "EnumMemberDeclaration",
            "name": "JSDocAugmentsTag",
            "signature": "JSDocAugmentsTag = 315",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 422,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L422",
            },
            "value": 315,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.JSDocAuthorTag",
            "kind": "EnumMemberDeclaration",
            "name": "JSDocAuthorTag",
            "signature": "JSDocAuthorTag = 317",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 424,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L424",
            },
            "value": 317,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.JSDocCallbackTag",
            "kind": "EnumMemberDeclaration",
            "name": "JSDocCallbackTag",
            "signature": "JSDocCallbackTag = 324",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 431,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L431",
            },
            "value": 324,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.JSDocClassTag",
            "kind": "EnumMemberDeclaration",
            "name": "JSDocClassTag",
            "signature": "JSDocClassTag = 319",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 426,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L426",
            },
            "value": 319,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.JSDocComment",
            "kind": "EnumMemberDeclaration",
            "name": "JSDocComment",
            "signature": "JSDocComment = 311",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 418,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L418",
            },
            "value": 311,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.JSDocDeprecatedTag",
            "kind": "EnumMemberDeclaration",
            "name": "JSDocDeprecatedTag",
            "signature": "JSDocDeprecatedTag = 318",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 425,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L425",
            },
            "value": 318,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.JSDocEnumTag",
            "kind": "EnumMemberDeclaration",
            "name": "JSDocEnumTag",
            "signature": "JSDocEnumTag = 325",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 432,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L432",
            },
            "value": 325,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.JSDocFunctionType",
            "kind": "EnumMemberDeclaration",
            "name": "JSDocFunctionType",
            "signature": "JSDocFunctionType = 308",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 415,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L415",
            },
            "value": 308,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.JSDocImplementsTag",
            "kind": "EnumMemberDeclaration",
            "name": "JSDocImplementsTag",
            "signature": "JSDocImplementsTag = 316",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 423,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L423",
            },
            "value": 316,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.JSDocNamepathType",
            "kind": "EnumMemberDeclaration",
            "name": "JSDocNamepathType",
            "signature": "JSDocNamepathType = 310",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 417,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L417",
            },
            "value": 310,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.JSDocNameReference",
            "kind": "EnumMemberDeclaration",
            "name": "JSDocNameReference",
            "signature": "JSDocNameReference = 302",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 409,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L409",
            },
            "value": 302,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.JSDocNonNullableType",
            "kind": "EnumMemberDeclaration",
            "name": "JSDocNonNullableType",
            "signature": "JSDocNonNullableType = 306",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 413,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L413",
            },
            "value": 306,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.JSDocNullableType",
            "kind": "EnumMemberDeclaration",
            "name": "JSDocNullableType",
            "signature": "JSDocNullableType = 305",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 412,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L412",
            },
            "value": 305,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.JSDocOptionalType",
            "kind": "EnumMemberDeclaration",
            "name": "JSDocOptionalType",
            "signature": "JSDocOptionalType = 307",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 414,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L414",
            },
            "value": 307,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.JSDocParameterTag",
            "kind": "EnumMemberDeclaration",
            "name": "JSDocParameterTag",
            "signature": "JSDocParameterTag = 326",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 433,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L433",
            },
            "value": 326,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.JSDocPrivateTag",
            "kind": "EnumMemberDeclaration",
            "name": "JSDocPrivateTag",
            "signature": "JSDocPrivateTag = 321",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 428,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L428",
            },
            "value": 321,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.JSDocPropertyTag",
            "kind": "EnumMemberDeclaration",
            "name": "JSDocPropertyTag",
            "signature": "JSDocPropertyTag = 333",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 440,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L440",
            },
            "value": 333,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.JSDocProtectedTag",
            "kind": "EnumMemberDeclaration",
            "name": "JSDocProtectedTag",
            "signature": "JSDocProtectedTag = 322",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 429,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L429",
            },
            "value": 322,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.JSDocPublicTag",
            "kind": "EnumMemberDeclaration",
            "name": "JSDocPublicTag",
            "signature": "JSDocPublicTag = 320",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 427,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L427",
            },
            "value": 320,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.JSDocReadonlyTag",
            "kind": "EnumMemberDeclaration",
            "name": "JSDocReadonlyTag",
            "signature": "JSDocReadonlyTag = 323",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 430,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L430",
            },
            "value": 323,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.JSDocReturnTag",
            "kind": "EnumMemberDeclaration",
            "name": "JSDocReturnTag",
            "signature": "JSDocReturnTag = 327",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 434,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L434",
            },
            "value": 327,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.JSDocSeeTag",
            "kind": "EnumMemberDeclaration",
            "name": "JSDocSeeTag",
            "signature": "JSDocSeeTag = 332",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 439,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L439",
            },
            "value": 332,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.JSDocSignature",
            "kind": "EnumMemberDeclaration",
            "name": "JSDocSignature",
            "signature": "JSDocSignature = 313",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 420,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L420",
            },
            "value": 313,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.JSDocTag",
            "kind": "EnumMemberDeclaration",
            "name": "JSDocTag",
            "signature": "JSDocTag = 314",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 421,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L421",
            },
            "value": 314,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.JSDocTemplateTag",
            "kind": "EnumMemberDeclaration",
            "name": "JSDocTemplateTag",
            "signature": "JSDocTemplateTag = 330",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 437,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L437",
            },
            "value": 330,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.JSDocThisTag",
            "kind": "EnumMemberDeclaration",
            "name": "JSDocThisTag",
            "signature": "JSDocThisTag = 328",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 435,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L435",
            },
            "value": 328,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.JSDocTypedefTag",
            "kind": "EnumMemberDeclaration",
            "name": "JSDocTypedefTag",
            "signature": "JSDocTypedefTag = 331",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 438,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L438",
            },
            "value": 331,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.JSDocTypeExpression",
            "kind": "EnumMemberDeclaration",
            "name": "JSDocTypeExpression",
            "signature": "JSDocTypeExpression = 301",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 408,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L408",
            },
            "value": 301,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.JSDocTypeLiteral",
            "kind": "EnumMemberDeclaration",
            "name": "JSDocTypeLiteral",
            "signature": "JSDocTypeLiteral = 312",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 419,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L419",
            },
            "value": 312,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.JSDocTypeTag",
            "kind": "EnumMemberDeclaration",
            "name": "JSDocTypeTag",
            "signature": "JSDocTypeTag = 329",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 436,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L436",
            },
            "value": 329,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.JSDocUnknownType",
            "kind": "EnumMemberDeclaration",
            "name": "JSDocUnknownType",
            "signature": "JSDocUnknownType = 304",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 411,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L411",
            },
            "value": 304,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.JSDocVariadicType",
            "kind": "EnumMemberDeclaration",
            "name": "JSDocVariadicType",
            "signature": "JSDocVariadicType = 309",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 416,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L416",
            },
            "value": 309,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.JsxAttribute",
            "kind": "EnumMemberDeclaration",
            "name": "JsxAttribute",
            "signature": "JsxAttribute = 280",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 387,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L387",
            },
            "value": 280,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.JsxAttributes",
            "kind": "EnumMemberDeclaration",
            "name": "JsxAttributes",
            "signature": "JsxAttributes = 281",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 388,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L388",
            },
            "value": 281,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.JsxClosingElement",
            "kind": "EnumMemberDeclaration",
            "name": "JsxClosingElement",
            "signature": "JsxClosingElement = 276",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 383,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L383",
            },
            "value": 276,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.JsxClosingFragment",
            "kind": "EnumMemberDeclaration",
            "name": "JsxClosingFragment",
            "signature": "JsxClosingFragment = 279",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 386,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L386",
            },
            "value": 279,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.JsxElement",
            "kind": "EnumMemberDeclaration",
            "name": "JsxElement",
            "signature": "JsxElement = 273",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 380,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L380",
            },
            "value": 273,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.JsxExpression",
            "kind": "EnumMemberDeclaration",
            "name": "JsxExpression",
            "signature": "JsxExpression = 283",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 390,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L390",
            },
            "value": 283,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.JsxFragment",
            "kind": "EnumMemberDeclaration",
            "name": "JsxFragment",
            "signature": "JsxFragment = 277",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 384,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L384",
            },
            "value": 277,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.JsxOpeningElement",
            "kind": "EnumMemberDeclaration",
            "name": "JsxOpeningElement",
            "signature": "JsxOpeningElement = 275",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 382,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L382",
            },
            "value": 275,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.JsxOpeningFragment",
            "kind": "EnumMemberDeclaration",
            "name": "JsxOpeningFragment",
            "signature": "JsxOpeningFragment = 278",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 385,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L385",
            },
            "value": 278,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.JsxSelfClosingElement",
            "kind": "EnumMemberDeclaration",
            "name": "JsxSelfClosingElement",
            "signature": "JsxSelfClosingElement = 274",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 381,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L381",
            },
            "value": 274,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.JsxSpreadAttribute",
            "kind": "EnumMemberDeclaration",
            "name": "JsxSpreadAttribute",
            "signature": "JsxSpreadAttribute = 282",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 389,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L389",
            },
            "value": 282,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.JsxText",
            "kind": "EnumMemberDeclaration",
            "name": "JsxText",
            "signature": "JsxText = 11",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 117,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L117",
            },
            "value": 11,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.JsxTextAllWhiteSpaces",
            "kind": "EnumMemberDeclaration",
            "name": "JsxTextAllWhiteSpaces",
            "signature": "JsxTextAllWhiteSpaces = 12",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 118,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L118",
            },
            "value": 12,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.KeyOfKeyword",
            "kind": "EnumMemberDeclaration",
            "name": "KeyOfKeyword",
            "signature": "KeyOfKeyword = 138",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 245,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L245",
            },
            "value": 138,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.LabeledStatement",
            "kind": "EnumMemberDeclaration",
            "name": "LabeledStatement",
            "signature": "LabeledStatement = 245",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 352,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L352",
            },
            "value": 245,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.LastAssignment",
            "kind": "EnumMemberDeclaration",
            "name": "LastAssignment",
            "signature": "LastAssignment = 77",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 450,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L450",
            },
            "value": 77,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.LastBinaryOperator",
            "kind": "EnumMemberDeclaration",
            "name": "LastBinaryOperator",
            "signature": "LastBinaryOperator = 77",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 472,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L472",
            },
            "value": 77,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.LastCompoundAssignment",
            "kind": "EnumMemberDeclaration",
            "name": "LastCompoundAssignment",
            "signature": "LastCompoundAssignment = 77",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 452,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L452",
            },
            "value": 77,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.LastFutureReservedWord",
            "kind": "EnumMemberDeclaration",
            "name": "LastFutureReservedWord",
            "signature": "LastFutureReservedWord = 124",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 458,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L458",
            },
            "value": 124,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.LastJSDocNode",
            "kind": "EnumMemberDeclaration",
            "name": "LastJSDocNode",
            "signature": "LastJSDocNode = 333",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 477,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L477",
            },
            "value": 333,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.LastJSDocTagNode",
            "kind": "EnumMemberDeclaration",
            "name": "LastJSDocTagNode",
            "signature": "LastJSDocTagNode = 333",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 479,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L479",
            },
            "value": 333,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.LastKeyword",
            "kind": "EnumMemberDeclaration",
            "name": "LastKeyword",
            "signature": "LastKeyword = 156",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 456,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L456",
            },
            "value": 156,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.LastLiteralToken",
            "kind": "EnumMemberDeclaration",
            "name": "LastLiteralToken",
            "signature": "LastLiteralToken = 14",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 468,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L468",
            },
            "value": 14,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.LastPunctuation",
            "kind": "EnumMemberDeclaration",
            "name": "LastPunctuation",
            "signature": "LastPunctuation = 77",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 462,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L462",
            },
            "value": 77,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.LastReservedWord",
            "kind": "EnumMemberDeclaration",
            "name": "LastReservedWord",
            "signature": "LastReservedWord = 115",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 454,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L454",
            },
            "value": 115,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.LastStatement",
            "kind": "EnumMemberDeclaration",
            "name": "LastStatement",
            "signature": "LastStatement = 248",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 474,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L474",
            },
            "value": 248,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.LastTemplateToken",
            "kind": "EnumMemberDeclaration",
            "name": "LastTemplateToken",
            "signature": "LastTemplateToken = 17",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 470,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L470",
            },
            "value": 17,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.LastToken",
            "kind": "EnumMemberDeclaration",
            "name": "LastToken",
            "signature": "LastToken = 156",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 464,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L464",
            },
            "value": 156,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.LastTriviaToken",
            "kind": "EnumMemberDeclaration",
            "name": "LastTriviaToken",
            "signature": "LastTriviaToken = 7",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 466,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L466",
            },
            "value": 7,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.LastTypeNode",
            "kind": "EnumMemberDeclaration",
            "name": "LastTypeNode",
            "signature": "LastTypeNode = 195",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 460,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L460",
            },
            "value": 195,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.LessThanEqualsToken",
            "kind": "EnumMemberDeclaration",
            "name": "LessThanEqualsToken",
            "signature": "LessThanEqualsToken = 32",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 138,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L138",
            },
            "value": 32,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.LessThanLessThanEqualsToken",
            "kind": "EnumMemberDeclaration",
            "name": "LessThanLessThanEqualsToken",
            "signature": "LessThanLessThanEqualsToken = 69",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 176,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L176",
            },
            "value": 69,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.LessThanLessThanToken",
            "kind": "EnumMemberDeclaration",
            "name": "LessThanLessThanToken",
            "signature": "LessThanLessThanToken = 47",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 153,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L153",
            },
            "value": 47,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.LessThanSlashToken",
            "kind": "EnumMemberDeclaration",
            "name": "LessThanSlashToken",
            "signature": "LessThanSlashToken = 30",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 136,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L136",
            },
            "value": 30,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.LessThanToken",
            "kind": "EnumMemberDeclaration",
            "name": "LessThanToken",
            "signature": "LessThanToken = 29",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 135,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L135",
            },
            "value": 29,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.LetKeyword",
            "kind": "EnumMemberDeclaration",
            "name": "LetKeyword",
            "signature": "LetKeyword = 118",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 225,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L225",
            },
            "value": 118,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.LiteralType",
            "kind": "EnumMemberDeclaration",
            "name": "LiteralType",
            "signature": "LiteralType = 191",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 298,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L298",
            },
            "value": 191,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.MappedType",
            "kind": "EnumMemberDeclaration",
            "name": "MappedType",
            "signature": "MappedType = 190",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 297,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L297",
            },
            "value": 190,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.MergeDeclarationMarker",
            "kind": "EnumMemberDeclaration",
            "name": "MergeDeclarationMarker",
            "signature": "MergeDeclarationMarker = 338",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 445,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L445",
            },
            "value": 338,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.MetaProperty",
            "kind": "EnumMemberDeclaration",
            "name": "MetaProperty",
            "signature": "MetaProperty = 226",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 333,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L333",
            },
            "value": 226,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.MethodDeclaration",
            "kind": "EnumMemberDeclaration",
            "name": "MethodDeclaration",
            "signature": "MethodDeclaration = 165",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 272,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L272",
            },
            "value": 165,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.MethodSignature",
            "kind": "EnumMemberDeclaration",
            "name": "MethodSignature",
            "signature": "MethodSignature = 164",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 271,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L271",
            },
            "value": 164,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.MinusEqualsToken",
            "kind": "EnumMemberDeclaration",
            "name": "MinusEqualsToken",
            "signature": "MinusEqualsToken = 64",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 171,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L171",
            },
            "value": 64,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.MinusMinusToken",
            "kind": "EnumMemberDeclaration",
            "name": "MinusMinusToken",
            "signature": "MinusMinusToken = 46",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 152,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L152",
            },
            "value": 46,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.MinusToken",
            "kind": "EnumMemberDeclaration",
            "name": "MinusToken",
            "signature": "MinusToken = 40",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 146,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L146",
            },
            "value": 40,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.MissingDeclaration",
            "kind": "EnumMemberDeclaration",
            "name": "MissingDeclaration",
            "signature": "MissingDeclaration = 271",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 378,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L378",
            },
            "value": 271,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.ModuleBlock",
            "kind": "EnumMemberDeclaration",
            "name": "ModuleBlock",
            "signature": "ModuleBlock = 257",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 364,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L364",
            },
            "value": 257,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.ModuleDeclaration",
            "kind": "EnumMemberDeclaration",
            "name": "ModuleDeclaration",
            "signature": "ModuleDeclaration = 256",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 363,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L363",
            },
            "value": 256,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.ModuleKeyword",
            "kind": "EnumMemberDeclaration",
            "name": "ModuleKeyword",
            "signature": "ModuleKeyword = 139",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 246,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L246",
            },
            "value": 139,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.MultiLineCommentTrivia",
            "kind": "EnumMemberDeclaration",
            "name": "MultiLineCommentTrivia",
            "signature": "MultiLineCommentTrivia = 3",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 109,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L109",
            },
            "value": 3,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.NamedExports",
            "kind": "EnumMemberDeclaration",
            "name": "NamedExports",
            "signature": "NamedExports = 268",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 375,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L375",
            },
            "value": 268,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.NamedImports",
            "kind": "EnumMemberDeclaration",
            "name": "NamedImports",
            "signature": "NamedImports = 264",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 371,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L371",
            },
            "value": 264,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.NamedTupleMember",
            "kind": "EnumMemberDeclaration",
            "name": "NamedTupleMember",
            "signature": "NamedTupleMember = 192",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 299,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L299",
            },
            "value": 192,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.NamespaceExport",
            "kind": "EnumMemberDeclaration",
            "name": "NamespaceExport",
            "signature": "NamespaceExport = 269",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 376,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L376",
            },
            "value": 269,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.NamespaceExportDeclaration",
            "kind": "EnumMemberDeclaration",
            "name": "NamespaceExportDeclaration",
            "signature": "NamespaceExportDeclaration = 259",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 366,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L366",
            },
            "value": 259,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.NamespaceImport",
            "kind": "EnumMemberDeclaration",
            "name": "NamespaceImport",
            "signature": "NamespaceImport = 263",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 370,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L370",
            },
            "value": 263,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.NamespaceKeyword",
            "kind": "EnumMemberDeclaration",
            "name": "NamespaceKeyword",
            "signature": "NamespaceKeyword = 140",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 247,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L247",
            },
            "value": 140,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.NeverKeyword",
            "kind": "EnumMemberDeclaration",
            "name": "NeverKeyword",
            "signature": "NeverKeyword = 141",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 248,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L248",
            },
            "value": 141,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.NewExpression",
            "kind": "EnumMemberDeclaration",
            "name": "NewExpression",
            "signature": "NewExpression = 204",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 311,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L311",
            },
            "value": 204,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.NewKeyword",
            "kind": "EnumMemberDeclaration",
            "name": "NewKeyword",
            "signature": "NewKeyword = 102",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 209,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L209",
            },
            "value": 102,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.NewLineTrivia",
            "kind": "EnumMemberDeclaration",
            "name": "NewLineTrivia",
            "signature": "NewLineTrivia = 4",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 110,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L110",
            },
            "value": 4,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.NonNullExpression",
            "kind": "EnumMemberDeclaration",
            "name": "NonNullExpression",
            "signature": "NonNullExpression = 225",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 332,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L332",
            },
            "value": 225,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.NoSubstitutionTemplateLiteral",
            "kind": "EnumMemberDeclaration",
            "name": "NoSubstitutionTemplateLiteral",
            "signature": "NoSubstitutionTemplateLiteral = 14",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 120,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L120",
            },
            "value": 14,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.NotEmittedStatement",
            "kind": "EnumMemberDeclaration",
            "name": "NotEmittedStatement",
            "signature": "NotEmittedStatement = 335",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 442,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L442",
            },
            "value": 335,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.NullKeyword",
            "kind": "EnumMemberDeclaration",
            "name": "NullKeyword",
            "signature": "NullKeyword = 103",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 210,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L210",
            },
            "value": 103,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.NumberKeyword",
            "kind": "EnumMemberDeclaration",
            "name": "NumberKeyword",
            "signature": "NumberKeyword = 144",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 251,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L251",
            },
            "value": 144,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.NumericLiteral",
            "kind": "EnumMemberDeclaration",
            "name": "NumericLiteral",
            "signature": "NumericLiteral = 8",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 114,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L114",
            },
            "value": 8,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.ObjectBindingPattern",
            "kind": "EnumMemberDeclaration",
            "name": "ObjectBindingPattern",
            "signature": "ObjectBindingPattern = 196",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 303,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L303",
            },
            "value": 196,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.ObjectKeyword",
            "kind": "EnumMemberDeclaration",
            "name": "ObjectKeyword",
            "signature": "ObjectKeyword = 145",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 252,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L252",
            },
            "value": 145,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.ObjectLiteralExpression",
            "kind": "EnumMemberDeclaration",
            "name": "ObjectLiteralExpression",
            "signature": "ObjectLiteralExpression = 200",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 307,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L307",
            },
            "value": 200,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.OfKeyword",
            "kind": "EnumMemberDeclaration",
            "name": "OfKeyword",
            "signature": "OfKeyword = 156",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 263,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L263",
            },
            "value": 156,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.OmittedExpression",
            "kind": "EnumMemberDeclaration",
            "name": "OmittedExpression",
            "signature": "OmittedExpression = 222",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 329,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L329",
            },
            "value": 222,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.OpenBraceToken",
            "kind": "EnumMemberDeclaration",
            "name": "OpenBraceToken",
            "signature": "OpenBraceToken = 18",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 124,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L124",
            },
            "value": 18,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.OpenBracketToken",
            "kind": "EnumMemberDeclaration",
            "name": "OpenBracketToken",
            "signature": "OpenBracketToken = 22",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 128,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L128",
            },
            "value": 22,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.OpenParenToken",
            "kind": "EnumMemberDeclaration",
            "name": "OpenParenToken",
            "signature": "OpenParenToken = 20",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 126,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L126",
            },
            "value": 20,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.OptionalType",
            "kind": "EnumMemberDeclaration",
            "name": "OptionalType",
            "signature": "OptionalType = 180",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 287,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L287",
            },
            "value": 180,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.PackageKeyword",
            "kind": "EnumMemberDeclaration",
            "name": "PackageKeyword",
            "signature": "PackageKeyword = 119",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 226,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L226",
            },
            "value": 119,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.Parameter",
            "kind": "EnumMemberDeclaration",
            "name": "Parameter",
            "signature": "Parameter = 160",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 267,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L267",
            },
            "value": 160,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.ParenthesizedExpression",
            "kind": "EnumMemberDeclaration",
            "name": "ParenthesizedExpression",
            "signature": "ParenthesizedExpression = 207",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 314,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L314",
            },
            "value": 207,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.ParenthesizedType",
            "kind": "EnumMemberDeclaration",
            "name": "ParenthesizedType",
            "signature": "ParenthesizedType = 186",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 293,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L293",
            },
            "value": 186,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.PartiallyEmittedExpression",
            "kind": "EnumMemberDeclaration",
            "name": "PartiallyEmittedExpression",
            "signature": "PartiallyEmittedExpression = 336",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 443,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L443",
            },
            "value": 336,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.PercentEqualsToken",
            "kind": "EnumMemberDeclaration",
            "name": "PercentEqualsToken",
            "signature": "PercentEqualsToken = 68",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 175,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L175",
            },
            "value": 68,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.PercentToken",
            "kind": "EnumMemberDeclaration",
            "name": "PercentToken",
            "signature": "PercentToken = 44",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 150,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L150",
            },
            "value": 44,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.PlusEqualsToken",
            "kind": "EnumMemberDeclaration",
            "name": "PlusEqualsToken",
            "signature": "PlusEqualsToken = 63",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 170,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L170",
            },
            "value": 63,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.PlusPlusToken",
            "kind": "EnumMemberDeclaration",
            "name": "PlusPlusToken",
            "signature": "PlusPlusToken = 45",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 151,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L151",
            },
            "value": 45,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.PlusToken",
            "kind": "EnumMemberDeclaration",
            "name": "PlusToken",
            "signature": "PlusToken = 39",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 145,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L145",
            },
            "value": 39,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.PostfixUnaryExpression",
            "kind": "EnumMemberDeclaration",
            "name": "PostfixUnaryExpression",
            "signature": "PostfixUnaryExpression = 215",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 322,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L322",
            },
            "value": 215,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.PrefixUnaryExpression",
            "kind": "EnumMemberDeclaration",
            "name": "PrefixUnaryExpression",
            "signature": "PrefixUnaryExpression = 214",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 321,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L321",
            },
            "value": 214,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.PrivateIdentifier",
            "kind": "EnumMemberDeclaration",
            "name": "PrivateIdentifier",
            "signature": "PrivateIdentifier = 79",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 186,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L186",
            },
            "value": 79,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.PrivateKeyword",
            "kind": "EnumMemberDeclaration",
            "name": "PrivateKeyword",
            "signature": "PrivateKeyword = 120",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 227,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L227",
            },
            "value": 120,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.PropertyAccessExpression",
            "kind": "EnumMemberDeclaration",
            "name": "PropertyAccessExpression",
            "signature": "PropertyAccessExpression = 201",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 308,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L308",
            },
            "value": 201,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.PropertyAssignment",
            "kind": "EnumMemberDeclaration",
            "name": "PropertyAssignment",
            "signature": "PropertyAssignment = 288",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 395,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L395",
            },
            "value": 288,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.PropertyDeclaration",
            "kind": "EnumMemberDeclaration",
            "name": "PropertyDeclaration",
            "signature": "PropertyDeclaration = 163",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 270,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L270",
            },
            "value": 163,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.PropertySignature",
            "kind": "EnumMemberDeclaration",
            "name": "PropertySignature",
            "signature": "PropertySignature = 162",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 269,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L269",
            },
            "value": 162,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.ProtectedKeyword",
            "kind": "EnumMemberDeclaration",
            "name": "ProtectedKeyword",
            "signature": "ProtectedKeyword = 121",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 228,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L228",
            },
            "value": 121,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.PublicKeyword",
            "kind": "EnumMemberDeclaration",
            "name": "PublicKeyword",
            "signature": "PublicKeyword = 122",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 229,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L229",
            },
            "value": 122,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.QualifiedName",
            "kind": "EnumMemberDeclaration",
            "name": "QualifiedName",
            "signature": "QualifiedName = 157",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 264,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L264",
            },
            "value": 157,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.QuestionDotToken",
            "kind": "EnumMemberDeclaration",
            "name": "QuestionDotToken",
            "signature": "QuestionDotToken = 28",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 134,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L134",
            },
            "value": 28,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.QuestionQuestionEqualsToken",
            "kind": "EnumMemberDeclaration",
            "name": "QuestionQuestionEqualsToken",
            "signature": "QuestionQuestionEqualsToken = 76",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 183,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L183",
            },
            "value": 76,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.QuestionQuestionToken",
            "kind": "EnumMemberDeclaration",
            "name": "QuestionQuestionToken",
            "signature": "QuestionQuestionToken = 60",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 166,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L166",
            },
            "value": 60,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.QuestionToken",
            "kind": "EnumMemberDeclaration",
            "name": "QuestionToken",
            "signature": "QuestionToken = 57",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 163,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L163",
            },
            "value": 57,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.ReadonlyKeyword",
            "kind": "EnumMemberDeclaration",
            "name": "ReadonlyKeyword",
            "signature": "ReadonlyKeyword = 142",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 249,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L249",
            },
            "value": 142,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.RegularExpressionLiteral",
            "kind": "EnumMemberDeclaration",
            "name": "RegularExpressionLiteral",
            "signature": "RegularExpressionLiteral = 13",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 119,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L119",
            },
            "value": 13,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.RequireKeyword",
            "kind": "EnumMemberDeclaration",
            "name": "RequireKeyword",
            "signature": "RequireKeyword = 143",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 250,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L250",
            },
            "value": 143,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.RestType",
            "kind": "EnumMemberDeclaration",
            "name": "RestType",
            "signature": "RestType = 181",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 288,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L288",
            },
            "value": 181,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.ReturnKeyword",
            "kind": "EnumMemberDeclaration",
            "name": "ReturnKeyword",
            "signature": "ReturnKeyword = 104",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 211,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L211",
            },
            "value": 104,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.ReturnStatement",
            "kind": "EnumMemberDeclaration",
            "name": "ReturnStatement",
            "signature": "ReturnStatement = 242",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 349,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L349",
            },
            "value": 242,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.SemicolonClassElement",
            "kind": "EnumMemberDeclaration",
            "name": "SemicolonClassElement",
            "signature": "SemicolonClassElement = 229",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 336,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L336",
            },
            "value": 229,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.SemicolonToken",
            "kind": "EnumMemberDeclaration",
            "name": "SemicolonToken",
            "signature": "SemicolonToken = 26",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 132,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L132",
            },
            "value": 26,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.SetAccessor",
            "kind": "EnumMemberDeclaration",
            "name": "SetAccessor",
            "signature": "SetAccessor = 168",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 275,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L275",
            },
            "value": 168,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.SetKeyword",
            "kind": "EnumMemberDeclaration",
            "name": "SetKeyword",
            "signature": "SetKeyword = 146",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 253,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L253",
            },
            "value": 146,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.ShebangTrivia",
            "kind": "EnumMemberDeclaration",
            "name": "ShebangTrivia",
            "signature": "ShebangTrivia = 6",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 112,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L112",
            },
            "value": 6,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.ShorthandPropertyAssignment",
            "kind": "EnumMemberDeclaration",
            "name": "ShorthandPropertyAssignment",
            "signature": "ShorthandPropertyAssignment = 289",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 396,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L396",
            },
            "value": 289,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.SingleLineCommentTrivia",
            "kind": "EnumMemberDeclaration",
            "name": "SingleLineCommentTrivia",
            "signature": "SingleLineCommentTrivia = 2",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 108,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L108",
            },
            "value": 2,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.SlashEqualsToken",
            "kind": "EnumMemberDeclaration",
            "name": "SlashEqualsToken",
            "signature": "SlashEqualsToken = 67",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 174,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L174",
            },
            "value": 67,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.SlashToken",
            "kind": "EnumMemberDeclaration",
            "name": "SlashToken",
            "signature": "SlashToken = 43",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 149,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L149",
            },
            "value": 43,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.SourceFile",
            "kind": "EnumMemberDeclaration",
            "name": "SourceFile",
            "signature": "SourceFile = 297",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 404,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L404",
            },
            "value": 297,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.SpreadAssignment",
            "kind": "EnumMemberDeclaration",
            "name": "SpreadAssignment",
            "signature": "SpreadAssignment = 290",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 397,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L397",
            },
            "value": 290,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.SpreadElement",
            "kind": "EnumMemberDeclaration",
            "name": "SpreadElement",
            "signature": "SpreadElement = 220",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 327,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L327",
            },
            "value": 220,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.StaticKeyword",
            "kind": "EnumMemberDeclaration",
            "name": "StaticKeyword",
            "signature": "StaticKeyword = 123",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 230,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L230",
            },
            "value": 123,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.StringKeyword",
            "kind": "EnumMemberDeclaration",
            "name": "StringKeyword",
            "signature": "StringKeyword = 147",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 254,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L254",
            },
            "value": 147,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.StringLiteral",
            "kind": "EnumMemberDeclaration",
            "name": "StringLiteral",
            "signature": "StringLiteral = 10",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 116,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L116",
            },
            "value": 10,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.SuperKeyword",
            "kind": "EnumMemberDeclaration",
            "name": "SuperKeyword",
            "signature": "SuperKeyword = 105",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 212,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L212",
            },
            "value": 105,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.SwitchKeyword",
            "kind": "EnumMemberDeclaration",
            "name": "SwitchKeyword",
            "signature": "SwitchKeyword = 106",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 213,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L213",
            },
            "value": 106,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.SwitchStatement",
            "kind": "EnumMemberDeclaration",
            "name": "SwitchStatement",
            "signature": "SwitchStatement = 244",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 351,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L351",
            },
            "value": 244,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.SymbolKeyword",
            "kind": "EnumMemberDeclaration",
            "name": "SymbolKeyword",
            "signature": "SymbolKeyword = 148",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 255,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L255",
            },
            "value": 148,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.SyntaxList",
            "kind": "EnumMemberDeclaration",
            "name": "SyntaxList",
            "signature": "SyntaxList = 334",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 441,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L441",
            },
            "value": 334,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.SyntheticExpression",
            "kind": "EnumMemberDeclaration",
            "name": "SyntheticExpression",
            "signature": "SyntheticExpression = 227",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 334,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L334",
            },
            "value": 227,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.SyntheticReferenceExpression",
            "kind": "EnumMemberDeclaration",
            "name": "SyntheticReferenceExpression",
            "signature": "SyntheticReferenceExpression = 340",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 447,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L447",
            },
            "value": 340,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.TaggedTemplateExpression",
            "kind": "EnumMemberDeclaration",
            "name": "TaggedTemplateExpression",
            "signature": "TaggedTemplateExpression = 205",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 312,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L312",
            },
            "value": 205,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.TemplateExpression",
            "kind": "EnumMemberDeclaration",
            "name": "TemplateExpression",
            "signature": "TemplateExpression = 218",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 325,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L325",
            },
            "value": 218,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.TemplateHead",
            "kind": "EnumMemberDeclaration",
            "name": "TemplateHead",
            "signature": "TemplateHead = 15",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 121,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L121",
            },
            "value": 15,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.TemplateLiteralType",
            "kind": "EnumMemberDeclaration",
            "name": "TemplateLiteralType",
            "signature": "TemplateLiteralType = 193",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 300,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L300",
            },
            "value": 193,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.TemplateLiteralTypeSpan",
            "kind": "EnumMemberDeclaration",
            "name": "TemplateLiteralTypeSpan",
            "signature": "TemplateLiteralTypeSpan = 194",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 301,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L301",
            },
            "value": 194,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.TemplateMiddle",
            "kind": "EnumMemberDeclaration",
            "name": "TemplateMiddle",
            "signature": "TemplateMiddle = 16",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 122,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L122",
            },
            "value": 16,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.TemplateSpan",
            "kind": "EnumMemberDeclaration",
            "name": "TemplateSpan",
            "signature": "TemplateSpan = 228",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 335,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L335",
            },
            "value": 228,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.TemplateTail",
            "kind": "EnumMemberDeclaration",
            "name": "TemplateTail",
            "signature": "TemplateTail = 17",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 123,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L123",
            },
            "value": 17,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.ThisKeyword",
            "kind": "EnumMemberDeclaration",
            "name": "ThisKeyword",
            "signature": "ThisKeyword = 107",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 214,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L214",
            },
            "value": 107,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.ThisType",
            "kind": "EnumMemberDeclaration",
            "name": "ThisType",
            "signature": "ThisType = 187",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 294,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L294",
            },
            "value": 187,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.ThrowKeyword",
            "kind": "EnumMemberDeclaration",
            "name": "ThrowKeyword",
            "signature": "ThrowKeyword = 108",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 215,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L215",
            },
            "value": 108,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.ThrowStatement",
            "kind": "EnumMemberDeclaration",
            "name": "ThrowStatement",
            "signature": "ThrowStatement = 246",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 353,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L353",
            },
            "value": 246,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.TildeToken",
            "kind": "EnumMemberDeclaration",
            "name": "TildeToken",
            "signature": "TildeToken = 54",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 160,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L160",
            },
            "value": 54,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.TrueKeyword",
            "kind": "EnumMemberDeclaration",
            "name": "TrueKeyword",
            "signature": "TrueKeyword = 109",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 216,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L216",
            },
            "value": 109,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.TryKeyword",
            "kind": "EnumMemberDeclaration",
            "name": "TryKeyword",
            "signature": "TryKeyword = 110",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 217,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L217",
            },
            "value": 110,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.TryStatement",
            "kind": "EnumMemberDeclaration",
            "name": "TryStatement",
            "signature": "TryStatement = 247",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 354,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L354",
            },
            "value": 247,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.TupleType",
            "kind": "EnumMemberDeclaration",
            "name": "TupleType",
            "signature": "TupleType = 179",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 286,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L286",
            },
            "value": 179,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.TypeAliasDeclaration",
            "kind": "EnumMemberDeclaration",
            "name": "TypeAliasDeclaration",
            "signature": "TypeAliasDeclaration = 254",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 361,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L361",
            },
            "value": 254,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.TypeAssertionExpression",
            "kind": "EnumMemberDeclaration",
            "name": "TypeAssertionExpression",
            "signature": "TypeAssertionExpression = 206",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 313,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L313",
            },
            "value": 206,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.TypeKeyword",
            "kind": "EnumMemberDeclaration",
            "name": "TypeKeyword",
            "signature": "TypeKeyword = 149",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 256,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L256",
            },
            "value": 149,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.TypeLiteral",
            "kind": "EnumMemberDeclaration",
            "name": "TypeLiteral",
            "signature": "TypeLiteral = 177",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 284,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L284",
            },
            "value": 177,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.TypeOfExpression",
            "kind": "EnumMemberDeclaration",
            "name": "TypeOfExpression",
            "signature": "TypeOfExpression = 211",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 318,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L318",
            },
            "value": 211,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.TypeOfKeyword",
            "kind": "EnumMemberDeclaration",
            "name": "TypeOfKeyword",
            "signature": "TypeOfKeyword = 111",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 218,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L218",
            },
            "value": 111,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.TypeOperator",
            "kind": "EnumMemberDeclaration",
            "name": "TypeOperator",
            "signature": "TypeOperator = 188",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 295,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L295",
            },
            "value": 188,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.TypeParameter",
            "kind": "EnumMemberDeclaration",
            "name": "TypeParameter",
            "signature": "TypeParameter = 159",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 266,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L266",
            },
            "value": 159,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.TypePredicate",
            "kind": "EnumMemberDeclaration",
            "name": "TypePredicate",
            "signature": "TypePredicate = 172",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 279,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L279",
            },
            "value": 172,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.TypeQuery",
            "kind": "EnumMemberDeclaration",
            "name": "TypeQuery",
            "signature": "TypeQuery = 176",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 283,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L283",
            },
            "value": 176,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.TypeReference",
            "kind": "EnumMemberDeclaration",
            "name": "TypeReference",
            "signature": "TypeReference = 173",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 280,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L280",
            },
            "value": 173,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.UndefinedKeyword",
            "kind": "EnumMemberDeclaration",
            "name": "UndefinedKeyword",
            "signature": "UndefinedKeyword = 150",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 257,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L257",
            },
            "value": 150,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.UnionType",
            "kind": "EnumMemberDeclaration",
            "name": "UnionType",
            "signature": "UnionType = 182",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 289,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L289",
            },
            "value": 182,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.UniqueKeyword",
            "kind": "EnumMemberDeclaration",
            "name": "UniqueKeyword",
            "signature": "UniqueKeyword = 151",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 258,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L258",
            },
            "value": 151,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.Unknown",
            "kind": "EnumMemberDeclaration",
            "name": "Unknown",
            "signature": "Unknown = 0",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 106,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L106",
            },
            "value": 0,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.UnknownKeyword",
            "kind": "EnumMemberDeclaration",
            "name": "UnknownKeyword",
            "signature": "UnknownKeyword = 152",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 259,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L259",
            },
            "value": 152,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.UnparsedInternalText",
            "kind": "EnumMemberDeclaration",
            "name": "UnparsedInternalText",
            "signature": "UnparsedInternalText = 295",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 402,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L402",
            },
            "value": 295,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.UnparsedPrepend",
            "kind": "EnumMemberDeclaration",
            "name": "UnparsedPrepend",
            "signature": "UnparsedPrepend = 293",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 400,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L400",
            },
            "value": 293,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.UnparsedPrologue",
            "kind": "EnumMemberDeclaration",
            "name": "UnparsedPrologue",
            "signature": "UnparsedPrologue = 292",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 399,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L399",
            },
            "value": 292,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.UnparsedSource",
            "kind": "EnumMemberDeclaration",
            "name": "UnparsedSource",
            "signature": "UnparsedSource = 299",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 406,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L406",
            },
            "value": 299,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.UnparsedSyntheticReference",
            "kind": "EnumMemberDeclaration",
            "name": "UnparsedSyntheticReference",
            "signature": "UnparsedSyntheticReference = 296",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 403,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L403",
            },
            "value": 296,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.UnparsedText",
            "kind": "EnumMemberDeclaration",
            "name": "UnparsedText",
            "signature": "UnparsedText = 294",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 401,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L401",
            },
            "value": 294,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.VariableDeclaration",
            "kind": "EnumMemberDeclaration",
            "name": "VariableDeclaration",
            "signature": "VariableDeclaration = 249",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 356,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L356",
            },
            "value": 249,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.VariableDeclarationList",
            "kind": "EnumMemberDeclaration",
            "name": "VariableDeclarationList",
            "signature": "VariableDeclarationList = 250",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 357,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L357",
            },
            "value": 250,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.VariableStatement",
            "kind": "EnumMemberDeclaration",
            "name": "VariableStatement",
            "signature": "VariableStatement = 232",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 339,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L339",
            },
            "value": 232,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.VarKeyword",
            "kind": "EnumMemberDeclaration",
            "name": "VarKeyword",
            "signature": "VarKeyword = 112",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 219,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L219",
            },
            "value": 112,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.VoidExpression",
            "kind": "EnumMemberDeclaration",
            "name": "VoidExpression",
            "signature": "VoidExpression = 212",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 319,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L319",
            },
            "value": 212,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.VoidKeyword",
            "kind": "EnumMemberDeclaration",
            "name": "VoidKeyword",
            "signature": "VoidKeyword = 113",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 220,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L220",
            },
            "value": 113,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.WhileKeyword",
            "kind": "EnumMemberDeclaration",
            "name": "WhileKeyword",
            "signature": "WhileKeyword = 114",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 221,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L221",
            },
            "value": 114,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.WhileStatement",
            "kind": "EnumMemberDeclaration",
            "name": "WhileStatement",
            "signature": "WhileStatement = 236",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 343,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L343",
            },
            "value": 236,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.WhitespaceTrivia",
            "kind": "EnumMemberDeclaration",
            "name": "WhitespaceTrivia",
            "signature": "WhitespaceTrivia = 5",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 111,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L111",
            },
            "value": 5,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.WithKeyword",
            "kind": "EnumMemberDeclaration",
            "name": "WithKeyword",
            "signature": "WithKeyword = 115",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 222,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L222",
            },
            "value": 115,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.WithStatement",
            "kind": "EnumMemberDeclaration",
            "name": "WithStatement",
            "signature": "WithStatement = 243",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 350,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L350",
            },
            "value": 243,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.YieldExpression",
            "kind": "EnumMemberDeclaration",
            "name": "YieldExpression",
            "signature": "YieldExpression = 219",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 326,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L326",
            },
            "value": 219,
          },
          Object {
            "docs": Array [],
            "id": "SyntaxKind.YieldKeyword",
            "kind": "EnumMemberDeclaration",
            "name": "YieldKeyword",
            "signature": "YieldKeyword = 124",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 231,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L231",
            },
            "value": 124,
          },
        ],
        "name": "SyntaxKind",
        "signature": "enum SyntaxKind {
    Unknown = 0,
    EndOfFileToken = 1,
    SingleLineCommentTrivia = 2,
    MultiLineCommentTrivia = 3,
    NewLineTrivia = 4,
    WhitespaceTrivia = 5,
    ShebangTrivia = 6,
    ConflictMarkerTrivia = 7,
    NumericLiteral = 8,
    BigIntLiteral = 9,
    StringLiteral = 10,
    JsxText = 11,
    JsxTextAllWhiteSpaces = 12,
    RegularExpressionLiteral = 13,
    NoSubstitutionTemplateLiteral = 14,
    TemplateHead = 15,
    TemplateMiddle = 16,
    TemplateTail = 17,
    OpenBraceToken = 18,
    CloseBraceToken = 19,
    OpenParenToken = 20,
    CloseParenToken = 21,
    OpenBracketToken = 22,
    CloseBracketToken = 23,
    DotToken = 24,
    DotDotDotToken = 25,
    SemicolonToken = 26,
    CommaToken = 27,
    QuestionDotToken = 28,
    LessThanToken = 29,
    LessThanSlashToken = 30,
    GreaterThanToken = 31,
    LessThanEqualsToken = 32,
    GreaterThanEqualsToken = 33,
    EqualsEqualsToken = 34,
    ExclamationEqualsToken = 35,
    EqualsEqualsEqualsToken = 36,
    ExclamationEqualsEqualsToken = 37,
    EqualsGreaterThanToken = 38,
    PlusToken = 39,
    MinusToken = 40,
    AsteriskToken = 41,
    AsteriskAsteriskToken = 42,
    SlashToken = 43,
    PercentToken = 44,
    PlusPlusToken = 45,
    MinusMinusToken = 46,
    LessThanLessThanToken = 47,
    GreaterThanGreaterThanToken = 48,
    GreaterThanGreaterThanGreaterThanToken = 49,
    AmpersandToken = 50,
    BarToken = 51,
    CaretToken = 52,
    ExclamationToken = 53,
    TildeToken = 54,
    AmpersandAmpersandToken = 55,
    BarBarToken = 56,
    QuestionToken = 57,
    ColonToken = 58,
    AtToken = 59,
    QuestionQuestionToken = 60,
    BacktickToken = 61,
    EqualsToken = 62,
    PlusEqualsToken = 63,
    MinusEqualsToken = 64,
    AsteriskEqualsToken = 65,
    AsteriskAsteriskEqualsToken = 66,
    SlashEqualsToken = 67,
    PercentEqualsToken = 68,
    LessThanLessThanEqualsToken = 69,
    GreaterThanGreaterThanEqualsToken = 70,
    GreaterThanGreaterThanGreaterThanEqualsToken = 71,
    AmpersandEqualsToken = 72,
    BarEqualsToken = 73,
    BarBarEqualsToken = 74,
    AmpersandAmpersandEqualsToken = 75,
    QuestionQuestionEqualsToken = 76,
    CaretEqualsToken = 77,
    Identifier = 78,
    PrivateIdentifier = 79,
    BreakKeyword = 80,
    CaseKeyword = 81,
    CatchKeyword = 82,
    ClassKeyword = 83,
    ConstKeyword = 84,
    ContinueKeyword = 85,
    DebuggerKeyword = 86,
    DefaultKeyword = 87,
    DeleteKeyword = 88,
    DoKeyword = 89,
    ElseKeyword = 90,
    EnumKeyword = 91,
    ExportKeyword = 92,
    ExtendsKeyword = 93,
    FalseKeyword = 94,
    FinallyKeyword = 95,
    ForKeyword = 96,
    FunctionKeyword = 97,
    IfKeyword = 98,
    ImportKeyword = 99,
    InKeyword = 100,
    InstanceOfKeyword = 101,
    NewKeyword = 102,
    NullKeyword = 103,
    ReturnKeyword = 104,
    SuperKeyword = 105,
    SwitchKeyword = 106,
    ThisKeyword = 107,
    ThrowKeyword = 108,
    TrueKeyword = 109,
    TryKeyword = 110,
    TypeOfKeyword = 111,
    VarKeyword = 112,
    VoidKeyword = 113,
    WhileKeyword = 114,
    WithKeyword = 115,
    ImplementsKeyword = 116,
    InterfaceKeyword = 117,
    LetKeyword = 118,
    PackageKeyword = 119,
    PrivateKeyword = 120,
    ProtectedKeyword = 121,
    PublicKeyword = 122,
    StaticKeyword = 123,
    YieldKeyword = 124,
    AbstractKeyword = 125,
    AsKeyword = 126,
    AssertsKeyword = 127,
    AnyKeyword = 128,
    AsyncKeyword = 129,
    AwaitKeyword = 130,
    BooleanKeyword = 131,
    ConstructorKeyword = 132,
    DeclareKeyword = 133,
    GetKeyword = 134,
    InferKeyword = 135,
    IntrinsicKeyword = 136,
    IsKeyword = 137,
    KeyOfKeyword = 138,
    ModuleKeyword = 139,
    NamespaceKeyword = 140,
    NeverKeyword = 141,
    ReadonlyKeyword = 142,
    RequireKeyword = 143,
    NumberKeyword = 144,
    ObjectKeyword = 145,
    SetKeyword = 146,
    StringKeyword = 147,
    SymbolKeyword = 148,
    TypeKeyword = 149,
    UndefinedKeyword = 150,
    UniqueKeyword = 151,
    UnknownKeyword = 152,
    FromKeyword = 153,
    GlobalKeyword = 154,
    BigIntKeyword = 155,
    OfKeyword = 156,
    QualifiedName = 157,
    ComputedPropertyName = 158,
    TypeParameter = 159,
    Parameter = 160,
    Decorator = 161,
    PropertySignature = 162,
    PropertyDeclaration = 163,
    MethodSignature = 164,
    MethodDeclaration = 165,
    Constructor = 166,
    GetAccessor = 167,
    SetAccessor = 168,
    CallSignature = 169,
    ConstructSignature = 170,
    IndexSignature = 171,
    TypePredicate = 172,
    TypeReference = 173,
    FunctionType = 174,
    ConstructorType = 175,
    TypeQuery = 176,
    TypeLiteral = 177,
    ArrayType = 178,
    TupleType = 179,
    OptionalType = 180,
    RestType = 181,
    UnionType = 182,
    IntersectionType = 183,
    ConditionalType = 184,
    InferType = 185,
    ParenthesizedType = 186,
    ThisType = 187,
    TypeOperator = 188,
    IndexedAccessType = 189,
    MappedType = 190,
    LiteralType = 191,
    NamedTupleMember = 192,
    TemplateLiteralType = 193,
    TemplateLiteralTypeSpan = 194,
    ImportType = 195,
    ObjectBindingPattern = 196,
    ArrayBindingPattern = 197,
    BindingElement = 198,
    ArrayLiteralExpression = 199,
    ObjectLiteralExpression = 200,
    PropertyAccessExpression = 201,
    ElementAccessExpression = 202,
    CallExpression = 203,
    NewExpression = 204,
    TaggedTemplateExpression = 205,
    TypeAssertionExpression = 206,
    ParenthesizedExpression = 207,
    FunctionExpression = 208,
    ArrowFunction = 209,
    DeleteExpression = 210,
    TypeOfExpression = 211,
    VoidExpression = 212,
    AwaitExpression = 213,
    PrefixUnaryExpression = 214,
    PostfixUnaryExpression = 215,
    BinaryExpression = 216,
    ConditionalExpression = 217,
    TemplateExpression = 218,
    YieldExpression = 219,
    SpreadElement = 220,
    ClassExpression = 221,
    OmittedExpression = 222,
    ExpressionWithTypeArguments = 223,
    AsExpression = 224,
    NonNullExpression = 225,
    MetaProperty = 226,
    SyntheticExpression = 227,
    TemplateSpan = 228,
    SemicolonClassElement = 229,
    Block = 230,
    EmptyStatement = 231,
    VariableStatement = 232,
    ExpressionStatement = 233,
    IfStatement = 234,
    DoStatement = 235,
    WhileStatement = 236,
    ForStatement = 237,
    ForInStatement = 238,
    ForOfStatement = 239,
    ContinueStatement = 240,
    BreakStatement = 241,
    ReturnStatement = 242,
    WithStatement = 243,
    SwitchStatement = 244,
    LabeledStatement = 245,
    ThrowStatement = 246,
    TryStatement = 247,
    DebuggerStatement = 248,
    VariableDeclaration = 249,
    VariableDeclarationList = 250,
    FunctionDeclaration = 251,
    ClassDeclaration = 252,
    InterfaceDeclaration = 253,
    TypeAliasDeclaration = 254,
    EnumDeclaration = 255,
    ModuleDeclaration = 256,
    ModuleBlock = 257,
    CaseBlock = 258,
    NamespaceExportDeclaration = 259,
    ImportEqualsDeclaration = 260,
    ImportDeclaration = 261,
    ImportClause = 262,
    NamespaceImport = 263,
    NamedImports = 264,
    ImportSpecifier = 265,
    ExportAssignment = 266,
    ExportDeclaration = 267,
    NamedExports = 268,
    NamespaceExport = 269,
    ExportSpecifier = 270,
    MissingDeclaration = 271,
    ExternalModuleReference = 272,
    JsxElement = 273,
    JsxSelfClosingElement = 274,
    JsxOpeningElement = 275,
    JsxClosingElement = 276,
    JsxFragment = 277,
    JsxOpeningFragment = 278,
    JsxClosingFragment = 279,
    JsxAttribute = 280,
    JsxAttributes = 281,
    JsxSpreadAttribute = 282,
    JsxExpression = 283,
    CaseClause = 284,
    DefaultClause = 285,
    HeritageClause = 286,
    CatchClause = 287,
    PropertyAssignment = 288,
    ShorthandPropertyAssignment = 289,
    SpreadAssignment = 290,
    EnumMember = 291,
    UnparsedPrologue = 292,
    UnparsedPrepend = 293,
    UnparsedText = 294,
    UnparsedInternalText = 295,
    UnparsedSyntheticReference = 296,
    SourceFile = 297,
    Bundle = 298,
    UnparsedSource = 299,
    InputFiles = 300,
    JSDocTypeExpression = 301,
    JSDocNameReference = 302,
    JSDocAllType = 303,
    JSDocUnknownType = 304,
    JSDocNullableType = 305,
    JSDocNonNullableType = 306,
    JSDocOptionalType = 307,
    JSDocFunctionType = 308,
    JSDocVariadicType = 309,
    JSDocNamepathType = 310,
    JSDocComment = 311,
    JSDocTypeLiteral = 312,
    JSDocSignature = 313,
    JSDocTag = 314,
    JSDocAugmentsTag = 315,
    JSDocImplementsTag = 316,
    JSDocAuthorTag = 317,
    JSDocDeprecatedTag = 318,
    JSDocClassTag = 319,
    JSDocPublicTag = 320,
    JSDocPrivateTag = 321,
    JSDocProtectedTag = 322,
    JSDocReadonlyTag = 323,
    JSDocCallbackTag = 324,
    JSDocEnumTag = 325,
    JSDocParameterTag = 326,
    JSDocReturnTag = 327,
    JSDocThisTag = 328,
    JSDocTypeTag = 329,
    JSDocTemplateTag = 330,
    JSDocTypedefTag = 331,
    JSDocSeeTag = 332,
    JSDocPropertyTag = 333,
    SyntaxList = 334,
    NotEmittedStatement = 335,
    PartiallyEmittedExpression = 336,
    CommaListExpression = 337,
    MergeDeclarationMarker = 338,
    EndOfDeclarationMarker = 339,
    SyntheticReferenceExpression = 340,
    Count = 341,
    FirstAssignment = 62,
    LastAssignment = 77,
    FirstCompoundAssignment = 63,
    LastCompoundAssignment = 77,
    FirstReservedWord = 80,
    LastReservedWord = 115,
    FirstKeyword = 80,
    LastKeyword = 156,
    FirstFutureReservedWord = 116,
    LastFutureReservedWord = 124,
    FirstTypeNode = 172,
    LastTypeNode = 195,
    FirstPunctuation = 18,
    LastPunctuation = 77,
    FirstToken = 0,
    LastToken = 156,
    FirstTriviaToken = 2,
    LastTriviaToken = 7,
    FirstLiteralToken = 8,
    LastLiteralToken = 14,
    FirstTemplateToken = 14,
    LastTemplateToken = 17,
    FirstBinaryOperator = 29,
    LastBinaryOperator = 77,
    FirstStatement = 232,
    LastStatement = 248,
    FirstNode = 157,
    FirstJSDocNode = 301,
    LastJSDocNode = 333,
    FirstJSDocTagNode = 314,
    LastJSDocTagNode = 333,
}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 105,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L105",
        },
      },
      Object {
        "docs": Array [],
        "id": "TokenClass",
        "isConst": false,
        "kind": "EnumDeclaration",
        "members": Array [
          Object {
            "docs": Array [],
            "id": "TokenClass.BigIntLiteral",
            "kind": "EnumMemberDeclaration",
            "name": "BigIntLiteral",
            "signature": "BigIntLiteral = 7",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 6138,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6138",
            },
            "value": 7,
          },
          Object {
            "docs": Array [],
            "id": "TokenClass.Comment",
            "kind": "EnumMemberDeclaration",
            "name": "Comment",
            "signature": "Comment = 3",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 6134,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6134",
            },
            "value": 3,
          },
          Object {
            "docs": Array [],
            "id": "TokenClass.Identifier",
            "kind": "EnumMemberDeclaration",
            "name": "Identifier",
            "signature": "Identifier = 5",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 6136,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6136",
            },
            "value": 5,
          },
          Object {
            "docs": Array [],
            "id": "TokenClass.Keyword",
            "kind": "EnumMemberDeclaration",
            "name": "Keyword",
            "signature": "Keyword = 1",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 6132,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6132",
            },
            "value": 1,
          },
          Object {
            "docs": Array [],
            "id": "TokenClass.NumberLiteral",
            "kind": "EnumMemberDeclaration",
            "name": "NumberLiteral",
            "signature": "NumberLiteral = 6",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 6137,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6137",
            },
            "value": 6,
          },
          Object {
            "docs": Array [],
            "id": "TokenClass.Operator",
            "kind": "EnumMemberDeclaration",
            "name": "Operator",
            "signature": "Operator = 2",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 6133,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6133",
            },
            "value": 2,
          },
          Object {
            "docs": Array [],
            "id": "TokenClass.Punctuation",
            "kind": "EnumMemberDeclaration",
            "name": "Punctuation",
            "signature": "Punctuation = 0",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 6131,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6131",
            },
            "value": 0,
          },
          Object {
            "docs": Array [],
            "id": "TokenClass.RegExpLiteral",
            "kind": "EnumMemberDeclaration",
            "name": "RegExpLiteral",
            "signature": "RegExpLiteral = 9",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 6140,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6140",
            },
            "value": 9,
          },
          Object {
            "docs": Array [],
            "id": "TokenClass.StringLiteral",
            "kind": "EnumMemberDeclaration",
            "name": "StringLiteral",
            "signature": "StringLiteral = 8",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 6139,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6139",
            },
            "value": 8,
          },
          Object {
            "docs": Array [],
            "id": "TokenClass.Whitespace",
            "kind": "EnumMemberDeclaration",
            "name": "Whitespace",
            "signature": "Whitespace = 4",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 6135,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6135",
            },
            "value": 4,
          },
        ],
        "name": "TokenClass",
        "signature": "enum TokenClass {
    Punctuation = 0,
    Keyword = 1,
    Operator = 2,
    Comment = 3,
    Whitespace = 4,
    Identifier = 5,
    NumberLiteral = 6,
    BigIntLiteral = 7,
    StringLiteral = 8,
    RegExpLiteral = 9,
}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 6130,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6130",
        },
      },
      Object {
        "docs": Array [],
        "id": "TokenFlags",
        "isConst": false,
        "kind": "EnumDeclaration",
        "members": Array [
          Object {
            "docs": Array [],
            "id": "TokenFlags.BinarySpecifier",
            "kind": "EnumMemberDeclaration",
            "name": "BinarySpecifier",
            "signature": "BinarySpecifier = 128",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 1151,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1151",
            },
            "value": 128,
          },
          Object {
            "docs": Array [],
            "id": "TokenFlags.HexSpecifier",
            "kind": "EnumMemberDeclaration",
            "name": "HexSpecifier",
            "signature": "HexSpecifier = 64",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 1150,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1150",
            },
            "value": 64,
          },
          Object {
            "docs": Array [],
            "id": "TokenFlags.None",
            "kind": "EnumMemberDeclaration",
            "name": "None",
            "signature": "None = 0",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 1147,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1147",
            },
            "value": 0,
          },
          Object {
            "docs": Array [],
            "id": "TokenFlags.Octal",
            "kind": "EnumMemberDeclaration",
            "name": "Octal",
            "signature": "Octal = 32",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 1149,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1149",
            },
            "value": 32,
          },
          Object {
            "docs": Array [],
            "id": "TokenFlags.OctalSpecifier",
            "kind": "EnumMemberDeclaration",
            "name": "OctalSpecifier",
            "signature": "OctalSpecifier = 256",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 1152,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1152",
            },
            "value": 256,
          },
          Object {
            "docs": Array [],
            "id": "TokenFlags.Scientific",
            "kind": "EnumMemberDeclaration",
            "name": "Scientific",
            "signature": "Scientific = 16",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 1148,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1148",
            },
            "value": 16,
          },
        ],
        "name": "TokenFlags",
        "signature": "enum TokenFlags {
    None = 0,
    Scientific = 16,
    Octal = 32,
    HexSpecifier = 64,
    BinarySpecifier = 128,
    OctalSpecifier = 256,
}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 1146,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1146",
        },
      },
      Object {
        "docs": Array [],
        "id": "TypeFlags",
        "isConst": false,
        "kind": "EnumDeclaration",
        "members": Array [
          Object {
            "docs": Array [],
            "id": "TypeFlags.Any",
            "kind": "EnumMemberDeclaration",
            "name": "Any",
            "signature": "Any = 1",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 2454,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2454",
            },
            "value": 1,
          },
          Object {
            "docs": Array [],
            "id": "TypeFlags.BigInt",
            "kind": "EnumMemberDeclaration",
            "name": "BigInt",
            "signature": "BigInt = 64",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 2460,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2460",
            },
            "value": 64,
          },
          Object {
            "docs": Array [],
            "id": "TypeFlags.BigIntLike",
            "kind": "EnumMemberDeclaration",
            "name": "BigIntLike",
            "signature": "BigIntLike = 2112",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 2489,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2489",
            },
            "value": 2112,
          },
          Object {
            "docs": Array [],
            "id": "TypeFlags.BigIntLiteral",
            "kind": "EnumMemberDeclaration",
            "name": "BigIntLiteral",
            "signature": "BigIntLiteral = 2048",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 2465,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2465",
            },
            "value": 2048,
          },
          Object {
            "docs": Array [],
            "id": "TypeFlags.Boolean",
            "kind": "EnumMemberDeclaration",
            "name": "Boolean",
            "signature": "Boolean = 16",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 2458,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2458",
            },
            "value": 16,
          },
          Object {
            "docs": Array [],
            "id": "TypeFlags.BooleanLike",
            "kind": "EnumMemberDeclaration",
            "name": "BooleanLike",
            "signature": "BooleanLike = 528",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 2490,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2490",
            },
            "value": 528,
          },
          Object {
            "docs": Array [],
            "id": "TypeFlags.BooleanLiteral",
            "kind": "EnumMemberDeclaration",
            "name": "BooleanLiteral",
            "signature": "BooleanLiteral = 512",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 2463,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2463",
            },
            "value": 512,
          },
          Object {
            "docs": Array [],
            "id": "TypeFlags.Conditional",
            "kind": "EnumMemberDeclaration",
            "name": "Conditional",
            "signature": "Conditional = 16777216",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 2478,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2478",
            },
            "value": 16777216,
          },
          Object {
            "docs": Array [],
            "id": "TypeFlags.Enum",
            "kind": "EnumMemberDeclaration",
            "name": "Enum",
            "signature": "Enum = 32",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 2459,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2459",
            },
            "value": 32,
          },
          Object {
            "docs": Array [],
            "id": "TypeFlags.EnumLike",
            "kind": "EnumMemberDeclaration",
            "name": "EnumLike",
            "signature": "EnumLike = 1056",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 2491,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2491",
            },
            "value": 1056,
          },
          Object {
            "docs": Array [],
            "id": "TypeFlags.EnumLiteral",
            "kind": "EnumMemberDeclaration",
            "name": "EnumLiteral",
            "signature": "EnumLiteral = 1024",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 2464,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2464",
            },
            "value": 1024,
          },
          Object {
            "docs": Array [],
            "id": "TypeFlags.ESSymbol",
            "kind": "EnumMemberDeclaration",
            "name": "ESSymbol",
            "signature": "ESSymbol = 4096",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 2466,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2466",
            },
            "value": 4096,
          },
          Object {
            "docs": Array [],
            "id": "TypeFlags.ESSymbolLike",
            "kind": "EnumMemberDeclaration",
            "name": "ESSymbolLike",
            "signature": "ESSymbolLike = 12288",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 2492,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2492",
            },
            "value": 12288,
          },
          Object {
            "docs": Array [],
            "id": "TypeFlags.Index",
            "kind": "EnumMemberDeclaration",
            "name": "Index",
            "signature": "Index = 4194304",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 2476,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2476",
            },
            "value": 4194304,
          },
          Object {
            "docs": Array [],
            "id": "TypeFlags.IndexedAccess",
            "kind": "EnumMemberDeclaration",
            "name": "IndexedAccess",
            "signature": "IndexedAccess = 8388608",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 2477,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2477",
            },
            "value": 8388608,
          },
          Object {
            "docs": Array [],
            "id": "TypeFlags.Instantiable",
            "kind": "EnumMemberDeclaration",
            "name": "Instantiable",
            "signature": "Instantiable = 465829888",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 2499,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2499",
            },
            "value": 465829888,
          },
          Object {
            "docs": Array [],
            "id": "TypeFlags.InstantiableNonPrimitive",
            "kind": "EnumMemberDeclaration",
            "name": "InstantiableNonPrimitive",
            "signature": "InstantiableNonPrimitive = 58982400",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 2497,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2497",
            },
            "value": 58982400,
          },
          Object {
            "docs": Array [],
            "id": "TypeFlags.InstantiablePrimitive",
            "kind": "EnumMemberDeclaration",
            "name": "InstantiablePrimitive",
            "signature": "InstantiablePrimitive = 406847488",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 2498,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2498",
            },
            "value": 406847488,
          },
          Object {
            "docs": Array [],
            "id": "TypeFlags.Intersection",
            "kind": "EnumMemberDeclaration",
            "name": "Intersection",
            "signature": "Intersection = 2097152",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 2475,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2475",
            },
            "value": 2097152,
          },
          Object {
            "docs": Array [],
            "id": "TypeFlags.Literal",
            "kind": "EnumMemberDeclaration",
            "name": "Literal",
            "signature": "Literal = 2944",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 2483,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2483",
            },
            "value": 2944,
          },
          Object {
            "docs": Array [],
            "id": "TypeFlags.Narrowable",
            "kind": "EnumMemberDeclaration",
            "name": "Narrowable",
            "signature": "Narrowable = 536624127",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 2501,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2501",
            },
            "value": 536624127,
          },
          Object {
            "docs": Array [],
            "id": "TypeFlags.Never",
            "kind": "EnumMemberDeclaration",
            "name": "Never",
            "signature": "Never = 131072",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 2471,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2471",
            },
            "value": 131072,
          },
          Object {
            "docs": Array [],
            "id": "TypeFlags.NonPrimitive",
            "kind": "EnumMemberDeclaration",
            "name": "NonPrimitive",
            "signature": "NonPrimitive = 67108864",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 2480,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2480",
            },
            "value": 67108864,
          },
          Object {
            "docs": Array [],
            "id": "TypeFlags.Null",
            "kind": "EnumMemberDeclaration",
            "name": "Null",
            "signature": "Null = 65536",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 2470,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2470",
            },
            "value": 65536,
          },
          Object {
            "docs": Array [],
            "id": "TypeFlags.Number",
            "kind": "EnumMemberDeclaration",
            "name": "Number",
            "signature": "Number = 8",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 2457,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2457",
            },
            "value": 8,
          },
          Object {
            "docs": Array [],
            "id": "TypeFlags.NumberLike",
            "kind": "EnumMemberDeclaration",
            "name": "NumberLike",
            "signature": "NumberLike = 296",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 2488,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2488",
            },
            "value": 296,
          },
          Object {
            "docs": Array [],
            "id": "TypeFlags.NumberLiteral",
            "kind": "EnumMemberDeclaration",
            "name": "NumberLiteral",
            "signature": "NumberLiteral = 256",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 2462,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2462",
            },
            "value": 256,
          },
          Object {
            "docs": Array [],
            "id": "TypeFlags.Object",
            "kind": "EnumMemberDeclaration",
            "name": "Object",
            "signature": "Object = 524288",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 2473,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2473",
            },
            "value": 524288,
          },
          Object {
            "docs": Array [],
            "id": "TypeFlags.PossiblyFalsy",
            "kind": "EnumMemberDeclaration",
            "name": "PossiblyFalsy",
            "signature": "PossiblyFalsy = 117724",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 2486,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2486",
            },
            "value": 117724,
          },
          Object {
            "docs": Array [],
            "id": "TypeFlags.String",
            "kind": "EnumMemberDeclaration",
            "name": "String",
            "signature": "String = 4",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 2456,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2456",
            },
            "value": 4,
          },
          Object {
            "docs": Array [],
            "id": "TypeFlags.StringLike",
            "kind": "EnumMemberDeclaration",
            "name": "StringLike",
            "signature": "StringLike = 402653316",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 2487,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2487",
            },
            "value": 402653316,
          },
          Object {
            "docs": Array [],
            "id": "TypeFlags.StringLiteral",
            "kind": "EnumMemberDeclaration",
            "name": "StringLiteral",
            "signature": "StringLiteral = 128",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 2461,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2461",
            },
            "value": 128,
          },
          Object {
            "docs": Array [],
            "id": "TypeFlags.StringMapping",
            "kind": "EnumMemberDeclaration",
            "name": "StringMapping",
            "signature": "StringMapping = 268435456",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 2482,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2482",
            },
            "value": 268435456,
          },
          Object {
            "docs": Array [],
            "id": "TypeFlags.StringOrNumberLiteral",
            "kind": "EnumMemberDeclaration",
            "name": "StringOrNumberLiteral",
            "signature": "StringOrNumberLiteral = 384",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 2485,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2485",
            },
            "value": 384,
          },
          Object {
            "docs": Array [],
            "id": "TypeFlags.StructuredOrInstantiable",
            "kind": "EnumMemberDeclaration",
            "name": "StructuredOrInstantiable",
            "signature": "StructuredOrInstantiable = 469499904",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 2500,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2500",
            },
            "value": 469499904,
          },
          Object {
            "docs": Array [],
            "id": "TypeFlags.StructuredType",
            "kind": "EnumMemberDeclaration",
            "name": "StructuredType",
            "signature": "StructuredType = 3670016",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 2495,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2495",
            },
            "value": 3670016,
          },
          Object {
            "docs": Array [],
            "id": "TypeFlags.Substitution",
            "kind": "EnumMemberDeclaration",
            "name": "Substitution",
            "signature": "Substitution = 33554432",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 2479,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2479",
            },
            "value": 33554432,
          },
          Object {
            "docs": Array [],
            "id": "TypeFlags.TemplateLiteral",
            "kind": "EnumMemberDeclaration",
            "name": "TemplateLiteral",
            "signature": "TemplateLiteral = 134217728",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 2481,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2481",
            },
            "value": 134217728,
          },
          Object {
            "docs": Array [],
            "id": "TypeFlags.TypeParameter",
            "kind": "EnumMemberDeclaration",
            "name": "TypeParameter",
            "signature": "TypeParameter = 262144",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 2472,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2472",
            },
            "value": 262144,
          },
          Object {
            "docs": Array [],
            "id": "TypeFlags.TypeVariable",
            "kind": "EnumMemberDeclaration",
            "name": "TypeVariable",
            "signature": "TypeVariable = 8650752",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 2496,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2496",
            },
            "value": 8650752,
          },
          Object {
            "docs": Array [],
            "id": "TypeFlags.Undefined",
            "kind": "EnumMemberDeclaration",
            "name": "Undefined",
            "signature": "Undefined = 32768",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 2469,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2469",
            },
            "value": 32768,
          },
          Object {
            "docs": Array [],
            "id": "TypeFlags.Union",
            "kind": "EnumMemberDeclaration",
            "name": "Union",
            "signature": "Union = 1048576",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 2474,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2474",
            },
            "value": 1048576,
          },
          Object {
            "docs": Array [],
            "id": "TypeFlags.UnionOrIntersection",
            "kind": "EnumMemberDeclaration",
            "name": "UnionOrIntersection",
            "signature": "UnionOrIntersection = 3145728",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 2494,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2494",
            },
            "value": 3145728,
          },
          Object {
            "docs": Array [],
            "id": "TypeFlags.UniqueESSymbol",
            "kind": "EnumMemberDeclaration",
            "name": "UniqueESSymbol",
            "signature": "UniqueESSymbol = 8192",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 2467,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2467",
            },
            "value": 8192,
          },
          Object {
            "docs": Array [],
            "id": "TypeFlags.Unit",
            "kind": "EnumMemberDeclaration",
            "name": "Unit",
            "signature": "Unit = 109440",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 2484,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2484",
            },
            "value": 109440,
          },
          Object {
            "docs": Array [],
            "id": "TypeFlags.Unknown",
            "kind": "EnumMemberDeclaration",
            "name": "Unknown",
            "signature": "Unknown = 2",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 2455,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2455",
            },
            "value": 2,
          },
          Object {
            "docs": Array [],
            "id": "TypeFlags.Void",
            "kind": "EnumMemberDeclaration",
            "name": "Void",
            "signature": "Void = 16384",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 2468,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2468",
            },
            "value": 16384,
          },
          Object {
            "docs": Array [],
            "id": "TypeFlags.VoidLike",
            "kind": "EnumMemberDeclaration",
            "name": "VoidLike",
            "signature": "VoidLike = 49152",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 2493,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2493",
            },
            "value": 49152,
          },
        ],
        "name": "TypeFlags",
        "signature": "enum TypeFlags {
    Any = 1,
    Unknown = 2,
    String = 4,
    Number = 8,
    Boolean = 16,
    Enum = 32,
    BigInt = 64,
    StringLiteral = 128,
    NumberLiteral = 256,
    BooleanLiteral = 512,
    EnumLiteral = 1024,
    BigIntLiteral = 2048,
    ESSymbol = 4096,
    UniqueESSymbol = 8192,
    Void = 16384,
    Undefined = 32768,
    Null = 65536,
    Never = 131072,
    TypeParameter = 262144,
    Object = 524288,
    Union = 1048576,
    Intersection = 2097152,
    Index = 4194304,
    IndexedAccess = 8388608,
    Conditional = 16777216,
    Substitution = 33554432,
    NonPrimitive = 67108864,
    TemplateLiteral = 134217728,
    StringMapping = 268435456,
    Literal = 2944,
    Unit = 109440,
    StringOrNumberLiteral = 384,
    PossiblyFalsy = 117724,
    StringLike = 402653316,
    NumberLike = 296,
    BigIntLike = 2112,
    BooleanLike = 528,
    EnumLike = 1056,
    ESSymbolLike = 12288,
    VoidLike = 49152,
    UnionOrIntersection = 3145728,
    StructuredType = 3670016,
    TypeVariable = 8650752,
    InstantiableNonPrimitive = 58982400,
    InstantiablePrimitive = 406847488,
    Instantiable = 465829888,
    StructuredOrInstantiable = 469499904,
    Narrowable = 536624127,
}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 2453,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2453",
        },
      },
      Object {
        "docs": Array [],
        "id": "TypeFormatFlags",
        "isConst": false,
        "kind": "EnumDeclaration",
        "members": Array [
          Object {
            "docs": Array [],
            "id": "TypeFormatFlags.AddUndefined",
            "kind": "EnumMemberDeclaration",
            "name": "AddUndefined",
            "signature": "AddUndefined = 131072",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 2292,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2292",
            },
            "value": 131072,
          },
          Object {
            "docs": Array [],
            "id": "TypeFormatFlags.AllowUniqueESSymbolType",
            "kind": "EnumMemberDeclaration",
            "name": "AllowUniqueESSymbolType",
            "signature": "AllowUniqueESSymbolType = 1048576",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 2291,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2291",
            },
            "value": 1048576,
          },
          Object {
            "docs": Array [],
            "id": "TypeFormatFlags.InArrayType",
            "kind": "EnumMemberDeclaration",
            "name": "InArrayType",
            "signature": "InArrayType = 524288",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 2294,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2294",
            },
            "value": 524288,
          },
          Object {
            "docs": Array [],
            "id": "TypeFormatFlags.InElementType",
            "kind": "EnumMemberDeclaration",
            "name": "InElementType",
            "signature": "InElementType = 2097152",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 2295,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2295",
            },
            "value": 2097152,
          },
          Object {
            "docs": Array [],
            "id": "TypeFormatFlags.InFirstTypeArgument",
            "kind": "EnumMemberDeclaration",
            "name": "InFirstTypeArgument",
            "signature": "InFirstTypeArgument = 4194304",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 2296,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2296",
            },
            "value": 4194304,
          },
          Object {
            "docs": Array [],
            "id": "TypeFormatFlags.InTypeAlias",
            "kind": "EnumMemberDeclaration",
            "name": "InTypeAlias",
            "signature": "InTypeAlias = 8388608",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 2297,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2297",
            },
            "value": 8388608,
          },
          Object {
            "docs": Array [],
            "id": "TypeFormatFlags.MultilineObjectLiterals",
            "kind": "EnumMemberDeclaration",
            "name": "MultilineObjectLiterals",
            "signature": "MultilineObjectLiterals = 1024",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 2284,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2284",
            },
            "value": 1024,
          },
          Object {
            "docs": Array [],
            "id": "TypeFormatFlags.NodeBuilderFlagsMask",
            "kind": "EnumMemberDeclaration",
            "name": "NodeBuilderFlagsMask",
            "signature": "NodeBuilderFlagsMask = 814775659",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 2299,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2299",
            },
            "value": 814775659,
          },
          Object {
            "docs": Array [],
            "id": "TypeFormatFlags.None",
            "kind": "EnumMemberDeclaration",
            "name": "None",
            "signature": "None = 0",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 2277,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2277",
            },
            "value": 0,
          },
          Object {
            "docs": Array [],
            "id": "TypeFormatFlags.NoTruncation",
            "kind": "EnumMemberDeclaration",
            "name": "NoTruncation",
            "signature": "NoTruncation = 1",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 2278,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2278",
            },
            "value": 1,
          },
          Object {
            "docs": Array [],
            "id": "TypeFormatFlags.NoTypeReduction",
            "kind": "EnumMemberDeclaration",
            "name": "NoTypeReduction",
            "signature": "NoTypeReduction = 536870912",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 2290,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2290",
            },
            "value": 536870912,
          },
          Object {
            "docs": Array [],
            "id": "TypeFormatFlags.OmitParameterModifiers",
            "kind": "EnumMemberDeclaration",
            "name": "OmitParameterModifiers",
            "signature": "OmitParameterModifiers = 8192",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 2287,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2287",
            },
            "value": 8192,
          },
          Object {
            "docs": Array [],
            "id": "TypeFormatFlags.SuppressAnyReturnType",
            "kind": "EnumMemberDeclaration",
            "name": "SuppressAnyReturnType",
            "signature": "SuppressAnyReturnType = 256",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 2283,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2283",
            },
            "value": 256,
          },
          Object {
            "docs": Array [],
            "id": "TypeFormatFlags.UseAliasDefinedOutsideCurrentScope",
            "kind": "EnumMemberDeclaration",
            "name": "UseAliasDefinedOutsideCurrentScope",
            "signature": "UseAliasDefinedOutsideCurrentScope = 16384",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 2288,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2288",
            },
            "value": 16384,
          },
          Object {
            "docs": Array [],
            "id": "TypeFormatFlags.UseFullyQualifiedType",
            "kind": "EnumMemberDeclaration",
            "name": "UseFullyQualifiedType",
            "signature": "UseFullyQualifiedType = 64",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 2282,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2282",
            },
            "value": 64,
          },
          Object {
            "docs": Array [],
            "id": "TypeFormatFlags.UseSingleQuotesForStringLiteralType",
            "kind": "EnumMemberDeclaration",
            "name": "UseSingleQuotesForStringLiteralType",
            "signature": "UseSingleQuotesForStringLiteralType = 268435456",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 2289,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2289",
            },
            "value": 268435456,
          },
          Object {
            "docs": Array [],
            "id": "TypeFormatFlags.UseStructuralFallback",
            "kind": "EnumMemberDeclaration",
            "name": "UseStructuralFallback",
            "signature": "UseStructuralFallback = 8",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 2280,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2280",
            },
            "value": 8,
          },
          Object {
            "docs": Array [],
            "id": "TypeFormatFlags.UseTypeOfFunction",
            "kind": "EnumMemberDeclaration",
            "name": "UseTypeOfFunction",
            "signature": "UseTypeOfFunction = 4096",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 2286,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2286",
            },
            "value": 4096,
          },
          Object {
            "docs": Array [],
            "id": "TypeFormatFlags.WriteArrayAsGenericType",
            "kind": "EnumMemberDeclaration",
            "name": "WriteArrayAsGenericType",
            "signature": "WriteArrayAsGenericType = 2",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 2279,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2279",
            },
            "value": 2,
          },
          Object {
            "docs": Array [],
            "id": "TypeFormatFlags.WriteArrowStyleSignature",
            "kind": "EnumMemberDeclaration",
            "name": "WriteArrowStyleSignature",
            "signature": "WriteArrowStyleSignature = 262144",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 2293,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2293",
            },
            "value": 262144,
          },
          Object {
            "docs": Array [],
            "id": "TypeFormatFlags.WriteClassExpressionAsTypeLiteral",
            "kind": "EnumMemberDeclaration",
            "name": "WriteClassExpressionAsTypeLiteral",
            "signature": "WriteClassExpressionAsTypeLiteral = 2048",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 2285,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2285",
            },
            "value": 2048,
          },
          Object {
            "docs": Array [
              "/** @deprecated */",
            ],
            "id": "TypeFormatFlags.WriteOwnNameForAnyLike",
            "kind": "EnumMemberDeclaration",
            "name": "WriteOwnNameForAnyLike",
            "signature": "WriteOwnNameForAnyLike = 0",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 2298,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2298",
            },
            "value": 0,
          },
          Object {
            "docs": Array [],
            "id": "TypeFormatFlags.WriteTypeArgumentsOfSignature",
            "kind": "EnumMemberDeclaration",
            "name": "WriteTypeArgumentsOfSignature",
            "signature": "WriteTypeArgumentsOfSignature = 32",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 2281,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2281",
            },
            "value": 32,
          },
        ],
        "name": "TypeFormatFlags",
        "signature": "enum TypeFormatFlags {
    None = 0,
    NoTruncation = 1,
    WriteArrayAsGenericType = 2,
    UseStructuralFallback = 8,
    WriteTypeArgumentsOfSignature = 32,
    UseFullyQualifiedType = 64,
    SuppressAnyReturnType = 256,
    MultilineObjectLiterals = 1024,
    WriteClassExpressionAsTypeLiteral = 2048,
    UseTypeOfFunction = 4096,
    OmitParameterModifiers = 8192,
    UseAliasDefinedOutsideCurrentScope = 16384,
    UseSingleQuotesForStringLiteralType = 268435456,
    NoTypeReduction = 536870912,
    AllowUniqueESSymbolType = 1048576,
    AddUndefined = 131072,
    WriteArrowStyleSignature = 262144,
    InArrayType = 524288,
    InElementType = 2097152,
    InFirstTypeArgument = 4194304,
    InTypeAlias = 8388608,
    WriteOwnNameForAnyLike = 0,
    NodeBuilderFlagsMask = 814775659,
}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 2276,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2276",
        },
      },
      Object {
        "docs": Array [],
        "id": "TypePredicateKind",
        "isConst": false,
        "kind": "EnumDeclaration",
        "members": Array [
          Object {
            "docs": Array [],
            "id": "TypePredicateKind.AssertsIdentifier",
            "kind": "EnumMemberDeclaration",
            "name": "AssertsIdentifier",
            "signature": "AssertsIdentifier = 3",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 2312,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2312",
            },
            "value": 3,
          },
          Object {
            "docs": Array [],
            "id": "TypePredicateKind.AssertsThis",
            "kind": "EnumMemberDeclaration",
            "name": "AssertsThis",
            "signature": "AssertsThis = 2",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 2311,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2311",
            },
            "value": 2,
          },
          Object {
            "docs": Array [],
            "id": "TypePredicateKind.Identifier",
            "kind": "EnumMemberDeclaration",
            "name": "Identifier",
            "signature": "Identifier = 1",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 2310,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2310",
            },
            "value": 1,
          },
          Object {
            "docs": Array [],
            "id": "TypePredicateKind.This",
            "kind": "EnumMemberDeclaration",
            "name": "This",
            "signature": "This = 0",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 2309,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2309",
            },
            "value": 0,
          },
        ],
        "name": "TypePredicateKind",
        "signature": "enum TypePredicateKind {
    This = 0,
    Identifier = 1,
    AssertsThis = 2,
    AssertsIdentifier = 3,
}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 2308,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2308",
        },
      },
      Object {
        "docs": Array [],
        "id": "WatchDirectoryFlags",
        "isConst": false,
        "kind": "EnumDeclaration",
        "members": Array [
          Object {
            "docs": Array [],
            "id": "WatchDirectoryFlags.None",
            "kind": "EnumMemberDeclaration",
            "name": "None",
            "signature": "None = 0",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 2972,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2972",
            },
            "value": 0,
          },
          Object {
            "docs": Array [],
            "id": "WatchDirectoryFlags.Recursive",
            "kind": "EnumMemberDeclaration",
            "name": "Recursive",
            "signature": "Recursive = 1",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 2973,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2973",
            },
            "value": 1,
          },
        ],
        "name": "WatchDirectoryFlags",
        "signature": "enum WatchDirectoryFlags {
    None = 0,
    Recursive = 1,
}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 2971,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2971",
        },
      },
      Object {
        "docs": Array [],
        "id": "WatchDirectoryKind",
        "isConst": false,
        "kind": "EnumDeclaration",
        "members": Array [
          Object {
            "docs": Array [],
            "id": "WatchDirectoryKind.DynamicPriorityPolling",
            "kind": "EnumMemberDeclaration",
            "name": "DynamicPriorityPolling",
            "signature": "DynamicPriorityPolling = 2",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 2777,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2777",
            },
            "value": 2,
          },
          Object {
            "docs": Array [],
            "id": "WatchDirectoryKind.FixedPollingInterval",
            "kind": "EnumMemberDeclaration",
            "name": "FixedPollingInterval",
            "signature": "FixedPollingInterval = 1",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 2776,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2776",
            },
            "value": 1,
          },
          Object {
            "docs": Array [],
            "id": "WatchDirectoryKind.UseFsEvents",
            "kind": "EnumMemberDeclaration",
            "name": "UseFsEvents",
            "signature": "UseFsEvents = 0",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 2775,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2775",
            },
            "value": 0,
          },
        ],
        "name": "WatchDirectoryKind",
        "signature": "enum WatchDirectoryKind {
    UseFsEvents = 0,
    FixedPollingInterval = 1,
    DynamicPriorityPolling = 2,
}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 2774,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2774",
        },
      },
      Object {
        "docs": Array [],
        "id": "WatchFileKind",
        "isConst": false,
        "kind": "EnumDeclaration",
        "members": Array [
          Object {
            "docs": Array [],
            "id": "WatchFileKind.DynamicPriorityPolling",
            "kind": "EnumMemberDeclaration",
            "name": "DynamicPriorityPolling",
            "signature": "DynamicPriorityPolling = 2",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 2770,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2770",
            },
            "value": 2,
          },
          Object {
            "docs": Array [],
            "id": "WatchFileKind.FixedPollingInterval",
            "kind": "EnumMemberDeclaration",
            "name": "FixedPollingInterval",
            "signature": "FixedPollingInterval = 0",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 2768,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2768",
            },
            "value": 0,
          },
          Object {
            "docs": Array [],
            "id": "WatchFileKind.PriorityPollingInterval",
            "kind": "EnumMemberDeclaration",
            "name": "PriorityPollingInterval",
            "signature": "PriorityPollingInterval = 1",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 2769,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2769",
            },
            "value": 1,
          },
          Object {
            "docs": Array [],
            "id": "WatchFileKind.UseFsEvents",
            "kind": "EnumMemberDeclaration",
            "name": "UseFsEvents",
            "signature": "UseFsEvents = 3",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 2771,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2771",
            },
            "value": 3,
          },
          Object {
            "docs": Array [],
            "id": "WatchFileKind.UseFsEventsOnParentDirectory",
            "kind": "EnumMemberDeclaration",
            "name": "UseFsEventsOnParentDirectory",
            "signature": "UseFsEventsOnParentDirectory = 4",
            "source": Object {
              "filename": "lib/typescript.d.ts",
              "line": 2772,
              "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2772",
            },
            "value": 4,
          },
        ],
        "name": "WatchFileKind",
        "signature": "enum WatchFileKind {
    FixedPollingInterval = 0,
    PriorityPollingInterval = 1,
    DynamicPriorityPolling = 2,
    UseFsEvents = 3,
    UseFsEventsOnParentDirectory = 4,
}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 2767,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2767",
        },
      },
    ],
    "functions": Array [
      Object {
        "docs": Array [
          "/**
     * Adds an EmitHelper to a node.
     */",
        ],
        "id": "addEmitHelper",
        "kind": "FunctionDeclaration",
        "name": "addEmitHelper",
        "signature": "addEmitHelper: <T extends Node>(node: T, helper: EmitHelper) => T;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4313,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4313",
        },
        "type": "<T extends Node>(node: T, helper: EmitHelper) => T",
      },
      Object {
        "docs": Array [
          "/**
     * Add EmitHelpers to a node.
     */",
        ],
        "id": "addEmitHelpers",
        "kind": "FunctionDeclaration",
        "name": "addEmitHelpers",
        "signature": "addEmitHelpers: <T extends Node>(
    node: T,
    helpers: EmitHelper[] | undefined
) => T;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4317,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4317",
        },
        "type": "<T extends Node>(node: T, helpers: EmitHelper[] | undefined) => T",
      },
      Object {
        "docs": Array [],
        "id": "addSyntheticLeadingComment",
        "kind": "FunctionDeclaration",
        "name": "addSyntheticLeadingComment",
        "signature": "addSyntheticLeadingComment: <T extends Node>(
    node: T,
    kind: SyntaxKind.SingleLineCommentTrivia | SyntaxKind.MultiLineCommentTrivia,
    text: string,
    hasTrailingNewLine?: boolean
) => T;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4297,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4297",
        },
        "type": "<T extends Node>(node: T, kind: SyntaxKind.SingleLineCommentTrivia | SyntaxKind.MultiLineCommentTrivia, text: string, hasTrailingNewLine?: boolean) => T",
      },
      Object {
        "docs": Array [],
        "id": "addSyntheticTrailingComment",
        "kind": "FunctionDeclaration",
        "name": "addSyntheticTrailingComment",
        "signature": "addSyntheticTrailingComment: <T extends Node>(
    node: T,
    kind: SyntaxKind.SingleLineCommentTrivia | SyntaxKind.MultiLineCommentTrivia,
    text: string,
    hasTrailingNewLine?: boolean
) => T;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4300,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4300",
        },
        "type": "<T extends Node>(node: T, kind: SyntaxKind.SingleLineCommentTrivia | SyntaxKind.MultiLineCommentTrivia, text: string, hasTrailingNewLine?: boolean) => T",
      },
      Object {
        "docs": Array [],
        "id": "classicNameResolver",
        "kind": "FunctionDeclaration",
        "name": "classicNameResolver",
        "signature": "classicNameResolver: (
    moduleName: string,
    containingFile: string,
    compilerOptions: CompilerOptions,
    host: ModuleResolutionHost,
    cache?: NonRelativeModuleNameResolutionCache,
    redirectedReference?: ResolvedProjectReference
) => ResolvedModuleWithFailedLookupLocations;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4675,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4675",
        },
        "type": "(moduleName: string, containingFile: string, compilerOptions: CompilerOptions, host: ModuleResolutionHost, cache?: NonRelativeModuleNameResolutionCache, redirectedReference?: ResolvedProjectReference) => ResolvedModuleWithFailedLookupLocations",
      },
      Object {
        "docs": Array [],
        "id": "clearTimeout",
        "kind": "FunctionDeclaration",
        "name": "clearTimeout",
        "signature": "clearTimeout: (handle: any) => void;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 3881,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3881",
        },
        "type": "(handle: any) => void",
      },
      Object {
        "docs": Array [
          "/**
     * Called to merge all the changes that occurred across several versions of a script snapshot
     * into a single change.  i.e. if a user keeps making successive edits to a script we will
     * have a text change from V1 to V2, V2 to V3, ..., Vn.
     *
     * This function will then merge those changes into a single change range valid between V1 and
     * Vn.
     */",
        ],
        "id": "collapseTextChangeRangesAcrossMultipleVersions",
        "kind": "FunctionDeclaration",
        "name": "collapseTextChangeRangesAcrossMultipleVersions",
        "signature": "collapseTextChangeRangesAcrossMultipleVersions: (
    changes: readonly TextChangeRange[]
) => TextChangeRange;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4028,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4028",
        },
        "type": "(changes: readonly TextChangeRange[]) => TextChangeRange",
      },
      Object {
        "docs": Array [],
        "id": "convertCompilerOptionsFromJson",
        "kind": "FunctionDeclaration",
        "name": "convertCompilerOptionsFromJson",
        "signature": "convertCompilerOptionsFromJson: (
    jsonOptions: any,
    basePath: string,
    configFileName?: string
) => { options: CompilerOptions; errors: Diagnostic[] };",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4626,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4626",
        },
        "type": "(jsonOptions: any, basePath: string, configFileName?: string) => {    options: CompilerOptions;    errors: Diagnostic[];}",
      },
      Object {
        "docs": Array [
          "/**
     * Convert the json syntax tree into the json value
     */",
        ],
        "id": "convertToObject",
        "kind": "FunctionDeclaration",
        "name": "convertToObject",
        "signature": "convertToObject: (sourceFile: JsonSourceFile, errors: Push<Diagnostic>) => any;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4595,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4595",
        },
        "type": "(sourceFile: JsonSourceFile, errors: Push<Diagnostic>) => any",
      },
      Object {
        "docs": Array [],
        "id": "convertTypeAcquisitionFromJson",
        "kind": "FunctionDeclaration",
        "name": "convertTypeAcquisitionFromJson",
        "signature": "convertTypeAcquisitionFromJson: (
    jsonOptions: any,
    basePath: string,
    configFileName?: string
) => { options: TypeAcquisition; errors: Diagnostic[] };",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4630,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4630",
        },
        "type": "(jsonOptions: any, basePath: string, configFileName?: string) => {    options: TypeAcquisition;    errors: Diagnostic[];}",
      },
      Object {
        "docs": Array [],
        "id": "couldStartTrivia",
        "kind": "FunctionDeclaration",
        "name": "couldStartTrivia",
        "signature": "couldStartTrivia: (text: string, pos: number) => boolean;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 3984,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3984",
        },
        "type": "(text: string, pos: number) => boolean",
      },
      Object {
        "docs": Array [
          "/**
     * Creates a builder thats just abstraction over program and can be used with watch
     */",
        ],
        "id": "createAbstractBuilder",
        "kind": "FunctionDeclaration",
        "name": "createAbstractBuilder",
        "signature": "createAbstractBuilder: {
    (
        newProgram: Program,
        host: BuilderProgramHost,
        oldProgram?: BuilderProgram,
        configFileParsingDiagnostics?: readonly Diagnostic[]
    ): BuilderProgram;
    (
        rootNames: readonly string[],
        options: CompilerOptions,
        host?: CompilerHost,
        oldProgram?: BuilderProgram,
        configFileParsingDiagnostics?: readonly Diagnostic[],
        projectReferences?: readonly ProjectReference[]
    ): BuilderProgram;
};",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4953,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4953",
        },
        "type": "{ (newProgram: Program, host: BuilderProgramHost, oldProgram?: BuilderProgram, configFileParsingDiagnostics?: readonly Diagnostic[]): BuilderProgram; (rootNames: readonly string[], options: CompilerOptions, host?: CompilerHost, oldProgram?: BuilderProgram, configFileParsingDiagnostics?: readonly Diagnostic[], projectReferences?: readonly ProjectReference[]): BuilderProgram; }",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.createAdd\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "createAdd",
        "kind": "FunctionDeclaration",
        "name": "createAdd",
        "signature": "createAdd: (left: Expression, right: Expression) => BinaryExpression;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 7168,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L7168",
        },
        "type": "(left: Expression, right: Expression) => BinaryExpression",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.createArrayBindingPattern\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "createArrayBindingPattern",
        "kind": "FunctionDeclaration",
        "name": "createArrayBindingPattern",
        "signature": "createArrayBindingPattern: (
    elements: readonly ArrayBindingElement[]
) => ArrayBindingPattern;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 6610,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6610",
        },
        "type": "(elements: readonly ArrayBindingElement[]) => ArrayBindingPattern",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.createArrayLiteral\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "createArrayLiteral",
        "kind": "FunctionDeclaration",
        "name": "createArrayLiteral",
        "signature": "createArrayLiteral: (
    elements?: readonly Expression[] | undefined,
    multiLine?: boolean | undefined
) => ArrayLiteralExpression;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 6618,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6618",
        },
        "type": "(elements?: readonly Expression[] | undefined, multiLine?: boolean | undefined) => ArrayLiteralExpression",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.createArrayTypeNode\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "createArrayTypeNode",
        "kind": "FunctionDeclaration",
        "name": "createArrayTypeNode",
        "signature": "createArrayTypeNode: (elementType: TypeNode) => ArrayTypeNode;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 6550,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6550",
        },
        "type": "(elementType: TypeNode) => ArrayTypeNode",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.createAsExpression\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "createAsExpression",
        "kind": "FunctionDeclaration",
        "name": "createAsExpression",
        "signature": "createAsExpression: (expression: Expression, type: TypeNode) => AsExpression;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 6726,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6726",
        },
        "type": "(expression: Expression, type: TypeNode) => AsExpression",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.createAssignment\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "createAssignment",
        "kind": "FunctionDeclaration",
        "name": "createAssignment",
        "signature": "createAssignment: (left: Expression, right: Expression) => BinaryExpression;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 7162,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L7162",
        },
        "type": "(left: Expression, right: Expression) => BinaryExpression",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.createAwait\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "createAwait",
        "kind": "FunctionDeclaration",
        "name": "createAwait",
        "signature": "createAwait: (expression: Expression) => AwaitExpression;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 6678,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6678",
        },
        "type": "(expression: Expression) => AwaitExpression",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.createBigIntLiteral\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "createBigIntLiteral",
        "kind": "FunctionDeclaration",
        "name": "createBigIntLiteral",
        "signature": "createBigIntLiteral: (value: string | PseudoBigInt) => BigIntLiteral;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 6443,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6443",
        },
        "type": "(value: string | PseudoBigInt) => BigIntLiteral",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.createBinary\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "createBinary",
        "kind": "FunctionDeclaration",
        "name": "createBinary",
        "signature": "createBinary: (
    left: Expression,
    operator:
        | SyntaxKind.CommaToken
        | SyntaxKind.LessThanToken
        | SyntaxKind.GreaterThanToken
        | SyntaxKind.LessThanEqualsToken
        | SyntaxKind.GreaterThanEqualsToken
        | SyntaxKind.EqualsEqualsToken
        | SyntaxKind.ExclamationEqualsToken
        | SyntaxKind.EqualsEqualsEqualsToken
        | SyntaxKind.ExclamationEqualsEqualsToken
        | SyntaxKind.PlusToken
        | SyntaxKind.MinusToken
        | SyntaxKind.AsteriskToken
        | SyntaxKind.AsteriskAsteriskToken
        | SyntaxKind.SlashToken
        | SyntaxKind.PercentToken
        | SyntaxKind.LessThanLessThanToken
        | SyntaxKind.GreaterThanGreaterThanToken
        | SyntaxKind.GreaterThanGreaterThanGreaterThanToken
        | SyntaxKind.AmpersandToken
        | SyntaxKind.BarToken
        | SyntaxKind.CaretToken
        | SyntaxKind.AmpersandAmpersandToken
        | SyntaxKind.BarBarToken
        | SyntaxKind.QuestionQuestionToken
        | SyntaxKind.EqualsToken
        | SyntaxKind.PlusEqualsToken
        | SyntaxKind.MinusEqualsToken
        | SyntaxKind.AsteriskEqualsToken
        | SyntaxKind.AsteriskAsteriskEqualsToken
        | SyntaxKind.SlashEqualsToken
        | SyntaxKind.PercentEqualsToken
        | SyntaxKind.LessThanLessThanEqualsToken
        | SyntaxKind.GreaterThanGreaterThanEqualsToken
        | SyntaxKind.GreaterThanGreaterThanGreaterThanEqualsToken
        | SyntaxKind.AmpersandEqualsToken
        | SyntaxKind.BarEqualsToken
        | SyntaxKind.BarBarEqualsToken
        | SyntaxKind.AmpersandAmpersandEqualsToken
        | SyntaxKind.QuestionQuestionEqualsToken
        | SyntaxKind.CaretEqualsToken
        | SyntaxKind.InKeyword
        | SyntaxKind.InstanceOfKeyword
        | BinaryOperatorToken,
    right: Expression
) => BinaryExpression;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 6690,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6690",
        },
        "type": "(left: Expression, operator: SyntaxKind.CommaToken | SyntaxKind.LessThanToken | SyntaxKind.GreaterThanToken | SyntaxKind.LessThanEqualsToken | SyntaxKind.GreaterThanEqualsToken | SyntaxKind.EqualsEqualsToken | SyntaxKind.ExclamationEqualsToken | SyntaxKind.EqualsEqualsEqualsToken | SyntaxKind.ExclamationEqualsEqualsToken | SyntaxKind.PlusToken | SyntaxKind.MinusToken | SyntaxKind.AsteriskToken | SyntaxKind.AsteriskAsteriskToken | SyntaxKind.SlashToken | SyntaxKind.PercentToken | SyntaxKind.LessThanLessThanToken | SyntaxKind.GreaterThanGreaterThanToken | SyntaxKind.GreaterThanGreaterThanGreaterThanToken | SyntaxKind.AmpersandToken | SyntaxKind.BarToken | SyntaxKind.CaretToken | SyntaxKind.AmpersandAmpersandToken | SyntaxKind.BarBarToken | SyntaxKind.QuestionQuestionToken | SyntaxKind.EqualsToken | SyntaxKind.PlusEqualsToken | SyntaxKind.MinusEqualsToken | SyntaxKind.AsteriskEqualsToken | SyntaxKind.AsteriskAsteriskEqualsToken | SyntaxKind.SlashEqualsToken | SyntaxKind.PercentEqualsToken | SyntaxKind.LessThanLessThanEqualsToken | SyntaxKind.GreaterThanGreaterThanEqualsToken | SyntaxKind.GreaterThanGreaterThanGreaterThanEqualsToken | SyntaxKind.AmpersandEqualsToken | SyntaxKind.BarEqualsToken | SyntaxKind.BarBarEqualsToken | SyntaxKind.AmpersandAmpersandEqualsToken | SyntaxKind.QuestionQuestionEqualsToken | SyntaxKind.CaretEqualsToken | SyntaxKind.InKeyword | SyntaxKind.InstanceOfKeyword | BinaryOperatorToken, right: Expression) => BinaryExpression",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.createBindingElement\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "createBindingElement",
        "kind": "FunctionDeclaration",
        "name": "createBindingElement",
        "signature": "createBindingElement: (
    dotDotDotToken: DotDotDotToken | undefined,
    propertyName:
        | string
        | Identifier
        | StringLiteral
        | NumericLiteral
        | ComputedPropertyName
        | PrivateIdentifier
        | undefined,
    name: string | Identifier | ObjectBindingPattern | ArrayBindingPattern,
    initializer?: Expression | undefined
) => BindingElement;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 6614,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6614",
        },
        "type": "(dotDotDotToken: DotDotDotToken | undefined, propertyName: string | Identifier | StringLiteral | NumericLiteral | ComputedPropertyName | PrivateIdentifier | undefined, name: string | Identifier | ObjectBindingPattern | ArrayBindingPattern, initializer?: Expression | undefined) => BindingElement",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.createBlock\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "createBlock",
        "kind": "FunctionDeclaration",
        "name": "createBlock",
        "signature": "createBlock: (
    statements: readonly Statement[],
    multiLine?: boolean | undefined
) => Block;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 6748,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6748",
        },
        "type": "(statements: readonly Statement[], multiLine?: boolean | undefined) => Block",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.createBreak\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "createBreak",
        "kind": "FunctionDeclaration",
        "name": "createBreak",
        "signature": "createBreak: (label?: string | Identifier | undefined) => BreakStatement;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 6794,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6794",
        },
        "type": "(label?: string | Identifier | undefined) => BreakStatement",
      },
      Object {
        "docs": Array [
          "/**
     * Create a function that reports watch status by writing to the system and handles the formating of the diagnostic
     */",
        ],
        "id": "createBuilderStatusReporter",
        "kind": "FunctionDeclaration",
        "name": "createBuilderStatusReporter",
        "signature": "createBuilderStatusReporter: (
    system: System,
    pretty?: boolean
) => DiagnosticReporter;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 5134,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5134",
        },
        "type": "(system: System, pretty?: boolean) => DiagnosticReporter",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.createBundle\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "createBundle",
        "kind": "FunctionDeclaration",
        "name": "createBundle",
        "signature": "createBundle: (
    sourceFiles: readonly SourceFile[],
    prepends?: readonly (UnparsedSource | InputFiles)[] | undefined
) => Bundle;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 7036,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L7036",
        },
        "type": "(sourceFiles: readonly SourceFile[], prepends?: readonly (UnparsedSource | InputFiles)[] | undefined) => Bundle",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.createCall\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "createCall",
        "kind": "FunctionDeclaration",
        "name": "createCall",
        "signature": "createCall: (
    expression: Expression,
    typeArguments: readonly TypeNode[] | undefined,
    argumentsArray: readonly Expression[] | undefined
) => CallExpression;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 6642,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6642",
        },
        "type": "(expression: Expression, typeArguments: readonly TypeNode[] | undefined, argumentsArray: readonly Expression[] | undefined) => CallExpression",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.createCallChain\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "createCallChain",
        "kind": "FunctionDeclaration",
        "name": "createCallChain",
        "signature": "createCallChain: (
    expression: Expression,
    questionDotToken: QuestionDotToken | undefined,
    typeArguments: readonly TypeNode[] | undefined,
    argumentsArray: readonly Expression[] | undefined
) => CallChain;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 6646,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6646",
        },
        "type": "(expression: Expression, questionDotToken: QuestionDotToken | undefined, typeArguments: readonly TypeNode[] | undefined, argumentsArray: readonly Expression[] | undefined) => CallChain",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.createCallSignature\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "createCallSignature",
        "kind": "FunctionDeclaration",
        "name": "createCallSignature",
        "signature": "createCallSignature: (
    typeParameters: readonly TypeParameterDeclaration[] | undefined,
    parameters: readonly ParameterDeclaration[],
    type: TypeNode | undefined
) => CallSignatureDeclaration;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 6514,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6514",
        },
        "type": "(typeParameters: readonly TypeParameterDeclaration[] | undefined, parameters: readonly ParameterDeclaration[], type: TypeNode | undefined) => CallSignatureDeclaration",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.createCaseBlock\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "createCaseBlock",
        "kind": "FunctionDeclaration",
        "name": "createCaseBlock",
        "signature": "createCaseBlock: (clauses: readonly CaseOrDefaultClause[]) => CaseBlock;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 6856,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6856",
        },
        "type": "(clauses: readonly CaseOrDefaultClause[]) => CaseBlock",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.createCaseClause\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "createCaseClause",
        "kind": "FunctionDeclaration",
        "name": "createCaseClause",
        "signature": "createCaseClause: (
    expression: Expression,
    statements: readonly Statement[]
) => CaseClause;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 6992,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6992",
        },
        "type": "(expression: Expression, statements: readonly Statement[]) => CaseClause",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.createCatchClause\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "createCatchClause",
        "kind": "FunctionDeclaration",
        "name": "createCatchClause",
        "signature": "createCatchClause: (
    variableDeclaration: string | VariableDeclaration | undefined,
    block: Block
) => CatchClause;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 7004,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L7004",
        },
        "type": "(variableDeclaration: string | VariableDeclaration | undefined, block: Block) => CatchClause",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.createClassDeclaration\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "createClassDeclaration",
        "kind": "FunctionDeclaration",
        "name": "createClassDeclaration",
        "signature": "createClassDeclaration: (
    decorators: readonly Decorator[] | undefined,
    modifiers: readonly Modifier[] | undefined,
    name: string | Identifier | undefined,
    typeParameters: readonly TypeParameterDeclaration[] | undefined,
    heritageClauses: readonly HeritageClause[] | undefined,
    members: readonly ClassElement[]
) => ClassDeclaration;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 6832,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6832",
        },
        "type": "(decorators: readonly Decorator[] | undefined, modifiers: readonly Modifier[] | undefined, name: string | Identifier | undefined, typeParameters: readonly TypeParameterDeclaration[] | undefined, heritageClauses: readonly HeritageClause[] | undefined, members: readonly ClassElement[]) => ClassDeclaration",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.createClassExpression\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "createClassExpression",
        "kind": "FunctionDeclaration",
        "name": "createClassExpression",
        "signature": "createClassExpression: (
    modifiers: readonly Modifier[] | undefined,
    name: string | Identifier | undefined,
    typeParameters: readonly TypeParameterDeclaration[] | undefined,
    heritageClauses: readonly HeritageClause[] | undefined,
    members: readonly ClassElement[]
) => ClassExpression;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 7116,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L7116",
        },
        "type": "(modifiers: readonly Modifier[] | undefined, name: string | Identifier | undefined, typeParameters: readonly TypeParameterDeclaration[] | undefined, heritageClauses: readonly HeritageClause[] | undefined, members: readonly ClassElement[]) => ClassExpression",
      },
      Object {
        "docs": Array [
          "/** The classifier is used for syntactic highlighting in editors via the TSServer */",
        ],
        "id": "createClassifier",
        "kind": "FunctionDeclaration",
        "name": "createClassifier",
        "signature": "createClassifier: () => Classifier;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 6317,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6317",
        },
        "type": "() => Classifier",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.createComma\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "createComma",
        "kind": "FunctionDeclaration",
        "name": "createComma",
        "signature": "createComma: (left: Expression, right: Expression) => Expression;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 7158,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L7158",
        },
        "type": "(left: Expression, right: Expression) => Expression",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.createCommaList\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "createCommaList",
        "kind": "FunctionDeclaration",
        "name": "createCommaList",
        "signature": "createCommaList: (elements: readonly Expression[]) => CommaListExpression;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 7032,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L7032",
        },
        "type": "(elements: readonly Expression[]) => CommaListExpression",
      },
      Object {
        "docs": Array [],
        "id": "createCompilerHost",
        "kind": "FunctionDeclaration",
        "name": "createCompilerHost",
        "signature": "createCompilerHost: (
    options: CompilerOptions,
    setParentNodes?: boolean
) => CompilerHost;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4767,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4767",
        },
        "type": "(options: CompilerOptions, setParentNodes?: boolean) => CompilerHost",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.createComputedPropertyName\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "createComputedPropertyName",
        "kind": "FunctionDeclaration",
        "name": "createComputedPropertyName",
        "signature": "createComputedPropertyName: (expression: Expression) => ComputedPropertyName;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 6478,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6478",
        },
        "type": "(expression: Expression) => ComputedPropertyName",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.createConditionalTypeNode\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "createConditionalTypeNode",
        "kind": "FunctionDeclaration",
        "name": "createConditionalTypeNode",
        "signature": "createConditionalTypeNode: (
    checkType: TypeNode,
    extendsType: TypeNode,
    trueType: TypeNode,
    falseType: TypeNode
) => ConditionalTypeNode;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 6574,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6574",
        },
        "type": "(checkType: TypeNode, extendsType: TypeNode, trueType: TypeNode, falseType: TypeNode) => ConditionalTypeNode",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.createConstructorDeclaration\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "createConstructor",
        "kind": "FunctionDeclaration",
        "name": "createConstructor",
        "signature": "createConstructor: (
    decorators: readonly Decorator[] | undefined,
    modifiers: readonly Modifier[] | undefined,
    parameters: readonly ParameterDeclaration[],
    body: Block | undefined
) => ConstructorDeclaration;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 6502,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6502",
        },
        "type": "(decorators: readonly Decorator[] | undefined, modifiers: readonly Modifier[] | undefined, parameters: readonly ParameterDeclaration[], body: Block | undefined) => ConstructorDeclaration",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.createConstructorTypeNode\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "createConstructorTypeNode",
        "kind": "FunctionDeclaration",
        "name": "createConstructorTypeNode",
        "signature": "createConstructorTypeNode: (
    typeParameters: readonly TypeParameterDeclaration[] | undefined,
    parameters: readonly ParameterDeclaration[],
    type: TypeNode
) => ConstructorTypeNode;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 6538,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6538",
        },
        "type": "(typeParameters: readonly TypeParameterDeclaration[] | undefined, parameters: readonly ParameterDeclaration[], type: TypeNode) => ConstructorTypeNode",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.createConstructSignature\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "createConstructSignature",
        "kind": "FunctionDeclaration",
        "name": "createConstructSignature",
        "signature": "createConstructSignature: (
    typeParameters: readonly TypeParameterDeclaration[] | undefined,
    parameters: readonly ParameterDeclaration[],
    type: TypeNode | undefined
) => ConstructSignatureDeclaration;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 6518,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6518",
        },
        "type": "(typeParameters: readonly TypeParameterDeclaration[] | undefined, parameters: readonly ParameterDeclaration[], type: TypeNode | undefined) => ConstructSignatureDeclaration",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.createContinue\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "createContinue",
        "kind": "FunctionDeclaration",
        "name": "createContinue",
        "signature": "createContinue: (label?: string | Identifier | undefined) => ContinueStatement;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 6790,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6790",
        },
        "type": "(label?: string | Identifier | undefined) => ContinueStatement",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.createDebuggerStatement\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "createDebuggerStatement",
        "kind": "FunctionDeclaration",
        "name": "createDebuggerStatement",
        "signature": "createDebuggerStatement: () => DebuggerStatement;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 6822,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6822",
        },
        "type": "() => DebuggerStatement",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.createDecorator\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "createDecorator",
        "kind": "FunctionDeclaration",
        "name": "createDecorator",
        "signature": "createDecorator: (expression: Expression) => Decorator;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 6490,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6490",
        },
        "type": "(expression: Expression) => Decorator",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.createDefaultClause\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "createDefaultClause",
        "kind": "FunctionDeclaration",
        "name": "createDefaultClause",
        "signature": "createDefaultClause: (statements: readonly Statement[]) => DefaultClause;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 6996,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6996",
        },
        "type": "(statements: readonly Statement[]) => DefaultClause",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.createDelete\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "createDelete",
        "kind": "FunctionDeclaration",
        "name": "createDelete",
        "signature": "createDelete: (expression: Expression) => DeleteExpression;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 6666,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6666",
        },
        "type": "(expression: Expression) => DeleteExpression",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.createDo\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "createDo",
        "kind": "FunctionDeclaration",
        "name": "createDo",
        "signature": "createDo: (statement: Statement, expression: Expression) => DoStatement;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 6770,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6770",
        },
        "type": "(statement: Statement, expression: Expression) => DoStatement",
      },
      Object {
        "docs": Array [],
        "id": "createDocumentRegistry",
        "kind": "FunctionDeclaration",
        "name": "createDocumentRegistry",
        "signature": "createDocumentRegistry: (
    useCaseSensitiveFileNames?: boolean,
    currentDirectory?: string
) => DocumentRegistry;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 6389,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6389",
        },
        "type": "(useCaseSensitiveFileNames?: boolean, currentDirectory?: string) => DocumentRegistry",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.createElementAccess\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "createElementAccess",
        "kind": "FunctionDeclaration",
        "name": "createElementAccess",
        "signature": "createElementAccess: (
    expression: Expression,
    index: number | Expression
) => ElementAccessExpression;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 6634,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6634",
        },
        "type": "(expression: Expression, index: number | Expression) => ElementAccessExpression",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.createElementAccessChain\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "createElementAccessChain",
        "kind": "FunctionDeclaration",
        "name": "createElementAccessChain",
        "signature": "createElementAccessChain: (
    expression: Expression,
    questionDotToken: QuestionDotToken | undefined,
    index: number | Expression
) => ElementAccessChain;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 6638,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6638",
        },
        "type": "(expression: Expression, questionDotToken: QuestionDotToken | undefined, index: number | Expression) => ElementAccessChain",
      },
      Object {
        "docs": Array [
          "/**
     * Create the builder that can handle the changes in program and iterate through changed files
     * to emit the those files and manage semantic diagnostics cache as well
     */",
        ],
        "id": "createEmitAndSemanticDiagnosticsBuilderProgram",
        "kind": "FunctionDeclaration",
        "name": "createEmitAndSemanticDiagnosticsBuilderProgram",
        "signature": "createEmitAndSemanticDiagnosticsBuilderProgram: {
    (
        newProgram: Program,
        host: BuilderProgramHost,
        oldProgram?: EmitAndSemanticDiagnosticsBuilderProgram,
        configFileParsingDiagnostics?: readonly Diagnostic[]
    ): EmitAndSemanticDiagnosticsBuilderProgram;
    (
        rootNames: readonly string[],
        options: CompilerOptions,
        host?: CompilerHost,
        oldProgram?: EmitAndSemanticDiagnosticsBuilderProgram,
        configFileParsingDiagnostics?: readonly Diagnostic[],
        projectReferences?: readonly ProjectReference[]
    ): EmitAndSemanticDiagnosticsBuilderProgram;
};",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4948,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4948",
        },
        "type": "{ (newProgram: Program, host: BuilderProgramHost, oldProgram?: EmitAndSemanticDiagnosticsBuilderProgram, configFileParsingDiagnostics?: readonly Diagnostic[]): EmitAndSemanticDiagnosticsBuilderProgram; (rootNames: readonly string[], options: CompilerOptions, host?: CompilerHost, oldProgram?: EmitAndSemanticDiagnosticsBuilderProgram, configFileParsingDiagnostics?: readonly Diagnostic[], projectReferences?: readonly ProjectReference[]): EmitAndSemanticDiagnosticsBuilderProgram; }",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.createEmptyStatement\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "createEmptyStatement",
        "kind": "FunctionDeclaration",
        "name": "createEmptyStatement",
        "signature": "createEmptyStatement: () => EmptyStatement;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 6756,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6756",
        },
        "type": "() => EmptyStatement",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.createEnumDeclaration\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "createEnumDeclaration",
        "kind": "FunctionDeclaration",
        "name": "createEnumDeclaration",
        "signature": "createEnumDeclaration: (
    decorators: readonly Decorator[] | undefined,
    modifiers: readonly Modifier[] | undefined,
    name: string | Identifier,
    members: readonly EnumMember[]
) => EnumDeclaration;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 6844,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6844",
        },
        "type": "(decorators: readonly Decorator[] | undefined, modifiers: readonly Modifier[] | undefined, name: string | Identifier, members: readonly EnumMember[]) => EnumDeclaration",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.createEnumMember\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "createEnumMember",
        "kind": "FunctionDeclaration",
        "name": "createEnumMember",
        "signature": "createEnumMember: (
    name:
        | string
        | Identifier
        | StringLiteral
        | NumericLiteral
        | ComputedPropertyName
        | PrivateIdentifier,
    initializer?: Expression | undefined
) => EnumMember;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 7020,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L7020",
        },
        "type": "(name: string | Identifier | StringLiteral | NumericLiteral | ComputedPropertyName | PrivateIdentifier, initializer?: Expression | undefined) => EnumMember",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.createExportAssignment\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "createExportAssignment",
        "kind": "FunctionDeclaration",
        "name": "createExportAssignment",
        "signature": "createExportAssignment: (
    decorators: readonly Decorator[] | undefined,
    modifiers: readonly Modifier[] | undefined,
    isExportEquals: boolean | undefined,
    expression: Expression
) => ExportAssignment;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 6884,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6884",
        },
        "type": "(decorators: readonly Decorator[] | undefined, modifiers: readonly Modifier[] | undefined, isExportEquals: boolean | undefined, expression: Expression) => ExportAssignment",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.createExportDeclaration\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "createExportDeclaration",
        "kind": "FunctionDeclaration",
        "name": "createExportDeclaration",
        "signature": "createExportDeclaration: (
    decorators: readonly Decorator[] | undefined,
    modifiers: readonly Modifier[] | undefined,
    exportClause: NamedExportBindings | undefined,
    moduleSpecifier?: Expression | undefined,
    isTypeOnly?: any
) => ExportDeclaration;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 7152,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L7152",
        },
        "type": "(decorators: readonly Decorator[] | undefined, modifiers: readonly Modifier[] | undefined, exportClause: NamedExportBindings | undefined, moduleSpecifier?: Expression | undefined, isTypeOnly?: any) => ExportDeclaration",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.createExportDefault\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "createExportDefault",
        "kind": "FunctionDeclaration",
        "name": "createExportDefault",
        "signature": "createExportDefault: (expression: Expression) => ExportAssignment;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 7052,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L7052",
        },
        "type": "(expression: Expression) => ExportAssignment",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.createExportSpecifier\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "createExportSpecifier",
        "kind": "FunctionDeclaration",
        "name": "createExportSpecifier",
        "signature": "createExportSpecifier: (
    propertyName: string | Identifier | undefined,
    name: string | Identifier
) => ExportSpecifier;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 6892,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6892",
        },
        "type": "(propertyName: string | Identifier | undefined, name: string | Identifier) => ExportSpecifier",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.createExpressionStatement\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "createExpressionStatement",
        "kind": "FunctionDeclaration",
        "name": "createExpressionStatement",
        "signature": "createExpressionStatement: (expression: Expression) => ExpressionStatement;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 6758,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6758",
        },
        "type": "(expression: Expression) => ExpressionStatement",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.createExpressionWithTypeArguments\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "createExpressionWithTypeArguments",
        "kind": "FunctionDeclaration",
        "name": "createExpressionWithTypeArguments",
        "signature": "createExpressionWithTypeArguments: (
    typeArguments: readonly TypeNode[] | undefined,
    expression: Expression
) => ExpressionWithTypeArguments;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 7124,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L7124",
        },
        "type": "(typeArguments: readonly TypeNode[] | undefined, expression: Expression) => ExpressionWithTypeArguments",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.createExternalModuleExport\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "createExternalModuleExport",
        "kind": "FunctionDeclaration",
        "name": "createExternalModuleExport",
        "signature": "createExternalModuleExport: (exportName: Identifier) => ExportDeclaration;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 7054,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L7054",
        },
        "type": "(exportName: Identifier) => ExportDeclaration",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.createExternalModuleReference\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "createExternalModuleReference",
        "kind": "FunctionDeclaration",
        "name": "createExternalModuleReference",
        "signature": "createExternalModuleReference: (
    expression: Expression
) => ExternalModuleReference;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 6896,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6896",
        },
        "type": "(expression: Expression) => ExternalModuleReference",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.createFalse\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "createFalse",
        "kind": "FunctionDeclaration",
        "name": "createFalse",
        "signature": "createFalse: () => FalseLiteral;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 6468,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6468",
        },
        "type": "() => FalseLiteral",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.createUniqueName(text, GeneratedIdentifierFlags.Optimistic | GeneratedIdentifierFlags.FileLevel)\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "createFileLevelUniqueName",
        "kind": "FunctionDeclaration",
        "name": "createFileLevelUniqueName",
        "signature": "createFileLevelUniqueName: (text: string) => Identifier;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 7070,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L7070",
        },
        "type": "(text: string) => Identifier",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.createFor\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "createFor",
        "kind": "FunctionDeclaration",
        "name": "createFor",
        "signature": "createFor: (
    initializer: Expression | VariableDeclarationList | undefined,
    condition: Expression | undefined,
    incrementor: Expression | undefined,
    statement: Statement
) => ForStatement;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 6778,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6778",
        },
        "type": "(initializer: Expression | VariableDeclarationList | undefined, condition: Expression | undefined, incrementor: Expression | undefined, statement: Statement) => ForStatement",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.createForIn\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "createForIn",
        "kind": "FunctionDeclaration",
        "name": "createForIn",
        "signature": "createForIn: (
    initializer: ForInitializer,
    expression: Expression,
    statement: Statement
) => ForInStatement;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 6782,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6782",
        },
        "type": "(initializer: ForInitializer, expression: Expression, statement: Statement) => ForInStatement",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.createForOf\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "createForOf",
        "kind": "FunctionDeclaration",
        "name": "createForOf",
        "signature": "createForOf: (
    awaitModifier: AwaitKeyword | undefined,
    initializer: ForInitializer,
    expression: Expression,
    statement: Statement
) => ForOfStatement;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 6786,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6786",
        },
        "type": "(awaitModifier: AwaitKeyword | undefined, initializer: ForInitializer, expression: Expression, statement: Statement) => ForOfStatement",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.createFunctionDeclaration\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "createFunctionDeclaration",
        "kind": "FunctionDeclaration",
        "name": "createFunctionDeclaration",
        "signature": "createFunctionDeclaration: (
    decorators: readonly Decorator[] | undefined,
    modifiers: readonly Modifier[] | undefined,
    asteriskToken: AsteriskToken | undefined,
    name: string | Identifier | undefined,
    typeParameters: readonly TypeParameterDeclaration[] | undefined,
    parameters: readonly ParameterDeclaration[],
    type: TypeNode | undefined,
    body: Block | undefined
) => FunctionDeclaration;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 6828,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6828",
        },
        "type": "(decorators: readonly Decorator[] | undefined, modifiers: readonly Modifier[] | undefined, asteriskToken: AsteriskToken | undefined, name: string | Identifier | undefined, typeParameters: readonly TypeParameterDeclaration[] | undefined, parameters: readonly ParameterDeclaration[], type: TypeNode | undefined, body: Block | undefined) => FunctionDeclaration",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.createFunctionExpression\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "createFunctionExpression",
        "kind": "FunctionDeclaration",
        "name": "createFunctionExpression",
        "signature": "createFunctionExpression: (
    modifiers: readonly Modifier[] | undefined,
    asteriskToken: AsteriskToken | undefined,
    name: string | Identifier | undefined,
    typeParameters: readonly TypeParameterDeclaration[] | undefined,
    parameters: readonly ParameterDeclaration[] | undefined,
    type: TypeNode | undefined,
    body: Block
) => FunctionExpression;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 6662,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6662",
        },
        "type": "(modifiers: readonly Modifier[] | undefined, asteriskToken: AsteriskToken | undefined, name: string | Identifier | undefined, typeParameters: readonly TypeParameterDeclaration[] | undefined, parameters: readonly ParameterDeclaration[] | undefined, type: TypeNode | undefined, body: Block) => FunctionExpression",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.createFunctionTypeNode\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "createFunctionTypeNode",
        "kind": "FunctionDeclaration",
        "name": "createFunctionTypeNode",
        "signature": "createFunctionTypeNode: (
    typeParameters: readonly TypeParameterDeclaration[] | undefined,
    parameters: readonly ParameterDeclaration[],
    type: TypeNode
) => FunctionTypeNode;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 6534,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6534",
        },
        "type": "(typeParameters: readonly TypeParameterDeclaration[] | undefined, parameters: readonly ParameterDeclaration[], type: TypeNode) => FunctionTypeNode",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.createGetAccessorDeclaration\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "createGetAccessor",
        "kind": "FunctionDeclaration",
        "name": "createGetAccessor",
        "signature": "createGetAccessor: (
    decorators: readonly Decorator[] | undefined,
    modifiers: readonly Modifier[] | undefined,
    name:
        | string
        | Identifier
        | StringLiteral
        | NumericLiteral
        | ComputedPropertyName
        | PrivateIdentifier,
    parameters: readonly ParameterDeclaration[],
    type: TypeNode | undefined,
    body: Block | undefined
) => GetAccessorDeclaration;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 6506,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6506",
        },
        "type": "(decorators: readonly Decorator[] | undefined, modifiers: readonly Modifier[] | undefined, name: string | Identifier | StringLiteral | NumericLiteral | ComputedPropertyName | PrivateIdentifier, parameters: readonly ParameterDeclaration[], type: TypeNode | undefined, body: Block | undefined) => GetAccessorDeclaration",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.createHeritageClause\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "createHeritageClause",
        "kind": "FunctionDeclaration",
        "name": "createHeritageClause",
        "signature": "createHeritageClause: (
    token: SyntaxKind.ExtendsKeyword | SyntaxKind.ImplementsKeyword,
    types: readonly ExpressionWithTypeArguments[]
) => HeritageClause;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 7000,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L7000",
        },
        "type": "(token: SyntaxKind.ExtendsKeyword | SyntaxKind.ImplementsKeyword, types: readonly ExpressionWithTypeArguments[]) => HeritageClause",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.createIdentifier\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "createIdentifier",
        "kind": "FunctionDeclaration",
        "name": "createIdentifier",
        "signature": "createIdentifier: (text: string) => Identifier;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 7062,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L7062",
        },
        "type": "(text: string) => Identifier",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.createIf\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "createIf",
        "kind": "FunctionDeclaration",
        "name": "createIf",
        "signature": "createIf: (
    expression: Expression,
    thenStatement: Statement,
    elseStatement?: Statement | undefined
) => IfStatement;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 6766,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6766",
        },
        "type": "(expression: Expression, thenStatement: Statement, elseStatement?: Statement | undefined) => IfStatement",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.createImportClause\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "createImportClause",
        "kind": "FunctionDeclaration",
        "name": "createImportClause",
        "signature": "createImportClause: (
    name: Identifier | undefined,
    namedBindings: NamedImportBindings | undefined,
    isTypeOnly?: any
) => ImportClause;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 7148,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L7148",
        },
        "type": "(name: Identifier | undefined, namedBindings: NamedImportBindings | undefined, isTypeOnly?: any) => ImportClause",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.createImportDeclaration\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "createImportDeclaration",
        "kind": "FunctionDeclaration",
        "name": "createImportDeclaration",
        "signature": "createImportDeclaration: (
    decorators: readonly Decorator[] | undefined,
    modifiers: readonly Modifier[] | undefined,
    importClause: ImportClause | undefined,
    moduleSpecifier: Expression
) => ImportDeclaration;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 6868,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6868",
        },
        "type": "(decorators: readonly Decorator[] | undefined, modifiers: readonly Modifier[] | undefined, importClause: ImportClause | undefined, moduleSpecifier: Expression) => ImportDeclaration",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.createImportEqualsDeclaration\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "createImportEqualsDeclaration",
        "kind": "FunctionDeclaration",
        "name": "createImportEqualsDeclaration",
        "signature": "createImportEqualsDeclaration: (
    decorators: readonly Decorator[] | undefined,
    modifiers: readonly Modifier[] | undefined,
    name: string | Identifier,
    moduleReference: ModuleReference
) => ImportEqualsDeclaration;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 6864,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6864",
        },
        "type": "(decorators: readonly Decorator[] | undefined, modifiers: readonly Modifier[] | undefined, name: string | Identifier, moduleReference: ModuleReference) => ImportEqualsDeclaration",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.createImportSpecifier\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "createImportSpecifier",
        "kind": "FunctionDeclaration",
        "name": "createImportSpecifier",
        "signature": "createImportSpecifier: (
    propertyName: Identifier | undefined,
    name: Identifier
) => ImportSpecifier;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 6880,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6880",
        },
        "type": "(propertyName: Identifier | undefined, name: Identifier) => ImportSpecifier",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.createImportTypeNode\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "createImportTypeNode",
        "kind": "FunctionDeclaration",
        "name": "createImportTypeNode",
        "signature": "createImportTypeNode: (
    argument: TypeNode,
    qualifier?: Identifier | QualifiedName | undefined,
    typeArguments?: readonly TypeNode[] | undefined,
    isTypeOf?: boolean | undefined
) => ImportTypeNode;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 6582,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6582",
        },
        "type": "(argument: TypeNode, qualifier?: Identifier | QualifiedName | undefined, typeArguments?: readonly TypeNode[] | undefined, isTypeOf?: boolean | undefined) => ImportTypeNode",
      },
      Object {
        "docs": Array [],
        "id": "createIncrementalCompilerHost",
        "kind": "FunctionDeclaration",
        "name": "createIncrementalCompilerHost",
        "signature": "createIncrementalCompilerHost: (
    options: CompilerOptions,
    system?: System
) => CompilerHost;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4963,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4963",
        },
        "type": "(options: CompilerOptions, system?: System) => CompilerHost",
      },
      Object {
        "docs": Array [],
        "id": "createIncrementalProgram",
        "kind": "FunctionDeclaration",
        "name": "createIncrementalProgram",
        "signature": "createIncrementalProgram: <
    T extends BuilderProgram = EmitAndSemanticDiagnosticsBuilderProgram
>({
    rootNames,
    options,
    configFileParsingDiagnostics,
    projectReferences,
    host,
    createProgram,
}: IncrementalProgramOptions<T>) => T;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4972,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4972",
        },
        "type": "<T extends BuilderProgram = EmitAndSemanticDiagnosticsBuilderProgram>({ rootNames, options, configFileParsingDiagnostics, projectReferences, host, createProgram }: IncrementalProgramOptions<T>) => T",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.createIndexedAccessTypeNode\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "createIndexedAccessTypeNode",
        "kind": "FunctionDeclaration",
        "name": "createIndexedAccessTypeNode",
        "signature": "createIndexedAccessTypeNode: (
    objectType: TypeNode,
    indexType: TypeNode
) => IndexedAccessTypeNode;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 6594,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6594",
        },
        "type": "(objectType: TypeNode, indexType: TypeNode) => IndexedAccessTypeNode",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.createIndexSignature\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "createIndexSignature",
        "kind": "FunctionDeclaration",
        "name": "createIndexSignature",
        "signature": "createIndexSignature: (
    decorators: readonly Decorator[] | undefined,
    modifiers: readonly Modifier[] | undefined,
    parameters: readonly ParameterDeclaration[],
    type: TypeNode
) => IndexSignatureDeclaration;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 7072,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L7072",
        },
        "type": "(decorators: readonly Decorator[] | undefined, modifiers: readonly Modifier[] | undefined, parameters: readonly ParameterDeclaration[], type: TypeNode) => IndexSignatureDeclaration",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.createInferTypeNode\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "createInferTypeNode",
        "kind": "FunctionDeclaration",
        "name": "createInferTypeNode",
        "signature": "createInferTypeNode: (typeParameter: TypeParameterDeclaration) => InferTypeNode;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 6578,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6578",
        },
        "type": "(typeParameter: TypeParameterDeclaration) => InferTypeNode",
      },
      Object {
        "docs": Array [],
        "id": "createInputFiles",
        "kind": "FunctionDeclaration",
        "name": "createInputFiles",
        "signature": "createInputFiles: {
    (javascriptText: string, declarationText: string): InputFiles;
    (
        readFileText: (path: string) => string,
        javascriptPath: string,
        javascriptMapPath: string,
        declarationPath: string,
        declarationMapPath: string,
        buildInfoPath: string
    ): InputFiles;
    (
        javascriptText: string,
        declarationText: string,
        javascriptMapPath: string,
        javascriptMapText: string,
        declarationMapPath: string,
        declarationMapText: string
    ): InputFiles;
};",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4252,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4252",
        },
        "type": "{ (javascriptText: string, declarationText: string): InputFiles; (readFileText: (path: string) => string, javascriptPath: string, javascriptMapPath: string, declarationPath: string, declarationMapPath: string, buildInfoPath: string): InputFiles; (javascriptText: string, declarationText: string, javascriptMapPath: string, javascriptMapText: string, declarationMapPath: string, declarationMapText: string): InputFiles; }",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.createInterfaceDeclaration\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "createInterfaceDeclaration",
        "kind": "FunctionDeclaration",
        "name": "createInterfaceDeclaration",
        "signature": "createInterfaceDeclaration: (
    decorators: readonly Decorator[] | undefined,
    modifiers: readonly Modifier[] | undefined,
    name: string | Identifier,
    typeParameters: readonly TypeParameterDeclaration[] | undefined,
    heritageClauses: readonly HeritageClause[] | undefined,
    members: readonly TypeElement[]
) => InterfaceDeclaration;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 6836,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6836",
        },
        "type": "(decorators: readonly Decorator[] | undefined, modifiers: readonly Modifier[] | undefined, name: string | Identifier, typeParameters: readonly TypeParameterDeclaration[] | undefined, heritageClauses: readonly HeritageClause[] | undefined, members: readonly TypeElement[]) => InterfaceDeclaration",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.createIntersectionTypeNode\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "createIntersectionTypeNode",
        "kind": "FunctionDeclaration",
        "name": "createIntersectionTypeNode",
        "signature": "createIntersectionTypeNode: (types: readonly TypeNode[]) => IntersectionTypeNode;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 6570,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6570",
        },
        "type": "(types: readonly TypeNode[]) => IntersectionTypeNode",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.createJSDocAugmentsTag\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "createJSDocAugmentsTag",
        "kind": "FunctionDeclaration",
        "name": "createJSDocAugmentsTag",
        "signature": "createJSDocAugmentsTag: (
    tagName: Identifier | undefined,
    className: ExpressionWithTypeArguments & {
        readonly expression: Identifier | PropertyAccessEntityNameExpression;
    },
    comment?: string | undefined
) => JSDocAugmentsTag;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 6914,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6914",
        },
        "type": "(tagName: Identifier | undefined, className: ExpressionWithTypeArguments & {    readonly expression: Identifier | PropertyAccessEntityNameExpression;}, comment?: string | undefined) => JSDocAugmentsTag",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.createJSDocAuthorTag\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "createJSDocAuthorTag",
        "kind": "FunctionDeclaration",
        "name": "createJSDocAuthorTag",
        "signature": "createJSDocAuthorTag: (
    tagName: Identifier | undefined,
    comment?: string | undefined
) => JSDocAuthorTag;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 6936,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6936",
        },
        "type": "(tagName: Identifier | undefined, comment?: string | undefined) => JSDocAuthorTag",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.createJSDocCallbackTag\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "createJSDocCallbackTag",
        "kind": "FunctionDeclaration",
        "name": "createJSDocCallbackTag",
        "signature": "createJSDocCallbackTag: (
    tagName: Identifier | undefined,
    typeExpression: JSDocSignature,
    fullName?: Identifier | JSDocNamespaceDeclaration | undefined,
    comment?: string | undefined
) => JSDocCallbackTag;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 6924,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6924",
        },
        "type": "(tagName: Identifier | undefined, typeExpression: JSDocSignature, fullName?: Identifier | JSDocNamespaceDeclaration | undefined, comment?: string | undefined) => JSDocCallbackTag",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.createJSDocClassTag\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "createJSDocClassTag",
        "kind": "FunctionDeclaration",
        "name": "createJSDocClassTag",
        "signature": "createJSDocClassTag: (
    tagName: Identifier | undefined,
    comment?: string | undefined
) => JSDocClassTag;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 6912,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6912",
        },
        "type": "(tagName: Identifier | undefined, comment?: string | undefined) => JSDocClassTag",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.createJSDocComment\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "createJSDocComment",
        "kind": "FunctionDeclaration",
        "name": "createJSDocComment",
        "signature": "createJSDocComment: (
    comment?: string | undefined,
    tags?: readonly JSDocTag[] | undefined
) => JSDoc;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 6908,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6908",
        },
        "type": "(comment?: string | undefined, tags?: readonly JSDocTag[] | undefined) => JSDoc",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.createJSDocEnumTag\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "createJSDocEnumTag",
        "kind": "FunctionDeclaration",
        "name": "createJSDocEnumTag",
        "signature": "createJSDocEnumTag: (
    tagName: Identifier | undefined,
    typeExpression: JSDocTypeExpression,
    comment?: string | undefined
) => JSDocEnumTag;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 6918,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6918",
        },
        "type": "(tagName: Identifier | undefined, typeExpression: JSDocTypeExpression, comment?: string | undefined) => JSDocEnumTag",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.createJSDocImplementsTag\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "createJSDocImplementsTag",
        "kind": "FunctionDeclaration",
        "name": "createJSDocImplementsTag",
        "signature": "createJSDocImplementsTag: (
    tagName: Identifier | undefined,
    className: ExpressionWithTypeArguments & {
        readonly expression: Identifier | PropertyAccessEntityNameExpression;
    },
    comment?: string | undefined
) => JSDocImplementsTag;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 6932,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6932",
        },
        "type": "(tagName: Identifier | undefined, className: ExpressionWithTypeArguments & {    readonly expression: Identifier | PropertyAccessEntityNameExpression;}, comment?: string | undefined) => JSDocImplementsTag",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.createJSDocParameterTag\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "createJSDocParameterTag",
        "kind": "FunctionDeclaration",
        "name": "createJSDocParameterTag",
        "signature": "createJSDocParameterTag: (
    tagName: Identifier | undefined,
    name: EntityName,
    isBracketed: boolean,
    typeExpression?: JSDocTypeExpression | undefined,
    isNameFirst?: boolean | undefined,
    comment?: string | undefined
) => JSDocParameterTag;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 6910,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6910",
        },
        "type": "(tagName: Identifier | undefined, name: EntityName, isBracketed: boolean, typeExpression?: JSDocTypeExpression | undefined, isNameFirst?: boolean | undefined, comment?: string | undefined) => JSDocParameterTag",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.createJSDocParameterTag\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "createJSDocParamTag",
        "kind": "FunctionDeclaration",
        "name": "createJSDocParamTag",
        "signature": "createJSDocParamTag: (
    name: EntityName,
    isBracketed: boolean,
    typeExpression?: JSDocTypeExpression | undefined,
    comment?: string | undefined
) => JSDocParameterTag;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 7156,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L7156",
        },
        "type": "(name: EntityName, isBracketed: boolean, typeExpression?: JSDocTypeExpression | undefined, comment?: string | undefined) => JSDocParameterTag",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.createJSDocPrivateTag\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "createJSDocPrivateTag",
        "kind": "FunctionDeclaration",
        "name": "createJSDocPrivateTag",
        "signature": "createJSDocPrivateTag: (
    tagName: Identifier | undefined,
    comment?: string | undefined
) => JSDocPrivateTag;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 6940,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6940",
        },
        "type": "(tagName: Identifier | undefined, comment?: string | undefined) => JSDocPrivateTag",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.createJSDocPropertyTag\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "createJSDocPropertyTag",
        "kind": "FunctionDeclaration",
        "name": "createJSDocPropertyTag",
        "signature": "createJSDocPropertyTag: (
    tagName: Identifier | undefined,
    name: EntityName,
    isBracketed: boolean,
    typeExpression?: JSDocTypeExpression | undefined,
    isNameFirst?: boolean | undefined,
    comment?: string | undefined
) => JSDocPropertyTag;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 6928,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6928",
        },
        "type": "(tagName: Identifier | undefined, name: EntityName, isBracketed: boolean, typeExpression?: JSDocTypeExpression | undefined, isNameFirst?: boolean | undefined, comment?: string | undefined) => JSDocPropertyTag",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.createJSDocProtectedTag\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "createJSDocProtectedTag",
        "kind": "FunctionDeclaration",
        "name": "createJSDocProtectedTag",
        "signature": "createJSDocProtectedTag: (
    tagName: Identifier | undefined,
    comment?: string | undefined
) => JSDocProtectedTag;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 6942,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6942",
        },
        "type": "(tagName: Identifier | undefined, comment?: string | undefined) => JSDocProtectedTag",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.createJSDocPublicTag\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "createJSDocPublicTag",
        "kind": "FunctionDeclaration",
        "name": "createJSDocPublicTag",
        "signature": "createJSDocPublicTag: (
    tagName: Identifier | undefined,
    comment?: string | undefined
) => JSDocPublicTag;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 6938,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6938",
        },
        "type": "(tagName: Identifier | undefined, comment?: string | undefined) => JSDocPublicTag",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.createJSDocReadonlyTag\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "createJSDocReadonlyTag",
        "kind": "FunctionDeclaration",
        "name": "createJSDocReadonlyTag",
        "signature": "createJSDocReadonlyTag: (
    tagName: Identifier | undefined,
    comment?: string | undefined
) => JSDocReadonlyTag;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 6944,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6944",
        },
        "type": "(tagName: Identifier | undefined, comment?: string | undefined) => JSDocReadonlyTag",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.createJSDocReturnTag\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "createJSDocReturnTag",
        "kind": "FunctionDeclaration",
        "name": "createJSDocReturnTag",
        "signature": "createJSDocReturnTag: (
    tagName: Identifier | undefined,
    typeExpression?: JSDocTypeExpression | undefined,
    comment?: string | undefined
) => JSDocReturnTag;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 6904,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6904",
        },
        "type": "(tagName: Identifier | undefined, typeExpression?: JSDocTypeExpression | undefined, comment?: string | undefined) => JSDocReturnTag",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.createJSDocSignature\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "createJSDocSignature",
        "kind": "FunctionDeclaration",
        "name": "createJSDocSignature",
        "signature": "createJSDocSignature: (
    typeParameters: readonly JSDocTemplateTag[] | undefined,
    parameters: readonly JSDocParameterTag[],
    type?: JSDocReturnTag | undefined
) => JSDocSignature;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 6926,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6926",
        },
        "type": "(typeParameters: readonly JSDocTemplateTag[] | undefined, parameters: readonly JSDocParameterTag[], type?: JSDocReturnTag | undefined) => JSDocSignature",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.createJSDocUnknownTag\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "createJSDocTag",
        "kind": "FunctionDeclaration",
        "name": "createJSDocTag",
        "signature": "createJSDocTag: (
    tagName: Identifier,
    comment?: string | undefined
) => JSDocUnknownTag;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 6946,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6946",
        },
        "type": "(tagName: Identifier, comment?: string | undefined) => JSDocUnknownTag",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.createJSDocTemplateTag\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "createJSDocTemplateTag",
        "kind": "FunctionDeclaration",
        "name": "createJSDocTemplateTag",
        "signature": "createJSDocTemplateTag: (
    tagName: Identifier | undefined,
    constraint: JSDocTypeExpression | undefined,
    typeParameters: readonly TypeParameterDeclaration[],
    comment?: string | undefined
) => JSDocTemplateTag;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 6920,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6920",
        },
        "type": "(tagName: Identifier | undefined, constraint: JSDocTypeExpression | undefined, typeParameters: readonly TypeParameterDeclaration[], comment?: string | undefined) => JSDocTemplateTag",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.createJSDocThisTag\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "createJSDocThisTag",
        "kind": "FunctionDeclaration",
        "name": "createJSDocThisTag",
        "signature": "createJSDocThisTag: (
    tagName: Identifier | undefined,
    typeExpression: JSDocTypeExpression,
    comment?: string | undefined
) => JSDocThisTag;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 6906,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6906",
        },
        "type": "(tagName: Identifier | undefined, typeExpression: JSDocTypeExpression, comment?: string | undefined) => JSDocThisTag",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.createJSDocTypedefTag\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "createJSDocTypedefTag",
        "kind": "FunctionDeclaration",
        "name": "createJSDocTypedefTag",
        "signature": "createJSDocTypedefTag: (
    tagName: Identifier | undefined,
    typeExpression?: JSDocTypeLiteral | JSDocTypeExpression | undefined,
    fullName?: Identifier | JSDocNamespaceDeclaration | undefined,
    comment?: string | undefined
) => JSDocTypedefTag;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 6922,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6922",
        },
        "type": "(tagName: Identifier | undefined, typeExpression?: JSDocTypeLiteral | JSDocTypeExpression | undefined, fullName?: Identifier | JSDocNamespaceDeclaration | undefined, comment?: string | undefined) => JSDocTypedefTag",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.createJSDocTypeExpression\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "createJSDocTypeExpression",
        "kind": "FunctionDeclaration",
        "name": "createJSDocTypeExpression",
        "signature": "createJSDocTypeExpression: (type: TypeNode) => JSDocTypeExpression;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 6900,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6900",
        },
        "type": "(type: TypeNode) => JSDocTypeExpression",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.createJSDocTypeLiteral\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "createJSDocTypeLiteral",
        "kind": "FunctionDeclaration",
        "name": "createJSDocTypeLiteral",
        "signature": "createJSDocTypeLiteral: (
    jsDocPropertyTags?: readonly JSDocPropertyLikeTag[] | undefined,
    isArrayType?: boolean | undefined
) => JSDocTypeLiteral;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 6930,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6930",
        },
        "type": "(jsDocPropertyTags?: readonly JSDocPropertyLikeTag[] | undefined, isArrayType?: boolean | undefined) => JSDocTypeLiteral",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.createJSDocTypeTag\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "createJSDocTypeTag",
        "kind": "FunctionDeclaration",
        "name": "createJSDocTypeTag",
        "signature": "createJSDocTypeTag: (
    tagName: Identifier | undefined,
    typeExpression: JSDocTypeExpression,
    comment?: string | undefined
) => JSDocTypeTag;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 6902,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6902",
        },
        "type": "(tagName: Identifier | undefined, typeExpression: JSDocTypeExpression, comment?: string | undefined) => JSDocTypeTag",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.createJsxAttribute\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "createJsxAttribute",
        "kind": "FunctionDeclaration",
        "name": "createJsxAttribute",
        "signature": "createJsxAttribute: (
    name: Identifier,
    initializer: StringLiteral | JsxExpression | undefined
) => JsxAttribute;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 6976,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6976",
        },
        "type": "(name: Identifier, initializer: StringLiteral | JsxExpression | undefined) => JsxAttribute",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.createJsxAttributes\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "createJsxAttributes",
        "kind": "FunctionDeclaration",
        "name": "createJsxAttributes",
        "signature": "createJsxAttributes: (properties: readonly JsxAttributeLike[]) => JsxAttributes;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 6980,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6980",
        },
        "type": "(properties: readonly JsxAttributeLike[]) => JsxAttributes",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.createJsxClosingElement\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "createJsxClosingElement",
        "kind": "FunctionDeclaration",
        "name": "createJsxClosingElement",
        "signature": "createJsxClosingElement: (tagName: JsxTagNameExpression) => JsxClosingElement;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 6960,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6960",
        },
        "type": "(tagName: JsxTagNameExpression) => JsxClosingElement",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.createJsxElement\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "createJsxElement",
        "kind": "FunctionDeclaration",
        "name": "createJsxElement",
        "signature": "createJsxElement: (
    openingElement: JsxOpeningElement,
    children: readonly JsxChild[],
    closingElement: JsxClosingElement
) => JsxElement;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 6948,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6948",
        },
        "type": "(openingElement: JsxOpeningElement, children: readonly JsxChild[], closingElement: JsxClosingElement) => JsxElement",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.createJsxExpression\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "createJsxExpression",
        "kind": "FunctionDeclaration",
        "name": "createJsxExpression",
        "signature": "createJsxExpression: (
    dotDotDotToken: DotDotDotToken | undefined,
    expression: Expression | undefined
) => JsxExpression;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 6988,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6988",
        },
        "type": "(dotDotDotToken: DotDotDotToken | undefined, expression: Expression | undefined) => JsxExpression",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.createJsxFragment\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "createJsxFragment",
        "kind": "FunctionDeclaration",
        "name": "createJsxFragment",
        "signature": "createJsxFragment: (
    openingFragment: JsxOpeningFragment,
    children: readonly JsxChild[],
    closingFragment: JsxClosingFragment
) => JsxFragment;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 6964,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6964",
        },
        "type": "(openingFragment: JsxOpeningFragment, children: readonly JsxChild[], closingFragment: JsxClosingFragment) => JsxFragment",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.createJsxJsxClosingFragment\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "createJsxJsxClosingFragment",
        "kind": "FunctionDeclaration",
        "name": "createJsxJsxClosingFragment",
        "signature": "createJsxJsxClosingFragment: () => JsxClosingFragment;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 6972,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6972",
        },
        "type": "() => JsxClosingFragment",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.createJsxOpeningElement\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "createJsxOpeningElement",
        "kind": "FunctionDeclaration",
        "name": "createJsxOpeningElement",
        "signature": "createJsxOpeningElement: (
    tagName: JsxTagNameExpression,
    typeArguments: readonly TypeNode[] | undefined,
    attributes: JsxAttributes
) => JsxOpeningElement;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 6956,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6956",
        },
        "type": "(tagName: JsxTagNameExpression, typeArguments: readonly TypeNode[] | undefined, attributes: JsxAttributes) => JsxOpeningElement",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.createJsxOpeningFragment\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "createJsxOpeningFragment",
        "kind": "FunctionDeclaration",
        "name": "createJsxOpeningFragment",
        "signature": "createJsxOpeningFragment: () => JsxOpeningFragment;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 6970,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6970",
        },
        "type": "() => JsxOpeningFragment",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.createJsxSelfClosingElement\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "createJsxSelfClosingElement",
        "kind": "FunctionDeclaration",
        "name": "createJsxSelfClosingElement",
        "signature": "createJsxSelfClosingElement: (
    tagName: JsxTagNameExpression,
    typeArguments: readonly TypeNode[] | undefined,
    attributes: JsxAttributes
) => JsxSelfClosingElement;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 6952,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6952",
        },
        "type": "(tagName: JsxTagNameExpression, typeArguments: readonly TypeNode[] | undefined, attributes: JsxAttributes) => JsxSelfClosingElement",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.createJsxSpreadAttribute\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "createJsxSpreadAttribute",
        "kind": "FunctionDeclaration",
        "name": "createJsxSpreadAttribute",
        "signature": "createJsxSpreadAttribute: (expression: Expression) => JsxSpreadAttribute;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 6984,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6984",
        },
        "type": "(expression: Expression) => JsxSpreadAttribute",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.createJsxText\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "createJsxText",
        "kind": "FunctionDeclaration",
        "name": "createJsxText",
        "signature": "createJsxText: (
    text: string,
    containsOnlyTriviaWhiteSpaces?: boolean | undefined
) => JsxText;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 6966,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6966",
        },
        "type": "(text: string, containsOnlyTriviaWhiteSpaces?: boolean | undefined) => JsxText",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.createKeywordTypeNode\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "createKeywordTypeNode",
        "kind": "FunctionDeclaration",
        "name": "createKeywordTypeNode",
        "signature": "createKeywordTypeNode: <TKind extends KeywordTypeSyntaxKind>(
    kind: TKind
) => KeywordTypeNode<TKind>;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 6524,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6524",
        },
        "type": "<TKind extends KeywordTypeSyntaxKind>(kind: TKind) => KeywordTypeNode<TKind>",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.createLabel\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "createLabel",
        "kind": "FunctionDeclaration",
        "name": "createLabel",
        "signature": "createLabel: (
    label: string | Identifier,
    statement: Statement
) => LabeledStatement;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 6810,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6810",
        },
        "type": "(label: string | Identifier, statement: Statement) => LabeledStatement",
      },
      Object {
        "docs": Array [],
        "id": "createLanguageService",
        "kind": "FunctionDeclaration",
        "name": "createLanguageService",
        "signature": "createLanguageService: (
    host: LanguageServiceHost,
    documentRegistry?: DocumentRegistry,
    syntaxOnlyOrLanguageServiceMode?: boolean | LanguageServiceMode
) => LanguageService;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 6420,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6420",
        },
        "type": "(host: LanguageServiceHost, documentRegistry?: DocumentRegistry, syntaxOnlyOrLanguageServiceMode?: boolean | LanguageServiceMode) => LanguageService",
      },
      Object {
        "docs": Array [],
        "id": "createLanguageServiceSourceFile",
        "kind": "FunctionDeclaration",
        "name": "createLanguageServiceSourceFile",
        "signature": "createLanguageServiceSourceFile: (
    fileName: string,
    scriptSnapshot: IScriptSnapshot,
    scriptTarget: ScriptTarget,
    version: string,
    setNodeParents: boolean,
    scriptKind?: ScriptKind
) => SourceFile;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 6418,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6418",
        },
        "type": "(fileName: string, scriptSnapshot: IScriptSnapshot, scriptTarget: ScriptTarget, version: string, setNodeParents: boolean, scriptKind?: ScriptKind) => SourceFile",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.createLessThan\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "createLessThan",
        "kind": "FunctionDeclaration",
        "name": "createLessThan",
        "signature": "createLessThan: (left: Expression, right: Expression) => Expression;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 7160,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L7160",
        },
        "type": "(left: Expression, right: Expression) => Expression",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.createLiteralTypeNode\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "createLiteralTypeNode",
        "kind": "FunctionDeclaration",
        "name": "createLiteralTypeNode",
        "signature": "createLiteralTypeNode: (
    literal:
        | LiteralExpression
        | TrueLiteral
        | FalseLiteral
        | PrefixUnaryExpression
        | NullLiteral
) => LiteralTypeNode;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 6602,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6602",
        },
        "type": "(literal: LiteralExpression | TrueLiteral | FalseLiteral | PrefixUnaryExpression | NullLiteral) => LiteralTypeNode",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.createLogicalAnd\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "createLogicalAnd",
        "kind": "FunctionDeclaration",
        "name": "createLogicalAnd",
        "signature": "createLogicalAnd: (left: Expression, right: Expression) => BinaryExpression;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 7172,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L7172",
        },
        "type": "(left: Expression, right: Expression) => BinaryExpression",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.createLogicalNot\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "createLogicalNot",
        "kind": "FunctionDeclaration",
        "name": "createLogicalNot",
        "signature": "createLogicalNot: (operand: Expression) => PrefixUnaryExpression;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 7178,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L7178",
        },
        "type": "(operand: Expression) => PrefixUnaryExpression",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.createLogicalOr\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "createLogicalOr",
        "kind": "FunctionDeclaration",
        "name": "createLogicalOr",
        "signature": "createLogicalOr: (left: Expression, right: Expression) => BinaryExpression;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 7174,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L7174",
        },
        "type": "(left: Expression, right: Expression) => BinaryExpression",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.createLoopVariable\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "createLoopVariable",
        "kind": "FunctionDeclaration",
        "name": "createLoopVariable",
        "signature": "createLoopVariable: () => Identifier;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 6454,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6454",
        },
        "type": "() => Identifier",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.createMappedTypeNode\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "createMappedTypeNode",
        "kind": "FunctionDeclaration",
        "name": "createMappedTypeNode",
        "signature": "createMappedTypeNode: (
    readonlyToken: ReadonlyKeyword | PlusToken | MinusToken | undefined,
    typeParameter: TypeParameterDeclaration,
    nameType: TypeNode | undefined,
    questionToken: QuestionToken | PlusToken | MinusToken | undefined,
    type: TypeNode | undefined
) => MappedTypeNode;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 6598,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6598",
        },
        "type": "(readonlyToken: ReadonlyKeyword | PlusToken | MinusToken | undefined, typeParameter: TypeParameterDeclaration, nameType: TypeNode | undefined, questionToken: QuestionToken | PlusToken | MinusToken | undefined, type: TypeNode | undefined) => MappedTypeNode",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.createMetaProperty\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "createMetaProperty",
        "kind": "FunctionDeclaration",
        "name": "createMetaProperty",
        "signature": "createMetaProperty: (
    keywordToken: SyntaxKind.ImportKeyword | SyntaxKind.NewKeyword,
    name: Identifier
) => MetaProperty;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 6738,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6738",
        },
        "type": "(keywordToken: SyntaxKind.ImportKeyword | SyntaxKind.NewKeyword, name: Identifier) => MetaProperty",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.createMethodDeclaration\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "createMethod",
        "kind": "FunctionDeclaration",
        "name": "createMethod",
        "signature": "createMethod: (
    decorators: readonly Decorator[] | undefined,
    modifiers: readonly Modifier[] | undefined,
    asteriskToken: AsteriskToken | undefined,
    name:
        | string
        | Identifier
        | StringLiteral
        | NumericLiteral
        | ComputedPropertyName
        | PrivateIdentifier,
    questionToken: QuestionToken | undefined,
    typeParameters: readonly TypeParameterDeclaration[] | undefined,
    parameters: readonly ParameterDeclaration[],
    type: TypeNode | undefined,
    body: Block | undefined
) => MethodDeclaration;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 6498,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6498",
        },
        "type": "(decorators: readonly Decorator[] | undefined, modifiers: readonly Modifier[] | undefined, asteriskToken: AsteriskToken | undefined, name: string | Identifier | StringLiteral | NumericLiteral | ComputedPropertyName | PrivateIdentifier, questionToken: QuestionToken | undefined, typeParameters: readonly TypeParameterDeclaration[] | undefined, parameters: readonly ParameterDeclaration[], type: TypeNode | undefined, body: Block | undefined) => MethodDeclaration",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.createMethodSignature\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "createMethodSignature",
        "kind": "FunctionDeclaration",
        "name": "createMethodSignature",
        "signature": "createMethodSignature: (
    typeParameters: readonly TypeParameterDeclaration[] | undefined,
    parameters: readonly ParameterDeclaration[],
    type: TypeNode | undefined,
    name: string | PropertyName,
    questionToken: QuestionToken | undefined
) => MethodSignature;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 7085,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L7085",
        },
        "type": "(typeParameters: readonly TypeParameterDeclaration[] | undefined, parameters: readonly ParameterDeclaration[], type: TypeNode | undefined, name: string | PropertyName, questionToken: QuestionToken | undefined) => MethodSignature",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.createModifier\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "createModifier",
        "kind": "FunctionDeclaration",
        "name": "createModifier",
        "signature": "createModifier: <T extends ModifierSyntaxKind>(kind: T) => ModifierToken<T>;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 6470,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6470",
        },
        "type": "<T extends ModifierSyntaxKind>(kind: T) => ModifierToken<T>",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.createModifiersFromModifierFlags\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "createModifiersFromModifierFlags",
        "kind": "FunctionDeclaration",
        "name": "createModifiersFromModifierFlags",
        "signature": "createModifiersFromModifierFlags: (flags: ModifierFlags) => Modifier[];",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 6472,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6472",
        },
        "type": "(flags: ModifierFlags) => Modifier[]",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.createModuleBlock\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "createModuleBlock",
        "kind": "FunctionDeclaration",
        "name": "createModuleBlock",
        "signature": "createModuleBlock: (statements: readonly Statement[]) => ModuleBlock;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 6852,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6852",
        },
        "type": "(statements: readonly Statement[]) => ModuleBlock",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.createModuleDeclaration\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "createModuleDeclaration",
        "kind": "FunctionDeclaration",
        "name": "createModuleDeclaration",
        "signature": "createModuleDeclaration: (
    decorators: readonly Decorator[] | undefined,
    modifiers: readonly Modifier[] | undefined,
    name: ModuleName,
    body:
        | Identifier
        | ModuleBlock
        | NamespaceDeclaration
        | JSDocNamespaceDeclaration
        | undefined,
    flags?: NodeFlags | undefined
) => ModuleDeclaration;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 6848,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6848",
        },
        "type": "(decorators: readonly Decorator[] | undefined, modifiers: readonly Modifier[] | undefined, name: ModuleName, body: Identifier | ModuleBlock | NamespaceDeclaration | JSDocNamespaceDeclaration | undefined, flags?: NodeFlags | undefined) => ModuleDeclaration",
      },
      Object {
        "docs": Array [],
        "id": "createModuleResolutionCache",
        "kind": "FunctionDeclaration",
        "name": "createModuleResolutionCache",
        "signature": "createModuleResolutionCache: (
    currentDirectory: string,
    getCanonicalFileName: (s: string) => string,
    options?: CompilerOptions
) => ModuleResolutionCache;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4671,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4671",
        },
        "type": "(currentDirectory: string, getCanonicalFileName: (s: string) => string, options?: CompilerOptions) => ModuleResolutionCache",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.createNamedExports\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "createNamedExports",
        "kind": "FunctionDeclaration",
        "name": "createNamedExports",
        "signature": "createNamedExports: (elements: readonly ExportSpecifier[]) => NamedExports;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 6888,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6888",
        },
        "type": "(elements: readonly ExportSpecifier[]) => NamedExports",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.createNamedImports\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "createNamedImports",
        "kind": "FunctionDeclaration",
        "name": "createNamedImports",
        "signature": "createNamedImports: (elements: readonly ImportSpecifier[]) => NamedImports;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 6876,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6876",
        },
        "type": "(elements: readonly ImportSpecifier[]) => NamedImports",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.createNamespaceExport\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "createNamespaceExport",
        "kind": "FunctionDeclaration",
        "name": "createNamespaceExport",
        "signature": "createNamespaceExport: (name: Identifier) => NamespaceExport;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 7056,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L7056",
        },
        "type": "(name: Identifier) => NamespaceExport",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.createNamespaceExportDeclaration\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "createNamespaceExportDeclaration",
        "kind": "FunctionDeclaration",
        "name": "createNamespaceExportDeclaration",
        "signature": "createNamespaceExportDeclaration: (
    name: string | Identifier
) => NamespaceExportDeclaration;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 6860,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6860",
        },
        "type": "(name: string | Identifier) => NamespaceExportDeclaration",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.createNamespaceImport\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "createNamespaceImport",
        "kind": "FunctionDeclaration",
        "name": "createNamespaceImport",
        "signature": "createNamespaceImport: (name: Identifier) => NamespaceImport;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 6872,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6872",
        },
        "type": "(name: Identifier) => NamespaceImport",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.createNew\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "createNew",
        "kind": "FunctionDeclaration",
        "name": "createNew",
        "signature": "createNew: (
    expression: Expression,
    typeArguments: readonly TypeNode[] | undefined,
    argumentsArray: readonly Expression[] | undefined
) => NewExpression;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 6650,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6650",
        },
        "type": "(expression: Expression, typeArguments: readonly TypeNode[] | undefined, argumentsArray: readonly Expression[] | undefined) => NewExpression",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use an appropriate \`factory\` method instead. */",
        ],
        "id": "createNode",
        "kind": "FunctionDeclaration",
        "name": "createNode",
        "signature": "createNode: (kind: SyntaxKind, pos?: any, end?: any) => Node;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 7180,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L7180",
        },
        "type": "(kind: SyntaxKind, pos?: any, end?: any) => Node",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.createNodeArray\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "createNodeArray",
        "kind": "FunctionDeclaration",
        "name": "createNodeArray",
        "signature": "createNodeArray: <T extends Node>(
    elements?: readonly T[],
    hasTrailingComma?: boolean | undefined
) => NodeArray<T>;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 6439,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6439",
        },
        "type": "<T extends Node>(elements?: readonly T[], hasTrailingComma?: boolean | undefined) => NodeArray<T>",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.createNonNullChain\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "createNonNullChain",
        "kind": "FunctionDeclaration",
        "name": "createNonNullChain",
        "signature": "createNonNullChain: (expression: Expression) => NonNullChain;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 6734,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6734",
        },
        "type": "(expression: Expression) => NonNullChain",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.createNonNullExpression\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "createNonNullExpression",
        "kind": "FunctionDeclaration",
        "name": "createNonNullExpression",
        "signature": "createNonNullExpression: (expression: Expression) => NonNullExpression;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 6730,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6730",
        },
        "type": "(expression: Expression) => NonNullExpression",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.createNotEmittedStatement\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "createNotEmittedStatement",
        "kind": "FunctionDeclaration",
        "name": "createNotEmittedStatement",
        "signature": "createNotEmittedStatement: (original: Node) => NotEmittedStatement;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 7026,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L7026",
        },
        "type": "(original: Node) => NotEmittedStatement",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.createNull\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "createNull",
        "kind": "FunctionDeclaration",
        "name": "createNull",
        "signature": "createNull: () => NullLiteral;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 6464,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6464",
        },
        "type": "() => NullLiteral",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.createNumericLiteral\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "createNumericLiteral",
        "kind": "FunctionDeclaration",
        "name": "createNumericLiteral",
        "signature": "createNumericLiteral: (
    value: string | number,
    numericLiteralFlags?: TokenFlags | undefined
) => NumericLiteral;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 6441,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6441",
        },
        "type": "(value: string | number, numericLiteralFlags?: TokenFlags | undefined) => NumericLiteral",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.createObjectBindingPattern\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "createObjectBindingPattern",
        "kind": "FunctionDeclaration",
        "name": "createObjectBindingPattern",
        "signature": "createObjectBindingPattern: (
    elements: readonly BindingElement[]
) => ObjectBindingPattern;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 6606,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6606",
        },
        "type": "(elements: readonly BindingElement[]) => ObjectBindingPattern",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.createObjectLiteral\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "createObjectLiteral",
        "kind": "FunctionDeclaration",
        "name": "createObjectLiteral",
        "signature": "createObjectLiteral: (
    properties?: readonly ObjectLiteralElementLike[] | undefined,
    multiLine?: boolean | undefined
) => ObjectLiteralExpression;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 6622,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6622",
        },
        "type": "(properties?: readonly ObjectLiteralElementLike[] | undefined, multiLine?: boolean | undefined) => ObjectLiteralExpression",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.createOmittedExpression\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "createOmittedExpression",
        "kind": "FunctionDeclaration",
        "name": "createOmittedExpression",
        "signature": "createOmittedExpression: () => OmittedExpression;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 6724,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6724",
        },
        "type": "() => OmittedExpression",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.createUniqueName(text, GeneratedIdentifierFlags.Optimistic)\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "createOptimisticUniqueName",
        "kind": "FunctionDeclaration",
        "name": "createOptimisticUniqueName",
        "signature": "createOptimisticUniqueName: (text: string) => Identifier;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 7068,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L7068",
        },
        "type": "(text: string) => Identifier",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.createOptionalTypeNode\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "createOptionalTypeNode",
        "kind": "FunctionDeclaration",
        "name": "createOptionalTypeNode",
        "signature": "createOptionalTypeNode: (type: TypeNode) => OptionalTypeNode;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 6558,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6558",
        },
        "type": "(type: TypeNode) => OptionalTypeNode",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.createParameterDeclaration\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "createParameter",
        "kind": "FunctionDeclaration",
        "name": "createParameter",
        "signature": "createParameter: (
    decorators: readonly Decorator[] | undefined,
    modifiers: readonly Modifier[] | undefined,
    dotDotDotToken: DotDotDotToken | undefined,
    name: string | Identifier | ObjectBindingPattern | ArrayBindingPattern,
    questionToken?: QuestionToken | undefined,
    type?: TypeNode | undefined,
    initializer?: Expression | undefined
) => ParameterDeclaration;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 6486,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6486",
        },
        "type": "(decorators: readonly Decorator[] | undefined, modifiers: readonly Modifier[] | undefined, dotDotDotToken: DotDotDotToken | undefined, name: string | Identifier | ObjectBindingPattern | ArrayBindingPattern, questionToken?: QuestionToken | undefined, type?: TypeNode | undefined, initializer?: Expression | undefined) => ParameterDeclaration",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.createParen\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "createParen",
        "kind": "FunctionDeclaration",
        "name": "createParen",
        "signature": "createParen: (expression: Expression) => ParenthesizedExpression;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 6658,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6658",
        },
        "type": "(expression: Expression) => ParenthesizedExpression",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.createParenthesizedType\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "createParenthesizedType",
        "kind": "FunctionDeclaration",
        "name": "createParenthesizedType",
        "signature": "createParenthesizedType: (type: TypeNode) => ParenthesizedTypeNode;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 6586,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6586",
        },
        "type": "(type: TypeNode) => ParenthesizedTypeNode",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.createPartiallyEmittedExpression\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "createPartiallyEmittedExpression",
        "kind": "FunctionDeclaration",
        "name": "createPartiallyEmittedExpression",
        "signature": "createPartiallyEmittedExpression: (
    expression: Expression,
    original?: Node | undefined
) => PartiallyEmittedExpression;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 7028,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L7028",
        },
        "type": "(expression: Expression, original?: Node | undefined) => PartiallyEmittedExpression",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.createPostfix\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "createPostfix",
        "kind": "FunctionDeclaration",
        "name": "createPostfix",
        "signature": "createPostfix: (
    operand: Expression,
    operator: PostfixUnaryOperator
) => PostfixUnaryExpression;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 6686,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6686",
        },
        "type": "(operand: Expression, operator: PostfixUnaryOperator) => PostfixUnaryExpression",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.createPostfixIncrement\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "createPostfixIncrement",
        "kind": "FunctionDeclaration",
        "name": "createPostfixIncrement",
        "signature": "createPostfixIncrement: (operand: Expression) => PostfixUnaryExpression;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 7176,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L7176",
        },
        "type": "(operand: Expression) => PostfixUnaryExpression",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.createPrefix\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "createPrefix",
        "kind": "FunctionDeclaration",
        "name": "createPrefix",
        "signature": "createPrefix: (
    operator: PrefixUnaryOperator,
    operand: Expression
) => PrefixUnaryExpression;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 6682,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6682",
        },
        "type": "(operator: PrefixUnaryOperator, operand: Expression) => PrefixUnaryExpression",
      },
      Object {
        "docs": Array [],
        "id": "createPrinter",
        "kind": "FunctionDeclaration",
        "name": "createPrinter",
        "signature": "createPrinter: (
    printerOptions?: PrinterOptions,
    handlers?: PrintHandlers
) => Printer;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4762,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4762",
        },
        "type": "(printerOptions?: PrinterOptions, handlers?: PrintHandlers) => Printer",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.createPrivateIdentifier\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "createPrivateIdentifier",
        "kind": "FunctionDeclaration",
        "name": "createPrivateIdentifier",
        "signature": "createPrivateIdentifier: (text: string) => PrivateIdentifier;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 6458,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6458",
        },
        "type": "(text: string) => PrivateIdentifier",
      },
      Object {
        "docs": Array [
          "/**
     * Create a new 'Program' instance. A Program is an immutable collection of 'SourceFile's and a 'CompilerOptions'
     * that represent a compilation unit.
     *
     * Creating a program proceeds from a set of root files, expanding the set of inputs by following imports and
     * triple-slash-reference-path directives transitively. '@types' and triple-slash-reference-types are also pulled in.
     *
     * @param createProgramOptions - The options for creating a program.
     * @returns A 'Program' object.
     */",
          "/**
     * Create a new 'Program' instance. A Program is an immutable collection of 'SourceFile's and a 'CompilerOptions'
     * that represent a compilation unit.
     *
     * Creating a program proceeds from a set of root files, expanding the set of inputs by following imports and
     * triple-slash-reference-path directives transitively. '@types' and triple-slash-reference-types are also pulled in.
     *
     * @param rootNames - A set of root files.
     * @param options - The compiler options which should be used.
     * @param host - The host interacts with the underlying file system.
     * @param oldProgram - Reuses an old program structure.
     * @param configFileParsingDiagnostics - error during config file parsing
     * @returns A 'Program' object.
     */",
        ],
        "id": "createProgram",
        "kind": "FunctionDeclaration",
        "name": "createProgram",
        "signature": "createProgram: {
    (createProgramOptions: CreateProgramOptions): Program;
    (
        rootNames: readonly string[],
        options: CompilerOptions,
        host?: CompilerHost,
        oldProgram?: Program,
        configFileParsingDiagnostics?: readonly Diagnostic[]
    ): Program;
};",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4789,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4789",
        },
        "type": "{ (createProgramOptions: CreateProgramOptions): Program; (rootNames: readonly string[], options: CompilerOptions, host?: CompilerHost, oldProgram?: Program, configFileParsingDiagnostics?: readonly Diagnostic[]): Program; }",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.createPropertyDeclaration\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "createProperty",
        "kind": "FunctionDeclaration",
        "name": "createProperty",
        "signature": "createProperty: (
    decorators: readonly Decorator[] | undefined,
    modifiers: readonly Modifier[] | undefined,
    name:
        | string
        | Identifier
        | StringLiteral
        | NumericLiteral
        | ComputedPropertyName
        | PrivateIdentifier,
    questionOrExclamationToken: QuestionToken | ExclamationToken | undefined,
    type: TypeNode | undefined,
    initializer: Expression | undefined
) => PropertyDeclaration;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 6494,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6494",
        },
        "type": "(decorators: readonly Decorator[] | undefined, modifiers: readonly Modifier[] | undefined, name: string | Identifier | StringLiteral | NumericLiteral | ComputedPropertyName | PrivateIdentifier, questionOrExclamationToken: QuestionToken | ExclamationToken | undefined, type: TypeNode | undefined, initializer: Expression | undefined) => PropertyDeclaration",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.createPropertyAccess\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "createPropertyAccess",
        "kind": "FunctionDeclaration",
        "name": "createPropertyAccess",
        "signature": "createPropertyAccess: (
    expression: Expression,
    name: string | Identifier | PrivateIdentifier
) => PropertyAccessExpression;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 6626,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6626",
        },
        "type": "(expression: Expression, name: string | Identifier | PrivateIdentifier) => PropertyAccessExpression",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.createPropertyAccessChain\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "createPropertyAccessChain",
        "kind": "FunctionDeclaration",
        "name": "createPropertyAccessChain",
        "signature": "createPropertyAccessChain: (
    expression: Expression,
    questionDotToken: QuestionDotToken | undefined,
    name: string | Identifier | PrivateIdentifier
) => PropertyAccessChain;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 6630,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6630",
        },
        "type": "(expression: Expression, questionDotToken: QuestionDotToken | undefined, name: string | Identifier | PrivateIdentifier) => PropertyAccessChain",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.createPropertyAssignment\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "createPropertyAssignment",
        "kind": "FunctionDeclaration",
        "name": "createPropertyAssignment",
        "signature": "createPropertyAssignment: (
    name:
        | string
        | Identifier
        | StringLiteral
        | NumericLiteral
        | ComputedPropertyName
        | PrivateIdentifier,
    initializer: Expression
) => PropertyAssignment;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 7008,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L7008",
        },
        "type": "(name: string | Identifier | StringLiteral | NumericLiteral | ComputedPropertyName | PrivateIdentifier, initializer: Expression) => PropertyAssignment",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.createPropertySignature\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "createPropertySignature",
        "kind": "FunctionDeclaration",
        "name": "createPropertySignature",
        "signature": "createPropertySignature: (
    modifiers: readonly Modifier[] | undefined,
    name: PropertyName | string,
    questionToken: QuestionToken | undefined,
    type: TypeNode | undefined,
    initializer?: Expression | undefined
) => PropertySignature;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 7120,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L7120",
        },
        "type": "(modifiers: readonly Modifier[] | undefined, name: PropertyName | string, questionToken: QuestionToken | undefined, type: TypeNode | undefined, initializer?: Expression | undefined) => PropertySignature",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.createQualifiedName\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "createQualifiedName",
        "kind": "FunctionDeclaration",
        "name": "createQualifiedName",
        "signature": "createQualifiedName: (
    left: EntityName,
    right: string | Identifier
) => QualifiedName;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 6474,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6474",
        },
        "type": "(left: EntityName, right: string | Identifier) => QualifiedName",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.createRegularExpressionLiteral\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "createRegularExpressionLiteral",
        "kind": "FunctionDeclaration",
        "name": "createRegularExpressionLiteral",
        "signature": "createRegularExpressionLiteral: (text: string) => RegularExpressionLiteral;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 6452,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6452",
        },
        "type": "(text: string) => RegularExpressionLiteral",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.createRestTypeNode\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "createRestTypeNode",
        "kind": "FunctionDeclaration",
        "name": "createRestTypeNode",
        "signature": "createRestTypeNode: (type: TypeNode) => RestTypeNode;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 6562,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6562",
        },
        "type": "(type: TypeNode) => RestTypeNode",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.createReturn\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "createReturn",
        "kind": "FunctionDeclaration",
        "name": "createReturn",
        "signature": "createReturn: (expression?: Expression | undefined) => ReturnStatement;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 6798,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6798",
        },
        "type": "(expression?: Expression | undefined) => ReturnStatement",
      },
      Object {
        "docs": Array [],
        "id": "createScanner",
        "kind": "FunctionDeclaration",
        "name": "createScanner",
        "signature": "createScanner: (
    languageVersion: ScriptTarget,
    skipTrivia: boolean,
    languageVariant?: LanguageVariant,
    textInitial?: string,
    onError?: ErrorCallback,
    start?: number,
    length?: number
) => Scanner;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 3997,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3997",
        },
        "type": "(languageVersion: ScriptTarget, skipTrivia: boolean, languageVariant?: LanguageVariant, textInitial?: string, onError?: ErrorCallback, start?: number, length?: number) => Scanner",
      },
      Object {
        "docs": Array [
          "/**
     * Create the builder to manage semantic diagnostics and cache them
     */",
        ],
        "id": "createSemanticDiagnosticsBuilderProgram",
        "kind": "FunctionDeclaration",
        "name": "createSemanticDiagnosticsBuilderProgram",
        "signature": "createSemanticDiagnosticsBuilderProgram: {
    (
        newProgram: Program,
        host: BuilderProgramHost,
        oldProgram?: SemanticDiagnosticsBuilderProgram,
        configFileParsingDiagnostics?: readonly Diagnostic[]
    ): SemanticDiagnosticsBuilderProgram;
    (
        rootNames: readonly string[],
        options: CompilerOptions,
        host?: CompilerHost,
        oldProgram?: SemanticDiagnosticsBuilderProgram,
        configFileParsingDiagnostics?: readonly Diagnostic[],
        projectReferences?: readonly ProjectReference[]
    ): SemanticDiagnosticsBuilderProgram;
};",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4942,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4942",
        },
        "type": "{ (newProgram: Program, host: BuilderProgramHost, oldProgram?: SemanticDiagnosticsBuilderProgram, configFileParsingDiagnostics?: readonly Diagnostic[]): SemanticDiagnosticsBuilderProgram; (rootNames: readonly string[], options: CompilerOptions, host?: CompilerHost, oldProgram?: SemanticDiagnosticsBuilderProgram, configFileParsingDiagnostics?: readonly Diagnostic[], projectReferences?: readonly ProjectReference[]): SemanticDiagnosticsBuilderProgram; }",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.createSemicolonClassElement\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "createSemicolonClassElement",
        "kind": "FunctionDeclaration",
        "name": "createSemicolonClassElement",
        "signature": "createSemicolonClassElement: () => SemicolonClassElement;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 6746,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6746",
        },
        "type": "() => SemicolonClassElement",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.createSetAccessorDeclaration\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "createSetAccessor",
        "kind": "FunctionDeclaration",
        "name": "createSetAccessor",
        "signature": "createSetAccessor: (
    decorators: readonly Decorator[] | undefined,
    modifiers: readonly Modifier[] | undefined,
    name:
        | string
        | Identifier
        | StringLiteral
        | NumericLiteral
        | ComputedPropertyName
        | PrivateIdentifier,
    parameters: readonly ParameterDeclaration[],
    body: Block | undefined
) => SetAccessorDeclaration;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 6510,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6510",
        },
        "type": "(decorators: readonly Decorator[] | undefined, modifiers: readonly Modifier[] | undefined, name: string | Identifier | StringLiteral | NumericLiteral | ComputedPropertyName | PrivateIdentifier, parameters: readonly ParameterDeclaration[], body: Block | undefined) => SetAccessorDeclaration",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.createShorthandPropertyAssignment\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "createShorthandPropertyAssignment",
        "kind": "FunctionDeclaration",
        "name": "createShorthandPropertyAssignment",
        "signature": "createShorthandPropertyAssignment: (
    name: string | Identifier,
    objectAssignmentInitializer?: Expression | undefined
) => ShorthandPropertyAssignment;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 7012,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L7012",
        },
        "type": "(name: string | Identifier, objectAssignmentInitializer?: Expression | undefined) => ShorthandPropertyAssignment",
      },
      Object {
        "docs": Array [],
        "id": "createSolutionBuilder",
        "kind": "FunctionDeclaration",
        "name": "createSolutionBuilder",
        "signature": "createSolutionBuilder: <T extends BuilderProgram>(
    host: SolutionBuilderHost<T>,
    rootNames: readonly string[],
    defaultOptions: BuildOptions
) => SolutionBuilder<T>;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 5137,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5137",
        },
        "type": "<T extends BuilderProgram>(host: SolutionBuilderHost<T>, rootNames: readonly string[], defaultOptions: BuildOptions) => SolutionBuilder<T>",
      },
      Object {
        "docs": Array [],
        "id": "createSolutionBuilderHost",
        "kind": "FunctionDeclaration",
        "name": "createSolutionBuilderHost",
        "signature": "createSolutionBuilderHost: <
    T extends BuilderProgram = EmitAndSemanticDiagnosticsBuilderProgram
>(
    system?: System,
    createProgram?: CreateProgram<T>,
    reportDiagnostic?: DiagnosticReporter,
    reportSolutionBuilderStatus?: DiagnosticReporter,
    reportErrorSummary?: ReportEmitErrorSummary
) => SolutionBuilderHost<T>;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 5135,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5135",
        },
        "type": "<T extends BuilderProgram = EmitAndSemanticDiagnosticsBuilderProgram>(system?: System, createProgram?: CreateProgram<T>, reportDiagnostic?: DiagnosticReporter, reportSolutionBuilderStatus?: DiagnosticReporter, reportErrorSummary?: ReportEmitErrorSummary) => SolutionBuilderHost<T>",
      },
      Object {
        "docs": Array [],
        "id": "createSolutionBuilderWithWatch",
        "kind": "FunctionDeclaration",
        "name": "createSolutionBuilderWithWatch",
        "signature": "createSolutionBuilderWithWatch: <T extends BuilderProgram>(
    host: SolutionBuilderWithWatchHost<T>,
    rootNames: readonly string[],
    defaultOptions: BuildOptions,
    baseWatchOptions?: WatchOptions
) => SolutionBuilder<T>;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 5138,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5138",
        },
        "type": "<T extends BuilderProgram>(host: SolutionBuilderWithWatchHost<T>, rootNames: readonly string[], defaultOptions: BuildOptions, baseWatchOptions?: WatchOptions) => SolutionBuilder<T>",
      },
      Object {
        "docs": Array [],
        "id": "createSolutionBuilderWithWatchHost",
        "kind": "FunctionDeclaration",
        "name": "createSolutionBuilderWithWatchHost",
        "signature": "createSolutionBuilderWithWatchHost: <
    T extends BuilderProgram = EmitAndSemanticDiagnosticsBuilderProgram
>(
    system?: System,
    createProgram?: CreateProgram<T>,
    reportDiagnostic?: DiagnosticReporter,
    reportSolutionBuilderStatus?: DiagnosticReporter,
    reportWatchStatus?: WatchStatusReporter
) => SolutionBuilderWithWatchHost<T>;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 5136,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5136",
        },
        "type": "<T extends BuilderProgram = EmitAndSemanticDiagnosticsBuilderProgram>(system?: System, createProgram?: CreateProgram<T>, reportDiagnostic?: DiagnosticReporter, reportSolutionBuilderStatus?: DiagnosticReporter, reportWatchStatus?: WatchStatusReporter) => SolutionBuilderWithWatchHost<T>",
      },
      Object {
        "docs": Array [],
        "id": "createSourceFile",
        "kind": "FunctionDeclaration",
        "name": "createSourceFile",
        "signature": "createSourceFile: (
    fileName: string,
    sourceText: string,
    languageVersion: ScriptTarget,
    setParentNodes?: boolean,
    scriptKind?: ScriptKind
) => SourceFile;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4536,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4536",
        },
        "type": "(fileName: string, sourceText: string, languageVersion: ScriptTarget, setParentNodes?: boolean, scriptKind?: ScriptKind) => SourceFile",
      },
      Object {
        "docs": Array [
          "/**
     * Create an external source map source file reference
     */",
        ],
        "id": "createSourceMapSource",
        "kind": "FunctionDeclaration",
        "name": "createSourceMapSource",
        "signature": "createSourceMapSource: (
    fileName: string,
    text: string,
    skipTrivia?: (pos: number) => number
) => SourceMapSource;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4258,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4258",
        },
        "type": "(fileName: string, text: string, skipTrivia?: (pos: number) => number) => SourceMapSource",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.createSpread\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "createSpread",
        "kind": "FunctionDeclaration",
        "name": "createSpread",
        "signature": "createSpread: (expression: Expression) => SpreadElement;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 6720,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6720",
        },
        "type": "(expression: Expression) => SpreadElement",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.createSpreadAssignment\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "createSpreadAssignment",
        "kind": "FunctionDeclaration",
        "name": "createSpreadAssignment",
        "signature": "createSpreadAssignment: (expression: Expression) => SpreadAssignment;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 7016,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L7016",
        },
        "type": "(expression: Expression) => SpreadAssignment",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.createExpressionStatement\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "createStatement",
        "kind": "FunctionDeclaration",
        "name": "createStatement",
        "signature": "createStatement: (expression: Expression) => ExpressionStatement;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 6762,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6762",
        },
        "type": "(expression: Expression) => ExpressionStatement",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.createStrictEquality\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "createStrictEquality",
        "kind": "FunctionDeclaration",
        "name": "createStrictEquality",
        "signature": "createStrictEquality: (left: Expression, right: Expression) => BinaryExpression;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 7164,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L7164",
        },
        "type": "(left: Expression, right: Expression) => BinaryExpression",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.createStrictInequality\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "createStrictInequality",
        "kind": "FunctionDeclaration",
        "name": "createStrictInequality",
        "signature": "createStrictInequality: (
    left: Expression,
    right: Expression
) => BinaryExpression;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 7166,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L7166",
        },
        "type": "(left: Expression, right: Expression) => BinaryExpression",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.createStringLiteralFromNode\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "createStringLiteralFromNode",
        "kind": "FunctionDeclaration",
        "name": "createStringLiteralFromNode",
        "signature": "createStringLiteralFromNode: (
    sourceNode:
        | Identifier
        | StringLiteral
        | NoSubstitutionTemplateLiteral
        | NumericLiteral,
    isSingleQuote?: boolean | undefined
) => StringLiteral;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 6450,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6450",
        },
        "type": "(sourceNode: Identifier | StringLiteral | NoSubstitutionTemplateLiteral | NumericLiteral, isSingleQuote?: boolean | undefined) => StringLiteral",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.createSubtract\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "createSubtract",
        "kind": "FunctionDeclaration",
        "name": "createSubtract",
        "signature": "createSubtract: (left: Expression, right: Expression) => BinaryExpression;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 7170,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L7170",
        },
        "type": "(left: Expression, right: Expression) => BinaryExpression",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.createSuper\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "createSuper",
        "kind": "FunctionDeclaration",
        "name": "createSuper",
        "signature": "createSuper: () => SuperExpression;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 6460,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6460",
        },
        "type": "() => SuperExpression",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.createSwitch\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "createSwitch",
        "kind": "FunctionDeclaration",
        "name": "createSwitch",
        "signature": "createSwitch: (expression: Expression, caseBlock: CaseBlock) => SwitchStatement;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 6806,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6806",
        },
        "type": "(expression: Expression, caseBlock: CaseBlock) => SwitchStatement",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.createTemplateExpression\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "createTemplateExpression",
        "kind": "FunctionDeclaration",
        "name": "createTemplateExpression",
        "signature": "createTemplateExpression: (
    head: TemplateHead,
    templateSpans: readonly TemplateSpan[]
) => TemplateExpression;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 6694,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6694",
        },
        "type": "(head: TemplateHead, templateSpans: readonly TemplateSpan[]) => TemplateExpression",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.createTemplateSpan\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "createTemplateSpan",
        "kind": "FunctionDeclaration",
        "name": "createTemplateSpan",
        "signature": "createTemplateSpan: (
    expression: Expression,
    literal: TemplateMiddle | TemplateTail
) => TemplateSpan;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 6742,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6742",
        },
        "type": "(expression: Expression, literal: TemplateMiddle | TemplateTail) => TemplateSpan",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.createTempVariable\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "createTempVariable",
        "kind": "FunctionDeclaration",
        "name": "createTempVariable",
        "signature": "createTempVariable: (
    recordTempVariable: (node: Identifier) => void
) => Identifier;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 7064,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L7064",
        },
        "type": "(recordTempVariable: (node: Identifier) => void) => Identifier",
      },
      Object {
        "docs": Array [],
        "id": "createTextChangeRange",
        "kind": "FunctionDeclaration",
        "name": "createTextChangeRange",
        "signature": "createTextChangeRange: (span: TextSpan, newLength: number) => TextChangeRange;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4018,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4018",
        },
        "type": "(span: TextSpan, newLength: number) => TextChangeRange",
      },
      Object {
        "docs": Array [],
        "id": "createTextSpan",
        "kind": "FunctionDeclaration",
        "name": "createTextSpan",
        "signature": "createTextSpan: (start: number, length: number) => TextSpan;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4014,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4014",
        },
        "type": "(start: number, length: number) => TextSpan",
      },
      Object {
        "docs": Array [],
        "id": "createTextSpanFromBounds",
        "kind": "FunctionDeclaration",
        "name": "createTextSpanFromBounds",
        "signature": "createTextSpanFromBounds: (start: number, end: number) => TextSpan;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4015,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4015",
        },
        "type": "(start: number, end: number) => TextSpan",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.createThis\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "createThis",
        "kind": "FunctionDeclaration",
        "name": "createThis",
        "signature": "createThis: () => ThisExpression;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 6462,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6462",
        },
        "type": "() => ThisExpression",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.createThisTypeNode\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "createThisTypeNode",
        "kind": "FunctionDeclaration",
        "name": "createThisTypeNode",
        "signature": "createThisTypeNode: () => ThisTypeNode;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 6590,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6590",
        },
        "type": "() => ThisTypeNode",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.createThrow\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "createThrow",
        "kind": "FunctionDeclaration",
        "name": "createThrow",
        "signature": "createThrow: (expression: Expression) => ThrowStatement;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 6814,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6814",
        },
        "type": "(expression: Expression) => ThrowStatement",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.createToken\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "createToken",
        "kind": "FunctionDeclaration",
        "name": "createToken",
        "signature": "createToken: <TKind extends SyntaxKind>(kind: TKind) => Token<TKind>;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 7060,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L7060",
        },
        "type": "<TKind extends SyntaxKind>(kind: TKind) => Token<TKind>",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.createTrue\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "createTrue",
        "kind": "FunctionDeclaration",
        "name": "createTrue",
        "signature": "createTrue: () => TrueLiteral;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 6466,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6466",
        },
        "type": "() => TrueLiteral",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.createTry\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "createTry",
        "kind": "FunctionDeclaration",
        "name": "createTry",
        "signature": "createTry: (
    tryBlock: Block,
    catchClause: CatchClause | undefined,
    finallyBlock: Block | undefined
) => TryStatement;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 6818,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6818",
        },
        "type": "(tryBlock: Block, catchClause: CatchClause | undefined, finallyBlock: Block | undefined) => TryStatement",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.createTupleTypeNode\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "createTupleTypeNode",
        "kind": "FunctionDeclaration",
        "name": "createTupleTypeNode",
        "signature": "createTupleTypeNode: (
    elements: readonly (TypeNode | NamedTupleMember)[]
) => TupleTypeNode;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 6554,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6554",
        },
        "type": "(elements: readonly (TypeNode | NamedTupleMember)[]) => TupleTypeNode",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.createTypeAliasDeclaration\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "createTypeAliasDeclaration",
        "kind": "FunctionDeclaration",
        "name": "createTypeAliasDeclaration",
        "signature": "createTypeAliasDeclaration: (
    decorators: readonly Decorator[] | undefined,
    modifiers: readonly Modifier[] | undefined,
    name: string | Identifier,
    typeParameters: readonly TypeParameterDeclaration[] | undefined,
    type: TypeNode
) => TypeAliasDeclaration;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 6840,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6840",
        },
        "type": "(decorators: readonly Decorator[] | undefined, modifiers: readonly Modifier[] | undefined, name: string | Identifier, typeParameters: readonly TypeParameterDeclaration[] | undefined, type: TypeNode) => TypeAliasDeclaration",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.createTypeAssertion\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "createTypeAssertion",
        "kind": "FunctionDeclaration",
        "name": "createTypeAssertion",
        "signature": "createTypeAssertion: (type: TypeNode, expression: Expression) => TypeAssertion;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 6654,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6654",
        },
        "type": "(type: TypeNode, expression: Expression) => TypeAssertion",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.createTypeLiteralNode\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "createTypeLiteralNode",
        "kind": "FunctionDeclaration",
        "name": "createTypeLiteralNode",
        "signature": "createTypeLiteralNode: (
    members: readonly TypeElement[] | undefined
) => TypeLiteralNode;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 6546,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6546",
        },
        "type": "(members: readonly TypeElement[] | undefined) => TypeLiteralNode",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.createTypeOf\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "createTypeOf",
        "kind": "FunctionDeclaration",
        "name": "createTypeOf",
        "signature": "createTypeOf: (expression: Expression) => TypeOfExpression;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 6670,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6670",
        },
        "type": "(expression: Expression) => TypeOfExpression",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.createTypeParameterDeclaration\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "createTypeParameterDeclaration",
        "kind": "FunctionDeclaration",
        "name": "createTypeParameterDeclaration",
        "signature": "createTypeParameterDeclaration: (
    name: string | Identifier,
    constraint?: TypeNode | undefined,
    defaultType?: TypeNode | undefined
) => TypeParameterDeclaration;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 6482,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6482",
        },
        "type": "(name: string | Identifier, constraint?: TypeNode | undefined, defaultType?: TypeNode | undefined) => TypeParameterDeclaration",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.createTypePredicateNode\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "createTypePredicateNode",
        "kind": "FunctionDeclaration",
        "name": "createTypePredicateNode",
        "signature": "createTypePredicateNode: (
    parameterName: Identifier | ThisTypeNode | string,
    type: TypeNode
) => TypePredicateNode;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 7074,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L7074",
        },
        "type": "(parameterName: Identifier | ThisTypeNode | string, type: TypeNode) => TypePredicateNode",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.createTypePredicateNode\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "createTypePredicateNodeWithModifier",
        "kind": "FunctionDeclaration",
        "name": "createTypePredicateNodeWithModifier",
        "signature": "createTypePredicateNodeWithModifier: (
    assertsModifier: AssertsKeyword | undefined,
    parameterName: string | Identifier | ThisTypeNode,
    type: TypeNode | undefined
) => TypePredicateNode;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 6526,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6526",
        },
        "type": "(assertsModifier: AssertsKeyword | undefined, parameterName: string | Identifier | ThisTypeNode, type: TypeNode | undefined) => TypePredicateNode",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.createTypeQueryNode\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "createTypeQueryNode",
        "kind": "FunctionDeclaration",
        "name": "createTypeQueryNode",
        "signature": "createTypeQueryNode: (exprName: EntityName) => TypeQueryNode;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 6542,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6542",
        },
        "type": "(exprName: EntityName) => TypeQueryNode",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.createTypeReferenceNode\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "createTypeReferenceNode",
        "kind": "FunctionDeclaration",
        "name": "createTypeReferenceNode",
        "signature": "createTypeReferenceNode: (
    typeName: string | Identifier | QualifiedName,
    typeArguments?: readonly TypeNode[] | undefined
) => TypeReferenceNode;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 6530,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6530",
        },
        "type": "(typeName: string | Identifier | QualifiedName, typeArguments?: readonly TypeNode[] | undefined) => TypeReferenceNode",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.createUnionTypeNode\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "createUnionTypeNode",
        "kind": "FunctionDeclaration",
        "name": "createUnionTypeNode",
        "signature": "createUnionTypeNode: (types: readonly TypeNode[]) => UnionTypeNode;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 6566,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6566",
        },
        "type": "(types: readonly TypeNode[]) => UnionTypeNode",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.createUniqueName\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "createUniqueName",
        "kind": "FunctionDeclaration",
        "name": "createUniqueName",
        "signature": "createUniqueName: (
    text: string,
    flags?: GeneratedIdentifierFlags | undefined
) => Identifier;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 6456,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6456",
        },
        "type": "(text: string, flags?: GeneratedIdentifierFlags | undefined) => Identifier",
      },
      Object {
        "docs": Array [],
        "id": "createUnparsedSourceFile",
        "kind": "FunctionDeclaration",
        "name": "createUnparsedSourceFile",
        "signature": "createUnparsedSourceFile: {
    (text: string): UnparsedSource;
    (
        inputFile: InputFiles,
        type: 'js' | 'dts',
        stripInternal?: boolean
    ): UnparsedSource;
    (text: string, mapPath: string, map: string): UnparsedSource;
};",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4249,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4249",
        },
        "type": "{ (text: string): UnparsedSource; (inputFile: InputFiles, type: \\"js\\" | \\"dts\\", stripInternal?: boolean): UnparsedSource; (text: string, mapPath: string, map: string): UnparsedSource; }",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.createVariableDeclarationList\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "createVariableDeclarationList",
        "kind": "FunctionDeclaration",
        "name": "createVariableDeclarationList",
        "signature": "createVariableDeclarationList: (
    declarations: readonly VariableDeclaration[],
    flags?: NodeFlags | undefined
) => VariableDeclarationList;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 6824,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6824",
        },
        "type": "(declarations: readonly VariableDeclaration[], flags?: NodeFlags | undefined) => VariableDeclarationList",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.createVariableStatement\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "createVariableStatement",
        "kind": "FunctionDeclaration",
        "name": "createVariableStatement",
        "signature": "createVariableStatement: (
    modifiers: readonly Modifier[] | undefined,
    declarationList: VariableDeclarationList | readonly VariableDeclaration[]
) => VariableStatement;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 6752,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6752",
        },
        "type": "(modifiers: readonly Modifier[] | undefined, declarationList: VariableDeclarationList | readonly VariableDeclaration[]) => VariableStatement",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.createVoid\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "createVoid",
        "kind": "FunctionDeclaration",
        "name": "createVoid",
        "signature": "createVoid: (expression: Expression) => VoidExpression;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 6674,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6674",
        },
        "type": "(expression: Expression) => VoidExpression",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.createVoidZero\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "createVoidZero",
        "kind": "FunctionDeclaration",
        "name": "createVoidZero",
        "signature": "createVoidZero: () => VoidExpression;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 7050,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L7050",
        },
        "type": "() => VoidExpression",
      },
      Object {
        "docs": Array [
          "/**
     * Create the watch compiler host for either configFile or fileNames and its options
     */",
        ],
        "id": "createWatchCompilerHost",
        "kind": "FunctionDeclaration",
        "name": "createWatchCompilerHost",
        "signature": "createWatchCompilerHost: {
    <T extends BuilderProgram>(
        configFileName: string,
        optionsToExtend: CompilerOptions | undefined,
        system: System,
        createProgram?: CreateProgram<T>,
        reportDiagnostic?: DiagnosticReporter,
        reportWatchStatus?: WatchStatusReporter,
        watchOptionsToExtend?: WatchOptions,
        extraFileExtensions?: readonly FileExtensionInfo[]
    ): WatchCompilerHostOfConfigFile<T>;
    <T extends BuilderProgram>(
        rootFiles: string[],
        options: CompilerOptions,
        system: System,
        createProgram?: CreateProgram<T>,
        reportDiagnostic?: DiagnosticReporter,
        reportWatchStatus?: WatchStatusReporter,
        projectReferences?: readonly ProjectReference[],
        watchOptions?: WatchOptions
    ): WatchCompilerHostOfFilesAndCompilerOptions<T>;
};",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 5082,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5082",
        },
        "type": "{ <T extends BuilderProgram>(configFileName: string, optionsToExtend: CompilerOptions | undefined, system: System, createProgram?: CreateProgram<T>, reportDiagnostic?: DiagnosticReporter, reportWatchStatus?: WatchStatusReporter, watchOptionsToExtend?: WatchOptions, extraFileExtensions?: readonly FileExtensionInfo[]): WatchCompilerHostOfConfigFile<T>; <T extends BuilderProgram>(rootFiles: string[], options: CompilerOptions, system: System, createProgram?: CreateProgram<T>, reportDiagnostic?: DiagnosticReporter, reportWatchStatus?: WatchStatusReporter, projectReferences?: readonly ProjectReference[], watchOptions?: WatchOptions): WatchCompilerHostOfFilesAndCompilerOptions<T>; }",
      },
      Object {
        "docs": Array [
          "/**
     * Creates the watch from the host for root files and compiler options
     */",
          "/**
     * Creates the watch from the host for config file
     */",
        ],
        "id": "createWatchProgram",
        "kind": "FunctionDeclaration",
        "name": "createWatchProgram",
        "signature": "createWatchProgram: {
    <T extends BuilderProgram>(
        host: WatchCompilerHostOfFilesAndCompilerOptions<T>
    ): WatchOfFilesAndCompilerOptions<T>;
    <T extends BuilderProgram>(
        host: WatchCompilerHostOfConfigFile<T>
    ): WatchOfConfigFile<T>;
};",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 5087,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5087",
        },
        "type": "{ <T extends BuilderProgram>(host: WatchCompilerHostOfFilesAndCompilerOptions<T>): WatchOfFilesAndCompilerOptions<T>; <T extends BuilderProgram>(host: WatchCompilerHostOfConfigFile<T>): WatchOfConfigFile<T>; }",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.createWhile\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "createWhile",
        "kind": "FunctionDeclaration",
        "name": "createWhile",
        "signature": "createWhile: (expression: Expression, statement: Statement) => WhileStatement;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 6774,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6774",
        },
        "type": "(expression: Expression, statement: Statement) => WhileStatement",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.createWith\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "createWith",
        "kind": "FunctionDeclaration",
        "name": "createWith",
        "signature": "createWith: (expression: Expression, statement: Statement) => WithStatement;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 6802,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6802",
        },
        "type": "(expression: Expression, statement: Statement) => WithStatement",
      },
      Object {
        "docs": Array [],
        "id": "decodedTextSpanIntersectsWith",
        "kind": "FunctionDeclaration",
        "name": "decodedTextSpanIntersectsWith",
        "signature": "decodedTextSpanIntersectsWith: (
    start1: number,
    length1: number,
    start2: number,
    length2: number
) => boolean;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4011,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4011",
        },
        "type": "(start1: number, length1: number, start2: number, length2: number) => boolean",
      },
      Object {
        "docs": Array [],
        "id": "displayPartsToString",
        "kind": "FunctionDeclaration",
        "name": "displayPartsToString",
        "signature": "displayPartsToString: (displayParts: SymbolDisplayPart[] | undefined) => string;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 6415,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6415",
        },
        "type": "(displayParts: SymbolDisplayPart[] | undefined) => string",
      },
      Object {
        "docs": Array [
          "/**
     * Clears any \`EmitNode\` entries from parse-tree nodes.
     * @param sourceFile A source file.
     */",
        ],
        "id": "disposeEmitNodes",
        "kind": "FunctionDeclaration",
        "name": "disposeEmitNodes",
        "signature": "disposeEmitNodes: (sourceFile: SourceFile | undefined) => void;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4266,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4266",
        },
        "type": "(sourceFile: SourceFile | undefined) => void",
      },
      Object {
        "docs": Array [
          "/** Add an extra underscore to identifiers that start with two underscores to avoid issues with magic names like '__proto__' */",
        ],
        "id": "escapeLeadingUnderscores",
        "kind": "FunctionDeclaration",
        "name": "escapeLeadingUnderscores",
        "signature": "escapeLeadingUnderscores: (identifier: string) => __String;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4084,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4084",
        },
        "type": "(identifier: string) => __String",
      },
      Object {
        "docs": Array [
          "/**
     * Iterates through the parent chain of a node and performs the callback on each parent until the callback
     * returns a truthy value, then returns that value.
     * If no such value is found, it applies the callback until the parent pointer is undefined or the callback returns \\"quit\\"
     * At that point findAncestor returns undefined.
     */",
        ],
        "id": "findAncestor",
        "kind": "FunctionDeclaration",
        "name": "findAncestor",
        "signature": "findAncestor: {
    <T extends Node>(
        node: Node | undefined,
        callback: (element: Node) => element is T
    ): T | undefined;
    (node: Node, callback: (element: Node) => boolean | 'quit'): Node;
};",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4060,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4060",
        },
        "type": "{ <T extends Node>(node: Node | undefined, callback: (element: Node) => element is T): T | undefined; (node: Node, callback: (element: Node) => boolean | \\"quit\\"): Node; }",
      },
      Object {
        "docs": Array [],
        "id": "findConfigFile",
        "kind": "FunctionDeclaration",
        "name": "findConfigFile",
        "signature": "findConfigFile: (
    searchPath: string,
    fileExists: (fileName: string) => boolean,
    configName?: string
) => string | undefined;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4765,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4765",
        },
        "type": "(searchPath: string, fileExists: (fileName: string) => boolean, configName?: string) => string | undefined",
      },
      Object {
        "docs": Array [],
        "id": "flattenDiagnosticMessageText",
        "kind": "FunctionDeclaration",
        "name": "flattenDiagnosticMessageText",
        "signature": "flattenDiagnosticMessageText: (
    diag: string | DiagnosticMessageChain | undefined,
    newLine: string,
    indent?: number
) => string;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4777,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4777",
        },
        "type": "(diag: string | DiagnosticMessageChain | undefined, newLine: string, indent?: number) => string",
      },
      Object {
        "docs": Array [
          "/**
     * Invokes a callback for each child of the given node. The 'cbNode' callback is invoked for all child nodes
     * stored in properties. If a 'cbNodes' callback is specified, it is invoked for embedded arrays; otherwise,
     * embedded arrays are flattened and the 'cbNode' callback is invoked for each element. If a callback returns
     * a truthy value, iteration stops and that value is returned. Otherwise, undefined is returned.
     *
     * @param node a given node to visit its children
     * @param cbNode a callback to be invoked for all child nodes
     * @param cbNodes a callback to be invoked for embedded array
     *
     * @remarks \`forEachChild\` must visit the children of a node in the order
     * that they appear in the source code. The language service depends on this property to locate nodes by position.
     */",
        ],
        "id": "forEachChild",
        "kind": "FunctionDeclaration",
        "name": "forEachChild",
        "signature": "forEachChild: <T>(
    node: Node,
    cbNode: (node: Node) => T | undefined,
    cbNodes?: (nodes: NodeArray<Node>) => T | undefined
) => T | undefined;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4535,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4535",
        },
        "type": "<T>(node: Node, cbNode: (node: Node) => T | undefined, cbNodes?: (nodes: NodeArray<Node>) => T | undefined) => T | undefined",
      },
      Object {
        "docs": Array [],
        "id": "forEachLeadingCommentRange",
        "kind": "FunctionDeclaration",
        "name": "forEachLeadingCommentRange",
        "signature": "forEachLeadingCommentRange: {
    <U>(
        text: string,
        pos: number,
        cb: (
            pos: number,
            end: number,
            kind: CommentKind,
            hasTrailingNewLine: boolean
        ) => U
    ): U | undefined;
    <T, U>(
        text: string,
        pos: number,
        cb: (
            pos: number,
            end: number,
            kind: CommentKind,
            hasTrailingNewLine: boolean,
            state: T
        ) => U,
        state: T
    ): U;
};",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 3985,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3985",
        },
        "type": "{ <U>(text: string, pos: number, cb: (pos: number, end: number, kind: CommentKind, hasTrailingNewLine: boolean) => U): U | undefined; <T, U>(text: string, pos: number, cb: (pos: number, end: number, kind: CommentKind, hasTrailingNewLine: boolean, state: T) => U, state: T): U; }",
      },
      Object {
        "docs": Array [],
        "id": "forEachTrailingCommentRange",
        "kind": "FunctionDeclaration",
        "name": "forEachTrailingCommentRange",
        "signature": "forEachTrailingCommentRange: {
    <U>(
        text: string,
        pos: number,
        cb: (
            pos: number,
            end: number,
            kind: CommentKind,
            hasTrailingNewLine: boolean
        ) => U
    ): U | undefined;
    <T, U>(
        text: string,
        pos: number,
        cb: (
            pos: number,
            end: number,
            kind: CommentKind,
            hasTrailingNewLine: boolean,
            state: T
        ) => U,
        state: T
    ): U;
};",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 3987,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3987",
        },
        "type": "{ <U>(text: string, pos: number, cb: (pos: number, end: number, kind: CommentKind, hasTrailingNewLine: boolean) => U): U | undefined; <T, U>(text: string, pos: number, cb: (pos: number, end: number, kind: CommentKind, hasTrailingNewLine: boolean, state: T) => U, state: T): U; }",
      },
      Object {
        "docs": Array [],
        "id": "formatDiagnostic",
        "kind": "FunctionDeclaration",
        "name": "formatDiagnostic",
        "signature": "formatDiagnostic: (
    diagnostic: Diagnostic,
    host: FormatDiagnosticsHost
) => string;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4775,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4775",
        },
        "type": "(diagnostic: Diagnostic, host: FormatDiagnosticsHost) => string",
      },
      Object {
        "docs": Array [],
        "id": "formatDiagnostics",
        "kind": "FunctionDeclaration",
        "name": "formatDiagnostics",
        "signature": "formatDiagnostics: (
    diagnostics: readonly Diagnostic[],
    host: FormatDiagnosticsHost
) => string;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4774,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4774",
        },
        "type": "(diagnostics: readonly Diagnostic[], host: FormatDiagnosticsHost) => string",
      },
      Object {
        "docs": Array [],
        "id": "formatDiagnosticsWithColorAndContext",
        "kind": "FunctionDeclaration",
        "name": "formatDiagnosticsWithColorAndContext",
        "signature": "formatDiagnosticsWithColorAndContext: (
    diagnostics: readonly Diagnostic[],
    host: FormatDiagnosticsHost
) => string;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4776,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4776",
        },
        "type": "(diagnostics: readonly Diagnostic[], host: FormatDiagnosticsHost) => string",
      },
      Object {
        "docs": Array [
          "/** Gets all JSDoc tags that match a specified predicate */",
        ],
        "id": "getAllJSDocTags",
        "kind": "FunctionDeclaration",
        "name": "getAllJSDocTags",
        "signature": "getAllJSDocTags: <T extends JSDocTag>(
    node: Node,
    predicate: (tag: JSDocTag) => tag is T
) => readonly T[];",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4175,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4175",
        },
        "type": "<T extends JSDocTag>(node: Node, predicate: (tag: JSDocTag) => tag is T) => readonly T[]",
      },
      Object {
        "docs": Array [
          "/** Gets all JSDoc tags of a specified kind */",
        ],
        "id": "getAllJSDocTagsOfKind",
        "kind": "FunctionDeclaration",
        "name": "getAllJSDocTagsOfKind",
        "signature": "getAllJSDocTagsOfKind: (node: Node, kind: SyntaxKind) => readonly JSDocTag[];",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4177,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4177",
        },
        "type": "(node: Node, kind: SyntaxKind) => readonly JSDocTag[]",
      },
      Object {
        "docs": Array [
          "/**
     * Given a set of options, returns the set of type directive names
     *   that should be included for this program automatically.
     * This list could either come from the config file,
     *   or from enumerating the types root + initial secondary types lookup location.
     * More type directives might appear in the program later as a result of loading actual source files;
     *   this list is only the set of defaults that are implicitly included.
     */",
        ],
        "id": "getAutomaticTypeDirectiveNames",
        "kind": "FunctionDeclaration",
        "name": "getAutomaticTypeDirectiveNames",
        "signature": "getAutomaticTypeDirectiveNames: (
    options: CompilerOptions,
    host: ModuleResolutionHost
) => string[];",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4652,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4652",
        },
        "type": "(options: CompilerOptions, host: ModuleResolutionHost) => string[]",
      },
      Object {
        "docs": Array [],
        "id": "getCombinedModifierFlags",
        "kind": "FunctionDeclaration",
        "name": "getCombinedModifierFlags",
        "signature": "getCombinedModifierFlags: (node: Declaration) => ModifierFlags;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4038,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4038",
        },
        "type": "(node: Declaration) => ModifierFlags",
      },
      Object {
        "docs": Array [],
        "id": "getCombinedNodeFlags",
        "kind": "FunctionDeclaration",
        "name": "getCombinedNodeFlags",
        "signature": "getCombinedNodeFlags: (node: Node) => NodeFlags;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4039,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4039",
        },
        "type": "(node: Node) => NodeFlags",
      },
      Object {
        "docs": Array [
          "/**
     * Gets a custom text range to use when emitting comments.
     */",
        ],
        "id": "getCommentRange",
        "kind": "FunctionDeclaration",
        "name": "getCommentRange",
        "signature": "getCommentRange: (node: Node) => TextRange;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4290,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4290",
        },
        "type": "(node: Node) => TextRange",
      },
      Object {
        "docs": Array [],
        "id": "getConfigFileParsingDiagnostics",
        "kind": "FunctionDeclaration",
        "name": "getConfigFileParsingDiagnostics",
        "signature": "getConfigFileParsingDiagnostics: (
    configFileParseResult: ParsedCommandLine
) => readonly Diagnostic[];",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4778,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4778",
        },
        "type": "(configFileParseResult: ParsedCommandLine) => readonly Diagnostic[]",
      },
      Object {
        "docs": Array [
          "/**
     * Gets the constant value to emit for an expression representing an enum.
     */",
        ],
        "id": "getConstantValue",
        "kind": "FunctionDeclaration",
        "name": "getConstantValue",
        "signature": "getConstantValue: (node: AccessExpression) => string | number | undefined;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4305,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4305",
        },
        "type": "(node: AccessExpression) => string | number | undefined",
      },
      Object {
        "docs": Array [],
        "id": "getDefaultCompilerOptions",
        "kind": "FunctionDeclaration",
        "name": "getDefaultCompilerOptions",
        "signature": "getDefaultCompilerOptions: () => CompilerOptions;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 6416,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6416",
        },
        "type": "() => CompilerOptions",
      },
      Object {
        "docs": Array [],
        "id": "getDefaultFormatCodeSettings",
        "kind": "FunctionDeclaration",
        "name": "getDefaultFormatCodeSettings",
        "signature": "getDefaultFormatCodeSettings: (newLineCharacter?: string) => FormatCodeSettings;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 5930,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5930",
        },
        "type": "(newLineCharacter?: string) => FormatCodeSettings",
      },
      Object {
        "docs": Array [],
        "id": "getDefaultLibFileName",
        "kind": "FunctionDeclaration",
        "name": "getDefaultLibFileName",
        "signature": "getDefaultLibFileName: (options: CompilerOptions) => string;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4002,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4002",
        },
        "type": "(options: CompilerOptions) => string",
      },
      Object {
        "docs": Array [
          "/**
     * Get the path of the default library files (lib.d.ts) as distributed with the typescript
     * node package.
     * The functionality is not supported if the ts module is consumed outside of a node module.
     */",
        ],
        "id": "getDefaultLibFilePath",
        "kind": "FunctionDeclaration",
        "name": "getDefaultLibFilePath",
        "signature": "getDefaultLibFilePath: (options: CompilerOptions) => string;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 6426,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6426",
        },
        "type": "(options: CompilerOptions) => string",
      },
      Object {
        "docs": Array [],
        "id": "getEffectiveConstraintOfTypeParameter",
        "kind": "FunctionDeclaration",
        "name": "getEffectiveConstraintOfTypeParameter",
        "signature": "getEffectiveConstraintOfTypeParameter: (
    node: TypeParameterDeclaration
) => TypeNode | undefined;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4183,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4183",
        },
        "type": "(node: TypeParameterDeclaration) => TypeNode | undefined",
      },
      Object {
        "docs": Array [
          "/**
     * Gets the effective type parameters. If the node was parsed in a
     * JavaScript file, gets the type parameters from the \`@template\` tag from JSDoc.
     */",
        ],
        "id": "getEffectiveTypeParameterDeclarations",
        "kind": "FunctionDeclaration",
        "name": "getEffectiveTypeParameterDeclarations",
        "signature": "getEffectiveTypeParameterDeclarations: (
    node: DeclarationWithTypeParameters
) => readonly TypeParameterDeclaration[];",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4182,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4182",
        },
        "type": "(node: DeclarationWithTypeParameters) => readonly TypeParameterDeclaration[]",
      },
      Object {
        "docs": Array [],
        "id": "getEffectiveTypeRoots",
        "kind": "FunctionDeclaration",
        "name": "getEffectiveTypeRoots",
        "signature": "getEffectiveTypeRoots: (
    options: CompilerOptions,
    host: GetEffectiveTypeRootsHost
) => string[] | undefined;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4637,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4637",
        },
        "type": "(options: CompilerOptions, host: GetEffectiveTypeRootsHost) => string[] | undefined",
      },
      Object {
        "docs": Array [
          "/**
     * Gets the EmitHelpers of a node.
     */",
        ],
        "id": "getEmitHelpers",
        "kind": "FunctionDeclaration",
        "name": "getEmitHelpers",
        "signature": "getEmitHelpers: (node: Node) => EmitHelper[] | undefined;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4325,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4325",
        },
        "type": "(node: Node) => EmitHelper[] | undefined",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.getGeneratedNameForNode\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "getGeneratedNameForNode",
        "kind": "FunctionDeclaration",
        "name": "getGeneratedNameForNode",
        "signature": "getGeneratedNameForNode: (node: Node | undefined) => Identifier;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 7066,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L7066",
        },
        "type": "(node: Node | undefined) => Identifier",
      },
      Object {
        "docs": Array [
          "/** Gets the JSDoc augments tag for the node if present */",
        ],
        "id": "getJSDocAugmentsTag",
        "kind": "FunctionDeclaration",
        "name": "getJSDocAugmentsTag",
        "signature": "getJSDocAugmentsTag: (node: Node) => JSDocAugmentsTag | undefined;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4128,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4128",
        },
        "type": "(node: Node) => JSDocAugmentsTag | undefined",
      },
      Object {
        "docs": Array [
          "/** Gets the JSDoc class tag for the node if present */",
        ],
        "id": "getJSDocClassTag",
        "kind": "FunctionDeclaration",
        "name": "getJSDocClassTag",
        "signature": "getJSDocClassTag: (node: Node) => JSDocClassTag | undefined;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4132,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4132",
        },
        "type": "(node: Node) => JSDocClassTag | undefined",
      },
      Object {
        "docs": Array [
          "/** Gets the JSDoc deprecated tag for the node if present */",
        ],
        "id": "getJSDocDeprecatedTag",
        "kind": "FunctionDeclaration",
        "name": "getJSDocDeprecatedTag",
        "signature": "getJSDocDeprecatedTag: (node: Node) => JSDocDeprecatedTag | undefined;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4142,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4142",
        },
        "type": "(node: Node) => JSDocDeprecatedTag | undefined",
      },
      Object {
        "docs": Array [
          "/** Gets the JSDoc enum tag for the node if present */",
        ],
        "id": "getJSDocEnumTag",
        "kind": "FunctionDeclaration",
        "name": "getJSDocEnumTag",
        "signature": "getJSDocEnumTag: (node: Node) => JSDocEnumTag | undefined;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4144,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4144",
        },
        "type": "(node: Node) => JSDocEnumTag | undefined",
      },
      Object {
        "docs": Array [
          "/** Gets the JSDoc implements tags for the node if present */",
        ],
        "id": "getJSDocImplementsTags",
        "kind": "FunctionDeclaration",
        "name": "getJSDocImplementsTags",
        "signature": "getJSDocImplementsTags: (node: Node) => readonly JSDocImplementsTag[];",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4130,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4130",
        },
        "type": "(node: Node) => readonly JSDocImplementsTag[]",
      },
      Object {
        "docs": Array [
          "/**
     * Gets the JSDoc parameter tags for the node if present.
     *
     * @remarks Returns any JSDoc param tag whose name matches the provided
     * parameter, whether a param tag on a containing function
     * expression, or a param tag on a variable declaration whose
     * initializer is the containing function. The tags closest to the
     * node are returned first, so in the previous example, the param
     * tag on the containing function expression would be first.
     *
     * For binding patterns, parameter tags are matched by position.
     */",
        ],
        "id": "getJSDocParameterTags",
        "kind": "FunctionDeclaration",
        "name": "getJSDocParameterTags",
        "signature": "getJSDocParameterTags: (
    param: ParameterDeclaration
) => readonly JSDocParameterTag[];",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4108,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4108",
        },
        "type": "(param: ParameterDeclaration) => readonly JSDocParameterTag[]",
      },
      Object {
        "docs": Array [
          "/** Gets the JSDoc private tag for the node if present */",
        ],
        "id": "getJSDocPrivateTag",
        "kind": "FunctionDeclaration",
        "name": "getJSDocPrivateTag",
        "signature": "getJSDocPrivateTag: (node: Node) => JSDocPrivateTag | undefined;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4136,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4136",
        },
        "type": "(node: Node) => JSDocPrivateTag | undefined",
      },
      Object {
        "docs": Array [
          "/** Gets the JSDoc protected tag for the node if present */",
        ],
        "id": "getJSDocProtectedTag",
        "kind": "FunctionDeclaration",
        "name": "getJSDocProtectedTag",
        "signature": "getJSDocProtectedTag: (node: Node) => JSDocProtectedTag | undefined;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4138,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4138",
        },
        "type": "(node: Node) => JSDocProtectedTag | undefined",
      },
      Object {
        "docs": Array [
          "/** Gets the JSDoc public tag for the node if present */",
        ],
        "id": "getJSDocPublicTag",
        "kind": "FunctionDeclaration",
        "name": "getJSDocPublicTag",
        "signature": "getJSDocPublicTag: (node: Node) => JSDocPublicTag | undefined;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4134,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4134",
        },
        "type": "(node: Node) => JSDocPublicTag | undefined",
      },
      Object {
        "docs": Array [
          "/** Gets the JSDoc protected tag for the node if present */",
        ],
        "id": "getJSDocReadonlyTag",
        "kind": "FunctionDeclaration",
        "name": "getJSDocReadonlyTag",
        "signature": "getJSDocReadonlyTag: (node: Node) => JSDocReadonlyTag | undefined;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4140,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4140",
        },
        "type": "(node: Node) => JSDocReadonlyTag | undefined",
      },
      Object {
        "docs": Array [
          "/** Gets the JSDoc return tag for the node if present */",
        ],
        "id": "getJSDocReturnTag",
        "kind": "FunctionDeclaration",
        "name": "getJSDocReturnTag",
        "signature": "getJSDocReturnTag: (node: Node) => JSDocReturnTag | undefined;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4148,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4148",
        },
        "type": "(node: Node) => JSDocReturnTag | undefined",
      },
      Object {
        "docs": Array [
          "/**
     * Gets the return type node for the node if provided via JSDoc return tag or type tag.
     *
     * @remarks \`getJSDocReturnTag\` just gets the whole JSDoc tag. This function
     * gets the type from inside the braces, after the fat arrow, etc.
     */",
        ],
        "id": "getJSDocReturnType",
        "kind": "FunctionDeclaration",
        "name": "getJSDocReturnType",
        "signature": "getJSDocReturnType: (node: Node) => TypeNode | undefined;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4171,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4171",
        },
        "type": "(node: Node) => TypeNode | undefined",
      },
      Object {
        "docs": Array [
          "/** Get all JSDoc tags related to a node, including those on parent nodes. */",
        ],
        "id": "getJSDocTags",
        "kind": "FunctionDeclaration",
        "name": "getJSDocTags",
        "signature": "getJSDocTags: (node: Node) => readonly JSDocTag[];",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4173,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4173",
        },
        "type": "(node: Node) => readonly JSDocTag[]",
      },
      Object {
        "docs": Array [
          "/** Gets the JSDoc template tag for the node if present */",
        ],
        "id": "getJSDocTemplateTag",
        "kind": "FunctionDeclaration",
        "name": "getJSDocTemplateTag",
        "signature": "getJSDocTemplateTag: (node: Node) => JSDocTemplateTag | undefined;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4150,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4150",
        },
        "type": "(node: Node) => JSDocTemplateTag | undefined",
      },
      Object {
        "docs": Array [
          "/** Gets the JSDoc this tag for the node if present */",
        ],
        "id": "getJSDocThisTag",
        "kind": "FunctionDeclaration",
        "name": "getJSDocThisTag",
        "signature": "getJSDocThisTag: (node: Node) => JSDocThisTag | undefined;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4146,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4146",
        },
        "type": "(node: Node) => JSDocThisTag | undefined",
      },
      Object {
        "docs": Array [
          "/**
     * Gets the type node for the node if provided via JSDoc.
     *
     * @remarks The search includes any JSDoc param tag that relates
     * to the provided parameter, for example a type tag on the
     * parameter itself, or a param tag on a containing function
     * expression, or a param tag on a variable declaration whose
     * initializer is the containing function. The tags closest to the
     * node are examined first, so in the previous example, the type
     * tag directly on the node would be returned.
     */",
        ],
        "id": "getJSDocType",
        "kind": "FunctionDeclaration",
        "name": "getJSDocType",
        "signature": "getJSDocType: (node: Node) => TypeNode | undefined;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4164,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4164",
        },
        "type": "(node: Node) => TypeNode | undefined",
      },
      Object {
        "docs": Array [
          "/**
     * Gets the JSDoc type parameter tags for the node if present.
     *
     * @remarks Returns any JSDoc template tag whose names match the provided
     * parameter, whether a template tag on a containing function
     * expression, or a template tag on a variable declaration whose
     * initializer is the containing function. The tags closest to the
     * node are returned first, so in the previous example, the template
     * tag on the containing function expression would be first.
     */",
        ],
        "id": "getJSDocTypeParameterTags",
        "kind": "FunctionDeclaration",
        "name": "getJSDocTypeParameterTags",
        "signature": "getJSDocTypeParameterTags: (
    param: TypeParameterDeclaration
) => readonly JSDocTemplateTag[];",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4119,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4119",
        },
        "type": "(param: TypeParameterDeclaration) => readonly JSDocTemplateTag[]",
      },
      Object {
        "docs": Array [
          "/** Gets the JSDoc type tag for the node if present and valid */",
        ],
        "id": "getJSDocTypeTag",
        "kind": "FunctionDeclaration",
        "name": "getJSDocTypeTag",
        "signature": "getJSDocTypeTag: (node: Node) => JSDocTypeTag | undefined;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4152,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4152",
        },
        "type": "(node: Node) => JSDocTypeTag | undefined",
      },
      Object {
        "docs": Array [],
        "id": "getLeadingCommentRanges",
        "kind": "FunctionDeclaration",
        "name": "getLeadingCommentRanges",
        "signature": "getLeadingCommentRanges: (
    text: string,
    pos: number
) => CommentRange[] | undefined;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 3991,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3991",
        },
        "type": "(text: string, pos: number) => CommentRange[] | undefined",
      },
      Object {
        "docs": Array [],
        "id": "getLineAndCharacterOfPosition",
        "kind": "FunctionDeclaration",
        "name": "getLineAndCharacterOfPosition",
        "signature": "getLineAndCharacterOfPosition: (
    sourceFile: SourceFileLike,
    position: number
) => LineAndCharacter;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 3979,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3979",
        },
        "type": "(sourceFile: SourceFileLike, position: number) => LineAndCharacter",
      },
      Object {
        "docs": Array [
          "/**
     * Creates a shallow, memberwise clone of a node ~for mutation~ with its \`pos\`, \`end\`, and \`parent\` set.
     *
     * NOTE: It is unsafe to change any properties of a \`Node\` that relate to its AST children, as those changes won't be
     * captured with respect to transformations.
     *
     * @deprecated Use \`factory.cloneNode\` instead and use \`setCommentRange\` or \`setSourceMapRange\` and avoid setting \`parent\`.
     */",
        ],
        "id": "getMutableClone",
        "kind": "FunctionDeclaration",
        "name": "getMutableClone",
        "signature": "getMutableClone: <T extends Node>(node: T) => T;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 7189,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L7189",
        },
        "type": "<T extends Node>(node: T) => T",
      },
      Object {
        "docs": Array [],
        "id": "getNameOfDeclaration",
        "kind": "FunctionDeclaration",
        "name": "getNameOfDeclaration",
        "signature": "getNameOfDeclaration: (
    declaration: Declaration | Expression
) => DeclarationName | undefined;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4095,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4095",
        },
        "type": "(declaration: Declaration | Expression) => DeclarationName | undefined",
      },
      Object {
        "docs": Array [],
        "id": "getNameOfJSDocTypedef",
        "kind": "FunctionDeclaration",
        "name": "getNameOfJSDocTypedef",
        "signature": "getNameOfJSDocTypedef: (
    declaration: JSDocTypedefTag
) => Identifier | PrivateIdentifier | undefined;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4094,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4094",
        },
        "type": "(declaration: JSDocTypedefTag) => Identifier | PrivateIdentifier | undefined",
      },
      Object {
        "docs": Array [],
        "id": "getNodeMajorVersion",
        "kind": "FunctionDeclaration",
        "name": "getNodeMajorVersion",
        "signature": "getNodeMajorVersion: () => number | undefined;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 3934,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3934",
        },
        "type": "() => number | undefined",
      },
      Object {
        "docs": Array [],
        "id": "getOriginalNode",
        "kind": "FunctionDeclaration",
        "name": "getOriginalNode",
        "signature": "getOriginalNode: {
    (node: Node): Node;
    <T extends Node>(node: Node, nodeTest: (node: Node) => node is T): T;
    (node: Node): Node;
    <T extends Node>(node: Node, nodeTest: (node: Node) => node is T): T;
};",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4050,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4050",
        },
        "type": "{ (node: Node): Node; <T extends Node>(node: Node, nodeTest: (node: Node) => node is T): T; (node: Node): Node; <T extends Node>(node: Node, nodeTest: (node: Node) => node is T): T; }",
      },
      Object {
        "docs": Array [],
        "id": "getOutputFileNames",
        "kind": "FunctionDeclaration",
        "name": "getOutputFileNames",
        "signature": "getOutputFileNames: (
    commandLine: ParsedCommandLine,
    inputFileName: string,
    ignoreCase: boolean
) => readonly string[];",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4761,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4761",
        },
        "type": "(commandLine: ParsedCommandLine, inputFileName: string, ignoreCase: boolean) => readonly string[]",
      },
      Object {
        "docs": Array [
          "/**
     * Reads the config file, reports errors if any and exits if the config file cannot be found
     */",
        ],
        "id": "getParsedCommandLineOfConfigFile",
        "kind": "FunctionDeclaration",
        "name": "getParsedCommandLineOfConfigFile",
        "signature": "getParsedCommandLineOfConfigFile: (
    configFileName: string,
    optionsToExtend: CompilerOptions,
    host: ParseConfigFileHost,
    extendedConfigCache?: Map<ExtendedConfigCacheEntry>,
    watchOptionsToExtend?: WatchOptions,
    extraFileExtensions?: readonly FileExtensionInfo[]
) => ParsedCommandLine | undefined;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4569,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4569",
        },
        "type": "(configFileName: string, optionsToExtend: CompilerOptions, host: ParseConfigFileHost, extendedConfigCache?: Map<ExtendedConfigCacheEntry>, watchOptionsToExtend?: WatchOptions, extraFileExtensions?: readonly FileExtensionInfo[]) => ParsedCommandLine | undefined",
      },
      Object {
        "docs": Array [
          "/**
     * Gets the original parse tree node for a node.
     *
     * @param node The original node.
     * @returns The original parse tree node if found; otherwise, undefined.
     */",
          "/**
     * Gets the original parse tree node for a node.
     *
     * @param node The original node.
     * @param nodeTest A callback used to ensure the correct type of parse tree node is returned.
     * @returns The original parse tree node if found; otherwise, undefined.
     */",
        ],
        "id": "getParseTreeNode",
        "kind": "FunctionDeclaration",
        "name": "getParseTreeNode",
        "signature": "getParseTreeNode: {
    (node: Node | undefined): Node | undefined;
    <T extends Node>(node: T, nodeTest?: (node: Node) => node is T): T;
};",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4074,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4074",
        },
        "type": "{ (node: Node | undefined): Node | undefined; <T extends Node>(node: T, nodeTest?: (node: Node) => node is T): T; }",
      },
      Object {
        "docs": Array [],
        "id": "getPositionOfLineAndCharacter",
        "kind": "FunctionDeclaration",
        "name": "getPositionOfLineAndCharacter",
        "signature": "getPositionOfLineAndCharacter: (
    sourceFile: SourceFileLike,
    line: number,
    character: number
) => number;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 3978,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3978",
        },
        "type": "(sourceFile: SourceFileLike, line: number, character: number) => number",
      },
      Object {
        "docs": Array [],
        "id": "getPreEmitDiagnostics",
        "kind": "FunctionDeclaration",
        "name": "getPreEmitDiagnostics",
        "signature": "getPreEmitDiagnostics: (
    program: Program,
    sourceFile?: SourceFile,
    cancellationToken?: CancellationToken
) => readonly Diagnostic[];",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4768,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4768",
        },
        "type": "(program: Program, sourceFile?: SourceFile, cancellationToken?: CancellationToken) => readonly Diagnostic[]",
      },
      Object {
        "docs": Array [
          "/** Optionally, get the shebang */",
        ],
        "id": "getShebang",
        "kind": "FunctionDeclaration",
        "name": "getShebang",
        "signature": "getShebang: (text: string) => string | undefined;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 3994,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3994",
        },
        "type": "(text: string) => string | undefined",
      },
      Object {
        "docs": Array [
          "/**
     * Gets a custom text range to use when emitting source maps.
     */",
        ],
        "id": "getSourceMapRange",
        "kind": "FunctionDeclaration",
        "name": "getSourceMapRange",
        "signature": "getSourceMapRange: (node: Node) => SourceMapRange;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4274,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4274",
        },
        "type": "(node: Node) => SourceMapRange",
      },
      Object {
        "docs": Array [],
        "id": "getSupportedCodeFixes",
        "kind": "FunctionDeclaration",
        "name": "getSupportedCodeFixes",
        "signature": "getSupportedCodeFixes: () => string[];",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 6417,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6417",
        },
        "type": "() => string[]",
      },
      Object {
        "docs": Array [],
        "id": "getSyntheticLeadingComments",
        "kind": "FunctionDeclaration",
        "name": "getSyntheticLeadingComments",
        "signature": "getSyntheticLeadingComments: (node: Node) => SynthesizedComment[] | undefined;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4295,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4295",
        },
        "type": "(node: Node) => SynthesizedComment[] | undefined",
      },
      Object {
        "docs": Array [],
        "id": "getSyntheticTrailingComments",
        "kind": "FunctionDeclaration",
        "name": "getSyntheticTrailingComments",
        "signature": "getSyntheticTrailingComments: (node: Node) => SynthesizedComment[] | undefined;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4298,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4298",
        },
        "type": "(node: Node) => SynthesizedComment[] | undefined",
      },
      Object {
        "docs": Array [
          "/**
     * Gets the TextRange to use for source maps for a token of a node.
     */",
        ],
        "id": "getTokenSourceMapRange",
        "kind": "FunctionDeclaration",
        "name": "getTokenSourceMapRange",
        "signature": "getTokenSourceMapRange: (
    node: Node,
    token: SyntaxKind
) => SourceMapRange | undefined;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4282,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4282",
        },
        "type": "(node: Node, token: SyntaxKind) => SourceMapRange | undefined",
      },
      Object {
        "docs": Array [],
        "id": "getTrailingCommentRanges",
        "kind": "FunctionDeclaration",
        "name": "getTrailingCommentRanges",
        "signature": "getTrailingCommentRanges: (
    text: string,
    pos: number
) => CommentRange[] | undefined;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 3992,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3992",
        },
        "type": "(text: string, pos: number) => CommentRange[] | undefined",
      },
      Object {
        "docs": Array [],
        "id": "getTsBuildInfoEmitOutputFilePath",
        "kind": "FunctionDeclaration",
        "name": "getTsBuildInfoEmitOutputFilePath",
        "signature": "getTsBuildInfoEmitOutputFilePath: (
    options: CompilerOptions
) => string | undefined;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4760,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4760",
        },
        "type": "(options: CompilerOptions) => string | undefined",
      },
      Object {
        "docs": Array [],
        "id": "getTypeParameterOwner",
        "kind": "FunctionDeclaration",
        "name": "getTypeParameterOwner",
        "signature": "getTypeParameterOwner: (d: Declaration) => Declaration | undefined;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4029,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4029",
        },
        "type": "(d: Declaration) => Declaration | undefined",
      },
      Object {
        "docs": Array [
          "/**
     * Return true if the node has JSDoc parameter tags.
     *
     * @remarks Includes parameter tags that are not directly on the node,
     * for example on a variable declaration whose initializer is a function expression.
     */",
        ],
        "id": "hasJSDocParameterTags",
        "kind": "FunctionDeclaration",
        "name": "hasJSDocParameterTags",
        "signature": "hasJSDocParameterTags: (
    node: FunctionLikeDeclaration | SignatureDeclaration
) => boolean;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4126,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4126",
        },
        "type": "(node: FunctionLikeDeclaration | SignatureDeclaration) => boolean",
      },
      Object {
        "docs": Array [
          "/** True if has initializer node attached to it. */",
        ],
        "id": "hasOnlyExpressionInitializer",
        "kind": "FunctionDeclaration",
        "name": "hasOnlyExpressionInitializer",
        "signature": "hasOnlyExpressionInitializer: (node: Node) => node is HasExpressionInitializer;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4243,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4243",
        },
        "type": "(node: Node) => node is HasExpressionInitializer",
      },
      Object {
        "docs": Array [],
        "id": "idText",
        "kind": "FunctionDeclaration",
        "name": "idText",
        "signature": "idText: (identifierOrPrivateName: Identifier | PrivateIdentifier) => string;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4092,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4092",
        },
        "type": "(identifierOrPrivateName: Identifier | PrivateIdentifier) => string",
      },
      Object {
        "docs": Array [],
        "id": "isAccessor",
        "kind": "FunctionDeclaration",
        "name": "isAccessor",
        "signature": "isAccessor: (node: Node) => node is AccessorDeclaration;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4218,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4218",
        },
        "type": "(node: Node) => node is AccessorDeclaration",
      },
      Object {
        "docs": Array [],
        "id": "isArrayBindingPattern",
        "kind": "FunctionDeclaration",
        "name": "isArrayBindingPattern",
        "signature": "isArrayBindingPattern: (node: Node) => node is ArrayBindingPattern;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4383,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4383",
        },
        "type": "(node: Node) => node is ArrayBindingPattern",
      },
      Object {
        "docs": Array [],
        "id": "isArrayLiteralExpression",
        "kind": "FunctionDeclaration",
        "name": "isArrayLiteralExpression",
        "signature": "isArrayLiteralExpression: (node: Node) => node is ArrayLiteralExpression;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4385,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4385",
        },
        "type": "(node: Node) => node is ArrayLiteralExpression",
      },
      Object {
        "docs": Array [],
        "id": "isArrayTypeNode",
        "kind": "FunctionDeclaration",
        "name": "isArrayTypeNode",
        "signature": "isArrayTypeNode: (node: Node) => node is ArrayTypeNode;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4364,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4364",
        },
        "type": "(node: Node) => node is ArrayTypeNode",
      },
      Object {
        "docs": Array [],
        "id": "isArrowFunction",
        "kind": "FunctionDeclaration",
        "name": "isArrowFunction",
        "signature": "isArrowFunction: (node: Node) => node is ArrowFunction;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4395,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4395",
        },
        "type": "(node: Node) => node is ArrowFunction",
      },
      Object {
        "docs": Array [],
        "id": "isAsExpression",
        "kind": "FunctionDeclaration",
        "name": "isAsExpression",
        "signature": "isAsExpression: (node: Node) => node is AsExpression;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4410,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4410",
        },
        "type": "(node: Node) => node is AsExpression",
      },
      Object {
        "docs": Array [],
        "id": "isAssertionExpression",
        "kind": "FunctionDeclaration",
        "name": "isAssertionExpression",
        "signature": "isAssertionExpression: (node: Node) => node is AssertionExpression;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4233,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4233",
        },
        "type": "(node: Node) => node is AssertionExpression",
      },
      Object {
        "docs": Array [],
        "id": "isAwaitExpression",
        "kind": "FunctionDeclaration",
        "name": "isAwaitExpression",
        "signature": "isAwaitExpression: (node: Node) => node is AwaitExpression;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4399,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4399",
        },
        "type": "(node: Node) => node is AwaitExpression",
      },
      Object {
        "docs": Array [],
        "id": "isBigIntLiteral",
        "kind": "FunctionDeclaration",
        "name": "isBigIntLiteral",
        "signature": "isBigIntLiteral: (node: Node) => node is BigIntLiteral;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4333,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4333",
        },
        "type": "(node: Node) => node is BigIntLiteral",
      },
      Object {
        "docs": Array [],
        "id": "isBinaryExpression",
        "kind": "FunctionDeclaration",
        "name": "isBinaryExpression",
        "signature": "isBinaryExpression: (node: Node) => node is BinaryExpression;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4402,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4402",
        },
        "type": "(node: Node) => node is BinaryExpression",
      },
      Object {
        "docs": Array [],
        "id": "isBindingElement",
        "kind": "FunctionDeclaration",
        "name": "isBindingElement",
        "signature": "isBindingElement: (node: Node) => node is BindingElement;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4384,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4384",
        },
        "type": "(node: Node) => node is BindingElement",
      },
      Object {
        "docs": Array [],
        "id": "isBindingName",
        "kind": "FunctionDeclaration",
        "name": "isBindingName",
        "signature": "isBindingName: (node: Node) => node is BindingName;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4214,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4214",
        },
        "type": "(node: Node) => node is BindingName",
      },
      Object {
        "docs": Array [],
        "id": "isBlock",
        "kind": "FunctionDeclaration",
        "name": "isBlock",
        "signature": "isBlock: (node: Node) => node is Block;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4418,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4418",
        },
        "type": "(node: Node) => node is Block",
      },
      Object {
        "docs": Array [],
        "id": "isBreakOrContinueStatement",
        "kind": "FunctionDeclaration",
        "name": "isBreakOrContinueStatement",
        "signature": "isBreakOrContinueStatement: (node: Node) => node is BreakOrContinueStatement;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4194,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4194",
        },
        "type": "(node: Node) => node is BreakOrContinueStatement",
      },
      Object {
        "docs": Array [],
        "id": "isBreakStatement",
        "kind": "FunctionDeclaration",
        "name": "isBreakStatement",
        "signature": "isBreakStatement: (node: Node) => node is BreakStatement;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4429,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4429",
        },
        "type": "(node: Node) => node is BreakStatement",
      },
      Object {
        "docs": Array [],
        "id": "isBundle",
        "kind": "FunctionDeclaration",
        "name": "isBundle",
        "signature": "isBundle: (node: Node) => node is Bundle;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4483,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4483",
        },
        "type": "(node: Node) => node is Bundle",
      },
      Object {
        "docs": Array [],
        "id": "isCallChain",
        "kind": "FunctionDeclaration",
        "name": "isCallChain",
        "signature": "isCallChain: (node: Node) => node is CallChain;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4187,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4187",
        },
        "type": "(node: Node) => node is CallChain",
      },
      Object {
        "docs": Array [],
        "id": "isCallExpression",
        "kind": "FunctionDeclaration",
        "name": "isCallExpression",
        "signature": "isCallExpression: (node: Node) => node is CallExpression;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4389,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4389",
        },
        "type": "(node: Node) => node is CallExpression",
      },
      Object {
        "docs": Array [],
        "id": "isCallLikeExpression",
        "kind": "FunctionDeclaration",
        "name": "isCallLikeExpression",
        "signature": "isCallLikeExpression: (node: Node) => node is CallLikeExpression;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4230,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4230",
        },
        "type": "(node: Node) => node is CallLikeExpression",
      },
      Object {
        "docs": Array [],
        "id": "isCallOrNewExpression",
        "kind": "FunctionDeclaration",
        "name": "isCallOrNewExpression",
        "signature": "isCallOrNewExpression: (node: Node) => node is CallExpression | NewExpression;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4231,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4231",
        },
        "type": "(node: Node) => node is CallExpression | NewExpression",
      },
      Object {
        "docs": Array [],
        "id": "isCallSignatureDeclaration",
        "kind": "FunctionDeclaration",
        "name": "isCallSignatureDeclaration",
        "signature": "isCallSignatureDeclaration: (node: Node) => node is CallSignatureDeclaration;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4355,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4355",
        },
        "type": "(node: Node) => node is CallSignatureDeclaration",
      },
      Object {
        "docs": Array [],
        "id": "isCaseBlock",
        "kind": "FunctionDeclaration",
        "name": "isCaseBlock",
        "signature": "isCaseBlock: (node: Node) => node is CaseBlock;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4446,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4446",
        },
        "type": "(node: Node) => node is CaseBlock",
      },
      Object {
        "docs": Array [],
        "id": "isCaseClause",
        "kind": "FunctionDeclaration",
        "name": "isCaseClause",
        "signature": "isCaseClause: (node: Node) => node is CaseClause;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4473,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4473",
        },
        "type": "(node: Node) => node is CaseClause",
      },
      Object {
        "docs": Array [],
        "id": "isCaseOrDefaultClause",
        "kind": "FunctionDeclaration",
        "name": "isCaseOrDefaultClause",
        "signature": "isCaseOrDefaultClause: (node: Node) => node is CaseOrDefaultClause;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4237,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4237",
        },
        "type": "(node: Node) => node is CaseOrDefaultClause",
      },
      Object {
        "docs": Array [],
        "id": "isCatchClause",
        "kind": "FunctionDeclaration",
        "name": "isCatchClause",
        "signature": "isCatchClause: (node: Node) => node is CatchClause;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4476,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4476",
        },
        "type": "(node: Node) => node is CatchClause",
      },
      Object {
        "docs": Array [],
        "id": "isClassDeclaration",
        "kind": "FunctionDeclaration",
        "name": "isClassDeclaration",
        "signature": "isClassDeclaration: (node: Node) => node is ClassDeclaration;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4440,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4440",
        },
        "type": "(node: Node) => node is ClassDeclaration",
      },
      Object {
        "docs": Array [],
        "id": "isClassElement",
        "kind": "FunctionDeclaration",
        "name": "isClassElement",
        "signature": "isClassElement: (node: Node) => node is ClassElement;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4216,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4216",
        },
        "type": "(node: Node) => node is ClassElement",
      },
      Object {
        "docs": Array [],
        "id": "isClassExpression",
        "kind": "FunctionDeclaration",
        "name": "isClassExpression",
        "signature": "isClassExpression: (node: Node) => node is ClassExpression;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4407,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4407",
        },
        "type": "(node: Node) => node is ClassExpression",
      },
      Object {
        "docs": Array [],
        "id": "isClassLike",
        "kind": "FunctionDeclaration",
        "name": "isClassLike",
        "signature": "isClassLike: (node: Node) => node is ClassLikeDeclaration;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4217,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4217",
        },
        "type": "(node: Node) => node is ClassLikeDeclaration",
      },
      Object {
        "docs": Array [],
        "id": "isClassOrTypeElement",
        "kind": "FunctionDeclaration",
        "name": "isClassOrTypeElement",
        "signature": "isClassOrTypeElement: (node: Node) => node is TypeElement | ClassElement;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4220,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4220",
        },
        "type": "(node: Node) => node is TypeElement | ClassElement",
      },
      Object {
        "docs": Array [],
        "id": "isCommaListExpression",
        "kind": "FunctionDeclaration",
        "name": "isCommaListExpression",
        "signature": "isCommaListExpression: (node: Node) => node is CommaListExpression;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4415,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4415",
        },
        "type": "(node: Node) => node is CommaListExpression",
      },
      Object {
        "docs": Array [],
        "id": "isComputedPropertyName",
        "kind": "FunctionDeclaration",
        "name": "isComputedPropertyName",
        "signature": "isComputedPropertyName: (node: Node) => node is ComputedPropertyName;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4343,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4343",
        },
        "type": "(node: Node) => node is ComputedPropertyName",
      },
      Object {
        "docs": Array [],
        "id": "isConditionalExpression",
        "kind": "FunctionDeclaration",
        "name": "isConditionalExpression",
        "signature": "isConditionalExpression: (node: Node) => node is ConditionalExpression;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4403,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4403",
        },
        "type": "(node: Node) => node is ConditionalExpression",
      },
      Object {
        "docs": Array [],
        "id": "isConditionalTypeNode",
        "kind": "FunctionDeclaration",
        "name": "isConditionalTypeNode",
        "signature": "isConditionalTypeNode: (node: Node) => node is ConditionalTypeNode;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4371,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4371",
        },
        "type": "(node: Node) => node is ConditionalTypeNode",
      },
      Object {
        "docs": Array [],
        "id": "isConstructorDeclaration",
        "kind": "FunctionDeclaration",
        "name": "isConstructorDeclaration",
        "signature": "isConstructorDeclaration: (node: Node) => node is ConstructorDeclaration;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4352,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4352",
        },
        "type": "(node: Node) => node is ConstructorDeclaration",
      },
      Object {
        "docs": Array [],
        "id": "isConstructorTypeNode",
        "kind": "FunctionDeclaration",
        "name": "isConstructorTypeNode",
        "signature": "isConstructorTypeNode: (node: Node) => node is ConstructorTypeNode;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4361,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4361",
        },
        "type": "(node: Node) => node is ConstructorTypeNode",
      },
      Object {
        "docs": Array [],
        "id": "isConstructSignatureDeclaration",
        "kind": "FunctionDeclaration",
        "name": "isConstructSignatureDeclaration",
        "signature": "isConstructSignatureDeclaration: (
    node: Node
) => node is ConstructSignatureDeclaration;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4356,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4356",
        },
        "type": "(node: Node) => node is ConstructSignatureDeclaration",
      },
      Object {
        "docs": Array [],
        "id": "isConstTypeReference",
        "kind": "FunctionDeclaration",
        "name": "isConstTypeReference",
        "signature": "isConstTypeReference: (node: Node) => boolean;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4190,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4190",
        },
        "type": "(node: Node) => boolean",
      },
      Object {
        "docs": Array [],
        "id": "isContinueStatement",
        "kind": "FunctionDeclaration",
        "name": "isContinueStatement",
        "signature": "isContinueStatement: (node: Node) => node is ContinueStatement;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4428,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4428",
        },
        "type": "(node: Node) => node is ContinueStatement",
      },
      Object {
        "docs": Array [],
        "id": "isDebuggerStatement",
        "kind": "FunctionDeclaration",
        "name": "isDebuggerStatement",
        "signature": "isDebuggerStatement: (node: Node) => node is DebuggerStatement;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4436,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4436",
        },
        "type": "(node: Node) => node is DebuggerStatement",
      },
      Object {
        "docs": Array [],
        "id": "isDecorator",
        "kind": "FunctionDeclaration",
        "name": "isDecorator",
        "signature": "isDecorator: (node: Node) => node is Decorator;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4347,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4347",
        },
        "type": "(node: Node) => node is Decorator",
      },
      Object {
        "docs": Array [],
        "id": "isDefaultClause",
        "kind": "FunctionDeclaration",
        "name": "isDefaultClause",
        "signature": "isDefaultClause: (node: Node) => node is DefaultClause;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4474,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4474",
        },
        "type": "(node: Node) => node is DefaultClause",
      },
      Object {
        "docs": Array [],
        "id": "isDeleteExpression",
        "kind": "FunctionDeclaration",
        "name": "isDeleteExpression",
        "signature": "isDeleteExpression: (node: Node) => node is DeleteExpression;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4396,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4396",
        },
        "type": "(node: Node) => node is DeleteExpression",
      },
      Object {
        "docs": Array [],
        "id": "isDoStatement",
        "kind": "FunctionDeclaration",
        "name": "isDoStatement",
        "signature": "isDoStatement: (node: Node) => node is DoStatement;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4423,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4423",
        },
        "type": "(node: Node) => node is DoStatement",
      },
      Object {
        "docs": Array [],
        "id": "isElementAccessChain",
        "kind": "FunctionDeclaration",
        "name": "isElementAccessChain",
        "signature": "isElementAccessChain: (node: Node) => node is ElementAccessChain;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4186,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4186",
        },
        "type": "(node: Node) => node is ElementAccessChain",
      },
      Object {
        "docs": Array [],
        "id": "isElementAccessExpression",
        "kind": "FunctionDeclaration",
        "name": "isElementAccessExpression",
        "signature": "isElementAccessExpression: (node: Node) => node is ElementAccessExpression;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4388,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4388",
        },
        "type": "(node: Node) => node is ElementAccessExpression",
      },
      Object {
        "docs": Array [],
        "id": "isEmptyBindingElement",
        "kind": "FunctionDeclaration",
        "name": "isEmptyBindingElement",
        "signature": "isEmptyBindingElement: (node: BindingElement) => boolean;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4036,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4036",
        },
        "type": "(node: BindingElement) => boolean",
      },
      Object {
        "docs": Array [],
        "id": "isEmptyBindingPattern",
        "kind": "FunctionDeclaration",
        "name": "isEmptyBindingPattern",
        "signature": "isEmptyBindingPattern: (node: BindingName) => node is BindingPattern;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4035,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4035",
        },
        "type": "(node: BindingName) => node is BindingPattern",
      },
      Object {
        "docs": Array [],
        "id": "isEmptyStatement",
        "kind": "FunctionDeclaration",
        "name": "isEmptyStatement",
        "signature": "isEmptyStatement: (node: Node) => node is EmptyStatement;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4420,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4420",
        },
        "type": "(node: Node) => node is EmptyStatement",
      },
      Object {
        "docs": Array [],
        "id": "isEntityName",
        "kind": "FunctionDeclaration",
        "name": "isEntityName",
        "signature": "isEntityName: (node: Node) => node is EntityName;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4212,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4212",
        },
        "type": "(node: Node) => node is EntityName",
      },
      Object {
        "docs": Array [],
        "id": "isEnumDeclaration",
        "kind": "FunctionDeclaration",
        "name": "isEnumDeclaration",
        "signature": "isEnumDeclaration: (node: Node) => node is EnumDeclaration;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4443,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4443",
        },
        "type": "(node: Node) => node is EnumDeclaration",
      },
      Object {
        "docs": Array [],
        "id": "isEnumMember",
        "kind": "FunctionDeclaration",
        "name": "isEnumMember",
        "signature": "isEnumMember: (node: Node) => node is EnumMember;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4480,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4480",
        },
        "type": "(node: Node) => node is EnumMember",
      },
      Object {
        "docs": Array [],
        "id": "isExportAssignment",
        "kind": "FunctionDeclaration",
        "name": "isExportAssignment",
        "signature": "isExportAssignment: (node: Node) => node is ExportAssignment;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4455,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4455",
        },
        "type": "(node: Node) => node is ExportAssignment",
      },
      Object {
        "docs": Array [],
        "id": "isExportDeclaration",
        "kind": "FunctionDeclaration",
        "name": "isExportDeclaration",
        "signature": "isExportDeclaration: (node: Node) => node is ExportDeclaration;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4456,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4456",
        },
        "type": "(node: Node) => node is ExportDeclaration",
      },
      Object {
        "docs": Array [],
        "id": "isExportSpecifier",
        "kind": "FunctionDeclaration",
        "name": "isExportSpecifier",
        "signature": "isExportSpecifier: (node: Node) => node is ExportSpecifier;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4458,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4458",
        },
        "type": "(node: Node) => node is ExportSpecifier",
      },
      Object {
        "docs": Array [],
        "id": "isExpressionStatement",
        "kind": "FunctionDeclaration",
        "name": "isExpressionStatement",
        "signature": "isExpressionStatement: (node: Node) => node is ExpressionStatement;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4421,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4421",
        },
        "type": "(node: Node) => node is ExpressionStatement",
      },
      Object {
        "docs": Array [],
        "id": "isExpressionWithTypeArguments",
        "kind": "FunctionDeclaration",
        "name": "isExpressionWithTypeArguments",
        "signature": "isExpressionWithTypeArguments: (
    node: Node
) => node is ExpressionWithTypeArguments;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4409,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4409",
        },
        "type": "(node: Node) => node is ExpressionWithTypeArguments",
      },
      Object {
        "docs": Array [],
        "id": "isExternalModule",
        "kind": "FunctionDeclaration",
        "name": "isExternalModule",
        "signature": "isExternalModule: (file: SourceFile) => boolean;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4544,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4544",
        },
        "type": "(file: SourceFile) => boolean",
      },
      Object {
        "docs": Array [],
        "id": "isExternalModuleNameRelative",
        "kind": "FunctionDeclaration",
        "name": "isExternalModuleNameRelative",
        "signature": "isExternalModuleNameRelative: (moduleName: string) => boolean;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4000,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4000",
        },
        "type": "(moduleName: string) => boolean",
      },
      Object {
        "docs": Array [],
        "id": "isExternalModuleReference",
        "kind": "FunctionDeclaration",
        "name": "isExternalModuleReference",
        "signature": "isExternalModuleReference: (node: Node) => node is ExternalModuleReference;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4461,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4461",
        },
        "type": "(node: Node) => node is ExternalModuleReference",
      },
      Object {
        "docs": Array [],
        "id": "isForInStatement",
        "kind": "FunctionDeclaration",
        "name": "isForInStatement",
        "signature": "isForInStatement: (node: Node) => node is ForInStatement;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4426,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4426",
        },
        "type": "(node: Node) => node is ForInStatement",
      },
      Object {
        "docs": Array [],
        "id": "isForOfStatement",
        "kind": "FunctionDeclaration",
        "name": "isForOfStatement",
        "signature": "isForOfStatement: (node: Node) => node is ForOfStatement;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4427,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4427",
        },
        "type": "(node: Node) => node is ForOfStatement",
      },
      Object {
        "docs": Array [],
        "id": "isForStatement",
        "kind": "FunctionDeclaration",
        "name": "isForStatement",
        "signature": "isForStatement: (node: Node) => node is ForStatement;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4425,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4425",
        },
        "type": "(node: Node) => node is ForStatement",
      },
      Object {
        "docs": Array [],
        "id": "isFunctionDeclaration",
        "kind": "FunctionDeclaration",
        "name": "isFunctionDeclaration",
        "signature": "isFunctionDeclaration: (node: Node) => node is FunctionDeclaration;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4439,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4439",
        },
        "type": "(node: Node) => node is FunctionDeclaration",
      },
      Object {
        "docs": Array [],
        "id": "isFunctionExpression",
        "kind": "FunctionDeclaration",
        "name": "isFunctionExpression",
        "signature": "isFunctionExpression: (node: Node) => node is FunctionExpression;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4394,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4394",
        },
        "type": "(node: Node) => node is FunctionExpression",
      },
      Object {
        "docs": Array [],
        "id": "isFunctionLike",
        "kind": "FunctionDeclaration",
        "name": "isFunctionLike",
        "signature": "isFunctionLike: (node: Node) => node is SignatureDeclaration;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4215,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4215",
        },
        "type": "(node: Node) => node is SignatureDeclaration",
      },
      Object {
        "docs": Array [],
        "id": "isFunctionOrConstructorTypeNode",
        "kind": "FunctionDeclaration",
        "name": "isFunctionOrConstructorTypeNode",
        "signature": "isFunctionOrConstructorTypeNode: (
    node: Node
) => node is FunctionTypeNode | ConstructorTypeNode;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4228,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4228",
        },
        "type": "(node: Node) => node is FunctionTypeNode | ConstructorTypeNode",
      },
      Object {
        "docs": Array [],
        "id": "isFunctionTypeNode",
        "kind": "FunctionDeclaration",
        "name": "isFunctionTypeNode",
        "signature": "isFunctionTypeNode: (node: Node) => node is FunctionTypeNode;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4360,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4360",
        },
        "type": "(node: Node) => node is FunctionTypeNode",
      },
      Object {
        "docs": Array [],
        "id": "isGetAccessor",
        "kind": "FunctionDeclaration",
        "name": "isGetAccessor",
        "signature": "isGetAccessor: (node: Node) => node is GetAccessorDeclaration;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4241,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4241",
        },
        "type": "(node: Node) => node is GetAccessorDeclaration",
      },
      Object {
        "docs": Array [],
        "id": "isGetAccessorDeclaration",
        "kind": "FunctionDeclaration",
        "name": "isGetAccessorDeclaration",
        "signature": "isGetAccessorDeclaration: (node: Node) => node is GetAccessorDeclaration;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4353,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4353",
        },
        "type": "(node: Node) => node is GetAccessorDeclaration",
      },
      Object {
        "docs": Array [],
        "id": "isHeritageClause",
        "kind": "FunctionDeclaration",
        "name": "isHeritageClause",
        "signature": "isHeritageClause: (node: Node) => node is HeritageClause;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4475,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4475",
        },
        "type": "(node: Node) => node is HeritageClause",
      },
      Object {
        "docs": Array [],
        "id": "isIdentifier",
        "kind": "FunctionDeclaration",
        "name": "isIdentifier",
        "signature": "isIdentifier: (node: Node) => node is Identifier;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4341,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4341",
        },
        "type": "(node: Node) => node is Identifier",
      },
      Object {
        "docs": Array [],
        "id": "isIdentifierOrPrivateIdentifier",
        "kind": "FunctionDeclaration",
        "name": "isIdentifierOrPrivateIdentifier",
        "signature": "isIdentifierOrPrivateIdentifier: (
    node: Node
) => node is Identifier | PrivateIdentifier;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4184,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4184",
        },
        "type": "(node: Node) => node is Identifier | PrivateIdentifier",
      },
      Object {
        "docs": Array [],
        "id": "isIdentifierPart",
        "kind": "FunctionDeclaration",
        "name": "isIdentifierPart",
        "signature": "isIdentifierPart: (
    ch: number,
    languageVersion: ScriptTarget | undefined,
    identifierVariant?: LanguageVariant
) => boolean;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 3996,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3996",
        },
        "type": "(ch: number, languageVersion: ScriptTarget | undefined, identifierVariant?: LanguageVariant) => boolean",
      },
      Object {
        "docs": Array [],
        "id": "isIdentifierStart",
        "kind": "FunctionDeclaration",
        "name": "isIdentifierStart",
        "signature": "isIdentifierStart: (
    ch: number,
    languageVersion: ScriptTarget | undefined
) => boolean;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 3995,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3995",
        },
        "type": "(ch: number, languageVersion: ScriptTarget | undefined) => boolean",
      },
      Object {
        "docs": Array [],
        "id": "isIfStatement",
        "kind": "FunctionDeclaration",
        "name": "isIfStatement",
        "signature": "isIfStatement: (node: Node) => node is IfStatement;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4422,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4422",
        },
        "type": "(node: Node) => node is IfStatement",
      },
      Object {
        "docs": Array [],
        "id": "isImportClause",
        "kind": "FunctionDeclaration",
        "name": "isImportClause",
        "signature": "isImportClause: (node: Node) => node is ImportClause;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4450,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4450",
        },
        "type": "(node: Node) => node is ImportClause",
      },
      Object {
        "docs": Array [],
        "id": "isImportDeclaration",
        "kind": "FunctionDeclaration",
        "name": "isImportDeclaration",
        "signature": "isImportDeclaration: (node: Node) => node is ImportDeclaration;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4449,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4449",
        },
        "type": "(node: Node) => node is ImportDeclaration",
      },
      Object {
        "docs": Array [],
        "id": "isImportEqualsDeclaration",
        "kind": "FunctionDeclaration",
        "name": "isImportEqualsDeclaration",
        "signature": "isImportEqualsDeclaration: (node: Node) => node is ImportEqualsDeclaration;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4448,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4448",
        },
        "type": "(node: Node) => node is ImportEqualsDeclaration",
      },
      Object {
        "docs": Array [],
        "id": "isImportOrExportSpecifier",
        "kind": "FunctionDeclaration",
        "name": "isImportOrExportSpecifier",
        "signature": "isImportOrExportSpecifier: (
    node: Node
) => node is ImportSpecifier | ExportSpecifier;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4208,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4208",
        },
        "type": "(node: Node) => node is ImportSpecifier | ExportSpecifier",
      },
      Object {
        "docs": Array [],
        "id": "isImportSpecifier",
        "kind": "FunctionDeclaration",
        "name": "isImportSpecifier",
        "signature": "isImportSpecifier: (node: Node) => node is ImportSpecifier;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4454,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4454",
        },
        "type": "(node: Node) => node is ImportSpecifier",
      },
      Object {
        "docs": Array [],
        "id": "isImportTypeNode",
        "kind": "FunctionDeclaration",
        "name": "isImportTypeNode",
        "signature": "isImportTypeNode: (node: Node) => node is ImportTypeNode;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4379,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4379",
        },
        "type": "(node: Node) => node is ImportTypeNode",
      },
      Object {
        "docs": Array [],
        "id": "isIndexedAccessTypeNode",
        "kind": "FunctionDeclaration",
        "name": "isIndexedAccessTypeNode",
        "signature": "isIndexedAccessTypeNode: (node: Node) => node is IndexedAccessTypeNode;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4376,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4376",
        },
        "type": "(node: Node) => node is IndexedAccessTypeNode",
      },
      Object {
        "docs": Array [],
        "id": "isIndexSignatureDeclaration",
        "kind": "FunctionDeclaration",
        "name": "isIndexSignatureDeclaration",
        "signature": "isIndexSignatureDeclaration: (node: Node) => node is IndexSignatureDeclaration;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4357,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4357",
        },
        "type": "(node: Node) => node is IndexSignatureDeclaration",
      },
      Object {
        "docs": Array [],
        "id": "isInferTypeNode",
        "kind": "FunctionDeclaration",
        "name": "isInferTypeNode",
        "signature": "isInferTypeNode: (node: Node) => node is InferTypeNode;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4372,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4372",
        },
        "type": "(node: Node) => node is InferTypeNode",
      },
      Object {
        "docs": Array [],
        "id": "isInterfaceDeclaration",
        "kind": "FunctionDeclaration",
        "name": "isInterfaceDeclaration",
        "signature": "isInterfaceDeclaration: (node: Node) => node is InterfaceDeclaration;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4441,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4441",
        },
        "type": "(node: Node) => node is InterfaceDeclaration",
      },
      Object {
        "docs": Array [],
        "id": "isIntersectionTypeNode",
        "kind": "FunctionDeclaration",
        "name": "isIntersectionTypeNode",
        "signature": "isIntersectionTypeNode: (node: Node) => node is IntersectionTypeNode;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4370,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4370",
        },
        "type": "(node: Node) => node is IntersectionTypeNode",
      },
      Object {
        "docs": Array [],
        "id": "isIterationStatement",
        "kind": "FunctionDeclaration",
        "name": "isIterationStatement",
        "signature": "isIterationStatement: {
    (node: Node, lookInLabeledStatements: false): node is IterationStatement;
    (node: Node, lookInLabeledStatements: boolean): node is
        | IterationStatement
        | LabeledStatement;
};",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4234,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4234",
        },
        "type": "{ (node: Node, lookInLabeledStatements: false): node is IterationStatement; (node: Node, lookInLabeledStatements: boolean): node is IterationStatement | LabeledStatement; }",
      },
      Object {
        "docs": Array [],
        "id": "isJSDoc",
        "kind": "FunctionDeclaration",
        "name": "isJSDoc",
        "signature": "isJSDoc: (node: Node) => node is JSDoc;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4495,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4495",
        },
        "type": "(node: Node) => node is JSDoc",
      },
      Object {
        "docs": Array [],
        "id": "isJSDocAllType",
        "kind": "FunctionDeclaration",
        "name": "isJSDocAllType",
        "signature": "isJSDocAllType: (node: Node) => node is JSDocAllType;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4487,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4487",
        },
        "type": "(node: Node) => node is JSDocAllType",
      },
      Object {
        "docs": Array [],
        "id": "isJSDocAugmentsTag",
        "kind": "FunctionDeclaration",
        "name": "isJSDocAugmentsTag",
        "signature": "isJSDocAugmentsTag: (node: Node) => node is JSDocAugmentsTag;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4498,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4498",
        },
        "type": "(node: Node) => node is JSDocAugmentsTag",
      },
      Object {
        "docs": Array [],
        "id": "isJSDocAuthorTag",
        "kind": "FunctionDeclaration",
        "name": "isJSDocAuthorTag",
        "signature": "isJSDocAuthorTag: (node: Node) => node is JSDocAuthorTag;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4499,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4499",
        },
        "type": "(node: Node) => node is JSDocAuthorTag",
      },
      Object {
        "docs": Array [],
        "id": "isJSDocCallbackTag",
        "kind": "FunctionDeclaration",
        "name": "isJSDocCallbackTag",
        "signature": "isJSDocCallbackTag: (node: Node) => node is JSDocCallbackTag;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4501,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4501",
        },
        "type": "(node: Node) => node is JSDocCallbackTag",
      },
      Object {
        "docs": Array [],
        "id": "isJSDocClassTag",
        "kind": "FunctionDeclaration",
        "name": "isJSDocClassTag",
        "signature": "isJSDocClassTag: (node: Node) => node is JSDocClassTag;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4500,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4500",
        },
        "type": "(node: Node) => node is JSDocClassTag",
      },
      Object {
        "docs": Array [
          "/** True if node is of a kind that may contain comment text. */",
        ],
        "id": "isJSDocCommentContainingNode",
        "kind": "FunctionDeclaration",
        "name": "isJSDocCommentContainingNode",
        "signature": "isJSDocCommentContainingNode: (node: Node) => boolean;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4239,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4239",
        },
        "type": "(node: Node) => boolean",
      },
      Object {
        "docs": Array [],
        "id": "isJSDocDeprecatedTag",
        "kind": "FunctionDeclaration",
        "name": "isJSDocDeprecatedTag",
        "signature": "isJSDocDeprecatedTag: (node: Node) => node is JSDocDeprecatedTag;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4506,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4506",
        },
        "type": "(node: Node) => node is JSDocDeprecatedTag",
      },
      Object {
        "docs": Array [],
        "id": "isJSDocEnumTag",
        "kind": "FunctionDeclaration",
        "name": "isJSDocEnumTag",
        "signature": "isJSDocEnumTag: (node: Node) => node is JSDocEnumTag;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4507,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4507",
        },
        "type": "(node: Node) => node is JSDocEnumTag",
      },
      Object {
        "docs": Array [],
        "id": "isJSDocFunctionType",
        "kind": "FunctionDeclaration",
        "name": "isJSDocFunctionType",
        "signature": "isJSDocFunctionType: (node: Node) => node is JSDocFunctionType;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4492,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4492",
        },
        "type": "(node: Node) => node is JSDocFunctionType",
      },
      Object {
        "docs": Array [],
        "id": "isJSDocImplementsTag",
        "kind": "FunctionDeclaration",
        "name": "isJSDocImplementsTag",
        "signature": "isJSDocImplementsTag: (node: Node) => node is JSDocImplementsTag;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4516,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4516",
        },
        "type": "(node: Node) => node is JSDocImplementsTag",
      },
      Object {
        "docs": Array [],
        "id": "isJSDocNamepathType",
        "kind": "FunctionDeclaration",
        "name": "isJSDocNamepathType",
        "signature": "isJSDocNamepathType: (node: Node) => node is JSDocNamepathType;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4494,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4494",
        },
        "type": "(node: Node) => node is JSDocNamepathType",
      },
      Object {
        "docs": Array [],
        "id": "isJSDocNameReference",
        "kind": "FunctionDeclaration",
        "name": "isJSDocNameReference",
        "signature": "isJSDocNameReference: (node: Node) => node is JSDocNameReference;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4486,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4486",
        },
        "type": "(node: Node) => node is JSDocNameReference",
      },
      Object {
        "docs": Array [],
        "id": "isJSDocNonNullableType",
        "kind": "FunctionDeclaration",
        "name": "isJSDocNonNullableType",
        "signature": "isJSDocNonNullableType: (node: Node) => node is JSDocNonNullableType;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4490,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4490",
        },
        "type": "(node: Node) => node is JSDocNonNullableType",
      },
      Object {
        "docs": Array [],
        "id": "isJSDocNullableType",
        "kind": "FunctionDeclaration",
        "name": "isJSDocNullableType",
        "signature": "isJSDocNullableType: (node: Node) => node is JSDocNullableType;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4489,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4489",
        },
        "type": "(node: Node) => node is JSDocNullableType",
      },
      Object {
        "docs": Array [],
        "id": "isJSDocOptionalType",
        "kind": "FunctionDeclaration",
        "name": "isJSDocOptionalType",
        "signature": "isJSDocOptionalType: (node: Node) => node is JSDocOptionalType;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4491,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4491",
        },
        "type": "(node: Node) => node is JSDocOptionalType",
      },
      Object {
        "docs": Array [],
        "id": "isJSDocParameterTag",
        "kind": "FunctionDeclaration",
        "name": "isJSDocParameterTag",
        "signature": "isJSDocParameterTag: (node: Node) => node is JSDocParameterTag;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4508,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4508",
        },
        "type": "(node: Node) => node is JSDocParameterTag",
      },
      Object {
        "docs": Array [],
        "id": "isJSDocPrivateTag",
        "kind": "FunctionDeclaration",
        "name": "isJSDocPrivateTag",
        "signature": "isJSDocPrivateTag: (node: Node) => node is JSDocPrivateTag;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4503,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4503",
        },
        "type": "(node: Node) => node is JSDocPrivateTag",
      },
      Object {
        "docs": Array [],
        "id": "isJSDocPropertyLikeTag",
        "kind": "FunctionDeclaration",
        "name": "isJSDocPropertyLikeTag",
        "signature": "isJSDocPropertyLikeTag: (node: Node) => node is JSDocPropertyLikeTag;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4198,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4198",
        },
        "type": "(node: Node) => node is JSDocPropertyLikeTag",
      },
      Object {
        "docs": Array [],
        "id": "isJSDocPropertyTag",
        "kind": "FunctionDeclaration",
        "name": "isJSDocPropertyTag",
        "signature": "isJSDocPropertyTag: (node: Node) => node is JSDocPropertyTag;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4515,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4515",
        },
        "type": "(node: Node) => node is JSDocPropertyTag",
      },
      Object {
        "docs": Array [],
        "id": "isJSDocProtectedTag",
        "kind": "FunctionDeclaration",
        "name": "isJSDocProtectedTag",
        "signature": "isJSDocProtectedTag: (node: Node) => node is JSDocProtectedTag;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4504,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4504",
        },
        "type": "(node: Node) => node is JSDocProtectedTag",
      },
      Object {
        "docs": Array [],
        "id": "isJSDocPublicTag",
        "kind": "FunctionDeclaration",
        "name": "isJSDocPublicTag",
        "signature": "isJSDocPublicTag: (node: Node) => node is JSDocPublicTag;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4502,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4502",
        },
        "type": "(node: Node) => node is JSDocPublicTag",
      },
      Object {
        "docs": Array [],
        "id": "isJSDocReadonlyTag",
        "kind": "FunctionDeclaration",
        "name": "isJSDocReadonlyTag",
        "signature": "isJSDocReadonlyTag: (node: Node) => node is JSDocReadonlyTag;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4505,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4505",
        },
        "type": "(node: Node) => node is JSDocReadonlyTag",
      },
      Object {
        "docs": Array [],
        "id": "isJSDocReturnTag",
        "kind": "FunctionDeclaration",
        "name": "isJSDocReturnTag",
        "signature": "isJSDocReturnTag: (node: Node) => node is JSDocReturnTag;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4509,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4509",
        },
        "type": "(node: Node) => node is JSDocReturnTag",
      },
      Object {
        "docs": Array [],
        "id": "isJSDocSignature",
        "kind": "FunctionDeclaration",
        "name": "isJSDocSignature",
        "signature": "isJSDocSignature: (node: Node) => node is JSDocSignature;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4497,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4497",
        },
        "type": "(node: Node) => node is JSDocSignature",
      },
      Object {
        "docs": Array [],
        "id": "isJSDocTemplateTag",
        "kind": "FunctionDeclaration",
        "name": "isJSDocTemplateTag",
        "signature": "isJSDocTemplateTag: (node: Node) => node is JSDocTemplateTag;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4512,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4512",
        },
        "type": "(node: Node) => node is JSDocTemplateTag",
      },
      Object {
        "docs": Array [],
        "id": "isJSDocThisTag",
        "kind": "FunctionDeclaration",
        "name": "isJSDocThisTag",
        "signature": "isJSDocThisTag: (node: Node) => node is JSDocThisTag;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4510,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4510",
        },
        "type": "(node: Node) => node is JSDocThisTag",
      },
      Object {
        "docs": Array [],
        "id": "isJSDocTypedefTag",
        "kind": "FunctionDeclaration",
        "name": "isJSDocTypedefTag",
        "signature": "isJSDocTypedefTag: (node: Node) => node is JSDocTypedefTag;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4513,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4513",
        },
        "type": "(node: Node) => node is JSDocTypedefTag",
      },
      Object {
        "docs": Array [],
        "id": "isJSDocTypeExpression",
        "kind": "FunctionDeclaration",
        "name": "isJSDocTypeExpression",
        "signature": "isJSDocTypeExpression: (node: Node) => node is JSDocTypeExpression;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4485,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4485",
        },
        "type": "(node: Node) => node is JSDocTypeExpression",
      },
      Object {
        "docs": Array [],
        "id": "isJSDocTypeLiteral",
        "kind": "FunctionDeclaration",
        "name": "isJSDocTypeLiteral",
        "signature": "isJSDocTypeLiteral: (node: Node) => node is JSDocTypeLiteral;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4496,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4496",
        },
        "type": "(node: Node) => node is JSDocTypeLiteral",
      },
      Object {
        "docs": Array [],
        "id": "isJSDocTypeTag",
        "kind": "FunctionDeclaration",
        "name": "isJSDocTypeTag",
        "signature": "isJSDocTypeTag: (node: Node) => node is JSDocTypeTag;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4511,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4511",
        },
        "type": "(node: Node) => node is JSDocTypeTag",
      },
      Object {
        "docs": Array [],
        "id": "isJSDocUnknownTag",
        "kind": "FunctionDeclaration",
        "name": "isJSDocUnknownTag",
        "signature": "isJSDocUnknownTag: (node: Node) => node is JSDocUnknownTag;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4514,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4514",
        },
        "type": "(node: Node) => node is JSDocUnknownTag",
      },
      Object {
        "docs": Array [],
        "id": "isJSDocUnknownType",
        "kind": "FunctionDeclaration",
        "name": "isJSDocUnknownType",
        "signature": "isJSDocUnknownType: (node: Node) => node is JSDocUnknownType;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4488,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4488",
        },
        "type": "(node: Node) => node is JSDocUnknownType",
      },
      Object {
        "docs": Array [],
        "id": "isJSDocVariadicType",
        "kind": "FunctionDeclaration",
        "name": "isJSDocVariadicType",
        "signature": "isJSDocVariadicType: (node: Node) => node is JSDocVariadicType;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4493,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4493",
        },
        "type": "(node: Node) => node is JSDocVariadicType",
      },
      Object {
        "docs": Array [],
        "id": "isJsxAttribute",
        "kind": "FunctionDeclaration",
        "name": "isJsxAttribute",
        "signature": "isJsxAttribute: (node: Node) => node is JsxAttribute;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4469,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4469",
        },
        "type": "(node: Node) => node is JsxAttribute",
      },
      Object {
        "docs": Array [],
        "id": "isJsxAttributes",
        "kind": "FunctionDeclaration",
        "name": "isJsxAttributes",
        "signature": "isJsxAttributes: (node: Node) => node is JsxAttributes;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4470,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4470",
        },
        "type": "(node: Node) => node is JsxAttributes",
      },
      Object {
        "docs": Array [],
        "id": "isJsxClosingElement",
        "kind": "FunctionDeclaration",
        "name": "isJsxClosingElement",
        "signature": "isJsxClosingElement: (node: Node) => node is JsxClosingElement;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4465,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4465",
        },
        "type": "(node: Node) => node is JsxClosingElement",
      },
      Object {
        "docs": Array [],
        "id": "isJsxClosingFragment",
        "kind": "FunctionDeclaration",
        "name": "isJsxClosingFragment",
        "signature": "isJsxClosingFragment: (node: Node) => node is JsxClosingFragment;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4468,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4468",
        },
        "type": "(node: Node) => node is JsxClosingFragment",
      },
      Object {
        "docs": Array [],
        "id": "isJsxElement",
        "kind": "FunctionDeclaration",
        "name": "isJsxElement",
        "signature": "isJsxElement: (node: Node) => node is JsxElement;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4462,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4462",
        },
        "type": "(node: Node) => node is JsxElement",
      },
      Object {
        "docs": Array [],
        "id": "isJsxExpression",
        "kind": "FunctionDeclaration",
        "name": "isJsxExpression",
        "signature": "isJsxExpression: (node: Node) => node is JsxExpression;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4472,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4472",
        },
        "type": "(node: Node) => node is JsxExpression",
      },
      Object {
        "docs": Array [],
        "id": "isJsxFragment",
        "kind": "FunctionDeclaration",
        "name": "isJsxFragment",
        "signature": "isJsxFragment: (node: Node) => node is JsxFragment;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4466,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4466",
        },
        "type": "(node: Node) => node is JsxFragment",
      },
      Object {
        "docs": Array [],
        "id": "isJsxOpeningElement",
        "kind": "FunctionDeclaration",
        "name": "isJsxOpeningElement",
        "signature": "isJsxOpeningElement: (node: Node) => node is JsxOpeningElement;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4464,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4464",
        },
        "type": "(node: Node) => node is JsxOpeningElement",
      },
      Object {
        "docs": Array [],
        "id": "isJsxOpeningFragment",
        "kind": "FunctionDeclaration",
        "name": "isJsxOpeningFragment",
        "signature": "isJsxOpeningFragment: (node: Node) => node is JsxOpeningFragment;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4467,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4467",
        },
        "type": "(node: Node) => node is JsxOpeningFragment",
      },
      Object {
        "docs": Array [],
        "id": "isJsxOpeningLikeElement",
        "kind": "FunctionDeclaration",
        "name": "isJsxOpeningLikeElement",
        "signature": "isJsxOpeningLikeElement: (node: Node) => node is JsxOpeningLikeElement;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4236,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4236",
        },
        "type": "(node: Node) => node is JsxOpeningLikeElement",
      },
      Object {
        "docs": Array [],
        "id": "isJsxSelfClosingElement",
        "kind": "FunctionDeclaration",
        "name": "isJsxSelfClosingElement",
        "signature": "isJsxSelfClosingElement: (node: Node) => node is JsxSelfClosingElement;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4463,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4463",
        },
        "type": "(node: Node) => node is JsxSelfClosingElement",
      },
      Object {
        "docs": Array [],
        "id": "isJsxSpreadAttribute",
        "kind": "FunctionDeclaration",
        "name": "isJsxSpreadAttribute",
        "signature": "isJsxSpreadAttribute: (node: Node) => node is JsxSpreadAttribute;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4471,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4471",
        },
        "type": "(node: Node) => node is JsxSpreadAttribute",
      },
      Object {
        "docs": Array [],
        "id": "isJsxText",
        "kind": "FunctionDeclaration",
        "name": "isJsxText",
        "signature": "isJsxText: (node: Node) => node is JsxText;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4335,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4335",
        },
        "type": "(node: Node) => node is JsxText",
      },
      Object {
        "docs": Array [],
        "id": "isLabeledStatement",
        "kind": "FunctionDeclaration",
        "name": "isLabeledStatement",
        "signature": "isLabeledStatement: (node: Node) => node is LabeledStatement;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4433,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4433",
        },
        "type": "(node: Node) => node is LabeledStatement",
      },
      Object {
        "docs": Array [],
        "id": "isLineBreak",
        "kind": "FunctionDeclaration",
        "name": "isLineBreak",
        "signature": "isLineBreak: (ch: number) => boolean;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 3983,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3983",
        },
        "type": "(ch: number) => boolean",
      },
      Object {
        "docs": Array [],
        "id": "isLiteralExpression",
        "kind": "FunctionDeclaration",
        "name": "isLiteralExpression",
        "signature": "isLiteralExpression: (node: Node) => node is LiteralExpression;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4205,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4205",
        },
        "type": "(node: Node) => node is LiteralExpression",
      },
      Object {
        "docs": Array [],
        "id": "isLiteralTypeNode",
        "kind": "FunctionDeclaration",
        "name": "isLiteralTypeNode",
        "signature": "isLiteralTypeNode: (node: Node) => node is LiteralTypeNode;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4378,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4378",
        },
        "type": "(node: Node) => node is LiteralTypeNode",
      },
      Object {
        "docs": Array [],
        "id": "isMappedTypeNode",
        "kind": "FunctionDeclaration",
        "name": "isMappedTypeNode",
        "signature": "isMappedTypeNode: (node: Node) => node is MappedTypeNode;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4377,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4377",
        },
        "type": "(node: Node) => node is MappedTypeNode",
      },
      Object {
        "docs": Array [],
        "id": "isMetaProperty",
        "kind": "FunctionDeclaration",
        "name": "isMetaProperty",
        "signature": "isMetaProperty: (node: Node) => node is MetaProperty;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4412,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4412",
        },
        "type": "(node: Node) => node is MetaProperty",
      },
      Object {
        "docs": Array [],
        "id": "isMethodDeclaration",
        "kind": "FunctionDeclaration",
        "name": "isMethodDeclaration",
        "signature": "isMethodDeclaration: (node: Node) => node is MethodDeclaration;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4351,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4351",
        },
        "type": "(node: Node) => node is MethodDeclaration",
      },
      Object {
        "docs": Array [],
        "id": "isMethodSignature",
        "kind": "FunctionDeclaration",
        "name": "isMethodSignature",
        "signature": "isMethodSignature: (node: Node) => node is MethodSignature;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4350,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4350",
        },
        "type": "(node: Node) => node is MethodSignature",
      },
      Object {
        "docs": Array [],
        "id": "isMissingDeclaration",
        "kind": "FunctionDeclaration",
        "name": "isMissingDeclaration",
        "signature": "isMissingDeclaration: (node: Node) => node is MissingDeclaration;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4459,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4459",
        },
        "type": "(node: Node) => node is MissingDeclaration",
      },
      Object {
        "docs": Array [],
        "id": "isModifier",
        "kind": "FunctionDeclaration",
        "name": "isModifier",
        "signature": "isModifier: (node: Node) => node is Modifier;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4211,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4211",
        },
        "type": "(node: Node) => node is Modifier",
      },
      Object {
        "docs": Array [],
        "id": "isModuleBlock",
        "kind": "FunctionDeclaration",
        "name": "isModuleBlock",
        "signature": "isModuleBlock: (node: Node) => node is ModuleBlock;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4445,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4445",
        },
        "type": "(node: Node) => node is ModuleBlock",
      },
      Object {
        "docs": Array [],
        "id": "isModuleDeclaration",
        "kind": "FunctionDeclaration",
        "name": "isModuleDeclaration",
        "signature": "isModuleDeclaration: (node: Node) => node is ModuleDeclaration;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4444,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4444",
        },
        "type": "(node: Node) => node is ModuleDeclaration",
      },
      Object {
        "docs": Array [],
        "id": "isNamedExportBindings",
        "kind": "FunctionDeclaration",
        "name": "isNamedExportBindings",
        "signature": "isNamedExportBindings: (node: Node) => node is NamedExportBindings;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4195,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4195",
        },
        "type": "(node: Node) => node is NamedExportBindings",
      },
      Object {
        "docs": Array [],
        "id": "isNamedExports",
        "kind": "FunctionDeclaration",
        "name": "isNamedExports",
        "signature": "isNamedExports: (node: Node) => node is NamedExports;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4457,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4457",
        },
        "type": "(node: Node) => node is NamedExports",
      },
      Object {
        "docs": Array [],
        "id": "isNamedImports",
        "kind": "FunctionDeclaration",
        "name": "isNamedImports",
        "signature": "isNamedImports: (node: Node) => node is NamedImports;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4453,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4453",
        },
        "type": "(node: Node) => node is NamedImports",
      },
      Object {
        "docs": Array [],
        "id": "isNamedTupleMember",
        "kind": "FunctionDeclaration",
        "name": "isNamedTupleMember",
        "signature": "isNamedTupleMember: (node: Node) => node is NamedTupleMember;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4366,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4366",
        },
        "type": "(node: Node) => node is NamedTupleMember",
      },
      Object {
        "docs": Array [],
        "id": "isNamespaceExport",
        "kind": "FunctionDeclaration",
        "name": "isNamespaceExport",
        "signature": "isNamespaceExport: (node: Node) => node is NamespaceExport;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4452,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4452",
        },
        "type": "(node: Node) => node is NamespaceExport",
      },
      Object {
        "docs": Array [],
        "id": "isNamespaceExportDeclaration",
        "kind": "FunctionDeclaration",
        "name": "isNamespaceExportDeclaration",
        "signature": "isNamespaceExportDeclaration: (node: Node) => node is NamespaceExportDeclaration;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4447,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4447",
        },
        "type": "(node: Node) => node is NamespaceExportDeclaration",
      },
      Object {
        "docs": Array [],
        "id": "isNamespaceImport",
        "kind": "FunctionDeclaration",
        "name": "isNamespaceImport",
        "signature": "isNamespaceImport: (node: Node) => node is NamespaceImport;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4451,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4451",
        },
        "type": "(node: Node) => node is NamespaceImport",
      },
      Object {
        "docs": Array [],
        "id": "isNewExpression",
        "kind": "FunctionDeclaration",
        "name": "isNewExpression",
        "signature": "isNewExpression: (node: Node) => node is NewExpression;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4390,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4390",
        },
        "type": "(node: Node) => node is NewExpression",
      },
      Object {
        "docs": Array [],
        "id": "isNonNullChain",
        "kind": "FunctionDeclaration",
        "name": "isNonNullChain",
        "signature": "isNonNullChain: (node: Node) => node is NonNullChain;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4193,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4193",
        },
        "type": "(node: Node) => node is NonNullChain",
      },
      Object {
        "docs": Array [],
        "id": "isNonNullExpression",
        "kind": "FunctionDeclaration",
        "name": "isNonNullExpression",
        "signature": "isNonNullExpression: (node: Node) => node is NonNullExpression;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4411,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4411",
        },
        "type": "(node: Node) => node is NonNullExpression",
      },
      Object {
        "docs": Array [],
        "id": "isNoSubstitutionTemplateLiteral",
        "kind": "FunctionDeclaration",
        "name": "isNoSubstitutionTemplateLiteral",
        "signature": "isNoSubstitutionTemplateLiteral: (
    node: Node
) => node is NoSubstitutionTemplateLiteral;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4337,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4337",
        },
        "type": "(node: Node) => node is NoSubstitutionTemplateLiteral",
      },
      Object {
        "docs": Array [],
        "id": "isNotEmittedStatement",
        "kind": "FunctionDeclaration",
        "name": "isNotEmittedStatement",
        "signature": "isNotEmittedStatement: (node: Node) => node is NotEmittedStatement;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4460,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4460",
        },
        "type": "(node: Node) => node is NotEmittedStatement",
      },
      Object {
        "docs": Array [],
        "id": "isNullishCoalesce",
        "kind": "FunctionDeclaration",
        "name": "isNullishCoalesce",
        "signature": "isNullishCoalesce: (node: Node) => boolean;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4189,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4189",
        },
        "type": "(node: Node) => boolean",
      },
      Object {
        "docs": Array [],
        "id": "isNumericLiteral",
        "kind": "FunctionDeclaration",
        "name": "isNumericLiteral",
        "signature": "isNumericLiteral: (node: Node) => node is NumericLiteral;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4332,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4332",
        },
        "type": "(node: Node) => node is NumericLiteral",
      },
      Object {
        "docs": Array [],
        "id": "isObjectBindingPattern",
        "kind": "FunctionDeclaration",
        "name": "isObjectBindingPattern",
        "signature": "isObjectBindingPattern: (node: Node) => node is ObjectBindingPattern;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4382,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4382",
        },
        "type": "(node: Node) => node is ObjectBindingPattern",
      },
      Object {
        "docs": Array [],
        "id": "isObjectLiteralElement",
        "kind": "FunctionDeclaration",
        "name": "isObjectLiteralElement",
        "signature": "isObjectLiteralElement: (node: Node) => node is ObjectLiteralElement;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4244,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4244",
        },
        "type": "(node: Node) => node is ObjectLiteralElement",
      },
      Object {
        "docs": Array [],
        "id": "isObjectLiteralElementLike",
        "kind": "FunctionDeclaration",
        "name": "isObjectLiteralElementLike",
        "signature": "isObjectLiteralElementLike: (node: Node) => node is ObjectLiteralElementLike;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4221,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4221",
        },
        "type": "(node: Node) => node is ObjectLiteralElementLike",
      },
      Object {
        "docs": Array [],
        "id": "isObjectLiteralExpression",
        "kind": "FunctionDeclaration",
        "name": "isObjectLiteralExpression",
        "signature": "isObjectLiteralExpression: (node: Node) => node is ObjectLiteralExpression;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4386,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4386",
        },
        "type": "(node: Node) => node is ObjectLiteralExpression",
      },
      Object {
        "docs": Array [],
        "id": "isOmittedExpression",
        "kind": "FunctionDeclaration",
        "name": "isOmittedExpression",
        "signature": "isOmittedExpression: (node: Node) => node is OmittedExpression;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4408,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4408",
        },
        "type": "(node: Node) => node is OmittedExpression",
      },
      Object {
        "docs": Array [],
        "id": "isOptionalChain",
        "kind": "FunctionDeclaration",
        "name": "isOptionalChain",
        "signature": "isOptionalChain: (
    node: Node
) => node is PropertyAccessChain | ElementAccessChain | CallChain | NonNullChain;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4188,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4188",
        },
        "type": "(node: Node) => node is PropertyAccessChain | ElementAccessChain | CallChain | NonNullChain",
      },
      Object {
        "docs": Array [],
        "id": "isOptionalTypeNode",
        "kind": "FunctionDeclaration",
        "name": "isOptionalTypeNode",
        "signature": "isOptionalTypeNode: (node: Node) => node is OptionalTypeNode;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4367,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4367",
        },
        "type": "(node: Node) => node is OptionalTypeNode",
      },
      Object {
        "docs": Array [],
        "id": "isParameter",
        "kind": "FunctionDeclaration",
        "name": "isParameter",
        "signature": "isParameter: (node: Node) => node is ParameterDeclaration;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4346,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4346",
        },
        "type": "(node: Node) => node is ParameterDeclaration",
      },
      Object {
        "docs": Array [],
        "id": "isParameterPropertyDeclaration",
        "kind": "FunctionDeclaration",
        "name": "isParameterPropertyDeclaration",
        "signature": "isParameterPropertyDeclaration: (
    node: Node,
    parent: Node
) => node is ParameterPropertyDeclaration;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4034,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4034",
        },
        "type": "(node: Node, parent: Node) => node is ParameterPropertyDeclaration",
      },
      Object {
        "docs": Array [],
        "id": "isParenthesizedExpression",
        "kind": "FunctionDeclaration",
        "name": "isParenthesizedExpression",
        "signature": "isParenthesizedExpression: (node: Node) => node is ParenthesizedExpression;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4393,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4393",
        },
        "type": "(node: Node) => node is ParenthesizedExpression",
      },
      Object {
        "docs": Array [],
        "id": "isParenthesizedTypeNode",
        "kind": "FunctionDeclaration",
        "name": "isParenthesizedTypeNode",
        "signature": "isParenthesizedTypeNode: (node: Node) => node is ParenthesizedTypeNode;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4373,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4373",
        },
        "type": "(node: Node) => node is ParenthesizedTypeNode",
      },
      Object {
        "docs": Array [
          "/**
     * Gets a value indicating whether a node originated in the parse tree.
     *
     * @param node The node to test.
     */",
        ],
        "id": "isParseTreeNode",
        "kind": "FunctionDeclaration",
        "name": "isParseTreeNode",
        "signature": "isParseTreeNode: (node: Node) => boolean;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4067,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4067",
        },
        "type": "(node: Node) => boolean",
      },
      Object {
        "docs": Array [],
        "id": "isPartiallyEmittedExpression",
        "kind": "FunctionDeclaration",
        "name": "isPartiallyEmittedExpression",
        "signature": "isPartiallyEmittedExpression: (node: Node) => node is PartiallyEmittedExpression;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4414,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4414",
        },
        "type": "(node: Node) => node is PartiallyEmittedExpression",
      },
      Object {
        "docs": Array [],
        "id": "isPostfixUnaryExpression",
        "kind": "FunctionDeclaration",
        "name": "isPostfixUnaryExpression",
        "signature": "isPostfixUnaryExpression: (node: Node) => node is PostfixUnaryExpression;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4401,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4401",
        },
        "type": "(node: Node) => node is PostfixUnaryExpression",
      },
      Object {
        "docs": Array [],
        "id": "isPrefixUnaryExpression",
        "kind": "FunctionDeclaration",
        "name": "isPrefixUnaryExpression",
        "signature": "isPrefixUnaryExpression: (node: Node) => node is PrefixUnaryExpression;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4400,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4400",
        },
        "type": "(node: Node) => node is PrefixUnaryExpression",
      },
      Object {
        "docs": Array [],
        "id": "isPrivateIdentifier",
        "kind": "FunctionDeclaration",
        "name": "isPrivateIdentifier",
        "signature": "isPrivateIdentifier: (node: Node) => node is PrivateIdentifier;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4344,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4344",
        },
        "type": "(node: Node) => node is PrivateIdentifier",
      },
      Object {
        "docs": Array [],
        "id": "isPropertyAccessChain",
        "kind": "FunctionDeclaration",
        "name": "isPropertyAccessChain",
        "signature": "isPropertyAccessChain: (node: Node) => node is PropertyAccessChain;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4185,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4185",
        },
        "type": "(node: Node) => node is PropertyAccessChain",
      },
      Object {
        "docs": Array [],
        "id": "isPropertyAccessExpression",
        "kind": "FunctionDeclaration",
        "name": "isPropertyAccessExpression",
        "signature": "isPropertyAccessExpression: (node: Node) => node is PropertyAccessExpression;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4387,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4387",
        },
        "type": "(node: Node) => node is PropertyAccessExpression",
      },
      Object {
        "docs": Array [],
        "id": "isPropertyAccessOrQualifiedName",
        "kind": "FunctionDeclaration",
        "name": "isPropertyAccessOrQualifiedName",
        "signature": "isPropertyAccessOrQualifiedName: (
    node: Node
) => node is QualifiedName | PropertyAccessExpression;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4229,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4229",
        },
        "type": "(node: Node) => node is QualifiedName | PropertyAccessExpression",
      },
      Object {
        "docs": Array [],
        "id": "isPropertyAssignment",
        "kind": "FunctionDeclaration",
        "name": "isPropertyAssignment",
        "signature": "isPropertyAssignment: (node: Node) => node is PropertyAssignment;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4477,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4477",
        },
        "type": "(node: Node) => node is PropertyAssignment",
      },
      Object {
        "docs": Array [],
        "id": "isPropertyDeclaration",
        "kind": "FunctionDeclaration",
        "name": "isPropertyDeclaration",
        "signature": "isPropertyDeclaration: (node: Node) => node is PropertyDeclaration;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4349,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4349",
        },
        "type": "(node: Node) => node is PropertyDeclaration",
      },
      Object {
        "docs": Array [],
        "id": "isPropertyName",
        "kind": "FunctionDeclaration",
        "name": "isPropertyName",
        "signature": "isPropertyName: (node: Node) => node is PropertyName;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4213,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4213",
        },
        "type": "(node: Node) => node is PropertyName",
      },
      Object {
        "docs": Array [],
        "id": "isPropertySignature",
        "kind": "FunctionDeclaration",
        "name": "isPropertySignature",
        "signature": "isPropertySignature: (node: Node) => node is PropertySignature;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4348,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4348",
        },
        "type": "(node: Node) => node is PropertySignature",
      },
      Object {
        "docs": Array [],
        "id": "isQualifiedName",
        "kind": "FunctionDeclaration",
        "name": "isQualifiedName",
        "signature": "isQualifiedName: (node: Node) => node is QualifiedName;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4342,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4342",
        },
        "type": "(node: Node) => node is QualifiedName",
      },
      Object {
        "docs": Array [],
        "id": "isRegularExpressionLiteral",
        "kind": "FunctionDeclaration",
        "name": "isRegularExpressionLiteral",
        "signature": "isRegularExpressionLiteral: (node: Node) => node is RegularExpressionLiteral;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4336,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4336",
        },
        "type": "(node: Node) => node is RegularExpressionLiteral",
      },
      Object {
        "docs": Array [],
        "id": "isRestTypeNode",
        "kind": "FunctionDeclaration",
        "name": "isRestTypeNode",
        "signature": "isRestTypeNode: (node: Node) => node is RestTypeNode;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4368,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4368",
        },
        "type": "(node: Node) => node is RestTypeNode",
      },
      Object {
        "docs": Array [],
        "id": "isReturnStatement",
        "kind": "FunctionDeclaration",
        "name": "isReturnStatement",
        "signature": "isReturnStatement: (node: Node) => node is ReturnStatement;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4430,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4430",
        },
        "type": "(node: Node) => node is ReturnStatement",
      },
      Object {
        "docs": Array [],
        "id": "isSemicolonClassElement",
        "kind": "FunctionDeclaration",
        "name": "isSemicolonClassElement",
        "signature": "isSemicolonClassElement: (node: Node) => node is SemicolonClassElement;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4417,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4417",
        },
        "type": "(node: Node) => node is SemicolonClassElement",
      },
      Object {
        "docs": Array [],
        "id": "isSetAccessor",
        "kind": "FunctionDeclaration",
        "name": "isSetAccessor",
        "signature": "isSetAccessor: (node: Node) => node is SetAccessorDeclaration;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4240,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4240",
        },
        "type": "(node: Node) => node is SetAccessorDeclaration",
      },
      Object {
        "docs": Array [],
        "id": "isSetAccessorDeclaration",
        "kind": "FunctionDeclaration",
        "name": "isSetAccessorDeclaration",
        "signature": "isSetAccessorDeclaration: (node: Node) => node is SetAccessorDeclaration;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4354,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4354",
        },
        "type": "(node: Node) => node is SetAccessorDeclaration",
      },
      Object {
        "docs": Array [],
        "id": "isShorthandPropertyAssignment",
        "kind": "FunctionDeclaration",
        "name": "isShorthandPropertyAssignment",
        "signature": "isShorthandPropertyAssignment: (
    node: Node
) => node is ShorthandPropertyAssignment;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4478,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4478",
        },
        "type": "(node: Node) => node is ShorthandPropertyAssignment",
      },
      Object {
        "docs": Array [],
        "id": "isSourceFile",
        "kind": "FunctionDeclaration",
        "name": "isSourceFile",
        "signature": "isSourceFile: (node: Node) => node is SourceFile;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4482,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4482",
        },
        "type": "(node: Node) => node is SourceFile",
      },
      Object {
        "docs": Array [],
        "id": "isSpreadAssignment",
        "kind": "FunctionDeclaration",
        "name": "isSpreadAssignment",
        "signature": "isSpreadAssignment: (node: Node) => node is SpreadAssignment;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4479,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4479",
        },
        "type": "(node: Node) => node is SpreadAssignment",
      },
      Object {
        "docs": Array [],
        "id": "isSpreadElement",
        "kind": "FunctionDeclaration",
        "name": "isSpreadElement",
        "signature": "isSpreadElement: (node: Node) => node is SpreadElement;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4406,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4406",
        },
        "type": "(node: Node) => node is SpreadElement",
      },
      Object {
        "docs": Array [],
        "id": "isStringLiteral",
        "kind": "FunctionDeclaration",
        "name": "isStringLiteral",
        "signature": "isStringLiteral: (node: Node) => node is StringLiteral;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4334,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4334",
        },
        "type": "(node: Node) => node is StringLiteral",
      },
      Object {
        "docs": Array [],
        "id": "isStringLiteralLike",
        "kind": "FunctionDeclaration",
        "name": "isStringLiteralLike",
        "signature": "isStringLiteralLike: (node: Node) => node is StringLiteralLike;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4245,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4245",
        },
        "type": "(node: Node) => node is StringLiteralLike",
      },
      Object {
        "docs": Array [],
        "id": "isStringTextContainingNode",
        "kind": "FunctionDeclaration",
        "name": "isStringTextContainingNode",
        "signature": "isStringTextContainingNode: (
    node: Node
) => node is StringLiteral | TemplateLiteralToken;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4210,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4210",
        },
        "type": "(node: Node) => node is StringLiteral | TemplateLiteralToken",
      },
      Object {
        "docs": Array [],
        "id": "isSwitchStatement",
        "kind": "FunctionDeclaration",
        "name": "isSwitchStatement",
        "signature": "isSwitchStatement: (node: Node) => node is SwitchStatement;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4432,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4432",
        },
        "type": "(node: Node) => node is SwitchStatement",
      },
      Object {
        "docs": Array [],
        "id": "isSyntheticExpression",
        "kind": "FunctionDeclaration",
        "name": "isSyntheticExpression",
        "signature": "isSyntheticExpression: (node: Node) => node is SyntheticExpression;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4413,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4413",
        },
        "type": "(node: Node) => node is SyntheticExpression",
      },
      Object {
        "docs": Array [],
        "id": "isTaggedTemplateExpression",
        "kind": "FunctionDeclaration",
        "name": "isTaggedTemplateExpression",
        "signature": "isTaggedTemplateExpression: (node: Node) => node is TaggedTemplateExpression;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4391,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4391",
        },
        "type": "(node: Node) => node is TaggedTemplateExpression",
      },
      Object {
        "docs": Array [],
        "id": "isTemplateExpression",
        "kind": "FunctionDeclaration",
        "name": "isTemplateExpression",
        "signature": "isTemplateExpression: (node: Node) => node is TemplateExpression;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4404,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4404",
        },
        "type": "(node: Node) => node is TemplateExpression",
      },
      Object {
        "docs": Array [],
        "id": "isTemplateHead",
        "kind": "FunctionDeclaration",
        "name": "isTemplateHead",
        "signature": "isTemplateHead: (node: Node) => node is TemplateHead;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4338,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4338",
        },
        "type": "(node: Node) => node is TemplateHead",
      },
      Object {
        "docs": Array [],
        "id": "isTemplateLiteral",
        "kind": "FunctionDeclaration",
        "name": "isTemplateLiteral",
        "signature": "isTemplateLiteral: (node: Node) => node is TemplateLiteral;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4232,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4232",
        },
        "type": "(node: Node) => node is TemplateLiteral",
      },
      Object {
        "docs": Array [],
        "id": "isTemplateLiteralToken",
        "kind": "FunctionDeclaration",
        "name": "isTemplateLiteralToken",
        "signature": "isTemplateLiteralToken: (node: Node) => node is TemplateLiteralToken;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4206,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4206",
        },
        "type": "(node: Node) => node is TemplateLiteralToken",
      },
      Object {
        "docs": Array [],
        "id": "isTemplateLiteralTypeNode",
        "kind": "FunctionDeclaration",
        "name": "isTemplateLiteralTypeNode",
        "signature": "isTemplateLiteralTypeNode: (node: Node) => node is TemplateLiteralTypeNode;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4381,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4381",
        },
        "type": "(node: Node) => node is TemplateLiteralTypeNode",
      },
      Object {
        "docs": Array [],
        "id": "isTemplateLiteralTypeSpan",
        "kind": "FunctionDeclaration",
        "name": "isTemplateLiteralTypeSpan",
        "signature": "isTemplateLiteralTypeSpan: (node: Node) => node is TemplateLiteralTypeSpan;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4380,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4380",
        },
        "type": "(node: Node) => node is TemplateLiteralTypeSpan",
      },
      Object {
        "docs": Array [],
        "id": "isTemplateMiddle",
        "kind": "FunctionDeclaration",
        "name": "isTemplateMiddle",
        "signature": "isTemplateMiddle: (node: Node) => node is TemplateMiddle;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4339,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4339",
        },
        "type": "(node: Node) => node is TemplateMiddle",
      },
      Object {
        "docs": Array [],
        "id": "isTemplateMiddleOrTemplateTail",
        "kind": "FunctionDeclaration",
        "name": "isTemplateMiddleOrTemplateTail",
        "signature": "isTemplateMiddleOrTemplateTail: (
    node: Node
) => node is TemplateMiddle | TemplateTail;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4207,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4207",
        },
        "type": "(node: Node) => node is TemplateMiddle | TemplateTail",
      },
      Object {
        "docs": Array [],
        "id": "isTemplateSpan",
        "kind": "FunctionDeclaration",
        "name": "isTemplateSpan",
        "signature": "isTemplateSpan: (node: Node) => node is TemplateSpan;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4416,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4416",
        },
        "type": "(node: Node) => node is TemplateSpan",
      },
      Object {
        "docs": Array [],
        "id": "isTemplateTail",
        "kind": "FunctionDeclaration",
        "name": "isTemplateTail",
        "signature": "isTemplateTail: (node: Node) => node is TemplateTail;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4340,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4340",
        },
        "type": "(node: Node) => node is TemplateTail",
      },
      Object {
        "docs": Array [],
        "id": "isThisTypeNode",
        "kind": "FunctionDeclaration",
        "name": "isThisTypeNode",
        "signature": "isThisTypeNode: (node: Node) => node is ThisTypeNode;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4374,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4374",
        },
        "type": "(node: Node) => node is ThisTypeNode",
      },
      Object {
        "docs": Array [],
        "id": "isThrowStatement",
        "kind": "FunctionDeclaration",
        "name": "isThrowStatement",
        "signature": "isThrowStatement: (node: Node) => node is ThrowStatement;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4434,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4434",
        },
        "type": "(node: Node) => node is ThrowStatement",
      },
      Object {
        "docs": Array [
          "/**
     * True if node is of some token syntax kind.
     * For example, this is true for an IfKeyword but not for an IfStatement.
     * Literals are considered tokens, except TemplateLiteral, but does include TemplateHead/Middle/Tail.
     */",
        ],
        "id": "isToken",
        "kind": "FunctionDeclaration",
        "name": "isToken",
        "signature": "isToken: (n: Node) => boolean;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4204,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4204",
        },
        "type": "(n: Node) => boolean",
      },
      Object {
        "docs": Array [],
        "id": "isTryStatement",
        "kind": "FunctionDeclaration",
        "name": "isTryStatement",
        "signature": "isTryStatement: (node: Node) => node is TryStatement;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4435,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4435",
        },
        "type": "(node: Node) => node is TryStatement",
      },
      Object {
        "docs": Array [],
        "id": "isTupleTypeNode",
        "kind": "FunctionDeclaration",
        "name": "isTupleTypeNode",
        "signature": "isTupleTypeNode: (node: Node) => node is TupleTypeNode;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4365,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4365",
        },
        "type": "(node: Node) => node is TupleTypeNode",
      },
      Object {
        "docs": Array [],
        "id": "isTypeAliasDeclaration",
        "kind": "FunctionDeclaration",
        "name": "isTypeAliasDeclaration",
        "signature": "isTypeAliasDeclaration: (node: Node) => node is TypeAliasDeclaration;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4442,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4442",
        },
        "type": "(node: Node) => node is TypeAliasDeclaration",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`isTypeAssertionExpression\` instead. */",
        ],
        "id": "isTypeAssertion",
        "kind": "FunctionDeclaration",
        "name": "isTypeAssertion",
        "signature": "isTypeAssertion: (node: Node) => node is TypeAssertion;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 7191,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L7191",
        },
        "type": "(node: Node) => node is TypeAssertion",
      },
      Object {
        "docs": Array [],
        "id": "isTypeAssertionExpression",
        "kind": "FunctionDeclaration",
        "name": "isTypeAssertionExpression",
        "signature": "isTypeAssertionExpression: (node: Node) => node is TypeAssertion;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4392,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4392",
        },
        "type": "(node: Node) => node is TypeAssertion",
      },
      Object {
        "docs": Array [],
        "id": "isTypeElement",
        "kind": "FunctionDeclaration",
        "name": "isTypeElement",
        "signature": "isTypeElement: (node: Node) => node is TypeElement;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4219,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4219",
        },
        "type": "(node: Node) => node is TypeElement",
      },
      Object {
        "docs": Array [],
        "id": "isTypeLiteralNode",
        "kind": "FunctionDeclaration",
        "name": "isTypeLiteralNode",
        "signature": "isTypeLiteralNode: (node: Node) => node is TypeLiteralNode;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4363,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4363",
        },
        "type": "(node: Node) => node is TypeLiteralNode",
      },
      Object {
        "docs": Array [
          "/**
     * Node test that determines whether a node is a valid type node.
     * This differs from the \`isPartOfTypeNode\` function which determines whether a node is *part*
     * of a TypeNode.
     */",
        ],
        "id": "isTypeNode",
        "kind": "FunctionDeclaration",
        "name": "isTypeNode",
        "signature": "isTypeNode: (node: Node) => node is TypeNode;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4227,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4227",
        },
        "type": "(node: Node) => node is TypeNode",
      },
      Object {
        "docs": Array [],
        "id": "isTypeOfExpression",
        "kind": "FunctionDeclaration",
        "name": "isTypeOfExpression",
        "signature": "isTypeOfExpression: (node: Node) => node is TypeOfExpression;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4397,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4397",
        },
        "type": "(node: Node) => node is TypeOfExpression",
      },
      Object {
        "docs": Array [],
        "id": "isTypeOnlyImportOrExportDeclaration",
        "kind": "FunctionDeclaration",
        "name": "isTypeOnlyImportOrExportDeclaration",
        "signature": "isTypeOnlyImportOrExportDeclaration: (
    node: Node
) => node is TypeOnlyCompatibleAliasDeclaration;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4209,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4209",
        },
        "type": "(node: Node) => node is TypeOnlyCompatibleAliasDeclaration",
      },
      Object {
        "docs": Array [],
        "id": "isTypeOperatorNode",
        "kind": "FunctionDeclaration",
        "name": "isTypeOperatorNode",
        "signature": "isTypeOperatorNode: (node: Node) => node is TypeOperatorNode;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4375,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4375",
        },
        "type": "(node: Node) => node is TypeOperatorNode",
      },
      Object {
        "docs": Array [],
        "id": "isTypeParameterDeclaration",
        "kind": "FunctionDeclaration",
        "name": "isTypeParameterDeclaration",
        "signature": "isTypeParameterDeclaration: (node: Node) => node is TypeParameterDeclaration;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4345,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4345",
        },
        "type": "(node: Node) => node is TypeParameterDeclaration",
      },
      Object {
        "docs": Array [],
        "id": "isTypePredicateNode",
        "kind": "FunctionDeclaration",
        "name": "isTypePredicateNode",
        "signature": "isTypePredicateNode: (node: Node) => node is TypePredicateNode;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4358,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4358",
        },
        "type": "(node: Node) => node is TypePredicateNode",
      },
      Object {
        "docs": Array [],
        "id": "isTypeQueryNode",
        "kind": "FunctionDeclaration",
        "name": "isTypeQueryNode",
        "signature": "isTypeQueryNode: (node: Node) => node is TypeQueryNode;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4362,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4362",
        },
        "type": "(node: Node) => node is TypeQueryNode",
      },
      Object {
        "docs": Array [],
        "id": "isTypeReferenceNode",
        "kind": "FunctionDeclaration",
        "name": "isTypeReferenceNode",
        "signature": "isTypeReferenceNode: (node: Node) => node is TypeReferenceNode;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4359,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4359",
        },
        "type": "(node: Node) => node is TypeReferenceNode",
      },
      Object {
        "docs": Array [],
        "id": "isUnionTypeNode",
        "kind": "FunctionDeclaration",
        "name": "isUnionTypeNode",
        "signature": "isUnionTypeNode: (node: Node) => node is UnionTypeNode;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4369,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4369",
        },
        "type": "(node: Node) => node is UnionTypeNode",
      },
      Object {
        "docs": Array [],
        "id": "isUnparsedNode",
        "kind": "FunctionDeclaration",
        "name": "isUnparsedNode",
        "signature": "isUnparsedNode: (node: Node) => node is UnparsedNode;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4197,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4197",
        },
        "type": "(node: Node) => node is UnparsedNode",
      },
      Object {
        "docs": Array [],
        "id": "isUnparsedPrepend",
        "kind": "FunctionDeclaration",
        "name": "isUnparsedPrepend",
        "signature": "isUnparsedPrepend: (node: Node) => node is UnparsedPrepend;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4481,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4481",
        },
        "type": "(node: Node) => node is UnparsedPrepend",
      },
      Object {
        "docs": Array [],
        "id": "isUnparsedSource",
        "kind": "FunctionDeclaration",
        "name": "isUnparsedSource",
        "signature": "isUnparsedSource: (node: Node) => node is UnparsedSource;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4484,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4484",
        },
        "type": "(node: Node) => node is UnparsedSource",
      },
      Object {
        "docs": Array [],
        "id": "isUnparsedTextLike",
        "kind": "FunctionDeclaration",
        "name": "isUnparsedTextLike",
        "signature": "isUnparsedTextLike: (node: Node) => node is UnparsedTextLike;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4196,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4196",
        },
        "type": "(node: Node) => node is UnparsedTextLike",
      },
      Object {
        "docs": Array [],
        "id": "isVariableDeclaration",
        "kind": "FunctionDeclaration",
        "name": "isVariableDeclaration",
        "signature": "isVariableDeclaration: (node: Node) => node is VariableDeclaration;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4437,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4437",
        },
        "type": "(node: Node) => node is VariableDeclaration",
      },
      Object {
        "docs": Array [],
        "id": "isVariableDeclarationList",
        "kind": "FunctionDeclaration",
        "name": "isVariableDeclarationList",
        "signature": "isVariableDeclarationList: (node: Node) => node is VariableDeclarationList;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4438,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4438",
        },
        "type": "(node: Node) => node is VariableDeclarationList",
      },
      Object {
        "docs": Array [],
        "id": "isVariableStatement",
        "kind": "FunctionDeclaration",
        "name": "isVariableStatement",
        "signature": "isVariableStatement: (node: Node) => node is VariableStatement;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4419,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4419",
        },
        "type": "(node: Node) => node is VariableStatement",
      },
      Object {
        "docs": Array [],
        "id": "isVoidExpression",
        "kind": "FunctionDeclaration",
        "name": "isVoidExpression",
        "signature": "isVoidExpression: (node: Node) => node is VoidExpression;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4398,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4398",
        },
        "type": "(node: Node) => node is VoidExpression",
      },
      Object {
        "docs": Array [],
        "id": "isWhileStatement",
        "kind": "FunctionDeclaration",
        "name": "isWhileStatement",
        "signature": "isWhileStatement: (node: Node) => node is WhileStatement;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4424,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4424",
        },
        "type": "(node: Node) => node is WhileStatement",
      },
      Object {
        "docs": Array [],
        "id": "isWhiteSpaceLike",
        "kind": "FunctionDeclaration",
        "name": "isWhiteSpaceLike",
        "signature": "isWhiteSpaceLike: (ch: number) => boolean;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 3980,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3980",
        },
        "type": "(ch: number) => boolean",
      },
      Object {
        "docs": Array [
          "/** Does not include line breaks. For that, see isWhiteSpaceLike. */",
        ],
        "id": "isWhiteSpaceSingleLine",
        "kind": "FunctionDeclaration",
        "name": "isWhiteSpaceSingleLine",
        "signature": "isWhiteSpaceSingleLine: (ch: number) => boolean;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 3982,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3982",
        },
        "type": "(ch: number) => boolean",
      },
      Object {
        "docs": Array [],
        "id": "isWithStatement",
        "kind": "FunctionDeclaration",
        "name": "isWithStatement",
        "signature": "isWithStatement: (node: Node) => node is WithStatement;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4431,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4431",
        },
        "type": "(node: Node) => node is WithStatement",
      },
      Object {
        "docs": Array [],
        "id": "isYieldExpression",
        "kind": "FunctionDeclaration",
        "name": "isYieldExpression",
        "signature": "isYieldExpression: (node: Node) => node is YieldExpression;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4405,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4405",
        },
        "type": "(node: Node) => node is YieldExpression",
      },
      Object {
        "docs": Array [
          "/**
     * Moves matching emit helpers from a source node to a target node.
     */",
        ],
        "id": "moveEmitHelpers",
        "kind": "FunctionDeclaration",
        "name": "moveEmitHelpers",
        "signature": "moveEmitHelpers: (
    source: Node,
    target: Node,
    predicate: (helper: EmitHelper) => boolean
) => void;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4329,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4329",
        },
        "type": "(source: Node, target: Node, predicate: (helper: EmitHelper) => boolean) => void",
      },
      Object {
        "docs": Array [],
        "id": "moveSyntheticComments",
        "kind": "FunctionDeclaration",
        "name": "moveSyntheticComments",
        "signature": "moveSyntheticComments: <T extends Node>(node: T, original: Node) => T;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4301,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4301",
        },
        "type": "<T extends Node>(node: T, original: Node) => T",
      },
      Object {
        "docs": Array [],
        "id": "nodeModuleNameResolver",
        "kind": "FunctionDeclaration",
        "name": "nodeModuleNameResolver",
        "signature": "nodeModuleNameResolver: (
    moduleName: string,
    containingFile: string,
    compilerOptions: CompilerOptions,
    host: ModuleResolutionHost,
    cache?: ModuleResolutionCache,
    redirectedReference?: ResolvedProjectReference
) => ResolvedModuleWithFailedLookupLocations;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4674,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4674",
        },
        "type": "(moduleName: string, containingFile: string, compilerOptions: CompilerOptions, host: ModuleResolutionHost, cache?: ModuleResolutionCache, redirectedReference?: ResolvedProjectReference) => ResolvedModuleWithFailedLookupLocations",
      },
      Object {
        "docs": Array [],
        "id": "parseCommandLine",
        "kind": "FunctionDeclaration",
        "name": "parseCommandLine",
        "signature": "parseCommandLine: (
    commandLine: readonly string[],
    readFile?: (path: string) => string | undefined
) => ParsedCommandLine;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4549,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4549",
        },
        "type": "(commandLine: readonly string[], readFile?: (path: string) => string | undefined) => ParsedCommandLine",
      },
      Object {
        "docs": Array [
          "/**
     * Parse the text of the tsconfig.json file
     * @param fileName The path to the config file
     * @param jsonText The text of the config file
     */",
        ],
        "id": "parseConfigFileTextToJson",
        "kind": "FunctionDeclaration",
        "name": "parseConfigFileTextToJson",
        "signature": "parseConfigFileTextToJson: (
    fileName: string,
    jsonText: string
) => { config?: any; error?: Diagnostic };",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4583,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4583",
        },
        "type": "(fileName: string, jsonText: string) => {    config?: any;    error?: Diagnostic;}",
      },
      Object {
        "docs": Array [],
        "id": "parseIsolatedEntityName",
        "kind": "FunctionDeclaration",
        "name": "parseIsolatedEntityName",
        "signature": "parseIsolatedEntityName: (
    text: string,
    languageVersion: ScriptTarget
) => EntityName | undefined;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4537,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4537",
        },
        "type": "(text: string, languageVersion: ScriptTarget) => EntityName | undefined",
      },
      Object {
        "docs": Array [
          "/**
     * Parse the contents of a config file (tsconfig.json).
     * @param json The contents of the config file to parse
     * @param host Instance of ParseConfigHost used to enumerate files in folder.
     * @param basePath A root directory to resolve relative path entries in the config
     *    file to. e.g. outDir
     */",
        ],
        "id": "parseJsonConfigFileContent",
        "kind": "FunctionDeclaration",
        "name": "parseJsonConfigFileContent",
        "signature": "parseJsonConfigFileContent: (
    json: any,
    host: ParseConfigHost,
    basePath: string,
    existingOptions?: CompilerOptions,
    configFileName?: string,
    resolutionStack?: Path[],
    extraFileExtensions?: readonly FileExtensionInfo[],
    extendedConfigCache?: Map<ExtendedConfigCacheEntry>,
    existingWatchOptions?: WatchOptions
) => ParsedCommandLine;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4603,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4603",
        },
        "type": "(json: any, host: ParseConfigHost, basePath: string, existingOptions?: CompilerOptions, configFileName?: string, resolutionStack?: Path[], extraFileExtensions?: readonly FileExtensionInfo[], extendedConfigCache?: Map<ExtendedConfigCacheEntry>, existingWatchOptions?: WatchOptions) => ParsedCommandLine",
      },
      Object {
        "docs": Array [
          "/**
     * Parse the contents of a config file (tsconfig.json).
     * @param jsonNode The contents of the config file to parse
     * @param host Instance of ParseConfigHost used to enumerate files in folder.
     * @param basePath A root directory to resolve relative path entries in the config
     *    file to. e.g. outDir
     */",
        ],
        "id": "parseJsonSourceFileConfigFileContent",
        "kind": "FunctionDeclaration",
        "name": "parseJsonSourceFileConfigFileContent",
        "signature": "parseJsonSourceFileConfigFileContent: (
    sourceFile: TsConfigSourceFile,
    host: ParseConfigHost,
    basePath: string,
    existingOptions?: CompilerOptions,
    configFileName?: string,
    resolutionStack?: Path[],
    extraFileExtensions?: readonly FileExtensionInfo[],
    extendedConfigCache?: Map<ExtendedConfigCacheEntry>,
    existingWatchOptions?: WatchOptions
) => ParsedCommandLine;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4611,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4611",
        },
        "type": "(sourceFile: TsConfigSourceFile, host: ParseConfigHost, basePath: string, existingOptions?: CompilerOptions, configFileName?: string, resolutionStack?: Path[], extraFileExtensions?: readonly FileExtensionInfo[], extendedConfigCache?: Map<ExtendedConfigCacheEntry>, existingWatchOptions?: WatchOptions) => ParsedCommandLine",
      },
      Object {
        "docs": Array [
          "/**
     * Parse json text into SyntaxTree and return node and parse errors if any
     * @param fileName
     * @param sourceText
     */",
        ],
        "id": "parseJsonText",
        "kind": "FunctionDeclaration",
        "name": "parseJsonText",
        "signature": "parseJsonText: (fileName: string, sourceText: string) => JsonSourceFile;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4543,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4543",
        },
        "type": "(fileName: string, sourceText: string) => JsonSourceFile",
      },
      Object {
        "docs": Array [],
        "id": "preProcessFile",
        "kind": "FunctionDeclaration",
        "name": "preProcessFile",
        "signature": "preProcessFile: (
    sourceText: string,
    readImportFiles?: boolean,
    detectJavaScriptImports?: boolean
) => PreProcessedFileInfo;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 6392,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6392",
        },
        "type": "(sourceText: string, readImportFiles?: boolean, detectJavaScriptImports?: boolean) => PreProcessedFileInfo",
      },
      Object {
        "docs": Array [],
        "id": "readBuilderProgram",
        "kind": "FunctionDeclaration",
        "name": "readBuilderProgram",
        "signature": "readBuilderProgram: (
    compilerOptions: CompilerOptions,
    host: ReadBuildProgramHost
) => EmitAndSemanticDiagnosticsBuilderProgram | undefined;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4962,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4962",
        },
        "type": "(compilerOptions: CompilerOptions, host: ReadBuildProgramHost) => EmitAndSemanticDiagnosticsBuilderProgram | undefined",
      },
      Object {
        "docs": Array [
          "/**
     * Read tsconfig.json file
     * @param fileName The path to the config file
     */",
        ],
        "id": "readConfigFile",
        "kind": "FunctionDeclaration",
        "name": "readConfigFile",
        "signature": "readConfigFile: (
    fileName: string,
    readFile: (path: string) => string | undefined
) => { config?: any; error?: Diagnostic };",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4574,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4574",
        },
        "type": "(fileName: string, readFile: (path: string) => string | undefined) => {    config?: any;    error?: Diagnostic;}",
      },
      Object {
        "docs": Array [
          "/**
     * Read tsconfig.json file
     * @param fileName The path to the config file
     */",
        ],
        "id": "readJsonConfigFile",
        "kind": "FunctionDeclaration",
        "name": "readJsonConfigFile",
        "signature": "readJsonConfigFile: (
    fileName: string,
    readFile: (path: string) => string | undefined
) => TsConfigSourceFile;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4591,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4591",
        },
        "type": "(fileName: string, readFile: (path: string) => string | undefined) => TsConfigSourceFile",
      },
      Object {
        "docs": Array [],
        "id": "reduceEachLeadingCommentRange",
        "kind": "FunctionDeclaration",
        "name": "reduceEachLeadingCommentRange",
        "signature": "reduceEachLeadingCommentRange: <T, U>(
    text: string,
    pos: number,
    cb: (
        pos: number,
        end: number,
        kind: CommentKind,
        hasTrailingNewLine: boolean,
        state: T,
        memo: U
    ) => U,
    state: T,
    initial: U
) => U | undefined;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 3989,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3989",
        },
        "type": "<T, U>(text: string, pos: number, cb: (pos: number, end: number, kind: CommentKind, hasTrailingNewLine: boolean, state: T, memo: U) => U, state: T, initial: U) => U | undefined",
      },
      Object {
        "docs": Array [],
        "id": "reduceEachTrailingCommentRange",
        "kind": "FunctionDeclaration",
        "name": "reduceEachTrailingCommentRange",
        "signature": "reduceEachTrailingCommentRange: <T, U>(
    text: string,
    pos: number,
    cb: (
        pos: number,
        end: number,
        kind: CommentKind,
        hasTrailingNewLine: boolean,
        state: T,
        memo: U
    ) => U,
    state: T,
    initial: U
) => U | undefined;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 3990,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3990",
        },
        "type": "<T, U>(text: string, pos: number, cb: (pos: number, end: number, kind: CommentKind, hasTrailingNewLine: boolean, state: T, memo: U) => U, state: T, initial: U) => U | undefined",
      },
      Object {
        "docs": Array [
          "/**
     * Removes an EmitHelper from a node.
     */",
        ],
        "id": "removeEmitHelper",
        "kind": "FunctionDeclaration",
        "name": "removeEmitHelper",
        "signature": "removeEmitHelper: (node: Node, helper: EmitHelper) => boolean;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4321,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4321",
        },
        "type": "(node: Node, helper: EmitHelper) => boolean",
      },
      Object {
        "docs": Array [],
        "id": "resolveModuleName",
        "kind": "FunctionDeclaration",
        "name": "resolveModuleName",
        "signature": "resolveModuleName: (
    moduleName: string,
    containingFile: string,
    compilerOptions: CompilerOptions,
    host: ModuleResolutionHost,
    cache?: ModuleResolutionCache,
    redirectedReference?: ResolvedProjectReference
) => ResolvedModuleWithFailedLookupLocations;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4673,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4673",
        },
        "type": "(moduleName: string, containingFile: string, compilerOptions: CompilerOptions, host: ModuleResolutionHost, cache?: ModuleResolutionCache, redirectedReference?: ResolvedProjectReference) => ResolvedModuleWithFailedLookupLocations",
      },
      Object {
        "docs": Array [],
        "id": "resolveModuleNameFromCache",
        "kind": "FunctionDeclaration",
        "name": "resolveModuleNameFromCache",
        "signature": "resolveModuleNameFromCache: (
    moduleName: string,
    containingFile: string,
    cache: ModuleResolutionCache
) => ResolvedModuleWithFailedLookupLocations | undefined;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4672,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4672",
        },
        "type": "(moduleName: string, containingFile: string, cache: ModuleResolutionCache) => ResolvedModuleWithFailedLookupLocations | undefined",
      },
      Object {
        "docs": Array [
          "/**
     * Returns the target config filename of a project reference.
     * Note: The file might not exist.
     */",
          "/** @deprecated */",
        ],
        "id": "resolveProjectReferencePath",
        "kind": "FunctionDeclaration",
        "name": "resolveProjectReferencePath",
        "signature": "resolveProjectReferencePath: {
    (ref: ProjectReference): ResolvedConfigFileName;
    (
        host: ResolveProjectReferencePathHost,
        ref: ProjectReference
    ): ResolvedConfigFileName;
};",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4812,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4812",
        },
        "type": "{ (ref: ProjectReference): ResolvedConfigFileName; (host: ResolveProjectReferencePathHost, ref: ProjectReference): ResolvedConfigFileName; }",
      },
      Object {
        "docs": Array [],
        "id": "resolveTripleslashReference",
        "kind": "FunctionDeclaration",
        "name": "resolveTripleslashReference",
        "signature": "resolveTripleslashReference: (
    moduleName: string,
    containingFile: string
) => string;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4766,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4766",
        },
        "type": "(moduleName: string, containingFile: string) => string",
      },
      Object {
        "docs": Array [
          "/**
     * @param {string | undefined} containingFile - file that contains type reference directive, can be undefined if containing file is unknown.
     * This is possible in case if resolution is performed for directives specified via 'types' parameter. In this case initial path for secondary lookups
     * is assumed to be the same as root directory of the project.
     */",
        ],
        "id": "resolveTypeReferenceDirective",
        "kind": "FunctionDeclaration",
        "name": "resolveTypeReferenceDirective",
        "signature": "resolveTypeReferenceDirective: (
    typeReferenceDirectiveName: string,
    containingFile: string | undefined,
    options: CompilerOptions,
    host: ModuleResolutionHost,
    redirectedReference?: ResolvedProjectReference
) => ResolvedTypeReferenceDirectiveWithFailedLookupLocations;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4643,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4643",
        },
        "type": "(typeReferenceDirectiveName: string, containingFile: string | undefined, options: CompilerOptions, host: ModuleResolutionHost, redirectedReference?: ResolvedProjectReference) => ResolvedTypeReferenceDirectiveWithFailedLookupLocations",
      },
      Object {
        "docs": Array [
          "/**
     * Sets a custom text range to use when emitting comments.
     */",
        ],
        "id": "setCommentRange",
        "kind": "FunctionDeclaration",
        "name": "setCommentRange",
        "signature": "setCommentRange: <T extends Node>(node: T, range: TextRange) => T;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4294,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4294",
        },
        "type": "<T extends Node>(node: T, range: TextRange) => T",
      },
      Object {
        "docs": Array [
          "/**
     * Sets the constant value to emit for an expression.
     */",
        ],
        "id": "setConstantValue",
        "kind": "FunctionDeclaration",
        "name": "setConstantValue",
        "signature": "setConstantValue: (
    node: AccessExpression,
    value: string | number
) => AccessExpression;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4309,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4309",
        },
        "type": "(node: AccessExpression, value: string | number) => AccessExpression",
      },
      Object {
        "docs": Array [
          "/**
     * Sets flags that control emit behavior of a node.
     */",
        ],
        "id": "setEmitFlags",
        "kind": "FunctionDeclaration",
        "name": "setEmitFlags",
        "signature": "setEmitFlags: <T extends Node>(node: T, emitFlags: EmitFlags) => T;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4270,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4270",
        },
        "type": "<T extends Node>(node: T, emitFlags: EmitFlags) => T",
      },
      Object {
        "docs": Array [],
        "id": "setOriginalNode",
        "kind": "FunctionDeclaration",
        "name": "setOriginalNode",
        "signature": "setOriginalNode: <T extends Node>(node: T, original: Node | undefined) => T;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4259,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4259",
        },
        "type": "<T extends Node>(node: T, original: Node | undefined) => T",
      },
      Object {
        "docs": Array [
          "/**
     * Sets a custom text range to use when emitting source maps.
     */",
        ],
        "id": "setSourceMapRange",
        "kind": "FunctionDeclaration",
        "name": "setSourceMapRange",
        "signature": "setSourceMapRange: <T extends Node>(
    node: T,
    range: SourceMapRange | undefined
) => T;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4278,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4278",
        },
        "type": "<T extends Node>(node: T, range: SourceMapRange | undefined) => T",
      },
      Object {
        "docs": Array [],
        "id": "setSyntheticLeadingComments",
        "kind": "FunctionDeclaration",
        "name": "setSyntheticLeadingComments",
        "signature": "setSyntheticLeadingComments: <T extends Node>(
    node: T,
    comments: SynthesizedComment[] | undefined
) => T;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4296,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4296",
        },
        "type": "<T extends Node>(node: T, comments: SynthesizedComment[] | undefined) => T",
      },
      Object {
        "docs": Array [],
        "id": "setSyntheticTrailingComments",
        "kind": "FunctionDeclaration",
        "name": "setSyntheticTrailingComments",
        "signature": "setSyntheticTrailingComments: <T extends Node>(
    node: T,
    comments: SynthesizedComment[] | undefined
) => T;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4299,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4299",
        },
        "type": "<T extends Node>(node: T, comments: SynthesizedComment[] | undefined) => T",
      },
      Object {
        "docs": Array [],
        "id": "setTextRange",
        "kind": "FunctionDeclaration",
        "name": "setTextRange",
        "signature": "setTextRange: <T extends TextRange>(
    range: T,
    location: TextRange | undefined
) => T;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4519,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4519",
        },
        "type": "<T extends TextRange>(range: T, location: TextRange | undefined) => T",
      },
      Object {
        "docs": Array [],
        "id": "setTimeout",
        "kind": "FunctionDeclaration",
        "name": "setTimeout",
        "signature": "setTimeout: (handler: (...args: any[]) => void, timeout: number) => any;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 3880,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3880",
        },
        "type": "(handler: (...args: any[]) => void, timeout: number) => any",
      },
      Object {
        "docs": Array [
          "/**
     * Sets the TextRange to use for source maps for a token of a node.
     */",
        ],
        "id": "setTokenSourceMapRange",
        "kind": "FunctionDeclaration",
        "name": "setTokenSourceMapRange",
        "signature": "setTokenSourceMapRange: <T extends Node>(
    node: T,
    token: SyntaxKind,
    range: SourceMapRange | undefined
) => T;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4286,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4286",
        },
        "type": "<T extends Node>(node: T, token: SyntaxKind, range: SourceMapRange | undefined) => T",
      },
      Object {
        "docs": Array [],
        "id": "skipPartiallyEmittedExpressions",
        "kind": "FunctionDeclaration",
        "name": "skipPartiallyEmittedExpressions",
        "signature": "skipPartiallyEmittedExpressions: {
    (node: Expression): Expression;
    (node: Node): Node;
};",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4191,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4191",
        },
        "type": "{ (node: Expression): Expression; (node: Node): Node; }",
      },
      Object {
        "docs": Array [],
        "id": "sortAndDeduplicateDiagnostics",
        "kind": "FunctionDeclaration",
        "name": "sortAndDeduplicateDiagnostics",
        "signature": "sortAndDeduplicateDiagnostics: <T extends Diagnostic>(
    diagnostics: readonly T[]
) => SortedReadonlyArray<T>;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4001,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4001",
        },
        "type": "<T extends Diagnostic>(diagnostics: readonly T[]) => SortedReadonlyArray<T>",
      },
      Object {
        "docs": Array [],
        "id": "symbolName",
        "kind": "FunctionDeclaration",
        "name": "symbolName",
        "signature": "symbolName: (symbol: Symbol) => string;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4093,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4093",
        },
        "type": "(symbol: Symbol) => string",
      },
      Object {
        "docs": Array [],
        "id": "textChangeRangeIsUnchanged",
        "kind": "FunctionDeclaration",
        "name": "textChangeRangeIsUnchanged",
        "signature": "textChangeRangeIsUnchanged: (range: TextChangeRange) => boolean;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4017,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4017",
        },
        "type": "(range: TextChangeRange) => boolean",
      },
      Object {
        "docs": Array [],
        "id": "textChangeRangeNewSpan",
        "kind": "FunctionDeclaration",
        "name": "textChangeRangeNewSpan",
        "signature": "textChangeRangeNewSpan: (range: TextChangeRange) => TextSpan;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4016,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4016",
        },
        "type": "(range: TextChangeRange) => TextSpan",
      },
      Object {
        "docs": Array [],
        "id": "textSpanContainsPosition",
        "kind": "FunctionDeclaration",
        "name": "textSpanContainsPosition",
        "signature": "textSpanContainsPosition: (span: TextSpan, position: number) => boolean;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4005,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4005",
        },
        "type": "(span: TextSpan, position: number) => boolean",
      },
      Object {
        "docs": Array [],
        "id": "textSpanContainsTextSpan",
        "kind": "FunctionDeclaration",
        "name": "textSpanContainsTextSpan",
        "signature": "textSpanContainsTextSpan: (span: TextSpan, other: TextSpan) => boolean;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4006,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4006",
        },
        "type": "(span: TextSpan, other: TextSpan) => boolean",
      },
      Object {
        "docs": Array [],
        "id": "textSpanEnd",
        "kind": "FunctionDeclaration",
        "name": "textSpanEnd",
        "signature": "textSpanEnd: (span: TextSpan) => number;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4003,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4003",
        },
        "type": "(span: TextSpan) => number",
      },
      Object {
        "docs": Array [],
        "id": "textSpanIntersection",
        "kind": "FunctionDeclaration",
        "name": "textSpanIntersection",
        "signature": "textSpanIntersection: (span1: TextSpan, span2: TextSpan) => TextSpan | undefined;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4013,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4013",
        },
        "type": "(span1: TextSpan, span2: TextSpan) => TextSpan | undefined",
      },
      Object {
        "docs": Array [],
        "id": "textSpanIntersectsWith",
        "kind": "FunctionDeclaration",
        "name": "textSpanIntersectsWith",
        "signature": "textSpanIntersectsWith: (
    span: TextSpan,
    start: number,
    length: number
) => boolean;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4010,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4010",
        },
        "type": "(span: TextSpan, start: number, length: number) => boolean",
      },
      Object {
        "docs": Array [],
        "id": "textSpanIntersectsWithPosition",
        "kind": "FunctionDeclaration",
        "name": "textSpanIntersectsWithPosition",
        "signature": "textSpanIntersectsWithPosition: (span: TextSpan, position: number) => boolean;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4012,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4012",
        },
        "type": "(span: TextSpan, position: number) => boolean",
      },
      Object {
        "docs": Array [],
        "id": "textSpanIntersectsWithTextSpan",
        "kind": "FunctionDeclaration",
        "name": "textSpanIntersectsWithTextSpan",
        "signature": "textSpanIntersectsWithTextSpan: (span: TextSpan, other: TextSpan) => boolean;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4009,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4009",
        },
        "type": "(span: TextSpan, other: TextSpan) => boolean",
      },
      Object {
        "docs": Array [],
        "id": "textSpanIsEmpty",
        "kind": "FunctionDeclaration",
        "name": "textSpanIsEmpty",
        "signature": "textSpanIsEmpty: (span: TextSpan) => boolean;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4004,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4004",
        },
        "type": "(span: TextSpan) => boolean",
      },
      Object {
        "docs": Array [],
        "id": "textSpanOverlap",
        "kind": "FunctionDeclaration",
        "name": "textSpanOverlap",
        "signature": "textSpanOverlap: (span1: TextSpan, span2: TextSpan) => TextSpan | undefined;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4008,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4008",
        },
        "type": "(span1: TextSpan, span2: TextSpan) => TextSpan | undefined",
      },
      Object {
        "docs": Array [],
        "id": "textSpanOverlapsWith",
        "kind": "FunctionDeclaration",
        "name": "textSpanOverlapsWith",
        "signature": "textSpanOverlapsWith: (span: TextSpan, other: TextSpan) => boolean;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4007,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4007",
        },
        "type": "(span: TextSpan, other: TextSpan) => boolean",
      },
      Object {
        "docs": Array [],
        "id": "toEditorSettings",
        "kind": "FunctionDeclaration",
        "name": "toEditorSettings",
        "signature": "toEditorSettings: (options: EditorOptions | EditorSettings) => EditorSettings;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 6414,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6414",
        },
        "type": "(options: EditorOptions | EditorSettings) => EditorSettings",
      },
      Object {
        "docs": Array [],
        "id": "tokenToString",
        "kind": "FunctionDeclaration",
        "name": "tokenToString",
        "signature": "tokenToString: (t: SyntaxKind) => string | undefined;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 3977,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3977",
        },
        "type": "(t: SyntaxKind) => string | undefined",
      },
      Object {
        "docs": Array [
          "/**
     * Transform one or more nodes using the supplied transformers.
     * @param source A single \`Node\` or an array of \`Node\` objects.
     * @param transformers An array of \`TransformerFactory\` callbacks used to process the transformation.
     * @param compilerOptions Optional compiler options.
     */",
        ],
        "id": "transform",
        "kind": "FunctionDeclaration",
        "name": "transform",
        "signature": "transform: <T extends Node>(
    source: T | T[],
    transformers: TransformerFactory<T>[],
    compilerOptions?: CompilerOptions
) => TransformationResult<T>;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 6435,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6435",
        },
        "type": "<T extends Node>(source: T | T[], transformers: TransformerFactory<T>[], compilerOptions?: CompilerOptions) => TransformationResult<T>",
      },
      Object {
        "docs": Array [],
        "id": "transpile",
        "kind": "FunctionDeclaration",
        "name": "transpile",
        "signature": "transpile: (
    input: string,
    compilerOptions?: CompilerOptions,
    fileName?: string,
    diagnostics?: Diagnostic[],
    moduleName?: string
) => string;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 6409,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6409",
        },
        "type": "(input: string, compilerOptions?: CompilerOptions, fileName?: string, diagnostics?: Diagnostic[], moduleName?: string) => string",
      },
      Object {
        "docs": Array [],
        "id": "transpileModule",
        "kind": "FunctionDeclaration",
        "name": "transpileModule",
        "signature": "transpileModule: (
    input: string,
    transpileOptions: TranspileOptions
) => TranspileOutput;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 6408,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6408",
        },
        "type": "(input: string, transpileOptions: TranspileOptions) => TranspileOutput",
      },
      Object {
        "docs": Array [
          "/**
     * Remove extra underscore from escaped identifier text content.
     *
     * @param identifier The escaped identifier text.
     * @returns The unescaped identifier text.
     */",
        ],
        "id": "unescapeLeadingUnderscores",
        "kind": "FunctionDeclaration",
        "name": "unescapeLeadingUnderscores",
        "signature": "unescapeLeadingUnderscores: (identifier: __String) => string;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4091,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4091",
        },
        "type": "(identifier: __String) => string",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.updateArrayBindingPattern\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "updateArrayBindingPattern",
        "kind": "FunctionDeclaration",
        "name": "updateArrayBindingPattern",
        "signature": "updateArrayBindingPattern: (
    node: ArrayBindingPattern,
    elements: readonly ArrayBindingElement[]
) => ArrayBindingPattern;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 6612,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6612",
        },
        "type": "(node: ArrayBindingPattern, elements: readonly ArrayBindingElement[]) => ArrayBindingPattern",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.updateArrayLiteral\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "updateArrayLiteral",
        "kind": "FunctionDeclaration",
        "name": "updateArrayLiteral",
        "signature": "updateArrayLiteral: (
    node: ArrayLiteralExpression,
    elements: readonly Expression[]
) => ArrayLiteralExpression;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 6620,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6620",
        },
        "type": "(node: ArrayLiteralExpression, elements: readonly Expression[]) => ArrayLiteralExpression",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.updateArrayTypeNode\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "updateArrayTypeNode",
        "kind": "FunctionDeclaration",
        "name": "updateArrayTypeNode",
        "signature": "updateArrayTypeNode: (
    node: ArrayTypeNode,
    elementType: TypeNode
) => ArrayTypeNode;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 6552,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6552",
        },
        "type": "(node: ArrayTypeNode, elementType: TypeNode) => ArrayTypeNode",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.updateAsExpression\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "updateAsExpression",
        "kind": "FunctionDeclaration",
        "name": "updateAsExpression",
        "signature": "updateAsExpression: (
    node: AsExpression,
    expression: Expression,
    type: TypeNode
) => AsExpression;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 6728,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6728",
        },
        "type": "(node: AsExpression, expression: Expression, type: TypeNode) => AsExpression",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.updateAwait\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "updateAwait",
        "kind": "FunctionDeclaration",
        "name": "updateAwait",
        "signature": "updateAwait: (node: AwaitExpression, expression: Expression) => AwaitExpression;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 6680,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6680",
        },
        "type": "(node: AwaitExpression, expression: Expression) => AwaitExpression",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.updateBinary\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "updateBinary",
        "kind": "FunctionDeclaration",
        "name": "updateBinary",
        "signature": "updateBinary: (
    node: BinaryExpression,
    left: Expression,
    right: Expression,
    operator?: BinaryOperator | BinaryOperatorToken
) => BinaryExpression;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 7104,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L7104",
        },
        "type": "(node: BinaryExpression, left: Expression, right: Expression, operator?: BinaryOperator | BinaryOperatorToken) => BinaryExpression",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.updateBindingElement\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "updateBindingElement",
        "kind": "FunctionDeclaration",
        "name": "updateBindingElement",
        "signature": "updateBindingElement: (
    node: BindingElement,
    dotDotDotToken: DotDotDotToken | undefined,
    propertyName:
        | Identifier
        | StringLiteral
        | NumericLiteral
        | ComputedPropertyName
        | PrivateIdentifier
        | undefined,
    name: BindingName,
    initializer: Expression | undefined
) => BindingElement;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 6616,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6616",
        },
        "type": "(node: BindingElement, dotDotDotToken: DotDotDotToken | undefined, propertyName: Identifier | StringLiteral | NumericLiteral | ComputedPropertyName | PrivateIdentifier | undefined, name: BindingName, initializer: Expression | undefined) => BindingElement",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.updateBlock\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "updateBlock",
        "kind": "FunctionDeclaration",
        "name": "updateBlock",
        "signature": "updateBlock: (node: Block, statements: readonly Statement[]) => Block;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 6750,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6750",
        },
        "type": "(node: Block, statements: readonly Statement[]) => Block",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.updateBreak\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "updateBreak",
        "kind": "FunctionDeclaration",
        "name": "updateBreak",
        "signature": "updateBreak: (
    node: BreakStatement,
    label: Identifier | undefined
) => BreakStatement;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 6796,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6796",
        },
        "type": "(node: BreakStatement, label: Identifier | undefined) => BreakStatement",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.updateBundle\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "updateBundle",
        "kind": "FunctionDeclaration",
        "name": "updateBundle",
        "signature": "updateBundle: (
    node: Bundle,
    sourceFiles: readonly SourceFile[],
    prepends?: readonly (UnparsedSource | InputFiles)[] | undefined
) => Bundle;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 7038,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L7038",
        },
        "type": "(node: Bundle, sourceFiles: readonly SourceFile[], prepends?: readonly (UnparsedSource | InputFiles)[] | undefined) => Bundle",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.updateCall\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "updateCall",
        "kind": "FunctionDeclaration",
        "name": "updateCall",
        "signature": "updateCall: (
    node: CallExpression,
    expression: Expression,
    typeArguments: readonly TypeNode[] | undefined,
    argumentsArray: readonly Expression[]
) => CallExpression;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 6644,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6644",
        },
        "type": "(node: CallExpression, expression: Expression, typeArguments: readonly TypeNode[] | undefined, argumentsArray: readonly Expression[]) => CallExpression",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.updateCallChain\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "updateCallChain",
        "kind": "FunctionDeclaration",
        "name": "updateCallChain",
        "signature": "updateCallChain: (
    node: CallChain,
    expression: Expression,
    questionDotToken: QuestionDotToken | undefined,
    typeArguments: readonly TypeNode[] | undefined,
    argumentsArray: readonly Expression[]
) => CallChain;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 6648,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6648",
        },
        "type": "(node: CallChain, expression: Expression, questionDotToken: QuestionDotToken | undefined, typeArguments: readonly TypeNode[] | undefined, argumentsArray: readonly Expression[]) => CallChain",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.updateCallSignature\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "updateCallSignature",
        "kind": "FunctionDeclaration",
        "name": "updateCallSignature",
        "signature": "updateCallSignature: (
    node: CallSignatureDeclaration,
    typeParameters: NodeArray<TypeParameterDeclaration> | undefined,
    parameters: NodeArray<ParameterDeclaration>,
    type: TypeNode | undefined
) => CallSignatureDeclaration;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 6516,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6516",
        },
        "type": "(node: CallSignatureDeclaration, typeParameters: NodeArray<TypeParameterDeclaration> | undefined, parameters: NodeArray<ParameterDeclaration>, type: TypeNode | undefined) => CallSignatureDeclaration",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.updateCaseBlock\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "updateCaseBlock",
        "kind": "FunctionDeclaration",
        "name": "updateCaseBlock",
        "signature": "updateCaseBlock: (
    node: CaseBlock,
    clauses: readonly CaseOrDefaultClause[]
) => CaseBlock;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 6858,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6858",
        },
        "type": "(node: CaseBlock, clauses: readonly CaseOrDefaultClause[]) => CaseBlock",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.updateCaseClause\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "updateCaseClause",
        "kind": "FunctionDeclaration",
        "name": "updateCaseClause",
        "signature": "updateCaseClause: (
    node: CaseClause,
    expression: Expression,
    statements: readonly Statement[]
) => CaseClause;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 6994,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6994",
        },
        "type": "(node: CaseClause, expression: Expression, statements: readonly Statement[]) => CaseClause",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.updateCatchClause\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "updateCatchClause",
        "kind": "FunctionDeclaration",
        "name": "updateCatchClause",
        "signature": "updateCatchClause: (
    node: CatchClause,
    variableDeclaration: VariableDeclaration | undefined,
    block: Block
) => CatchClause;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 7006,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L7006",
        },
        "type": "(node: CatchClause, variableDeclaration: VariableDeclaration | undefined, block: Block) => CatchClause",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.updateClassDeclaration\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "updateClassDeclaration",
        "kind": "FunctionDeclaration",
        "name": "updateClassDeclaration",
        "signature": "updateClassDeclaration: (
    node: ClassDeclaration,
    decorators: readonly Decorator[] | undefined,
    modifiers: readonly Modifier[] | undefined,
    name: Identifier | undefined,
    typeParameters: readonly TypeParameterDeclaration[] | undefined,
    heritageClauses: readonly HeritageClause[] | undefined,
    members: readonly ClassElement[]
) => ClassDeclaration;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 6834,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6834",
        },
        "type": "(node: ClassDeclaration, decorators: readonly Decorator[] | undefined, modifiers: readonly Modifier[] | undefined, name: Identifier | undefined, typeParameters: readonly TypeParameterDeclaration[] | undefined, heritageClauses: readonly HeritageClause[] | undefined, members: readonly ClassElement[]) => ClassDeclaration",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.updateClassExpression\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "updateClassExpression",
        "kind": "FunctionDeclaration",
        "name": "updateClassExpression",
        "signature": "updateClassExpression: (
    node: ClassExpression,
    modifiers: readonly Modifier[] | undefined,
    name: Identifier | undefined,
    typeParameters: readonly TypeParameterDeclaration[] | undefined,
    heritageClauses: readonly HeritageClause[] | undefined,
    members: readonly ClassElement[]
) => ClassExpression;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 7118,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L7118",
        },
        "type": "(node: ClassExpression, modifiers: readonly Modifier[] | undefined, name: Identifier | undefined, typeParameters: readonly TypeParameterDeclaration[] | undefined, heritageClauses: readonly HeritageClause[] | undefined, members: readonly ClassElement[]) => ClassExpression",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.updateCommaList\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "updateCommaList",
        "kind": "FunctionDeclaration",
        "name": "updateCommaList",
        "signature": "updateCommaList: (
    node: CommaListExpression,
    elements: readonly Expression[]
) => CommaListExpression;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 7034,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L7034",
        },
        "type": "(node: CommaListExpression, elements: readonly Expression[]) => CommaListExpression",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.updateComputedPropertyName\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "updateComputedPropertyName",
        "kind": "FunctionDeclaration",
        "name": "updateComputedPropertyName",
        "signature": "updateComputedPropertyName: (
    node: ComputedPropertyName,
    expression: Expression
) => ComputedPropertyName;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 6480,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6480",
        },
        "type": "(node: ComputedPropertyName, expression: Expression) => ComputedPropertyName",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.updateConditional\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "updateConditional",
        "kind": "FunctionDeclaration",
        "name": "updateConditional",
        "signature": "updateConditional: (
    node: ConditionalExpression,
    condition: Expression,
    questionToken: QuestionToken,
    whenTrue: Expression,
    colonToken: ColonToken,
    whenFalse: Expression
) => ConditionalExpression;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 6692,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6692",
        },
        "type": "(node: ConditionalExpression, condition: Expression, questionToken: QuestionToken, whenTrue: Expression, colonToken: ColonToken, whenFalse: Expression) => ConditionalExpression",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.updateConditionalTypeNode\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "updateConditionalTypeNode",
        "kind": "FunctionDeclaration",
        "name": "updateConditionalTypeNode",
        "signature": "updateConditionalTypeNode: (
    node: ConditionalTypeNode,
    checkType: TypeNode,
    extendsType: TypeNode,
    trueType: TypeNode,
    falseType: TypeNode
) => ConditionalTypeNode;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 6576,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6576",
        },
        "type": "(node: ConditionalTypeNode, checkType: TypeNode, extendsType: TypeNode, trueType: TypeNode, falseType: TypeNode) => ConditionalTypeNode",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.updateConstructorDeclaration\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "updateConstructor",
        "kind": "FunctionDeclaration",
        "name": "updateConstructor",
        "signature": "updateConstructor: (
    node: ConstructorDeclaration,
    decorators: readonly Decorator[] | undefined,
    modifiers: readonly Modifier[] | undefined,
    parameters: readonly ParameterDeclaration[],
    body: Block | undefined
) => ConstructorDeclaration;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 6504,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6504",
        },
        "type": "(node: ConstructorDeclaration, decorators: readonly Decorator[] | undefined, modifiers: readonly Modifier[] | undefined, parameters: readonly ParameterDeclaration[], body: Block | undefined) => ConstructorDeclaration",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.updateConstructorTypeNode\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "updateConstructorTypeNode",
        "kind": "FunctionDeclaration",
        "name": "updateConstructorTypeNode",
        "signature": "updateConstructorTypeNode: (
    node: ConstructorTypeNode,
    typeParameters: NodeArray<TypeParameterDeclaration> | undefined,
    parameters: NodeArray<ParameterDeclaration>,
    type: TypeNode
) => ConstructorTypeNode;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 6540,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6540",
        },
        "type": "(node: ConstructorTypeNode, typeParameters: NodeArray<TypeParameterDeclaration> | undefined, parameters: NodeArray<ParameterDeclaration>, type: TypeNode) => ConstructorTypeNode",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.updateConstructSignature\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "updateConstructSignature",
        "kind": "FunctionDeclaration",
        "name": "updateConstructSignature",
        "signature": "updateConstructSignature: (
    node: ConstructSignatureDeclaration,
    typeParameters: NodeArray<TypeParameterDeclaration> | undefined,
    parameters: NodeArray<ParameterDeclaration>,
    type: TypeNode | undefined
) => ConstructSignatureDeclaration;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 6520,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6520",
        },
        "type": "(node: ConstructSignatureDeclaration, typeParameters: NodeArray<TypeParameterDeclaration> | undefined, parameters: NodeArray<ParameterDeclaration>, type: TypeNode | undefined) => ConstructSignatureDeclaration",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.updateContinue\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "updateContinue",
        "kind": "FunctionDeclaration",
        "name": "updateContinue",
        "signature": "updateContinue: (
    node: ContinueStatement,
    label: Identifier | undefined
) => ContinueStatement;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 6792,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6792",
        },
        "type": "(node: ContinueStatement, label: Identifier | undefined) => ContinueStatement",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.updateDecorator\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "updateDecorator",
        "kind": "FunctionDeclaration",
        "name": "updateDecorator",
        "signature": "updateDecorator: (node: Decorator, expression: Expression) => Decorator;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 6492,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6492",
        },
        "type": "(node: Decorator, expression: Expression) => Decorator",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.updateDefaultClause\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "updateDefaultClause",
        "kind": "FunctionDeclaration",
        "name": "updateDefaultClause",
        "signature": "updateDefaultClause: (
    node: DefaultClause,
    statements: readonly Statement[]
) => DefaultClause;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 6998,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6998",
        },
        "type": "(node: DefaultClause, statements: readonly Statement[]) => DefaultClause",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.updateDelete\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "updateDelete",
        "kind": "FunctionDeclaration",
        "name": "updateDelete",
        "signature": "updateDelete: (
    node: DeleteExpression,
    expression: Expression
) => DeleteExpression;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 6668,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6668",
        },
        "type": "(node: DeleteExpression, expression: Expression) => DeleteExpression",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.updateDo\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "updateDo",
        "kind": "FunctionDeclaration",
        "name": "updateDo",
        "signature": "updateDo: (
    node: DoStatement,
    statement: Statement,
    expression: Expression
) => DoStatement;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 6772,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6772",
        },
        "type": "(node: DoStatement, statement: Statement, expression: Expression) => DoStatement",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.updateElementAccess\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "updateElementAccess",
        "kind": "FunctionDeclaration",
        "name": "updateElementAccess",
        "signature": "updateElementAccess: (
    node: ElementAccessExpression,
    expression: Expression,
    argumentExpression: Expression
) => ElementAccessExpression;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 6636,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6636",
        },
        "type": "(node: ElementAccessExpression, expression: Expression, argumentExpression: Expression) => ElementAccessExpression",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.updateElementAccessChain\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "updateElementAccessChain",
        "kind": "FunctionDeclaration",
        "name": "updateElementAccessChain",
        "signature": "updateElementAccessChain: (
    node: ElementAccessChain,
    expression: Expression,
    questionDotToken: QuestionDotToken | undefined,
    argumentExpression: Expression
) => ElementAccessChain;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 6640,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6640",
        },
        "type": "(node: ElementAccessChain, expression: Expression, questionDotToken: QuestionDotToken | undefined, argumentExpression: Expression) => ElementAccessChain",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.updateEnumDeclaration\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "updateEnumDeclaration",
        "kind": "FunctionDeclaration",
        "name": "updateEnumDeclaration",
        "signature": "updateEnumDeclaration: (
    node: EnumDeclaration,
    decorators: readonly Decorator[] | undefined,
    modifiers: readonly Modifier[] | undefined,
    name: Identifier,
    members: readonly EnumMember[]
) => EnumDeclaration;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 6846,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6846",
        },
        "type": "(node: EnumDeclaration, decorators: readonly Decorator[] | undefined, modifiers: readonly Modifier[] | undefined, name: Identifier, members: readonly EnumMember[]) => EnumDeclaration",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.updateEnumMember\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "updateEnumMember",
        "kind": "FunctionDeclaration",
        "name": "updateEnumMember",
        "signature": "updateEnumMember: (
    node: EnumMember,
    name: PropertyName,
    initializer: Expression | undefined
) => EnumMember;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 7022,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L7022",
        },
        "type": "(node: EnumMember, name: PropertyName, initializer: Expression | undefined) => EnumMember",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.updateExportAssignment\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "updateExportAssignment",
        "kind": "FunctionDeclaration",
        "name": "updateExportAssignment",
        "signature": "updateExportAssignment: (
    node: ExportAssignment,
    decorators: readonly Decorator[] | undefined,
    modifiers: readonly Modifier[] | undefined,
    expression: Expression
) => ExportAssignment;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 6886,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6886",
        },
        "type": "(node: ExportAssignment, decorators: readonly Decorator[] | undefined, modifiers: readonly Modifier[] | undefined, expression: Expression) => ExportAssignment",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.updateExportDeclaration\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "updateExportDeclaration",
        "kind": "FunctionDeclaration",
        "name": "updateExportDeclaration",
        "signature": "updateExportDeclaration: (
    node: ExportDeclaration,
    decorators: readonly Decorator[] | undefined,
    modifiers: readonly Modifier[] | undefined,
    exportClause: NamedExportBindings | undefined,
    moduleSpecifier: Expression | undefined,
    isTypeOnly: boolean
) => ExportDeclaration;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 7154,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L7154",
        },
        "type": "(node: ExportDeclaration, decorators: readonly Decorator[] | undefined, modifiers: readonly Modifier[] | undefined, exportClause: NamedExportBindings | undefined, moduleSpecifier: Expression | undefined, isTypeOnly: boolean) => ExportDeclaration",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.updateExportSpecifier\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "updateExportSpecifier",
        "kind": "FunctionDeclaration",
        "name": "updateExportSpecifier",
        "signature": "updateExportSpecifier: (
    node: ExportSpecifier,
    propertyName: Identifier | undefined,
    name: Identifier
) => ExportSpecifier;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 6894,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6894",
        },
        "type": "(node: ExportSpecifier, propertyName: Identifier | undefined, name: Identifier) => ExportSpecifier",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.updateExpressionStatement\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "updateExpressionStatement",
        "kind": "FunctionDeclaration",
        "name": "updateExpressionStatement",
        "signature": "updateExpressionStatement: (
    node: ExpressionStatement,
    expression: Expression
) => ExpressionStatement;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 6760,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6760",
        },
        "type": "(node: ExpressionStatement, expression: Expression) => ExpressionStatement",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.updateExpressionWithTypeArguments\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "updateExpressionWithTypeArguments",
        "kind": "FunctionDeclaration",
        "name": "updateExpressionWithTypeArguments",
        "signature": "updateExpressionWithTypeArguments: (
    node: ExpressionWithTypeArguments,
    typeArguments: readonly TypeNode[] | undefined,
    expression: Expression
) => ExpressionWithTypeArguments;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 7126,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L7126",
        },
        "type": "(node: ExpressionWithTypeArguments, typeArguments: readonly TypeNode[] | undefined, expression: Expression) => ExpressionWithTypeArguments",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.updateExternalModuleReference\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "updateExternalModuleReference",
        "kind": "FunctionDeclaration",
        "name": "updateExternalModuleReference",
        "signature": "updateExternalModuleReference: (
    node: ExternalModuleReference,
    expression: Expression
) => ExternalModuleReference;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 6898,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6898",
        },
        "type": "(node: ExternalModuleReference, expression: Expression) => ExternalModuleReference",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.updateFor\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "updateFor",
        "kind": "FunctionDeclaration",
        "name": "updateFor",
        "signature": "updateFor: (
    node: ForStatement,
    initializer: Expression | VariableDeclarationList | undefined,
    condition: Expression | undefined,
    incrementor: Expression | undefined,
    statement: Statement
) => ForStatement;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 6780,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6780",
        },
        "type": "(node: ForStatement, initializer: Expression | VariableDeclarationList | undefined, condition: Expression | undefined, incrementor: Expression | undefined, statement: Statement) => ForStatement",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.updateForIn\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "updateForIn",
        "kind": "FunctionDeclaration",
        "name": "updateForIn",
        "signature": "updateForIn: (
    node: ForInStatement,
    initializer: ForInitializer,
    expression: Expression,
    statement: Statement
) => ForInStatement;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 6784,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6784",
        },
        "type": "(node: ForInStatement, initializer: ForInitializer, expression: Expression, statement: Statement) => ForInStatement",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.updateForOf\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "updateForOf",
        "kind": "FunctionDeclaration",
        "name": "updateForOf",
        "signature": "updateForOf: (
    node: ForOfStatement,
    awaitModifier: AwaitKeyword | undefined,
    initializer: ForInitializer,
    expression: Expression,
    statement: Statement
) => ForOfStatement;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 6788,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6788",
        },
        "type": "(node: ForOfStatement, awaitModifier: AwaitKeyword | undefined, initializer: ForInitializer, expression: Expression, statement: Statement) => ForOfStatement",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.updateFunctionDeclaration\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "updateFunctionDeclaration",
        "kind": "FunctionDeclaration",
        "name": "updateFunctionDeclaration",
        "signature": "updateFunctionDeclaration: (
    node: FunctionDeclaration,
    decorators: readonly Decorator[] | undefined,
    modifiers: readonly Modifier[] | undefined,
    asteriskToken: AsteriskToken | undefined,
    name: Identifier | undefined,
    typeParameters: readonly TypeParameterDeclaration[] | undefined,
    parameters: readonly ParameterDeclaration[],
    type: TypeNode | undefined,
    body: Block | undefined
) => FunctionDeclaration;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 6830,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6830",
        },
        "type": "(node: FunctionDeclaration, decorators: readonly Decorator[] | undefined, modifiers: readonly Modifier[] | undefined, asteriskToken: AsteriskToken | undefined, name: Identifier | undefined, typeParameters: readonly TypeParameterDeclaration[] | undefined, parameters: readonly ParameterDeclaration[], type: TypeNode | undefined, body: Block | undefined) => FunctionDeclaration",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.updateFunctionExpression\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "updateFunctionExpression",
        "kind": "FunctionDeclaration",
        "name": "updateFunctionExpression",
        "signature": "updateFunctionExpression: (
    node: FunctionExpression,
    modifiers: readonly Modifier[] | undefined,
    asteriskToken: AsteriskToken | undefined,
    name: Identifier | undefined,
    typeParameters: readonly TypeParameterDeclaration[] | undefined,
    parameters: readonly ParameterDeclaration[],
    type: TypeNode | undefined,
    body: Block
) => FunctionExpression;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 6664,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6664",
        },
        "type": "(node: FunctionExpression, modifiers: readonly Modifier[] | undefined, asteriskToken: AsteriskToken | undefined, name: Identifier | undefined, typeParameters: readonly TypeParameterDeclaration[] | undefined, parameters: readonly ParameterDeclaration[], type: TypeNode | undefined, body: Block) => FunctionExpression",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.updateFunctionTypeNode\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "updateFunctionTypeNode",
        "kind": "FunctionDeclaration",
        "name": "updateFunctionTypeNode",
        "signature": "updateFunctionTypeNode: (
    node: FunctionTypeNode,
    typeParameters: NodeArray<TypeParameterDeclaration> | undefined,
    parameters: NodeArray<ParameterDeclaration>,
    type: TypeNode
) => FunctionTypeNode;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 6536,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6536",
        },
        "type": "(node: FunctionTypeNode, typeParameters: NodeArray<TypeParameterDeclaration> | undefined, parameters: NodeArray<ParameterDeclaration>, type: TypeNode) => FunctionTypeNode",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.updateGetAccessorDeclaration\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "updateGetAccessor",
        "kind": "FunctionDeclaration",
        "name": "updateGetAccessor",
        "signature": "updateGetAccessor: (
    node: GetAccessorDeclaration,
    decorators: readonly Decorator[] | undefined,
    modifiers: readonly Modifier[] | undefined,
    name: PropertyName,
    parameters: readonly ParameterDeclaration[],
    type: TypeNode | undefined,
    body: Block | undefined
) => GetAccessorDeclaration;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 6508,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6508",
        },
        "type": "(node: GetAccessorDeclaration, decorators: readonly Decorator[] | undefined, modifiers: readonly Modifier[] | undefined, name: PropertyName, parameters: readonly ParameterDeclaration[], type: TypeNode | undefined, body: Block | undefined) => GetAccessorDeclaration",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.updateHeritageClause\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "updateHeritageClause",
        "kind": "FunctionDeclaration",
        "name": "updateHeritageClause",
        "signature": "updateHeritageClause: (
    node: HeritageClause,
    types: readonly ExpressionWithTypeArguments[]
) => HeritageClause;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 7002,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L7002",
        },
        "type": "(node: HeritageClause, types: readonly ExpressionWithTypeArguments[]) => HeritageClause",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.updateIf\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "updateIf",
        "kind": "FunctionDeclaration",
        "name": "updateIf",
        "signature": "updateIf: (
    node: IfStatement,
    expression: Expression,
    thenStatement: Statement,
    elseStatement: Statement | undefined
) => IfStatement;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 6768,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6768",
        },
        "type": "(node: IfStatement, expression: Expression, thenStatement: Statement, elseStatement: Statement | undefined) => IfStatement",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.updateImportClause\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "updateImportClause",
        "kind": "FunctionDeclaration",
        "name": "updateImportClause",
        "signature": "updateImportClause: (
    node: ImportClause,
    name: Identifier | undefined,
    namedBindings: NamedImportBindings | undefined,
    isTypeOnly: boolean
) => ImportClause;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 7150,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L7150",
        },
        "type": "(node: ImportClause, name: Identifier | undefined, namedBindings: NamedImportBindings | undefined, isTypeOnly: boolean) => ImportClause",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.updateImportDeclaration\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "updateImportDeclaration",
        "kind": "FunctionDeclaration",
        "name": "updateImportDeclaration",
        "signature": "updateImportDeclaration: (
    node: ImportDeclaration,
    decorators: readonly Decorator[] | undefined,
    modifiers: readonly Modifier[] | undefined,
    importClause: ImportClause | undefined,
    moduleSpecifier: Expression
) => ImportDeclaration;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 6870,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6870",
        },
        "type": "(node: ImportDeclaration, decorators: readonly Decorator[] | undefined, modifiers: readonly Modifier[] | undefined, importClause: ImportClause | undefined, moduleSpecifier: Expression) => ImportDeclaration",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.updateImportEqualsDeclaration\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "updateImportEqualsDeclaration",
        "kind": "FunctionDeclaration",
        "name": "updateImportEqualsDeclaration",
        "signature": "updateImportEqualsDeclaration: (
    node: ImportEqualsDeclaration,
    decorators: readonly Decorator[] | undefined,
    modifiers: readonly Modifier[] | undefined,
    name: Identifier,
    moduleReference: ModuleReference
) => ImportEqualsDeclaration;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 6866,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6866",
        },
        "type": "(node: ImportEqualsDeclaration, decorators: readonly Decorator[] | undefined, modifiers: readonly Modifier[] | undefined, name: Identifier, moduleReference: ModuleReference) => ImportEqualsDeclaration",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.updateImportSpecifier\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "updateImportSpecifier",
        "kind": "FunctionDeclaration",
        "name": "updateImportSpecifier",
        "signature": "updateImportSpecifier: (
    node: ImportSpecifier,
    propertyName: Identifier | undefined,
    name: Identifier
) => ImportSpecifier;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 6882,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6882",
        },
        "type": "(node: ImportSpecifier, propertyName: Identifier | undefined, name: Identifier) => ImportSpecifier",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.updateImportTypeNode\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "updateImportTypeNode",
        "kind": "FunctionDeclaration",
        "name": "updateImportTypeNode",
        "signature": "updateImportTypeNode: (
    node: ImportTypeNode,
    argument: TypeNode,
    qualifier: Identifier | QualifiedName | undefined,
    typeArguments: readonly TypeNode[] | undefined,
    isTypeOf?: boolean | undefined
) => ImportTypeNode;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 6584,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6584",
        },
        "type": "(node: ImportTypeNode, argument: TypeNode, qualifier: Identifier | QualifiedName | undefined, typeArguments: readonly TypeNode[] | undefined, isTypeOf?: boolean | undefined) => ImportTypeNode",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.updateIndexedAccessTypeNode\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "updateIndexedAccessTypeNode",
        "kind": "FunctionDeclaration",
        "name": "updateIndexedAccessTypeNode",
        "signature": "updateIndexedAccessTypeNode: (
    node: IndexedAccessTypeNode,
    objectType: TypeNode,
    indexType: TypeNode
) => IndexedAccessTypeNode;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 6596,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6596",
        },
        "type": "(node: IndexedAccessTypeNode, objectType: TypeNode, indexType: TypeNode) => IndexedAccessTypeNode",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.updateIndexSignature\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "updateIndexSignature",
        "kind": "FunctionDeclaration",
        "name": "updateIndexSignature",
        "signature": "updateIndexSignature: (
    node: IndexSignatureDeclaration,
    decorators: readonly Decorator[] | undefined,
    modifiers: readonly Modifier[] | undefined,
    parameters: readonly ParameterDeclaration[],
    type: TypeNode
) => IndexSignatureDeclaration;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 6522,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6522",
        },
        "type": "(node: IndexSignatureDeclaration, decorators: readonly Decorator[] | undefined, modifiers: readonly Modifier[] | undefined, parameters: readonly ParameterDeclaration[], type: TypeNode) => IndexSignatureDeclaration",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.updateInferTypeNode\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "updateInferTypeNode",
        "kind": "FunctionDeclaration",
        "name": "updateInferTypeNode",
        "signature": "updateInferTypeNode: (
    node: InferTypeNode,
    typeParameter: TypeParameterDeclaration
) => InferTypeNode;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 6580,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6580",
        },
        "type": "(node: InferTypeNode, typeParameter: TypeParameterDeclaration) => InferTypeNode",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.updateInterfaceDeclaration\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "updateInterfaceDeclaration",
        "kind": "FunctionDeclaration",
        "name": "updateInterfaceDeclaration",
        "signature": "updateInterfaceDeclaration: (
    node: InterfaceDeclaration,
    decorators: readonly Decorator[] | undefined,
    modifiers: readonly Modifier[] | undefined,
    name: Identifier,
    typeParameters: readonly TypeParameterDeclaration[] | undefined,
    heritageClauses: readonly HeritageClause[] | undefined,
    members: readonly TypeElement[]
) => InterfaceDeclaration;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 6838,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6838",
        },
        "type": "(node: InterfaceDeclaration, decorators: readonly Decorator[] | undefined, modifiers: readonly Modifier[] | undefined, name: Identifier, typeParameters: readonly TypeParameterDeclaration[] | undefined, heritageClauses: readonly HeritageClause[] | undefined, members: readonly TypeElement[]) => InterfaceDeclaration",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.updateIntersectionTypeNode\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "updateIntersectionTypeNode",
        "kind": "FunctionDeclaration",
        "name": "updateIntersectionTypeNode",
        "signature": "updateIntersectionTypeNode: (
    node: IntersectionTypeNode,
    types: NodeArray<TypeNode>
) => IntersectionTypeNode;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 6572,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6572",
        },
        "type": "(node: IntersectionTypeNode, types: NodeArray<TypeNode>) => IntersectionTypeNode",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.updateJsxAttribute\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "updateJsxAttribute",
        "kind": "FunctionDeclaration",
        "name": "updateJsxAttribute",
        "signature": "updateJsxAttribute: (
    node: JsxAttribute,
    name: Identifier,
    initializer: StringLiteral | JsxExpression | undefined
) => JsxAttribute;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 6978,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6978",
        },
        "type": "(node: JsxAttribute, name: Identifier, initializer: StringLiteral | JsxExpression | undefined) => JsxAttribute",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.updateJsxAttributes\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "updateJsxAttributes",
        "kind": "FunctionDeclaration",
        "name": "updateJsxAttributes",
        "signature": "updateJsxAttributes: (
    node: JsxAttributes,
    properties: readonly JsxAttributeLike[]
) => JsxAttributes;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 6982,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6982",
        },
        "type": "(node: JsxAttributes, properties: readonly JsxAttributeLike[]) => JsxAttributes",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.updateJsxClosingElement\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "updateJsxClosingElement",
        "kind": "FunctionDeclaration",
        "name": "updateJsxClosingElement",
        "signature": "updateJsxClosingElement: (
    node: JsxClosingElement,
    tagName: JsxTagNameExpression
) => JsxClosingElement;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 6962,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6962",
        },
        "type": "(node: JsxClosingElement, tagName: JsxTagNameExpression) => JsxClosingElement",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.updateJsxElement\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "updateJsxElement",
        "kind": "FunctionDeclaration",
        "name": "updateJsxElement",
        "signature": "updateJsxElement: (
    node: JsxElement,
    openingElement: JsxOpeningElement,
    children: readonly JsxChild[],
    closingElement: JsxClosingElement
) => JsxElement;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 6950,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6950",
        },
        "type": "(node: JsxElement, openingElement: JsxOpeningElement, children: readonly JsxChild[], closingElement: JsxClosingElement) => JsxElement",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.updateJsxExpression\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "updateJsxExpression",
        "kind": "FunctionDeclaration",
        "name": "updateJsxExpression",
        "signature": "updateJsxExpression: (
    node: JsxExpression,
    expression: Expression | undefined
) => JsxExpression;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 6990,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6990",
        },
        "type": "(node: JsxExpression, expression: Expression | undefined) => JsxExpression",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.updateJsxFragment\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "updateJsxFragment",
        "kind": "FunctionDeclaration",
        "name": "updateJsxFragment",
        "signature": "updateJsxFragment: (
    node: JsxFragment,
    openingFragment: JsxOpeningFragment,
    children: readonly JsxChild[],
    closingFragment: JsxClosingFragment
) => JsxFragment;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 6974,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6974",
        },
        "type": "(node: JsxFragment, openingFragment: JsxOpeningFragment, children: readonly JsxChild[], closingFragment: JsxClosingFragment) => JsxFragment",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.updateJsxOpeningElement\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "updateJsxOpeningElement",
        "kind": "FunctionDeclaration",
        "name": "updateJsxOpeningElement",
        "signature": "updateJsxOpeningElement: (
    node: JsxOpeningElement,
    tagName: JsxTagNameExpression,
    typeArguments: readonly TypeNode[] | undefined,
    attributes: JsxAttributes
) => JsxOpeningElement;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 6958,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6958",
        },
        "type": "(node: JsxOpeningElement, tagName: JsxTagNameExpression, typeArguments: readonly TypeNode[] | undefined, attributes: JsxAttributes) => JsxOpeningElement",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.updateJsxSelfClosingElement\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "updateJsxSelfClosingElement",
        "kind": "FunctionDeclaration",
        "name": "updateJsxSelfClosingElement",
        "signature": "updateJsxSelfClosingElement: (
    node: JsxSelfClosingElement,
    tagName: JsxTagNameExpression,
    typeArguments: readonly TypeNode[] | undefined,
    attributes: JsxAttributes
) => JsxSelfClosingElement;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 6954,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6954",
        },
        "type": "(node: JsxSelfClosingElement, tagName: JsxTagNameExpression, typeArguments: readonly TypeNode[] | undefined, attributes: JsxAttributes) => JsxSelfClosingElement",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.updateJsxSpreadAttribute\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "updateJsxSpreadAttribute",
        "kind": "FunctionDeclaration",
        "name": "updateJsxSpreadAttribute",
        "signature": "updateJsxSpreadAttribute: (
    node: JsxSpreadAttribute,
    expression: Expression
) => JsxSpreadAttribute;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 6986,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6986",
        },
        "type": "(node: JsxSpreadAttribute, expression: Expression) => JsxSpreadAttribute",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.updateJsxText\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "updateJsxText",
        "kind": "FunctionDeclaration",
        "name": "updateJsxText",
        "signature": "updateJsxText: (
    node: JsxText,
    text: string,
    containsOnlyTriviaWhiteSpaces?: boolean | undefined
) => JsxText;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 6968,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6968",
        },
        "type": "(node: JsxText, text: string, containsOnlyTriviaWhiteSpaces?: boolean | undefined) => JsxText",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.updateLabel\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "updateLabel",
        "kind": "FunctionDeclaration",
        "name": "updateLabel",
        "signature": "updateLabel: (
    node: LabeledStatement,
    label: Identifier,
    statement: Statement
) => LabeledStatement;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 6812,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6812",
        },
        "type": "(node: LabeledStatement, label: Identifier, statement: Statement) => LabeledStatement",
      },
      Object {
        "docs": Array [],
        "id": "updateLanguageServiceSourceFile",
        "kind": "FunctionDeclaration",
        "name": "updateLanguageServiceSourceFile",
        "signature": "updateLanguageServiceSourceFile: (
    sourceFile: SourceFile,
    scriptSnapshot: IScriptSnapshot,
    version: string,
    textChangeRange: TextChangeRange | undefined,
    aggressiveChecks?: boolean
) => SourceFile;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 6419,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6419",
        },
        "type": "(sourceFile: SourceFile, scriptSnapshot: IScriptSnapshot, version: string, textChangeRange: TextChangeRange | undefined, aggressiveChecks?: boolean) => SourceFile",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.updateLiteralTypeNode\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "updateLiteralTypeNode",
        "kind": "FunctionDeclaration",
        "name": "updateLiteralTypeNode",
        "signature": "updateLiteralTypeNode: (
    node: LiteralTypeNode,
    literal:
        | LiteralExpression
        | TrueLiteral
        | FalseLiteral
        | PrefixUnaryExpression
        | NullLiteral
) => LiteralTypeNode;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 6604,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6604",
        },
        "type": "(node: LiteralTypeNode, literal: LiteralExpression | TrueLiteral | FalseLiteral | PrefixUnaryExpression | NullLiteral) => LiteralTypeNode",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.updateMappedTypeNode\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "updateMappedTypeNode",
        "kind": "FunctionDeclaration",
        "name": "updateMappedTypeNode",
        "signature": "updateMappedTypeNode: (
    node: MappedTypeNode,
    readonlyToken: ReadonlyKeyword | PlusToken | MinusToken | undefined,
    typeParameter: TypeParameterDeclaration,
    nameType: TypeNode | undefined,
    questionToken: QuestionToken | PlusToken | MinusToken | undefined,
    type: TypeNode | undefined
) => MappedTypeNode;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 6600,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6600",
        },
        "type": "(node: MappedTypeNode, readonlyToken: ReadonlyKeyword | PlusToken | MinusToken | undefined, typeParameter: TypeParameterDeclaration, nameType: TypeNode | undefined, questionToken: QuestionToken | PlusToken | MinusToken | undefined, type: TypeNode | undefined) => MappedTypeNode",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.updateMetaProperty\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "updateMetaProperty",
        "kind": "FunctionDeclaration",
        "name": "updateMetaProperty",
        "signature": "updateMetaProperty: (node: MetaProperty, name: Identifier) => MetaProperty;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 6740,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6740",
        },
        "type": "(node: MetaProperty, name: Identifier) => MetaProperty",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.updateMethodDeclaration\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "updateMethod",
        "kind": "FunctionDeclaration",
        "name": "updateMethod",
        "signature": "updateMethod: (
    node: MethodDeclaration,
    decorators: readonly Decorator[] | undefined,
    modifiers: readonly Modifier[] | undefined,
    asteriskToken: AsteriskToken | undefined,
    name: PropertyName,
    questionToken: QuestionToken | undefined,
    typeParameters: readonly TypeParameterDeclaration[] | undefined,
    parameters: readonly ParameterDeclaration[],
    type: TypeNode | undefined,
    body: Block | undefined
) => MethodDeclaration;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 6500,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6500",
        },
        "type": "(node: MethodDeclaration, decorators: readonly Decorator[] | undefined, modifiers: readonly Modifier[] | undefined, asteriskToken: AsteriskToken | undefined, name: PropertyName, questionToken: QuestionToken | undefined, typeParameters: readonly TypeParameterDeclaration[] | undefined, parameters: readonly ParameterDeclaration[], type: TypeNode | undefined, body: Block | undefined) => MethodDeclaration",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.updateMethodSignature\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "updateMethodSignature",
        "kind": "FunctionDeclaration",
        "name": "updateMethodSignature",
        "signature": "updateMethodSignature: (
    node: MethodSignature,
    typeParameters: NodeArray<TypeParameterDeclaration> | undefined,
    parameters: NodeArray<ParameterDeclaration>,
    type: TypeNode | undefined,
    name: PropertyName,
    questionToken: QuestionToken | undefined
) => MethodSignature;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 7087,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L7087",
        },
        "type": "(node: MethodSignature, typeParameters: NodeArray<TypeParameterDeclaration> | undefined, parameters: NodeArray<ParameterDeclaration>, type: TypeNode | undefined, name: PropertyName, questionToken: QuestionToken | undefined) => MethodSignature",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.updateModuleBlock\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "updateModuleBlock",
        "kind": "FunctionDeclaration",
        "name": "updateModuleBlock",
        "signature": "updateModuleBlock: (
    node: ModuleBlock,
    statements: readonly Statement[]
) => ModuleBlock;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 6854,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6854",
        },
        "type": "(node: ModuleBlock, statements: readonly Statement[]) => ModuleBlock",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.updateModuleDeclaration\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "updateModuleDeclaration",
        "kind": "FunctionDeclaration",
        "name": "updateModuleDeclaration",
        "signature": "updateModuleDeclaration: (
    node: ModuleDeclaration,
    decorators: readonly Decorator[] | undefined,
    modifiers: readonly Modifier[] | undefined,
    name: ModuleName,
    body:
        | Identifier
        | ModuleBlock
        | NamespaceDeclaration
        | JSDocNamespaceDeclaration
        | undefined
) => ModuleDeclaration;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 6850,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6850",
        },
        "type": "(node: ModuleDeclaration, decorators: readonly Decorator[] | undefined, modifiers: readonly Modifier[] | undefined, name: ModuleName, body: Identifier | ModuleBlock | NamespaceDeclaration | JSDocNamespaceDeclaration | undefined) => ModuleDeclaration",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.updateNamedExports\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "updateNamedExports",
        "kind": "FunctionDeclaration",
        "name": "updateNamedExports",
        "signature": "updateNamedExports: (
    node: NamedExports,
    elements: readonly ExportSpecifier[]
) => NamedExports;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 6890,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6890",
        },
        "type": "(node: NamedExports, elements: readonly ExportSpecifier[]) => NamedExports",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.updateNamedImports\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "updateNamedImports",
        "kind": "FunctionDeclaration",
        "name": "updateNamedImports",
        "signature": "updateNamedImports: (
    node: NamedImports,
    elements: readonly ImportSpecifier[]
) => NamedImports;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 6878,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6878",
        },
        "type": "(node: NamedImports, elements: readonly ImportSpecifier[]) => NamedImports",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.updateNamespaceExport\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "updateNamespaceExport",
        "kind": "FunctionDeclaration",
        "name": "updateNamespaceExport",
        "signature": "updateNamespaceExport: (
    node: NamespaceExport,
    name: Identifier
) => NamespaceExport;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 7058,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L7058",
        },
        "type": "(node: NamespaceExport, name: Identifier) => NamespaceExport",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.updateNamespaceExportDeclaration\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "updateNamespaceExportDeclaration",
        "kind": "FunctionDeclaration",
        "name": "updateNamespaceExportDeclaration",
        "signature": "updateNamespaceExportDeclaration: (
    node: NamespaceExportDeclaration,
    name: Identifier
) => NamespaceExportDeclaration;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 6862,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6862",
        },
        "type": "(node: NamespaceExportDeclaration, name: Identifier) => NamespaceExportDeclaration",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.updateNamespaceImport\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "updateNamespaceImport",
        "kind": "FunctionDeclaration",
        "name": "updateNamespaceImport",
        "signature": "updateNamespaceImport: (
    node: NamespaceImport,
    name: Identifier
) => NamespaceImport;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 6874,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6874",
        },
        "type": "(node: NamespaceImport, name: Identifier) => NamespaceImport",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.updateNew\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "updateNew",
        "kind": "FunctionDeclaration",
        "name": "updateNew",
        "signature": "updateNew: (
    node: NewExpression,
    expression: Expression,
    typeArguments: readonly TypeNode[] | undefined,
    argumentsArray: readonly Expression[] | undefined
) => NewExpression;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 6652,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6652",
        },
        "type": "(node: NewExpression, expression: Expression, typeArguments: readonly TypeNode[] | undefined, argumentsArray: readonly Expression[] | undefined) => NewExpression",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.updateNonNullChain\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "updateNonNullChain",
        "kind": "FunctionDeclaration",
        "name": "updateNonNullChain",
        "signature": "updateNonNullChain: (node: NonNullChain, expression: Expression) => NonNullChain;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 6736,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6736",
        },
        "type": "(node: NonNullChain, expression: Expression) => NonNullChain",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.updateNonNullExpression\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "updateNonNullExpression",
        "kind": "FunctionDeclaration",
        "name": "updateNonNullExpression",
        "signature": "updateNonNullExpression: (
    node: NonNullExpression,
    expression: Expression
) => NonNullExpression;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 6732,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6732",
        },
        "type": "(node: NonNullExpression, expression: Expression) => NonNullExpression",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.updateObjectBindingPattern\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "updateObjectBindingPattern",
        "kind": "FunctionDeclaration",
        "name": "updateObjectBindingPattern",
        "signature": "updateObjectBindingPattern: (
    node: ObjectBindingPattern,
    elements: readonly BindingElement[]
) => ObjectBindingPattern;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 6608,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6608",
        },
        "type": "(node: ObjectBindingPattern, elements: readonly BindingElement[]) => ObjectBindingPattern",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.updateObjectLiteral\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "updateObjectLiteral",
        "kind": "FunctionDeclaration",
        "name": "updateObjectLiteral",
        "signature": "updateObjectLiteral: (
    node: ObjectLiteralExpression,
    properties: readonly ObjectLiteralElementLike[]
) => ObjectLiteralExpression;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 6624,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6624",
        },
        "type": "(node: ObjectLiteralExpression, properties: readonly ObjectLiteralElementLike[]) => ObjectLiteralExpression",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.updateOptionalTypeNode\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "updateOptionalTypeNode",
        "kind": "FunctionDeclaration",
        "name": "updateOptionalTypeNode",
        "signature": "updateOptionalTypeNode: (
    node: OptionalTypeNode,
    type: TypeNode
) => OptionalTypeNode;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 6560,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6560",
        },
        "type": "(node: OptionalTypeNode, type: TypeNode) => OptionalTypeNode",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.updateParameterDeclaration\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "updateParameter",
        "kind": "FunctionDeclaration",
        "name": "updateParameter",
        "signature": "updateParameter: (
    node: ParameterDeclaration,
    decorators: readonly Decorator[] | undefined,
    modifiers: readonly Modifier[] | undefined,
    dotDotDotToken: DotDotDotToken | undefined,
    name: string | Identifier | ObjectBindingPattern | ArrayBindingPattern,
    questionToken: QuestionToken | undefined,
    type: TypeNode | undefined,
    initializer: Expression | undefined
) => ParameterDeclaration;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 6488,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6488",
        },
        "type": "(node: ParameterDeclaration, decorators: readonly Decorator[] | undefined, modifiers: readonly Modifier[] | undefined, dotDotDotToken: DotDotDotToken | undefined, name: string | Identifier | ObjectBindingPattern | ArrayBindingPattern, questionToken: QuestionToken | undefined, type: TypeNode | undefined, initializer: Expression | undefined) => ParameterDeclaration",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.updateParen\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "updateParen",
        "kind": "FunctionDeclaration",
        "name": "updateParen",
        "signature": "updateParen: (
    node: ParenthesizedExpression,
    expression: Expression
) => ParenthesizedExpression;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 6660,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6660",
        },
        "type": "(node: ParenthesizedExpression, expression: Expression) => ParenthesizedExpression",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.updateParenthesizedType\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "updateParenthesizedType",
        "kind": "FunctionDeclaration",
        "name": "updateParenthesizedType",
        "signature": "updateParenthesizedType: (
    node: ParenthesizedTypeNode,
    type: TypeNode
) => ParenthesizedTypeNode;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 6588,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6588",
        },
        "type": "(node: ParenthesizedTypeNode, type: TypeNode) => ParenthesizedTypeNode",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.updatePartiallyEmittedExpression\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "updatePartiallyEmittedExpression",
        "kind": "FunctionDeclaration",
        "name": "updatePartiallyEmittedExpression",
        "signature": "updatePartiallyEmittedExpression: (
    node: PartiallyEmittedExpression,
    expression: Expression
) => PartiallyEmittedExpression;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 7030,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L7030",
        },
        "type": "(node: PartiallyEmittedExpression, expression: Expression) => PartiallyEmittedExpression",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.updatePostfix\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "updatePostfix",
        "kind": "FunctionDeclaration",
        "name": "updatePostfix",
        "signature": "updatePostfix: (
    node: PostfixUnaryExpression,
    operand: Expression
) => PostfixUnaryExpression;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 6688,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6688",
        },
        "type": "(node: PostfixUnaryExpression, operand: Expression) => PostfixUnaryExpression",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.updatePrefix\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "updatePrefix",
        "kind": "FunctionDeclaration",
        "name": "updatePrefix",
        "signature": "updatePrefix: (
    node: PrefixUnaryExpression,
    operand: Expression
) => PrefixUnaryExpression;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 6684,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6684",
        },
        "type": "(node: PrefixUnaryExpression, operand: Expression) => PrefixUnaryExpression",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.updatePropertyDeclaration\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "updateProperty",
        "kind": "FunctionDeclaration",
        "name": "updateProperty",
        "signature": "updateProperty: (
    node: PropertyDeclaration,
    decorators: readonly Decorator[] | undefined,
    modifiers: readonly Modifier[] | undefined,
    name:
        | string
        | Identifier
        | StringLiteral
        | NumericLiteral
        | ComputedPropertyName
        | PrivateIdentifier,
    questionOrExclamationToken: QuestionToken | ExclamationToken | undefined,
    type: TypeNode | undefined,
    initializer: Expression | undefined
) => PropertyDeclaration;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 6496,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6496",
        },
        "type": "(node: PropertyDeclaration, decorators: readonly Decorator[] | undefined, modifiers: readonly Modifier[] | undefined, name: string | Identifier | StringLiteral | NumericLiteral | ComputedPropertyName | PrivateIdentifier, questionOrExclamationToken: QuestionToken | ExclamationToken | undefined, type: TypeNode | undefined, initializer: Expression | undefined) => PropertyDeclaration",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.updatePropertyAccess\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "updatePropertyAccess",
        "kind": "FunctionDeclaration",
        "name": "updatePropertyAccess",
        "signature": "updatePropertyAccess: (
    node: PropertyAccessExpression,
    expression: Expression,
    name: Identifier | PrivateIdentifier
) => PropertyAccessExpression;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 6628,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6628",
        },
        "type": "(node: PropertyAccessExpression, expression: Expression, name: Identifier | PrivateIdentifier) => PropertyAccessExpression",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.updatePropertyAccessChain\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "updatePropertyAccessChain",
        "kind": "FunctionDeclaration",
        "name": "updatePropertyAccessChain",
        "signature": "updatePropertyAccessChain: (
    node: PropertyAccessChain,
    expression: Expression,
    questionDotToken: QuestionDotToken | undefined,
    name: Identifier | PrivateIdentifier
) => PropertyAccessChain;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 6632,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6632",
        },
        "type": "(node: PropertyAccessChain, expression: Expression, questionDotToken: QuestionDotToken | undefined, name: Identifier | PrivateIdentifier) => PropertyAccessChain",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.updatePropertyAssignment\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "updatePropertyAssignment",
        "kind": "FunctionDeclaration",
        "name": "updatePropertyAssignment",
        "signature": "updatePropertyAssignment: (
    node: PropertyAssignment,
    name: PropertyName,
    initializer: Expression
) => PropertyAssignment;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 7010,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L7010",
        },
        "type": "(node: PropertyAssignment, name: PropertyName, initializer: Expression) => PropertyAssignment",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.updatePropertySignature\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "updatePropertySignature",
        "kind": "FunctionDeclaration",
        "name": "updatePropertySignature",
        "signature": "updatePropertySignature: (
    node: PropertySignature,
    modifiers: readonly Modifier[] | undefined,
    name: PropertyName,
    questionToken: QuestionToken | undefined,
    type: TypeNode | undefined,
    initializer: Expression | undefined
) => PropertySignature;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 7122,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L7122",
        },
        "type": "(node: PropertySignature, modifiers: readonly Modifier[] | undefined, name: PropertyName, questionToken: QuestionToken | undefined, type: TypeNode | undefined, initializer: Expression | undefined) => PropertySignature",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.updateQualifiedName\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "updateQualifiedName",
        "kind": "FunctionDeclaration",
        "name": "updateQualifiedName",
        "signature": "updateQualifiedName: (
    node: QualifiedName,
    left: EntityName,
    right: Identifier
) => QualifiedName;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 6476,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6476",
        },
        "type": "(node: QualifiedName, left: EntityName, right: Identifier) => QualifiedName",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.updateRestTypeNode\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "updateRestTypeNode",
        "kind": "FunctionDeclaration",
        "name": "updateRestTypeNode",
        "signature": "updateRestTypeNode: (node: RestTypeNode, type: TypeNode) => RestTypeNode;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 6564,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6564",
        },
        "type": "(node: RestTypeNode, type: TypeNode) => RestTypeNode",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.updateReturn\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "updateReturn",
        "kind": "FunctionDeclaration",
        "name": "updateReturn",
        "signature": "updateReturn: (
    node: ReturnStatement,
    expression: Expression | undefined
) => ReturnStatement;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 6800,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6800",
        },
        "type": "(node: ReturnStatement, expression: Expression | undefined) => ReturnStatement",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.updateSetAccessorDeclaration\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "updateSetAccessor",
        "kind": "FunctionDeclaration",
        "name": "updateSetAccessor",
        "signature": "updateSetAccessor: (
    node: SetAccessorDeclaration,
    decorators: readonly Decorator[] | undefined,
    modifiers: readonly Modifier[] | undefined,
    name: PropertyName,
    parameters: readonly ParameterDeclaration[],
    body: Block | undefined
) => SetAccessorDeclaration;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 6512,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6512",
        },
        "type": "(node: SetAccessorDeclaration, decorators: readonly Decorator[] | undefined, modifiers: readonly Modifier[] | undefined, name: PropertyName, parameters: readonly ParameterDeclaration[], body: Block | undefined) => SetAccessorDeclaration",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.updateShorthandPropertyAssignment\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "updateShorthandPropertyAssignment",
        "kind": "FunctionDeclaration",
        "name": "updateShorthandPropertyAssignment",
        "signature": "updateShorthandPropertyAssignment: (
    node: ShorthandPropertyAssignment,
    name: Identifier,
    objectAssignmentInitializer: Expression | undefined
) => ShorthandPropertyAssignment;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 7014,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L7014",
        },
        "type": "(node: ShorthandPropertyAssignment, name: Identifier, objectAssignmentInitializer: Expression | undefined) => ShorthandPropertyAssignment",
      },
      Object {
        "docs": Array [],
        "id": "updateSourceFile",
        "kind": "FunctionDeclaration",
        "name": "updateSourceFile",
        "signature": "updateSourceFile: (
    sourceFile: SourceFile,
    newText: string,
    textChangeRange: TextChangeRange,
    aggressiveChecks?: boolean
) => SourceFile;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4545,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4545",
        },
        "type": "(sourceFile: SourceFile, newText: string, textChangeRange: TextChangeRange, aggressiveChecks?: boolean) => SourceFile",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.updateSourceFile\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "updateSourceFileNode",
        "kind": "FunctionDeclaration",
        "name": "updateSourceFileNode",
        "signature": "updateSourceFileNode: (
    node: SourceFile,
    statements: readonly Statement[],
    isDeclarationFile?: boolean | undefined,
    referencedFiles?: readonly FileReference[] | undefined,
    typeReferences?: readonly FileReference[] | undefined,
    hasNoDefaultLib?: boolean | undefined,
    libReferences?: readonly FileReference[] | undefined
) => SourceFile;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 7024,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L7024",
        },
        "type": "(node: SourceFile, statements: readonly Statement[], isDeclarationFile?: boolean | undefined, referencedFiles?: readonly FileReference[] | undefined, typeReferences?: readonly FileReference[] | undefined, hasNoDefaultLib?: boolean | undefined, libReferences?: readonly FileReference[] | undefined) => SourceFile",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.updateSpread\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "updateSpread",
        "kind": "FunctionDeclaration",
        "name": "updateSpread",
        "signature": "updateSpread: (node: SpreadElement, expression: Expression) => SpreadElement;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 6722,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6722",
        },
        "type": "(node: SpreadElement, expression: Expression) => SpreadElement",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.updateSpreadAssignment\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "updateSpreadAssignment",
        "kind": "FunctionDeclaration",
        "name": "updateSpreadAssignment",
        "signature": "updateSpreadAssignment: (
    node: SpreadAssignment,
    expression: Expression
) => SpreadAssignment;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 7018,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L7018",
        },
        "type": "(node: SpreadAssignment, expression: Expression) => SpreadAssignment",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.updateExpressionStatement\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "updateStatement",
        "kind": "FunctionDeclaration",
        "name": "updateStatement",
        "signature": "updateStatement: (
    node: ExpressionStatement,
    expression: Expression
) => ExpressionStatement;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 6764,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6764",
        },
        "type": "(node: ExpressionStatement, expression: Expression) => ExpressionStatement",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.updateSwitch\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "updateSwitch",
        "kind": "FunctionDeclaration",
        "name": "updateSwitch",
        "signature": "updateSwitch: (
    node: SwitchStatement,
    expression: Expression,
    caseBlock: CaseBlock
) => SwitchStatement;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 6808,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6808",
        },
        "type": "(node: SwitchStatement, expression: Expression, caseBlock: CaseBlock) => SwitchStatement",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.updateTemplateExpression\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "updateTemplateExpression",
        "kind": "FunctionDeclaration",
        "name": "updateTemplateExpression",
        "signature": "updateTemplateExpression: (
    node: TemplateExpression,
    head: TemplateHead,
    templateSpans: readonly TemplateSpan[]
) => TemplateExpression;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 6696,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6696",
        },
        "type": "(node: TemplateExpression, head: TemplateHead, templateSpans: readonly TemplateSpan[]) => TemplateExpression",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.updateTemplateSpan\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "updateTemplateSpan",
        "kind": "FunctionDeclaration",
        "name": "updateTemplateSpan",
        "signature": "updateTemplateSpan: (
    node: TemplateSpan,
    expression: Expression,
    literal: TemplateMiddle | TemplateTail
) => TemplateSpan;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 6744,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6744",
        },
        "type": "(node: TemplateSpan, expression: Expression, literal: TemplateMiddle | TemplateTail) => TemplateSpan",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.updateThrow\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "updateThrow",
        "kind": "FunctionDeclaration",
        "name": "updateThrow",
        "signature": "updateThrow: (node: ThrowStatement, expression: Expression) => ThrowStatement;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 6816,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6816",
        },
        "type": "(node: ThrowStatement, expression: Expression) => ThrowStatement",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.updateTry\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "updateTry",
        "kind": "FunctionDeclaration",
        "name": "updateTry",
        "signature": "updateTry: (
    node: TryStatement,
    tryBlock: Block,
    catchClause: CatchClause | undefined,
    finallyBlock: Block | undefined
) => TryStatement;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 6820,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6820",
        },
        "type": "(node: TryStatement, tryBlock: Block, catchClause: CatchClause | undefined, finallyBlock: Block | undefined) => TryStatement",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.updateTupleTypeNode\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "updateTupleTypeNode",
        "kind": "FunctionDeclaration",
        "name": "updateTupleTypeNode",
        "signature": "updateTupleTypeNode: (
    node: TupleTypeNode,
    elements: readonly (TypeNode | NamedTupleMember)[]
) => TupleTypeNode;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 6556,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6556",
        },
        "type": "(node: TupleTypeNode, elements: readonly (TypeNode | NamedTupleMember)[]) => TupleTypeNode",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.updateTypeAliasDeclaration\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "updateTypeAliasDeclaration",
        "kind": "FunctionDeclaration",
        "name": "updateTypeAliasDeclaration",
        "signature": "updateTypeAliasDeclaration: (
    node: TypeAliasDeclaration,
    decorators: readonly Decorator[] | undefined,
    modifiers: readonly Modifier[] | undefined,
    name: Identifier,
    typeParameters: readonly TypeParameterDeclaration[] | undefined,
    type: TypeNode
) => TypeAliasDeclaration;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 6842,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6842",
        },
        "type": "(node: TypeAliasDeclaration, decorators: readonly Decorator[] | undefined, modifiers: readonly Modifier[] | undefined, name: Identifier, typeParameters: readonly TypeParameterDeclaration[] | undefined, type: TypeNode) => TypeAliasDeclaration",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.updateTypeAssertion\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "updateTypeAssertion",
        "kind": "FunctionDeclaration",
        "name": "updateTypeAssertion",
        "signature": "updateTypeAssertion: (
    node: TypeAssertion,
    type: TypeNode,
    expression: Expression
) => TypeAssertion;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 6656,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6656",
        },
        "type": "(node: TypeAssertion, type: TypeNode, expression: Expression) => TypeAssertion",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.updateTypeLiteralNode\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "updateTypeLiteralNode",
        "kind": "FunctionDeclaration",
        "name": "updateTypeLiteralNode",
        "signature": "updateTypeLiteralNode: (
    node: TypeLiteralNode,
    members: NodeArray<TypeElement>
) => TypeLiteralNode;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 6548,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6548",
        },
        "type": "(node: TypeLiteralNode, members: NodeArray<TypeElement>) => TypeLiteralNode",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.updateTypeOf\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "updateTypeOf",
        "kind": "FunctionDeclaration",
        "name": "updateTypeOf",
        "signature": "updateTypeOf: (
    node: TypeOfExpression,
    expression: Expression
) => TypeOfExpression;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 6672,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6672",
        },
        "type": "(node: TypeOfExpression, expression: Expression) => TypeOfExpression",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.updateTypeOperatorNode\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "updateTypeOperatorNode",
        "kind": "FunctionDeclaration",
        "name": "updateTypeOperatorNode",
        "signature": "updateTypeOperatorNode: (
    node: TypeOperatorNode,
    type: TypeNode
) => TypeOperatorNode;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 6592,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6592",
        },
        "type": "(node: TypeOperatorNode, type: TypeNode) => TypeOperatorNode",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.updateTypeParameterDeclaration\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "updateTypeParameterDeclaration",
        "kind": "FunctionDeclaration",
        "name": "updateTypeParameterDeclaration",
        "signature": "updateTypeParameterDeclaration: (
    node: TypeParameterDeclaration,
    name: Identifier,
    constraint: TypeNode | undefined,
    defaultType: TypeNode | undefined
) => TypeParameterDeclaration;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 6484,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6484",
        },
        "type": "(node: TypeParameterDeclaration, name: Identifier, constraint: TypeNode | undefined, defaultType: TypeNode | undefined) => TypeParameterDeclaration",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.updateTypePredicateNode\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "updateTypePredicateNode",
        "kind": "FunctionDeclaration",
        "name": "updateTypePredicateNode",
        "signature": "updateTypePredicateNode: (
    node: TypePredicateNode,
    parameterName: Identifier | ThisTypeNode,
    type: TypeNode
) => TypePredicateNode;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 7076,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L7076",
        },
        "type": "(node: TypePredicateNode, parameterName: Identifier | ThisTypeNode, type: TypeNode) => TypePredicateNode",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.updateTypePredicateNode\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "updateTypePredicateNodeWithModifier",
        "kind": "FunctionDeclaration",
        "name": "updateTypePredicateNodeWithModifier",
        "signature": "updateTypePredicateNodeWithModifier: (
    node: TypePredicateNode,
    assertsModifier: AssertsKeyword | undefined,
    parameterName: Identifier | ThisTypeNode,
    type: TypeNode | undefined
) => TypePredicateNode;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 6528,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6528",
        },
        "type": "(node: TypePredicateNode, assertsModifier: AssertsKeyword | undefined, parameterName: Identifier | ThisTypeNode, type: TypeNode | undefined) => TypePredicateNode",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.updateTypeQueryNode\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "updateTypeQueryNode",
        "kind": "FunctionDeclaration",
        "name": "updateTypeQueryNode",
        "signature": "updateTypeQueryNode: (
    node: TypeQueryNode,
    exprName: EntityName
) => TypeQueryNode;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 6544,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6544",
        },
        "type": "(node: TypeQueryNode, exprName: EntityName) => TypeQueryNode",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.updateTypeReferenceNode\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "updateTypeReferenceNode",
        "kind": "FunctionDeclaration",
        "name": "updateTypeReferenceNode",
        "signature": "updateTypeReferenceNode: (
    node: TypeReferenceNode,
    typeName: EntityName,
    typeArguments: NodeArray<TypeNode> | undefined
) => TypeReferenceNode;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 6532,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6532",
        },
        "type": "(node: TypeReferenceNode, typeName: EntityName, typeArguments: NodeArray<TypeNode> | undefined) => TypeReferenceNode",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.updateUnionTypeNode\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "updateUnionTypeNode",
        "kind": "FunctionDeclaration",
        "name": "updateUnionTypeNode",
        "signature": "updateUnionTypeNode: (
    node: UnionTypeNode,
    types: NodeArray<TypeNode>
) => UnionTypeNode;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 6568,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6568",
        },
        "type": "(node: UnionTypeNode, types: NodeArray<TypeNode>) => UnionTypeNode",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.updateVariableDeclarationList\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "updateVariableDeclarationList",
        "kind": "FunctionDeclaration",
        "name": "updateVariableDeclarationList",
        "signature": "updateVariableDeclarationList: (
    node: VariableDeclarationList,
    declarations: readonly VariableDeclaration[]
) => VariableDeclarationList;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 6826,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6826",
        },
        "type": "(node: VariableDeclarationList, declarations: readonly VariableDeclaration[]) => VariableDeclarationList",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.updateVariableStatement\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "updateVariableStatement",
        "kind": "FunctionDeclaration",
        "name": "updateVariableStatement",
        "signature": "updateVariableStatement: (
    node: VariableStatement,
    modifiers: readonly Modifier[] | undefined,
    declarationList: VariableDeclarationList
) => VariableStatement;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 6754,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6754",
        },
        "type": "(node: VariableStatement, modifiers: readonly Modifier[] | undefined, declarationList: VariableDeclarationList) => VariableStatement",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.updateVoid\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "updateVoid",
        "kind": "FunctionDeclaration",
        "name": "updateVoid",
        "signature": "updateVoid: (node: VoidExpression, expression: Expression) => VoidExpression;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 6676,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6676",
        },
        "type": "(node: VoidExpression, expression: Expression) => VoidExpression",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.updateWhile\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "updateWhile",
        "kind": "FunctionDeclaration",
        "name": "updateWhile",
        "signature": "updateWhile: (
    node: WhileStatement,
    expression: Expression,
    statement: Statement
) => WhileStatement;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 6776,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6776",
        },
        "type": "(node: WhileStatement, expression: Expression, statement: Statement) => WhileStatement",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.updateWith\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "updateWith",
        "kind": "FunctionDeclaration",
        "name": "updateWith",
        "signature": "updateWith: (
    node: WithStatement,
    expression: Expression,
    statement: Statement
) => WithStatement;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 6804,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6804",
        },
        "type": "(node: WithStatement, expression: Expression, statement: Statement) => WithStatement",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.updateYield\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "updateYield",
        "kind": "FunctionDeclaration",
        "name": "updateYield",
        "signature": "updateYield: (
    node: YieldExpression,
    asteriskToken: AsteriskToken | undefined,
    expression: Expression | undefined
) => YieldExpression;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 6718,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6718",
        },
        "type": "(node: YieldExpression, asteriskToken: AsteriskToken | undefined, expression: Expression | undefined) => YieldExpression",
      },
      Object {
        "docs": Array [
          "/**
     * Checks to see if the locale is in the appropriate format,
     * and if it is, attempts to set the appropriate language.
     */",
        ],
        "id": "validateLocaleAndSetLanguage",
        "kind": "FunctionDeclaration",
        "name": "validateLocaleAndSetLanguage",
        "signature": "validateLocaleAndSetLanguage: (
    locale: string,
    sys: {
        getExecutingFilePath(): string;
        resolvePath(path: string): string;
        fileExists(fileName: string): boolean;
        readFile(fileName: string): string | undefined;
    },
    errors?: Push<Diagnostic>
) => void;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4044,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4044",
        },
        "type": "(locale: string, sys: { getExecutingFilePath(): string; resolvePath(path: string): string; fileExists(fileName: string): boolean; readFile(fileName: string): string | undefined; }, errors?: Push<Diagnostic>) => void",
      },
      Object {
        "docs": Array [
          "/**
     * Visits each child of a Node using the supplied visitor, possibly returning a new Node of the same kind in its place.
     *
     * @param node The Node whose children will be visited.
     * @param visitor The callback used to visit each child.
     * @param context A lexical environment context for the visitor.
     */",
        ],
        "id": "visitEachChild",
        "kind": "FunctionDeclaration",
        "name": "visitEachChild",
        "signature": "visitEachChild: {
    <T extends Node>(node: T, visitor: Visitor, context: TransformationContext): T;
    <T extends Node>(
        node: T,
        visitor: Visitor,
        context: TransformationContext,
        nodesVisitor?: {
            <T extends Node>(
                nodes: NodeArray<T>,
                visitor: Visitor,
                test?: (node: Node) => boolean,
                start?: number,
                count?: number
            ): NodeArray<T>;
            <T extends Node>(
                nodes: NodeArray<T>,
                visitor: Visitor,
                test?: (node: Node) => boolean,
                start?: number,
                count?: number
            ): NodeArray<T>;
        },
        tokenVisitor?: Visitor
    ): T;
};",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4749,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4749",
        },
        "type": "{ <T extends Node>(node: T, visitor: Visitor, context: TransformationContext): T; <T extends Node>(node: T, visitor: Visitor, context: TransformationContext, nodesVisitor?: { <T extends Node>(nodes: NodeArray<T>, visitor: Visitor, test?: (node: Node) => boolean, start?: number, count?: number): NodeArray<T>; <T extends Node>(nodes: NodeArray<T>, visitor: Visitor, test?: (node: Node) => boolean, start?: number, count?: number): NodeArray<T>; }, tokenVisitor?: Visitor): T; }",
      },
      Object {
        "docs": Array [
          "/**
     * Resumes a suspended lexical environment and visits a function body, ending the lexical
     * environment and merging hoisted declarations upon completion.
     */",
          "/**
     * Resumes a suspended lexical environment and visits a concise body, ending the lexical
     * environment and merging hoisted declarations upon completion.
     */",
        ],
        "id": "visitFunctionBody",
        "kind": "FunctionDeclaration",
        "name": "visitFunctionBody",
        "signature": "visitFunctionBody: {
    (
        node: FunctionBody,
        visitor: Visitor,
        context: TransformationContext
    ): FunctionBody;
    (node: Block, visitor: Visitor, context: TransformationContext): Block;
    (
        node: ConciseBody,
        visitor: Visitor,
        context: TransformationContext
    ): ConciseBody;
};",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4731,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4731",
        },
        "type": "{ (node: FunctionBody, visitor: Visitor, context: TransformationContext): FunctionBody; (node: Block, visitor: Visitor, context: TransformationContext): Block; (node: ConciseBody, visitor: Visitor, context: TransformationContext): ConciseBody; }",
      },
      Object {
        "docs": Array [
          "/**
     * Starts a new lexical environment and visits a statement list, ending the lexical environment
     * and merging hoisted declarations upon completion.
     */",
        ],
        "id": "visitLexicalEnvironment",
        "kind": "FunctionDeclaration",
        "name": "visitLexicalEnvironment",
        "signature": "visitLexicalEnvironment: (
    statements: NodeArray<Statement>,
    visitor: Visitor,
    context: TransformationContext,
    start?: number,
    ensureUseStrict?: boolean,
    nodesVisitor?: NodesVisitor
) => NodeArray<Statement>;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4720,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4720",
        },
        "type": "(statements: NodeArray<Statement>, visitor: Visitor, context: TransformationContext, start?: number, ensureUseStrict?: boolean, nodesVisitor?: NodesVisitor) => NodeArray<Statement>",
      },
      Object {
        "docs": Array [
          "/**
     * Visits a Node using the supplied visitor, possibly returning a new Node in its place.
     *
     * @param node The Node to visit.
     * @param visitor The callback used to visit the Node.
     * @param test A callback to execute to verify the Node is valid.
     * @param lift An optional callback to execute to lift a NodeArray into a valid Node.
     */",
        ],
        "id": "visitNode",
        "kind": "FunctionDeclaration",
        "name": "visitNode",
        "signature": "visitNode: {
    <T extends Node>(
        node: T,
        visitor: Visitor | undefined,
        test?: (node: Node) => boolean,
        lift?: (node: NodeArray<Node>) => T
    ): T;
    <T extends Node>(
        node: T,
        visitor: Visitor,
        test?: (node: Node) => boolean,
        lift?: (node: NodeArray<Node>) => T
    ): T;
};",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4686,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4686",
        },
        "type": "{ <T extends Node>(node: T, visitor: Visitor | undefined, test?: (node: Node) => boolean, lift?: (node: NodeArray<Node>) => T): T; <T extends Node>(node: T, visitor: Visitor, test?: (node: Node) => boolean, lift?: (node: NodeArray<Node>) => T): T; }",
      },
      Object {
        "docs": Array [
          "/**
     * Visits a NodeArray using the supplied visitor, possibly returning a new NodeArray in its place.
     *
     * @param nodes The NodeArray to visit.
     * @param visitor The callback used to visit a Node.
     * @param test A node test to execute for each node.
     * @param start An optional value indicating the starting offset at which to start visiting.
     * @param count An optional value indicating the maximum number of nodes to visit.
     */",
        ],
        "id": "visitNodes",
        "kind": "FunctionDeclaration",
        "name": "visitNodes",
        "signature": "visitNodes: {
    <T extends Node>(
        nodes: NodeArray<T>,
        visitor: Visitor | undefined,
        test?: (node: Node) => boolean,
        start?: number,
        count?: number
    ): NodeArray<T>;
    <T extends Node>(
        nodes: NodeArray<T>,
        visitor: Visitor,
        test?: (node: Node) => boolean,
        start?: number,
        count?: number
    ): NodeArray<T>;
};",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4705,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4705",
        },
        "type": "{ <T extends Node>(nodes: NodeArray<T>, visitor: Visitor | undefined, test?: (node: Node) => boolean, start?: number, count?: number): NodeArray<T>; <T extends Node>(nodes: NodeArray<T>, visitor: Visitor, test?: (node: Node) => boolean, start?: number, count?: number): NodeArray<T>; }",
      },
      Object {
        "docs": Array [
          "/**
     * Starts a new lexical environment and visits a parameter list, suspending the lexical
     * environment upon completion.
     */",
        ],
        "id": "visitParameterList",
        "kind": "FunctionDeclaration",
        "name": "visitParameterList",
        "signature": "visitParameterList: {
    (
        nodes: NodeArray<ParameterDeclaration>,
        visitor: Visitor,
        context: TransformationContext,
        nodesVisitor?: NodesVisitor
    ): NodeArray<ParameterDeclaration>;
    (
        nodes: NodeArray<ParameterDeclaration>,
        visitor: Visitor,
        context: TransformationContext,
        nodesVisitor?: NodesVisitor
    ): NodeArray<ParameterDeclaration>;
};",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4725,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4725",
        },
        "type": "{ (nodes: NodeArray<ParameterDeclaration>, visitor: Visitor, context: TransformationContext, nodesVisitor?: NodesVisitor): NodeArray<ParameterDeclaration>; (nodes: NodeArray<ParameterDeclaration>, visitor: Visitor, context: TransformationContext, nodesVisitor?: NodesVisitor): NodeArray<ParameterDeclaration>; }",
      },
      Object {
        "docs": Array [],
        "id": "walkUpBindingElementsAndPatterns",
        "kind": "FunctionDeclaration",
        "name": "walkUpBindingElementsAndPatterns",
        "signature": "walkUpBindingElementsAndPatterns: (
    binding: BindingElement
) => VariableDeclaration | ParameterDeclaration;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4037,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4037",
        },
        "type": "(binding: BindingElement) => VariableDeclaration | ParameterDeclaration",
      },
    ],
    "interfaces": Array [
      Object {
        "docs": Array [],
        "id": "AmdDependency",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "AmdDependency.name",
              "isOptional": true,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "name",
              "signature": "name?: string;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1919,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1919",
              },
              "type": "string",
            },
            Object {
              "docs": Array [],
              "id": "AmdDependency.path",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "path",
              "signature": "path: string;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1918,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1918",
              },
              "type": "string",
            },
          ],
        },
        "name": "AmdDependency",
        "signature": "interface AmdDependency {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 1917,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1917",
        },
      },
      Object {
        "docs": Array [
          "/**
     * A set of one or more available refactoring actions, grouped under a parent refactoring.
     */",
        ],
        "id": "ApplicableRefactorInfo",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "ApplicableRefactorInfo.actions",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "actions",
              "signature": "actions: RefactorActionInfo[];",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5772,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5772",
              },
              "type": "RefactorActionInfo[]",
            },
            Object {
              "docs": Array [
                "/**
         * A description of this refactoring category to show to the user.
         * If the refactoring gets inlined (see below), this text will not be visible.
         */",
              ],
              "id": "ApplicableRefactorInfo.description",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "description",
              "signature": "description: string;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5763,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5763",
              },
              "type": "string",
            },
            Object {
              "docs": Array [
                "/**
         * Inlineable refactorings can have their actions hoisted out to the top level
         * of a context menu. Non-inlineanable refactorings should always be shown inside
         * their parent grouping.
         *
         * If not specified, this value is assumed to be 'true'
         */",
              ],
              "id": "ApplicableRefactorInfo.inlineable",
              "isOptional": true,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "inlineable",
              "signature": "inlineable?: boolean;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5771,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5771",
              },
              "type": "boolean",
            },
            Object {
              "docs": Array [
                "/**
         * The programmatic name of the refactoring
         */",
              ],
              "id": "ApplicableRefactorInfo.name",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "name",
              "signature": "name: string;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5758,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5758",
              },
              "type": "string",
            },
          ],
        },
        "name": "ApplicableRefactorInfo",
        "signature": "interface ApplicableRefactorInfo {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 5754,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5754",
        },
      },
      Object {
        "docs": Array [],
        "id": "ApplyCodeActionCommandResult",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "ApplyCodeActionCommandResult.successMessage",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "successMessage",
              "signature": "successMessage: string;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5639,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5639",
              },
              "type": "string",
            },
          ],
        },
        "name": "ApplyCodeActionCommandResult",
        "signature": "interface ApplyCodeActionCommandResult {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 5638,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5638",
        },
      },
      Object {
        "docs": Array [],
        "id": "ArrayBindingPattern",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "ArrayBindingPattern.elements",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "elements",
              "signature": "readonly elements: NodeArray<ArrayBindingElement>;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 775,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L775",
              },
              "type": "NodeArray<ArrayBindingElement>",
            },
            Object {
              "docs": Array [],
              "id": "ArrayBindingPattern.kind",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "kind",
              "signature": "readonly kind: SyntaxKind.ArrayBindingPattern;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 773,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L773",
              },
              "type": "number",
            },
            Object {
              "docs": Array [],
              "id": "ArrayBindingPattern.parent",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "parent",
              "signature": "readonly parent: VariableDeclaration | ParameterDeclaration | BindingElement;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 774,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L774",
              },
              "type": "ParameterDeclaration | VariableDeclaration | BindingElement",
            },
          ],
        },
        "name": "ArrayBindingPattern",
        "signature": "interface ArrayBindingPattern extends Node {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 772,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L772",
        },
      },
      Object {
        "docs": Array [],
        "id": "ArrayDestructuringAssignment",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "ArrayDestructuringAssignment.left",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "left",
              "signature": "readonly left: ArrayLiteralExpression;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1096,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1096",
              },
              "type": "ArrayLiteralExpression",
            },
          ],
        },
        "name": "ArrayDestructuringAssignment",
        "signature": "interface ArrayDestructuringAssignment extends AssignmentExpression<EqualsToken> {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 1095,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1095",
        },
      },
      Object {
        "docs": Array [],
        "id": "ArrayLiteralExpression",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "ArrayLiteralExpression.elements",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "elements",
              "signature": "readonly elements: NodeArray<Expression>;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1193,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1193",
              },
              "type": "NodeArray<Expression>",
            },
            Object {
              "docs": Array [],
              "id": "ArrayLiteralExpression.kind",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "kind",
              "signature": "readonly kind: SyntaxKind.ArrayLiteralExpression;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1192,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1192",
              },
              "type": "number",
            },
          ],
        },
        "name": "ArrayLiteralExpression",
        "signature": "interface ArrayLiteralExpression extends PrimaryExpression {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 1191,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1191",
        },
      },
      Object {
        "docs": Array [],
        "id": "ArrayTypeNode",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "ArrayTypeNode.elementType",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "elementType",
              "signature": "readonly elementType: TypeNode;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 892,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L892",
              },
              "type": "TypeNode",
            },
            Object {
              "docs": Array [],
              "id": "ArrayTypeNode.kind",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "kind",
              "signature": "readonly kind: SyntaxKind.ArrayType;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 891,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L891",
              },
              "type": "number",
            },
          ],
        },
        "name": "ArrayTypeNode",
        "signature": "interface ArrayTypeNode extends TypeNode {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 890,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L890",
        },
      },
      Object {
        "docs": Array [],
        "id": "ArrowFunction",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "ArrowFunction.body",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "body",
              "signature": "readonly body: ConciseBody;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1126,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1126",
              },
              "type": "ConciseBody",
            },
            Object {
              "docs": Array [],
              "id": "ArrowFunction.equalsGreaterThanToken",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "equalsGreaterThanToken",
              "signature": "readonly equalsGreaterThanToken: EqualsGreaterThanToken;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1125,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1125",
              },
              "type": "EqualsGreaterThanToken",
            },
            Object {
              "docs": Array [],
              "id": "ArrowFunction.kind",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "kind",
              "signature": "readonly kind: SyntaxKind.ArrowFunction;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1124,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1124",
              },
              "type": "number",
            },
            Object {
              "docs": Array [],
              "id": "ArrowFunction.name",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "name",
              "signature": "readonly name: never;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1127,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1127",
              },
              "type": "never",
            },
          ],
        },
        "name": "ArrowFunction",
        "signature": "interface ArrowFunction
    extends Expression,
        FunctionLikeDeclarationBase,
        JSDocContainer {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 1123,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1123",
        },
      },
      Object {
        "docs": Array [],
        "id": "AsExpression",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "AsExpression.expression",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "expression",
              "signature": "readonly expression: Expression;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1284,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1284",
              },
              "type": "Expression",
            },
            Object {
              "docs": Array [],
              "id": "AsExpression.kind",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "kind",
              "signature": "readonly kind: SyntaxKind.AsExpression;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1283,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1283",
              },
              "type": "number",
            },
            Object {
              "docs": Array [],
              "id": "AsExpression.type",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "type",
              "signature": "readonly type: TypeNode;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1285,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1285",
              },
              "type": "TypeNode",
            },
          ],
        },
        "name": "AsExpression",
        "signature": "interface AsExpression extends Expression {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 1282,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1282",
        },
      },
      Object {
        "docs": Array [],
        "id": "AssertsIdentifierTypePredicate",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "AssertsIdentifierTypePredicate.kind",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "kind",
              "signature": "kind: TypePredicateKind.AssertsIdentifier;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2337,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2337",
              },
              "type": "number",
            },
            Object {
              "docs": Array [],
              "id": "AssertsIdentifierTypePredicate.parameterIndex",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "parameterIndex",
              "signature": "parameterIndex: number;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2339,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2339",
              },
              "type": "number",
            },
            Object {
              "docs": Array [],
              "id": "AssertsIdentifierTypePredicate.parameterName",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "parameterName",
              "signature": "parameterName: string;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2338,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2338",
              },
              "type": "string",
            },
            Object {
              "docs": Array [],
              "id": "AssertsIdentifierTypePredicate.type",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "type",
              "signature": "type: Type | undefined;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2340,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2340",
              },
              "type": "Type",
            },
          ],
        },
        "name": "AssertsIdentifierTypePredicate",
        "signature": "interface AssertsIdentifierTypePredicate extends TypePredicateBase {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 2336,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2336",
        },
      },
      Object {
        "docs": Array [],
        "id": "AssertsThisTypePredicate",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "AssertsThisTypePredicate.kind",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "kind",
              "signature": "kind: TypePredicateKind.AssertsThis;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2331,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2331",
              },
              "type": "number",
            },
            Object {
              "docs": Array [],
              "id": "AssertsThisTypePredicate.parameterIndex",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "parameterIndex",
              "signature": "parameterIndex: undefined;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2333,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2333",
              },
              "type": "undefined",
            },
            Object {
              "docs": Array [],
              "id": "AssertsThisTypePredicate.parameterName",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "parameterName",
              "signature": "parameterName: undefined;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2332,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2332",
              },
              "type": "undefined",
            },
            Object {
              "docs": Array [],
              "id": "AssertsThisTypePredicate.type",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "type",
              "signature": "type: Type | undefined;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2334,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2334",
              },
              "type": "Type",
            },
          ],
        },
        "name": "AssertsThisTypePredicate",
        "signature": "interface AssertsThisTypePredicate extends TypePredicateBase {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 2330,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2330",
        },
      },
      Object {
        "docs": Array [],
        "id": "AssignmentExpression",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "AssignmentExpression.left",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "left",
              "signature": "readonly left: LeftHandSideExpression;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1089,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1089",
              },
              "type": "LeftHandSideExpression",
            },
            Object {
              "docs": Array [],
              "id": "AssignmentExpression.operatorToken",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "operatorToken",
              "signature": "readonly operatorToken: TOperator;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1090,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1090",
              },
              "type": "Token<AssignmentOperator>",
            },
          ],
        },
        "name": "AssignmentExpression",
        "signature": "interface AssignmentExpression<TOperator extends AssignmentOperatorToken>
    extends BinaryExpression {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 1088,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1088",
        },
      },
      Object {
        "docs": Array [],
        "id": "AwaitExpression",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "AwaitExpression.expression",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "expression",
              "signature": "readonly expression: UnaryExpression;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1047,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1047",
              },
              "type": "UnaryExpression",
            },
            Object {
              "docs": Array [],
              "id": "AwaitExpression.kind",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "kind",
              "signature": "readonly kind: SyntaxKind.AwaitExpression;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1046,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1046",
              },
              "type": "number",
            },
          ],
        },
        "name": "AwaitExpression",
        "signature": "interface AwaitExpression extends UnaryExpression {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 1045,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1045",
        },
      },
      Object {
        "docs": Array [],
        "id": "BigIntLiteral",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "BigIntLiteral.kind",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "kind",
              "signature": "readonly kind: SyntaxKind.BigIntLiteral;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1158,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1158",
              },
              "type": "number",
            },
          ],
        },
        "name": "BigIntLiteral",
        "signature": "interface BigIntLiteral extends LiteralExpression {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 1157,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1157",
        },
      },
      Object {
        "docs": Array [],
        "id": "BigIntLiteralType",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "BigIntLiteralType.value",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "value",
              "signature": "value: PseudoBigInt;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2527,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2527",
              },
              "type": "PseudoBigInt",
            },
          ],
        },
        "name": "BigIntLiteralType",
        "signature": "interface BigIntLiteralType extends LiteralType {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 2526,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2526",
        },
      },
      Object {
        "docs": Array [],
        "id": "BinaryExpression",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "BinaryExpression.kind",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "kind",
              "signature": "readonly kind: SyntaxKind.BinaryExpression;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1082,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1082",
              },
              "type": "number",
            },
            Object {
              "docs": Array [],
              "id": "BinaryExpression.left",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "left",
              "signature": "readonly left: Expression;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1083,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1083",
              },
              "type": "Expression",
            },
            Object {
              "docs": Array [],
              "id": "BinaryExpression.operatorToken",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "operatorToken",
              "signature": "readonly operatorToken: BinaryOperatorToken;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1084,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1084",
              },
              "type": "BinaryOperatorToken",
            },
            Object {
              "docs": Array [],
              "id": "BinaryExpression.right",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "right",
              "signature": "readonly right: Expression;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1085,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1085",
              },
              "type": "Expression",
            },
          ],
        },
        "name": "BinaryExpression",
        "signature": "interface BinaryExpression extends Expression, Declaration {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 1081,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1081",
        },
      },
      Object {
        "docs": Array [],
        "id": "BindingElement",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "BindingElement.dotDotDotToken",
              "isOptional": true,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "dotDotDotToken",
              "signature": "readonly dotDotDotToken?: DotDotDotToken;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 715,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L715",
              },
              "type": "DotDotDotToken",
            },
            Object {
              "docs": Array [],
              "id": "BindingElement.initializer",
              "isOptional": true,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "initializer",
              "signature": "readonly initializer?: Expression;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 717,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L717",
              },
              "type": "Expression",
            },
            Object {
              "docs": Array [],
              "id": "BindingElement.kind",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "kind",
              "signature": "readonly kind: SyntaxKind.BindingElement;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 712,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L712",
              },
              "type": "number",
            },
            Object {
              "docs": Array [],
              "id": "BindingElement.name",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "name",
              "signature": "readonly name: BindingName;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 716,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L716",
              },
              "type": "BindingName",
            },
            Object {
              "docs": Array [],
              "id": "BindingElement.parent",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "parent",
              "signature": "readonly parent: BindingPattern;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 713,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L713",
              },
              "type": "BindingPattern",
            },
            Object {
              "docs": Array [],
              "id": "BindingElement.propertyName",
              "isOptional": true,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "propertyName",
              "signature": "readonly propertyName?: PropertyName;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 714,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L714",
              },
              "type": "PropertyName",
            },
          ],
        },
        "name": "BindingElement",
        "signature": "interface BindingElement extends NamedDeclaration {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 711,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L711",
        },
      },
      Object {
        "docs": Array [],
        "id": "Block",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "Block.kind",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "kind",
              "signature": "readonly kind: SyntaxKind.Block;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1401,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1401",
              },
              "type": "number",
            },
            Object {
              "docs": Array [],
              "id": "Block.statements",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "statements",
              "signature": "readonly statements: NodeArray<Statement>;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1402,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1402",
              },
              "type": "NodeArray<Statement>",
            },
          ],
        },
        "name": "Block",
        "signature": "interface Block extends Statement {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 1400,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1400",
        },
      },
      Object {
        "docs": Array [],
        "id": "BreakStatement",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "BreakStatement.kind",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "kind",
              "signature": "readonly kind: SyntaxKind.BreakStatement;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1449,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1449",
              },
              "type": "number",
            },
            Object {
              "docs": Array [],
              "id": "BreakStatement.label",
              "isOptional": true,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "label",
              "signature": "readonly label?: Identifier;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1450,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1450",
              },
              "type": "Identifier",
            },
          ],
        },
        "name": "BreakStatement",
        "signature": "interface BreakStatement extends Statement {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 1448,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1448",
        },
      },
      Object {
        "docs": Array [
          "/**
     * Builder to manage the program state changes
     */",
        ],
        "id": "BuilderProgram",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [
            Object {
              "docs": Array [
                "/**
         * Emits the JavaScript and declaration files.
         * When targetSource file is specified, emits the files corresponding to that source file,
         * otherwise for the whole program.
         * In case of EmitAndSemanticDiagnosticsBuilderProgram, when targetSourceFile is specified,
         * it is assumed that that file is handled from affected file list. If targetSourceFile is not specified,
         * it will only emit all the affected files instead of whole program
         *
         * The first of writeFile if provided, writeFile of BuilderProgramHost if provided, writeFile of compiler host
         * in that order would be used to write the files
         */",
              ],
              "id": "BuilderProgram.emit",
              "kind": "InterfaceMethodDeclaration",
              "name": "emit",
              "signature": "emit: (
    targetSourceFile?: SourceFile,
    writeFile?: WriteFileCallback,
    cancellationToken?: CancellationToken,
    emitOnlyDtsFiles?: boolean,
    customTransformers?: CustomTransformers
) => EmitResult;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 4911,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4911",
              },
              "type": "(targetSourceFile?: SourceFile, writeFile?: WriteFileCallback, cancellationToken?: CancellationToken, emitOnlyDtsFiles?: boolean, customTransformers?: CustomTransformers) => EmitResult",
            },
            Object {
              "docs": Array [
                "/**
         * Get all the dependencies of the file
         */",
              ],
              "id": "BuilderProgram.getAllDependencies",
              "kind": "InterfaceMethodDeclaration",
              "name": "getAllDependencies",
              "signature": "getAllDependencies: (sourceFile: SourceFile) => readonly string[];",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 4890,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4890",
              },
              "type": "(sourceFile: SourceFile) => readonly string[]",
            },
            Object {
              "docs": Array [
                "/**
         * Get compiler options of the program
         */",
              ],
              "id": "BuilderProgram.getCompilerOptions",
              "kind": "InterfaceMethodDeclaration",
              "name": "getCompilerOptions",
              "signature": "getCompilerOptions: () => CompilerOptions;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 4858,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4858",
              },
              "type": "() => CompilerOptions",
            },
            Object {
              "docs": Array [
                "/**
         * Get the diagnostics from config file parsing
         */",
              ],
              "id": "BuilderProgram.getConfigFileParsingDiagnostics",
              "kind": "InterfaceMethodDeclaration",
              "name": "getConfigFileParsingDiagnostics",
              "signature": "getConfigFileParsingDiagnostics: () => readonly Diagnostic[];",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 4878,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4878",
              },
              "type": "() => readonly Diagnostic[]",
            },
            Object {
              "docs": Array [
                "/**
         * Get the current directory of the program
         */",
              ],
              "id": "BuilderProgram.getCurrentDirectory",
              "kind": "InterfaceMethodDeclaration",
              "name": "getCurrentDirectory",
              "signature": "getCurrentDirectory: () => string;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 4915,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4915",
              },
              "type": "() => string",
            },
            Object {
              "docs": Array [
                "/**
         * Get the declaration diagnostics, for all source files if source file is not supplied
         */",
              ],
              "id": "BuilderProgram.getDeclarationDiagnostics",
              "kind": "InterfaceMethodDeclaration",
              "name": "getDeclarationDiagnostics",
              "signature": "getDeclarationDiagnostics: (
    sourceFile?: SourceFile,
    cancellationToken?: CancellationToken
) => readonly DiagnosticWithLocation[];",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 4886,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4886",
              },
              "type": "(sourceFile?: SourceFile, cancellationToken?: CancellationToken) => readonly DiagnosticWithLocation[]",
            },
            Object {
              "docs": Array [
                "/**
         * Get the diagnostics that dont belong to any file
         */",
              ],
              "id": "BuilderProgram.getGlobalDiagnostics",
              "kind": "InterfaceMethodDeclaration",
              "name": "getGlobalDiagnostics",
              "signature": "getGlobalDiagnostics: (
    cancellationToken?: CancellationToken
) => readonly Diagnostic[];",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 4874,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4874",
              },
              "type": "(cancellationToken?: CancellationToken) => readonly Diagnostic[]",
            },
            Object {
              "docs": Array [
                "/**
         * Get the diagnostics for compiler options
         */",
              ],
              "id": "BuilderProgram.getOptionsDiagnostics",
              "kind": "InterfaceMethodDeclaration",
              "name": "getOptionsDiagnostics",
              "signature": "getOptionsDiagnostics: (
    cancellationToken?: CancellationToken
) => readonly Diagnostic[];",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 4870,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4870",
              },
              "type": "(cancellationToken?: CancellationToken) => readonly Diagnostic[]",
            },
            Object {
              "docs": Array [
                "/**
         * Returns current program
         */",
              ],
              "id": "BuilderProgram.getProgram",
              "kind": "InterfaceMethodDeclaration",
              "name": "getProgram",
              "signature": "getProgram: () => Program;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 4854,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4854",
              },
              "type": "() => Program",
            },
            Object {
              "docs": Array [
                "/**
         * Gets the semantic diagnostics from the program corresponding to this state of file (if provided) or whole program
         * The semantic diagnostics are cached and managed here
         * Note that it is assumed that when asked about semantic diagnostics through this API,
         * the file has been taken out of affected files so it is safe to use cache or get from program and cache the diagnostics
         * In case of SemanticDiagnosticsBuilderProgram if the source file is not provided,
         * it will iterate through all the affected files, to ensure that cache stays valid and yet provide a way to get all semantic diagnostics
         */",
              ],
              "id": "BuilderProgram.getSemanticDiagnostics",
              "kind": "InterfaceMethodDeclaration",
              "name": "getSemanticDiagnostics",
              "signature": "getSemanticDiagnostics: (
    sourceFile?: SourceFile,
    cancellationToken?: CancellationToken
) => readonly Diagnostic[];",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 4899,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4899",
              },
              "type": "(sourceFile?: SourceFile, cancellationToken?: CancellationToken) => readonly Diagnostic[]",
            },
            Object {
              "docs": Array [
                "/**
         * Get the source file in the program with file name
         */",
              ],
              "id": "BuilderProgram.getSourceFile",
              "kind": "InterfaceMethodDeclaration",
              "name": "getSourceFile",
              "signature": "getSourceFile: (fileName: string) => SourceFile | undefined;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 4862,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4862",
              },
              "type": "(fileName: string) => SourceFile | undefined",
            },
            Object {
              "docs": Array [
                "/**
         * Get a list of files in the program
         */",
              ],
              "id": "BuilderProgram.getSourceFiles",
              "kind": "InterfaceMethodDeclaration",
              "name": "getSourceFiles",
              "signature": "getSourceFiles: () => readonly SourceFile[];",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 4866,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4866",
              },
              "type": "() => readonly SourceFile[]",
            },
            Object {
              "docs": Array [
                "/**
         * Get the syntax diagnostics, for all source files if source file is not supplied
         */",
              ],
              "id": "BuilderProgram.getSyntacticDiagnostics",
              "kind": "InterfaceMethodDeclaration",
              "name": "getSyntacticDiagnostics",
              "signature": "getSyntacticDiagnostics: (
    sourceFile?: SourceFile,
    cancellationToken?: CancellationToken
) => readonly Diagnostic[];",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 4882,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4882",
              },
              "type": "(sourceFile?: SourceFile, cancellationToken?: CancellationToken) => readonly Diagnostic[]",
            },
          ],
          "properties": Array [],
        },
        "name": "BuilderProgram",
        "signature": "interface BuilderProgram {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4850,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4850",
        },
      },
      Object {
        "docs": Array [],
        "id": "BuilderProgramHost",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [
            Object {
              "docs": Array [
                "/**
         * return true if file names are treated with case sensitivity
         */",
              ],
              "id": "BuilderProgramHost.useCaseSensitiveFileNames",
              "kind": "InterfaceMethodDeclaration",
              "name": "useCaseSensitiveFileNames",
              "signature": "useCaseSensitiveFileNames: () => boolean;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 4836,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4836",
              },
              "type": "() => boolean",
            },
          ],
          "properties": Array [
            Object {
              "docs": Array [
                "/**
         * If provided this would be used this hash instead of actual file shape text for detecting changes
         */",
              ],
              "id": "BuilderProgramHost.createHash",
              "isOptional": true,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "createHash",
              "signature": "createHash?: (data: string) => string;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 4840,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4840",
              },
              "type": "(data: string) => string",
            },
            Object {
              "docs": Array [
                "/**
         * When emit or emitNextAffectedFile are called without writeFile,
         * this callback if present would be used to write files
         */",
              ],
              "id": "BuilderProgramHost.writeFile",
              "isOptional": true,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "writeFile",
              "signature": "writeFile?: WriteFileCallback;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 4845,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4845",
              },
              "type": "WriteFileCallback",
            },
          ],
        },
        "name": "BuilderProgramHost",
        "signature": "interface BuilderProgramHost {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4832,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4832",
        },
      },
      Object {
        "docs": Array [],
        "id": "BuildInvalidedProject",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [
            Object {
              "docs": Array [],
              "id": "BuildInvalidedProject.emit",
              "kind": "InterfaceMethodDeclaration",
              "name": "emit",
              "signature": "emit: (
    targetSourceFile?: SourceFile,
    writeFile?: WriteFileCallback,
    cancellationToken?: CancellationToken,
    emitOnlyDtsFiles?: boolean,
    customTransformers?: CustomTransformers
) => EmitResult | undefined;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5171,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5171",
              },
              "type": "(targetSourceFile?: SourceFile, writeFile?: WriteFileCallback, cancellationToken?: CancellationToken, emitOnlyDtsFiles?: boolean, customTransformers?: CustomTransformers) => EmitResult | undefined",
            },
            Object {
              "docs": Array [],
              "id": "BuildInvalidedProject.getAllDependencies",
              "kind": "InterfaceMethodDeclaration",
              "name": "getAllDependencies",
              "signature": "getAllDependencies: (sourceFile: SourceFile) => readonly string[];",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5168,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5168",
              },
              "type": "(sourceFile: SourceFile) => readonly string[]",
            },
            Object {
              "docs": Array [],
              "id": "BuildInvalidedProject.getBuilderProgram",
              "kind": "InterfaceMethodDeclaration",
              "name": "getBuilderProgram",
              "signature": "getBuilderProgram: () => T | undefined;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5160,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5160",
              },
              "type": "() => T | undefined",
            },
            Object {
              "docs": Array [],
              "id": "BuildInvalidedProject.getConfigFileParsingDiagnostics",
              "kind": "InterfaceMethodDeclaration",
              "name": "getConfigFileParsingDiagnostics",
              "signature": "getConfigFileParsingDiagnostics: () => readonly Diagnostic[];",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5166,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5166",
              },
              "type": "() => readonly Diagnostic[]",
            },
            Object {
              "docs": Array [],
              "id": "BuildInvalidedProject.getGlobalDiagnostics",
              "kind": "InterfaceMethodDeclaration",
              "name": "getGlobalDiagnostics",
              "signature": "getGlobalDiagnostics: (
    cancellationToken?: CancellationToken
) => readonly Diagnostic[];",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5165,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5165",
              },
              "type": "(cancellationToken?: CancellationToken) => readonly Diagnostic[]",
            },
            Object {
              "docs": Array [],
              "id": "BuildInvalidedProject.getOptionsDiagnostics",
              "kind": "InterfaceMethodDeclaration",
              "name": "getOptionsDiagnostics",
              "signature": "getOptionsDiagnostics: (
    cancellationToken?: CancellationToken
) => readonly Diagnostic[];",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5164,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5164",
              },
              "type": "(cancellationToken?: CancellationToken) => readonly Diagnostic[]",
            },
            Object {
              "docs": Array [],
              "id": "BuildInvalidedProject.getProgram",
              "kind": "InterfaceMethodDeclaration",
              "name": "getProgram",
              "signature": "getProgram: () => Program | undefined;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5161,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5161",
              },
              "type": "() => Program | undefined",
            },
            Object {
              "docs": Array [],
              "id": "BuildInvalidedProject.getSemanticDiagnostics",
              "kind": "InterfaceMethodDeclaration",
              "name": "getSemanticDiagnostics",
              "signature": "getSemanticDiagnostics: (
    sourceFile?: SourceFile,
    cancellationToken?: CancellationToken
) => readonly Diagnostic[];",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5169,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5169",
              },
              "type": "(sourceFile?: SourceFile, cancellationToken?: CancellationToken) => readonly Diagnostic[]",
            },
            Object {
              "docs": Array [],
              "id": "BuildInvalidedProject.getSemanticDiagnosticsOfNextAffectedFile",
              "kind": "InterfaceMethodDeclaration",
              "name": "getSemanticDiagnosticsOfNextAffectedFile",
              "signature": "getSemanticDiagnosticsOfNextAffectedFile: (
    cancellationToken?: CancellationToken,
    ignoreSourceFile?: (sourceFile: SourceFile) => boolean
) => AffectedFileResult<readonly Diagnostic[]>;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5170,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5170",
              },
              "type": "(cancellationToken?: CancellationToken, ignoreSourceFile?: (sourceFile: SourceFile) => boolean) => AffectedFileResult<readonly Diagnostic[]>",
            },
            Object {
              "docs": Array [],
              "id": "BuildInvalidedProject.getSourceFile",
              "kind": "InterfaceMethodDeclaration",
              "name": "getSourceFile",
              "signature": "getSourceFile: (fileName: string) => SourceFile | undefined;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5162,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5162",
              },
              "type": "(fileName: string) => SourceFile | undefined",
            },
            Object {
              "docs": Array [],
              "id": "BuildInvalidedProject.getSourceFiles",
              "kind": "InterfaceMethodDeclaration",
              "name": "getSourceFiles",
              "signature": "getSourceFiles: () => readonly SourceFile[];",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5163,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5163",
              },
              "type": "() => readonly SourceFile[]",
            },
            Object {
              "docs": Array [],
              "id": "BuildInvalidedProject.getSyntacticDiagnostics",
              "kind": "InterfaceMethodDeclaration",
              "name": "getSyntacticDiagnostics",
              "signature": "getSyntacticDiagnostics: (
    sourceFile?: SourceFile,
    cancellationToken?: CancellationToken
) => readonly Diagnostic[];",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5167,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5167",
              },
              "type": "(sourceFile?: SourceFile, cancellationToken?: CancellationToken) => readonly Diagnostic[]",
            },
          ],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "BuildInvalidedProject.kind",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "kind",
              "signature": "readonly kind: InvalidatedProjectKind.Build;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5159,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5159",
              },
              "type": "number",
            },
          ],
        },
        "name": "BuildInvalidedProject",
        "signature": "interface BuildInvalidedProject<T extends BuilderProgram>
    extends InvalidatedProjectBase {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 5158,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5158",
        },
      },
      Object {
        "docs": Array [],
        "id": "BuildOptions",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [
            Object {
              "docs": Array [],
              "id": "BuildOptions.6-index-signature",
              "kind": "InterfaceIndexSignatureDeclaration",
              "name": "index signature",
              "signature": "[option: string]: CompilerOptionsValue | undefined;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5101,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5101",
              },
            },
          ],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "BuildOptions.assumeChangesOnlyAffectDirectDependencies",
              "isOptional": true,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "assumeChangesOnlyAffectDirectDependencies",
              "signature": "assumeChangesOnlyAffectDirectDependencies?: boolean;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5099,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5099",
              },
              "type": "boolean",
            },
            Object {
              "docs": Array [],
              "id": "BuildOptions.dry",
              "isOptional": true,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "dry",
              "signature": "dry?: boolean;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5095,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5095",
              },
              "type": "boolean",
            },
            Object {
              "docs": Array [],
              "id": "BuildOptions.force",
              "isOptional": true,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "force",
              "signature": "force?: boolean;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5096,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5096",
              },
              "type": "boolean",
            },
            Object {
              "docs": Array [],
              "id": "BuildOptions.incremental",
              "isOptional": true,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "incremental",
              "signature": "incremental?: boolean;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5098,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5098",
              },
              "type": "boolean",
            },
            Object {
              "docs": Array [],
              "id": "BuildOptions.traceResolution",
              "isOptional": true,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "traceResolution",
              "signature": "traceResolution?: boolean;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5100,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5100",
              },
              "type": "boolean",
            },
            Object {
              "docs": Array [],
              "id": "BuildOptions.verbose",
              "isOptional": true,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "verbose",
              "signature": "verbose?: boolean;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5097,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5097",
              },
              "type": "boolean",
            },
          ],
        },
        "name": "BuildOptions",
        "signature": "interface BuildOptions {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 5094,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5094",
        },
      },
      Object {
        "docs": Array [],
        "id": "Bundle",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "Bundle.kind",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "kind",
              "signature": "readonly kind: SyntaxKind.Bundle;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1946,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1946",
              },
              "type": "number",
            },
            Object {
              "docs": Array [],
              "id": "Bundle.prepends",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "prepends",
              "signature": "readonly prepends: readonly (InputFiles | UnparsedSource)[];",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1947,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1947",
              },
              "type": "readonly (InputFiles | UnparsedSource)[]",
            },
            Object {
              "docs": Array [],
              "id": "Bundle.sourceFiles",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "sourceFiles",
              "signature": "readonly sourceFiles: readonly SourceFile[];",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1948,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1948",
              },
              "type": "readonly SourceFile[]",
            },
          ],
        },
        "name": "Bundle",
        "signature": "interface Bundle extends Node {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 1945,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1945",
        },
      },
      Object {
        "docs": Array [],
        "id": "CallChain",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [],
        },
        "name": "CallChain",
        "signature": "interface CallChain extends CallExpression {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 1254,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1254",
        },
      },
      Object {
        "docs": Array [],
        "id": "CallExpression",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "CallExpression.arguments",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "arguments",
              "signature": "readonly arguments: NodeArray<Expression>;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1252,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1252",
              },
              "type": "NodeArray<Expression>",
            },
            Object {
              "docs": Array [],
              "id": "CallExpression.expression",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "expression",
              "signature": "readonly expression: LeftHandSideExpression;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1249,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1249",
              },
              "type": "LeftHandSideExpression",
            },
            Object {
              "docs": Array [],
              "id": "CallExpression.kind",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "kind",
              "signature": "readonly kind: SyntaxKind.CallExpression;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1248,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1248",
              },
              "type": "number",
            },
            Object {
              "docs": Array [],
              "id": "CallExpression.questionDotToken",
              "isOptional": true,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "questionDotToken",
              "signature": "readonly questionDotToken?: QuestionDotToken;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1250,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1250",
              },
              "type": "QuestionDotToken",
            },
            Object {
              "docs": Array [],
              "id": "CallExpression.typeArguments",
              "isOptional": true,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "typeArguments",
              "signature": "readonly typeArguments?: NodeArray<TypeNode>;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1251,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1251",
              },
              "type": "NodeArray<TypeNode>",
            },
          ],
        },
        "name": "CallExpression",
        "signature": "interface CallExpression extends LeftHandSideExpression, Declaration {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 1247,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1247",
        },
      },
      Object {
        "docs": Array [],
        "id": "CallHierarchyIncomingCall",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "CallHierarchyIncomingCall.from",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "from",
              "signature": "from: CallHierarchyItem;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5698,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5698",
              },
              "type": "CallHierarchyItem",
            },
            Object {
              "docs": Array [],
              "id": "CallHierarchyIncomingCall.fromSpans",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "fromSpans",
              "signature": "fromSpans: TextSpan[];",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5699,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5699",
              },
              "type": "TextSpan[]",
            },
          ],
        },
        "name": "CallHierarchyIncomingCall",
        "signature": "interface CallHierarchyIncomingCall {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 5697,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5697",
        },
      },
      Object {
        "docs": Array [],
        "id": "CallHierarchyItem",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "CallHierarchyItem.containerName",
              "isOptional": true,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "containerName",
              "signature": "containerName?: string;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5695,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5695",
              },
              "type": "string",
            },
            Object {
              "docs": Array [],
              "id": "CallHierarchyItem.file",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "file",
              "signature": "file: string;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5692,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5692",
              },
              "type": "string",
            },
            Object {
              "docs": Array [],
              "id": "CallHierarchyItem.kind",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "kind",
              "signature": "kind: ScriptElementKind;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5690,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5690",
              },
              "type": "ScriptElementKind",
            },
            Object {
              "docs": Array [],
              "id": "CallHierarchyItem.kindModifiers",
              "isOptional": true,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "kindModifiers",
              "signature": "kindModifiers?: string;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5691,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5691",
              },
              "type": "string",
            },
            Object {
              "docs": Array [],
              "id": "CallHierarchyItem.name",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "name",
              "signature": "name: string;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5689,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5689",
              },
              "type": "string",
            },
            Object {
              "docs": Array [],
              "id": "CallHierarchyItem.selectionSpan",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "selectionSpan",
              "signature": "selectionSpan: TextSpan;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5694,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5694",
              },
              "type": "TextSpan",
            },
            Object {
              "docs": Array [],
              "id": "CallHierarchyItem.span",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "span",
              "signature": "span: TextSpan;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5693,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5693",
              },
              "type": "TextSpan",
            },
          ],
        },
        "name": "CallHierarchyItem",
        "signature": "interface CallHierarchyItem {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 5688,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5688",
        },
      },
      Object {
        "docs": Array [],
        "id": "CallHierarchyOutgoingCall",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "CallHierarchyOutgoingCall.fromSpans",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "fromSpans",
              "signature": "fromSpans: TextSpan[];",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5703,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5703",
              },
              "type": "TextSpan[]",
            },
            Object {
              "docs": Array [],
              "id": "CallHierarchyOutgoingCall.to",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "to",
              "signature": "to: CallHierarchyItem;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5702,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5702",
              },
              "type": "CallHierarchyItem",
            },
          ],
        },
        "name": "CallHierarchyOutgoingCall",
        "signature": "interface CallHierarchyOutgoingCall {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 5701,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5701",
        },
      },
      Object {
        "docs": Array [],
        "id": "CallSignatureDeclaration",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "CallSignatureDeclaration.kind",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "kind",
              "signature": "readonly kind: SyntaxKind.CallSignature;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 683,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L683",
              },
              "type": "number",
            },
          ],
        },
        "name": "CallSignatureDeclaration",
        "signature": "interface CallSignatureDeclaration extends SignatureDeclarationBase, TypeElement {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 682,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L682",
        },
      },
      Object {
        "docs": Array [],
        "id": "CancellationToken",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [
            Object {
              "docs": Array [],
              "id": "CancellationToken.isCancellationRequested",
              "kind": "InterfaceMethodDeclaration",
              "name": "isCancellationRequested",
              "signature": "isCancellationRequested: () => boolean;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2046,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2046",
              },
              "type": "() => boolean",
            },
            Object {
              "docs": Array [
                "/** @throws OperationCanceledException if isCancellationRequested is true */",
              ],
              "id": "CancellationToken.throwIfCancellationRequested",
              "kind": "InterfaceMethodDeclaration",
              "name": "throwIfCancellationRequested",
              "signature": "throwIfCancellationRequested: () => void;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2048,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2048",
              },
              "type": "() => void",
            },
          ],
          "properties": Array [],
        },
        "name": "CancellationToken",
        "signature": "interface CancellationToken {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 2045,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2045",
        },
      },
      Object {
        "docs": Array [],
        "id": "CaseBlock",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "CaseBlock.clauses",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "clauses",
              "signature": "readonly clauses: NodeArray<CaseOrDefaultClause>;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1475,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1475",
              },
              "type": "NodeArray<CaseOrDefaultClause>",
            },
            Object {
              "docs": Array [],
              "id": "CaseBlock.kind",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "kind",
              "signature": "readonly kind: SyntaxKind.CaseBlock;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1473,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1473",
              },
              "type": "number",
            },
            Object {
              "docs": Array [],
              "id": "CaseBlock.parent",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "parent",
              "signature": "readonly parent: SwitchStatement;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1474,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1474",
              },
              "type": "SwitchStatement",
            },
          ],
        },
        "name": "CaseBlock",
        "signature": "interface CaseBlock extends Node {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 1472,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1472",
        },
      },
      Object {
        "docs": Array [],
        "id": "CaseClause",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "CaseClause.expression",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "expression",
              "signature": "readonly expression: Expression;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1480,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1480",
              },
              "type": "Expression",
            },
            Object {
              "docs": Array [],
              "id": "CaseClause.kind",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "kind",
              "signature": "readonly kind: SyntaxKind.CaseClause;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1478,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1478",
              },
              "type": "number",
            },
            Object {
              "docs": Array [],
              "id": "CaseClause.parent",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "parent",
              "signature": "readonly parent: CaseBlock;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1479,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1479",
              },
              "type": "CaseBlock",
            },
            Object {
              "docs": Array [],
              "id": "CaseClause.statements",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "statements",
              "signature": "readonly statements: NodeArray<Statement>;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1481,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1481",
              },
              "type": "NodeArray<Statement>",
            },
          ],
        },
        "name": "CaseClause",
        "signature": "interface CaseClause extends Node {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 1477,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1477",
        },
      },
      Object {
        "docs": Array [],
        "id": "CatchClause",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "CatchClause.block",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "block",
              "signature": "readonly block: Block;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1508,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1508",
              },
              "type": "Block",
            },
            Object {
              "docs": Array [],
              "id": "CatchClause.kind",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "kind",
              "signature": "readonly kind: SyntaxKind.CatchClause;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1505,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1505",
              },
              "type": "number",
            },
            Object {
              "docs": Array [],
              "id": "CatchClause.parent",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "parent",
              "signature": "readonly parent: TryStatement;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1506,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1506",
              },
              "type": "TryStatement",
            },
            Object {
              "docs": Array [],
              "id": "CatchClause.variableDeclaration",
              "isOptional": true,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "variableDeclaration",
              "signature": "readonly variableDeclaration?: VariableDeclaration;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1507,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1507",
              },
              "type": "VariableDeclaration",
            },
          ],
        },
        "name": "CatchClause",
        "signature": "interface CatchClause extends Node {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 1504,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1504",
        },
      },
      Object {
        "docs": Array [],
        "id": "CheckJsDirective",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "CheckJsDirective.enabled",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "enabled",
              "signature": "enabled: boolean;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1686,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1686",
              },
              "type": "boolean",
            },
          ],
        },
        "name": "CheckJsDirective",
        "signature": "interface CheckJsDirective extends TextRange {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 1685,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1685",
        },
      },
      Object {
        "docs": Array [],
        "id": "ClassDeclaration",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "ClassDeclaration.kind",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "kind",
              "signature": "readonly kind: SyntaxKind.ClassDeclaration;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1521,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1521",
              },
              "type": "number",
            },
            Object {
              "docs": Array [
                "/** May be undefined in \`export default class { ... }\`. */",
              ],
              "id": "ClassDeclaration.name",
              "isOptional": true,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "name",
              "signature": "readonly name?: Identifier;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1523,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1523",
              },
              "type": "Identifier",
            },
          ],
        },
        "name": "ClassDeclaration",
        "signature": "interface ClassDeclaration extends ClassLikeDeclarationBase, DeclarationStatement {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 1520,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1520",
        },
      },
      Object {
        "docs": Array [],
        "id": "ClassElement",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "ClassElement.name",
              "isOptional": true,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "name",
              "signature": "readonly name?: PropertyName;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1531,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1531",
              },
              "type": "PropertyName",
            },
          ],
        },
        "name": "ClassElement",
        "signature": "interface ClassElement extends NamedDeclaration {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 1529,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1529",
        },
      },
      Object {
        "docs": Array [],
        "id": "ClassExpression",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "ClassExpression.kind",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "kind",
              "signature": "readonly kind: SyntaxKind.ClassExpression;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1526,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1526",
              },
              "type": "number",
            },
          ],
        },
        "name": "ClassExpression",
        "signature": "interface ClassExpression extends ClassLikeDeclarationBase, PrimaryExpression {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 1525,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1525",
        },
      },
      Object {
        "docs": Array [],
        "id": "ClassificationInfo",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "ClassificationInfo.classification",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "classification",
              "signature": "classification: TokenClass;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 6148,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6148",
              },
              "type": "TokenClass",
            },
            Object {
              "docs": Array [],
              "id": "ClassificationInfo.length",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "length",
              "signature": "length: number;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 6147,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6147",
              },
              "type": "number",
            },
          ],
        },
        "name": "ClassificationInfo",
        "signature": "interface ClassificationInfo {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 6146,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6146",
        },
      },
      Object {
        "docs": Array [],
        "id": "ClassificationResult",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "ClassificationResult.entries",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "entries",
              "signature": "entries: ClassificationInfo[];",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 6144,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6144",
              },
              "type": "ClassificationInfo[]",
            },
            Object {
              "docs": Array [],
              "id": "ClassificationResult.finalLexState",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "finalLexState",
              "signature": "finalLexState: EndOfLineState;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 6143,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6143",
              },
              "type": "EndOfLineState",
            },
          ],
        },
        "name": "ClassificationResult",
        "signature": "interface ClassificationResult {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 6142,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6142",
        },
      },
      Object {
        "docs": Array [],
        "id": "Classifications",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "Classifications.endOfLineState",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "endOfLineState",
              "signature": "endOfLineState: EndOfLineState;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5643,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5643",
              },
              "type": "EndOfLineState",
            },
            Object {
              "docs": Array [],
              "id": "Classifications.spans",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "spans",
              "signature": "spans: number[];",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5642,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5642",
              },
              "type": "number[]",
            },
          ],
        },
        "name": "Classifications",
        "signature": "interface Classifications {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 5641,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5641",
        },
      },
      Object {
        "docs": Array [],
        "id": "ClassifiedSpan",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "ClassifiedSpan.classificationType",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "classificationType",
              "signature": "classificationType: ClassificationTypeNames;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5647,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5647",
              },
              "type": "ClassificationTypeNames",
            },
            Object {
              "docs": Array [],
              "id": "ClassifiedSpan.textSpan",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "textSpan",
              "signature": "textSpan: TextSpan;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5646,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5646",
              },
              "type": "TextSpan",
            },
          ],
        },
        "name": "ClassifiedSpan",
        "signature": "interface ClassifiedSpan {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 5645,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5645",
        },
      },
      Object {
        "docs": Array [],
        "id": "ClassifiedSpan2020",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "ClassifiedSpan2020.classificationType",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "classificationType",
              "signature": "classificationType: number;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5651,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5651",
              },
              "type": "number",
            },
            Object {
              "docs": Array [],
              "id": "ClassifiedSpan2020.textSpan",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "textSpan",
              "signature": "textSpan: TextSpan;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5650,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5650",
              },
              "type": "TextSpan",
            },
          ],
        },
        "name": "ClassifiedSpan2020",
        "signature": "interface ClassifiedSpan2020 {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 5649,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5649",
        },
      },
      Object {
        "docs": Array [],
        "id": "Classifier",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [
            Object {
              "docs": Array [
                "/**
         * Gives lexical classifications of tokens on a line without any syntactic context.
         * For instance, a token consisting of the text 'string' can be either an identifier
         * named 'string' or the keyword 'string', however, because this classifier is not aware,
         * it relies on certain heuristics to give acceptable results. For classifications where
         * speed trumps accuracy, this function is preferable; however, for true accuracy, the
         * syntactic classifier is ideal. In fact, in certain editing scenarios, combining the
         * lexical, syntactic, and semantic classifiers may issue the best user experience.
         *
         * @param text                      The text of a line to classify.
         * @param lexState                  The state of the lexical classifier at the end of the previous line.
         * @param syntacticClassifierAbsent Whether the client is *not* using a syntactic classifier.
         *                                  If there is no syntactic classifier (syntacticClassifierAbsent=true),
         *                                  certain heuristics may be used in its place; however, if there is a
         *                                  syntactic classifier (syntacticClassifierAbsent=false), certain
         *                                  classifications which may be incorrectly categorized will be given
         *                                  back as Identifiers in order to allow the syntactic classifier to
         *                                  subsume the classification.
         * @deprecated Use getLexicalClassifications instead.
         */",
              ],
              "id": "Classifier.getClassificationsForLine",
              "kind": "InterfaceMethodDeclaration",
              "name": "getClassificationsForLine",
              "signature": "getClassificationsForLine: (
    text: string,
    lexState: EndOfLineState,
    syntacticClassifierAbsent: boolean
) => ClassificationResult;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 6171,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6171",
              },
              "type": "(text: string, lexState: EndOfLineState, syntacticClassifierAbsent: boolean) => ClassificationResult",
            },
            Object {
              "docs": Array [],
              "id": "Classifier.getEncodedLexicalClassifications",
              "kind": "InterfaceMethodDeclaration",
              "name": "getEncodedLexicalClassifications",
              "signature": "getEncodedLexicalClassifications: (
    text: string,
    endOfLineState: EndOfLineState,
    syntacticClassifierAbsent: boolean
) => Classifications;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 6172,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6172",
              },
              "type": "(text: string, endOfLineState: EndOfLineState, syntacticClassifierAbsent: boolean) => Classifications",
            },
          ],
          "properties": Array [],
        },
        "name": "Classifier",
        "signature": "interface Classifier {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 6150,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6150",
        },
      },
      Object {
        "docs": Array [],
        "id": "ClassLikeDeclarationBase",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "ClassLikeDeclarationBase.heritageClauses",
              "isOptional": true,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "heritageClauses",
              "signature": "readonly heritageClauses?: NodeArray<HeritageClause>;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1517,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1517",
              },
              "type": "NodeArray<HeritageClause>",
            },
            Object {
              "docs": Array [],
              "id": "ClassLikeDeclarationBase.kind",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "kind",
              "signature": "readonly kind: SyntaxKind.ClassDeclaration | SyntaxKind.ClassExpression;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1514,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1514",
              },
              "type": "SyntaxKind.ClassExpression | SyntaxKind.ClassDeclaration",
            },
            Object {
              "docs": Array [],
              "id": "ClassLikeDeclarationBase.members",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "members",
              "signature": "readonly members: NodeArray<ClassElement>;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1518,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1518",
              },
              "type": "NodeArray<ClassElement>",
            },
            Object {
              "docs": Array [],
              "id": "ClassLikeDeclarationBase.name",
              "isOptional": true,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "name",
              "signature": "readonly name?: Identifier;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1515,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1515",
              },
              "type": "Identifier",
            },
            Object {
              "docs": Array [],
              "id": "ClassLikeDeclarationBase.typeParameters",
              "isOptional": true,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "typeParameters",
              "signature": "readonly typeParameters?: NodeArray<TypeParameterDeclaration>;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1516,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1516",
              },
              "type": "NodeArray<TypeParameterDeclaration>",
            },
          ],
        },
        "name": "ClassLikeDeclarationBase",
        "signature": "interface ClassLikeDeclarationBase extends NamedDeclaration, JSDocContainer {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 1513,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1513",
        },
      },
      Object {
        "docs": Array [],
        "id": "CodeAction",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [
                "/** Text changes to apply to each file as part of the code action */",
              ],
              "id": "CodeAction.changes",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "changes",
              "signature": "changes: FileTextChanges[];",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5727,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5727",
              },
              "type": "FileTextChanges[]",
            },
            Object {
              "docs": Array [
                "/**
         * If the user accepts the code fix, the editor should send the action back in a \`applyAction\` request.
         * This allows the language service to have side effects (e.g. installing dependencies) upon a code fix.
         */",
              ],
              "id": "CodeAction.commands",
              "isOptional": true,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "commands",
              "signature": "commands?: CodeActionCommand[];",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5732,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5732",
              },
              "type": "InstallPackageAction[]",
            },
            Object {
              "docs": Array [
                "/** Description of the code action to display in the UI of the editor */",
              ],
              "id": "CodeAction.description",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "description",
              "signature": "description: string;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5725,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5725",
              },
              "type": "string",
            },
          ],
        },
        "name": "CodeAction",
        "signature": "interface CodeAction {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 5723,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5723",
        },
      },
      Object {
        "docs": Array [],
        "id": "CodeFixAction",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "CodeFixAction.fixAllDescription",
              "isOptional": true,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "fixAllDescription",
              "signature": "fixAllDescription?: string;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5742,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5742",
              },
              "type": "string",
            },
            Object {
              "docs": Array [
                "/**
         * If present, one may call 'getCombinedCodeFix' with this fixId.
         * This may be omitted to indicate that the code fix can't be applied in a group.
         */",
              ],
              "id": "CodeFixAction.fixId",
              "isOptional": true,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "fixId",
              "signature": "fixId?: {};",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5741,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5741",
              },
              "type": "{}",
            },
            Object {
              "docs": Array [
                "/** Short name to identify the fix, for use by telemetry. */",
              ],
              "id": "CodeFixAction.fixName",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "fixName",
              "signature": "fixName: string;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5736,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5736",
              },
              "type": "string",
            },
          ],
        },
        "name": "CodeFixAction",
        "signature": "interface CodeFixAction extends CodeAction {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 5734,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5734",
        },
      },
      Object {
        "docs": Array [
          "/** Common write methods for ES6 Map/Set. */",
        ],
        "id": "Collection",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [
            Object {
              "docs": Array [],
              "id": "Collection.clear",
              "kind": "InterfaceMethodDeclaration",
              "name": "clear",
              "signature": "clear: () => void;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 43,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L43",
              },
              "type": "() => void",
            },
            Object {
              "docs": Array [],
              "id": "Collection.delete",
              "kind": "InterfaceMethodDeclaration",
              "name": "delete",
              "signature": "delete: (key: K) => boolean;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 42,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L42",
              },
              "type": "(key: K) => boolean",
            },
          ],
          "properties": Array [],
        },
        "name": "Collection",
        "signature": "interface Collection<K> extends ReadonlyCollection<K> {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 41,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L41",
        },
      },
      Object {
        "docs": Array [],
        "id": "CombinedCodeActions",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "CombinedCodeActions.changes",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "changes",
              "signature": "changes: readonly FileTextChanges[];",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5745,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5745",
              },
              "type": "readonly FileTextChanges[]",
            },
            Object {
              "docs": Array [],
              "id": "CombinedCodeActions.commands",
              "isOptional": true,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "commands",
              "signature": "commands?: readonly CodeActionCommand[];",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5746,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5746",
              },
              "type": "readonly InstallPackageAction[]",
            },
          ],
        },
        "name": "CombinedCodeActions",
        "signature": "interface CombinedCodeActions {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 5744,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5744",
        },
      },
      Object {
        "docs": Array [],
        "id": "CombinedCodeFixScope",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "CombinedCodeFixScope.fileName",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "fileName",
              "signature": "fileName: string;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5585,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5585",
              },
              "type": "string",
            },
            Object {
              "docs": Array [],
              "id": "CombinedCodeFixScope.type",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "type",
              "signature": "type: 'file';",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5584,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5584",
              },
              "type": "string",
            },
          ],
        },
        "name": "CombinedCodeFixScope",
        "signature": "interface CombinedCodeFixScope {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 5583,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5583",
        },
      },
      Object {
        "docs": Array [
          "/**
     * A list of comma-separated expressions. This node is only created by transformations.
     */",
        ],
        "id": "CommaListExpression",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "CommaListExpression.elements",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "elements",
              "signature": "readonly elements: NodeArray<Expression>;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1387,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1387",
              },
              "type": "NodeArray<Expression>",
            },
            Object {
              "docs": Array [],
              "id": "CommaListExpression.kind",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "kind",
              "signature": "readonly kind: SyntaxKind.CommaListExpression;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1386,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1386",
              },
              "type": "number",
            },
          ],
        },
        "name": "CommaListExpression",
        "signature": "interface CommaListExpression extends Expression {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 1385,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1385",
        },
      },
      Object {
        "docs": Array [],
        "id": "CommentRange",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "CommentRange.hasTrailingNewLine",
              "isOptional": true,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "hasTrailingNewLine",
              "signature": "hasTrailingNewLine?: boolean;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1690,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1690",
              },
              "type": "boolean",
            },
            Object {
              "docs": Array [],
              "id": "CommentRange.kind",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "kind",
              "signature": "kind: CommentKind;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1691,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1691",
              },
              "type": "CommentKind",
            },
          ],
        },
        "name": "CommentRange",
        "signature": "interface CommentRange extends TextRange {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 1689,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1689",
        },
      },
      Object {
        "docs": Array [],
        "id": "CompilerHost",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [
            Object {
              "docs": Array [],
              "id": "CompilerHost.createHash",
              "kind": "InterfaceMethodDeclaration",
              "name": "createHash",
              "signature": "createHash: (data: string) => string;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3086,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3086",
              },
              "type": "(data: string) => string",
            },
            Object {
              "docs": Array [],
              "id": "CompilerHost.getCancellationToken",
              "kind": "InterfaceMethodDeclaration",
              "name": "getCancellationToken",
              "signature": "getCancellationToken: () => CancellationToken;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3071,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3071",
              },
              "type": "() => CancellationToken",
            },
            Object {
              "docs": Array [],
              "id": "CompilerHost.getCanonicalFileName",
              "kind": "InterfaceMethodDeclaration",
              "name": "getCanonicalFileName",
              "signature": "getCanonicalFileName: (fileName: string) => string;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3076,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3076",
              },
              "type": "(fileName: string) => string",
            },
            Object {
              "docs": Array [],
              "id": "CompilerHost.getCurrentDirectory",
              "kind": "InterfaceMethodDeclaration",
              "name": "getCurrentDirectory",
              "signature": "getCurrentDirectory: () => string;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3075,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3075",
              },
              "type": "() => string",
            },
            Object {
              "docs": Array [],
              "id": "CompilerHost.getDefaultLibFileName",
              "kind": "InterfaceMethodDeclaration",
              "name": "getDefaultLibFileName",
              "signature": "getDefaultLibFileName: (options: CompilerOptions) => string;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3072,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3072",
              },
              "type": "(options: CompilerOptions) => string",
            },
            Object {
              "docs": Array [],
              "id": "CompilerHost.getDefaultLibLocation",
              "kind": "InterfaceMethodDeclaration",
              "name": "getDefaultLibLocation",
              "signature": "getDefaultLibLocation: () => string;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3073,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3073",
              },
              "type": "() => string",
            },
            Object {
              "docs": Array [],
              "id": "CompilerHost.getEnvironmentVariable",
              "kind": "InterfaceMethodDeclaration",
              "name": "getEnvironmentVariable",
              "signature": "getEnvironmentVariable: (name: string) => string | undefined;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3085,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3085",
              },
              "type": "(name: string) => string | undefined",
            },
            Object {
              "docs": Array [],
              "id": "CompilerHost.getNewLine",
              "kind": "InterfaceMethodDeclaration",
              "name": "getNewLine",
              "signature": "getNewLine: () => string;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3078,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3078",
              },
              "type": "() => string",
            },
            Object {
              "docs": Array [],
              "id": "CompilerHost.getParsedCommandLine",
              "kind": "InterfaceMethodDeclaration",
              "name": "getParsedCommandLine",
              "signature": "getParsedCommandLine: (fileName: string) => ParsedCommandLine | undefined;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3087,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3087",
              },
              "type": "(fileName: string) => ParsedCommandLine | undefined",
            },
            Object {
              "docs": Array [],
              "id": "CompilerHost.getSourceFile",
              "kind": "InterfaceMethodDeclaration",
              "name": "getSourceFile",
              "signature": "getSourceFile: (
    fileName: string,
    languageVersion: ScriptTarget,
    onError?: (message: string) => void,
    shouldCreateNewSourceFile?: boolean
) => SourceFile | undefined;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3069,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3069",
              },
              "type": "(fileName: string, languageVersion: ScriptTarget, onError?: (message: string) => void, shouldCreateNewSourceFile?: boolean) => SourceFile | undefined",
            },
            Object {
              "docs": Array [],
              "id": "CompilerHost.getSourceFileByPath",
              "kind": "InterfaceMethodDeclaration",
              "name": "getSourceFileByPath",
              "signature": "getSourceFileByPath: (
    fileName: string,
    path: Path,
    languageVersion: ScriptTarget,
    onError?: (message: string) => void,
    shouldCreateNewSourceFile?: boolean
) => SourceFile | undefined;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3070,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3070",
              },
              "type": "(fileName: string, path: Path, languageVersion: ScriptTarget, onError?: (message: string) => void, shouldCreateNewSourceFile?: boolean) => SourceFile | undefined",
            },
            Object {
              "docs": Array [],
              "id": "CompilerHost.readDirectory",
              "kind": "InterfaceMethodDeclaration",
              "name": "readDirectory",
              "signature": "readDirectory: (
    rootDir: string,
    extensions: readonly string[],
    excludes: readonly string[] | undefined,
    includes: readonly string[],
    depth?: number
) => string[];",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3079,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3079",
              },
              "type": "(rootDir: string, extensions: readonly string[], excludes: readonly string[] | undefined, includes: readonly string[], depth?: number) => string[]",
            },
            Object {
              "docs": Array [],
              "id": "CompilerHost.resolveModuleNames",
              "kind": "InterfaceMethodDeclaration",
              "name": "resolveModuleNames",
              "signature": "resolveModuleNames: (
    moduleNames: string[],
    containingFile: string,
    reusedNames: string[] | undefined,
    redirectedReference: ResolvedProjectReference | undefined,
    options: CompilerOptions
) => (ResolvedModule | undefined)[];",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3080,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3080",
              },
              "type": "(moduleNames: string[], containingFile: string, reusedNames: string[] | undefined, redirectedReference: ResolvedProjectReference | undefined, options: CompilerOptions) => (ResolvedModule | undefined)[]",
            },
            Object {
              "docs": Array [
                "/**
         * This method is a companion for 'resolveModuleNames' and is used to resolve 'types' references to actual type declaration files
         */",
              ],
              "id": "CompilerHost.resolveTypeReferenceDirectives",
              "kind": "InterfaceMethodDeclaration",
              "name": "resolveTypeReferenceDirectives",
              "signature": "resolveTypeReferenceDirectives: (
    typeReferenceDirectiveNames: string[],
    containingFile: string,
    redirectedReference: ResolvedProjectReference | undefined,
    options: CompilerOptions
) => (ResolvedTypeReferenceDirective | undefined)[];",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3084,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3084",
              },
              "type": "(typeReferenceDirectiveNames: string[], containingFile: string, redirectedReference: ResolvedProjectReference | undefined, options: CompilerOptions) => (ResolvedTypeReferenceDirective | undefined)[]",
            },
            Object {
              "docs": Array [],
              "id": "CompilerHost.useCaseSensitiveFileNames",
              "kind": "InterfaceMethodDeclaration",
              "name": "useCaseSensitiveFileNames",
              "signature": "useCaseSensitiveFileNames: () => boolean;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3077,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3077",
              },
              "type": "() => boolean",
            },
          ],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "CompilerHost.writeFile",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "writeFile",
              "signature": "writeFile: WriteFileCallback;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3074,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3074",
              },
              "type": "WriteFileCallback",
            },
          ],
        },
        "name": "CompilerHost",
        "signature": "interface CompilerHost extends ModuleResolutionHost {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 3068,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3068",
        },
      },
      Object {
        "docs": Array [],
        "id": "CompilerOptions",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [
            Object {
              "docs": Array [],
              "id": "CompilerOptions.88-index-signature",
              "kind": "InterfaceIndexSignatureDeclaration",
              "name": "index signature",
              "signature": "[option: string]: CompilerOptionsValue | TsConfigSourceFile | undefined;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2875,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2875",
              },
            },
          ],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "CompilerOptions.allowJs",
              "isOptional": true,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "allowJs",
              "signature": "allowJs?: boolean;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2786,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2786",
              },
              "type": "boolean",
            },
            Object {
              "docs": Array [],
              "id": "CompilerOptions.allowSyntheticDefaultImports",
              "isOptional": true,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "allowSyntheticDefaultImports",
              "signature": "allowSyntheticDefaultImports?: boolean;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2787,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2787",
              },
              "type": "boolean",
            },
            Object {
              "docs": Array [],
              "id": "CompilerOptions.allowUmdGlobalAccess",
              "isOptional": true,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "allowUmdGlobalAccess",
              "signature": "allowUmdGlobalAccess?: boolean;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2788,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2788",
              },
              "type": "boolean",
            },
            Object {
              "docs": Array [],
              "id": "CompilerOptions.allowUnreachableCode",
              "isOptional": true,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "allowUnreachableCode",
              "signature": "allowUnreachableCode?: boolean;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2789,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2789",
              },
              "type": "boolean",
            },
            Object {
              "docs": Array [],
              "id": "CompilerOptions.allowUnusedLabels",
              "isOptional": true,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "allowUnusedLabels",
              "signature": "allowUnusedLabels?: boolean;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2790,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2790",
              },
              "type": "boolean",
            },
            Object {
              "docs": Array [],
              "id": "CompilerOptions.alwaysStrict",
              "isOptional": true,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "alwaysStrict",
              "signature": "alwaysStrict?: boolean;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2791,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2791",
              },
              "type": "boolean",
            },
            Object {
              "docs": Array [],
              "id": "CompilerOptions.assumeChangesOnlyAffectDirectDependencies",
              "isOptional": true,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "assumeChangesOnlyAffectDirectDependencies",
              "signature": "assumeChangesOnlyAffectDirectDependencies?: boolean;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2834,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2834",
              },
              "type": "boolean",
            },
            Object {
              "docs": Array [],
              "id": "CompilerOptions.baseUrl",
              "isOptional": true,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "baseUrl",
              "signature": "baseUrl?: string;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2792,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2792",
              },
              "type": "string",
            },
            Object {
              "docs": Array [],
              "id": "CompilerOptions.charset",
              "isOptional": true,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "charset",
              "signature": "charset?: string;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2793,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2793",
              },
              "type": "string",
            },
            Object {
              "docs": Array [],
              "id": "CompilerOptions.checkJs",
              "isOptional": true,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "checkJs",
              "signature": "checkJs?: boolean;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2794,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2794",
              },
              "type": "boolean",
            },
            Object {
              "docs": Array [],
              "id": "CompilerOptions.composite",
              "isOptional": true,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "composite",
              "signature": "composite?: boolean;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2849,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2849",
              },
              "type": "boolean",
            },
            Object {
              "docs": Array [],
              "id": "CompilerOptions.declaration",
              "isOptional": true,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "declaration",
              "signature": "declaration?: boolean;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2795,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2795",
              },
              "type": "boolean",
            },
            Object {
              "docs": Array [],
              "id": "CompilerOptions.declarationDir",
              "isOptional": true,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "declarationDir",
              "signature": "declarationDir?: string;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2798,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2798",
              },
              "type": "string",
            },
            Object {
              "docs": Array [],
              "id": "CompilerOptions.declarationMap",
              "isOptional": true,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "declarationMap",
              "signature": "declarationMap?: boolean;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2796,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2796",
              },
              "type": "boolean",
            },
            Object {
              "docs": Array [],
              "id": "CompilerOptions.disableReferencedProjectLoad",
              "isOptional": true,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "disableReferencedProjectLoad",
              "signature": "disableReferencedProjectLoad?: boolean;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2802,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2802",
              },
              "type": "boolean",
            },
            Object {
              "docs": Array [],
              "id": "CompilerOptions.disableSizeLimit",
              "isOptional": true,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "disableSizeLimit",
              "signature": "disableSizeLimit?: boolean;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2799,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2799",
              },
              "type": "boolean",
            },
            Object {
              "docs": Array [],
              "id": "CompilerOptions.disableSolutionSearching",
              "isOptional": true,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "disableSolutionSearching",
              "signature": "disableSolutionSearching?: boolean;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2801,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2801",
              },
              "type": "boolean",
            },
            Object {
              "docs": Array [],
              "id": "CompilerOptions.disableSourceOfProjectReferenceRedirect",
              "isOptional": true,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "disableSourceOfProjectReferenceRedirect",
              "signature": "disableSourceOfProjectReferenceRedirect?: boolean;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2800,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2800",
              },
              "type": "boolean",
            },
            Object {
              "docs": Array [],
              "id": "CompilerOptions.downlevelIteration",
              "isOptional": true,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "downlevelIteration",
              "signature": "downlevelIteration?: boolean;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2803,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2803",
              },
              "type": "boolean",
            },
            Object {
              "docs": Array [],
              "id": "CompilerOptions.emitBOM",
              "isOptional": true,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "emitBOM",
              "signature": "emitBOM?: boolean;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2804,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2804",
              },
              "type": "boolean",
            },
            Object {
              "docs": Array [],
              "id": "CompilerOptions.emitDeclarationOnly",
              "isOptional": true,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "emitDeclarationOnly",
              "signature": "emitDeclarationOnly?: boolean;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2797,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2797",
              },
              "type": "boolean",
            },
            Object {
              "docs": Array [],
              "id": "CompilerOptions.emitDecoratorMetadata",
              "isOptional": true,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "emitDecoratorMetadata",
              "signature": "emitDecoratorMetadata?: boolean;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2805,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2805",
              },
              "type": "boolean",
            },
            Object {
              "docs": Array [],
              "id": "CompilerOptions.esModuleInterop",
              "isOptional": true,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "esModuleInterop",
              "signature": "esModuleInterop?: boolean;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2873,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2873",
              },
              "type": "boolean",
            },
            Object {
              "docs": Array [],
              "id": "CompilerOptions.experimentalDecorators",
              "isOptional": true,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "experimentalDecorators",
              "signature": "experimentalDecorators?: boolean;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2806,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2806",
              },
              "type": "boolean",
            },
            Object {
              "docs": Array [],
              "id": "CompilerOptions.forceConsistentCasingInFileNames",
              "isOptional": true,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "forceConsistentCasingInFileNames",
              "signature": "forceConsistentCasingInFileNames?: boolean;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2807,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2807",
              },
              "type": "boolean",
            },
            Object {
              "docs": Array [],
              "id": "CompilerOptions.importHelpers",
              "isOptional": true,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "importHelpers",
              "signature": "importHelpers?: boolean;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2808,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2808",
              },
              "type": "boolean",
            },
            Object {
              "docs": Array [],
              "id": "CompilerOptions.importsNotUsedAsValues",
              "isOptional": true,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "importsNotUsedAsValues",
              "signature": "importsNotUsedAsValues?: ImportsNotUsedAsValues;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2809,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2809",
              },
              "type": "ImportsNotUsedAsValues",
            },
            Object {
              "docs": Array [],
              "id": "CompilerOptions.incremental",
              "isOptional": true,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "incremental",
              "signature": "incremental?: boolean;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2850,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2850",
              },
              "type": "boolean",
            },
            Object {
              "docs": Array [],
              "id": "CompilerOptions.inlineSourceMap",
              "isOptional": true,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "inlineSourceMap",
              "signature": "inlineSourceMap?: boolean;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2810,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2810",
              },
              "type": "boolean",
            },
            Object {
              "docs": Array [],
              "id": "CompilerOptions.inlineSources",
              "isOptional": true,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "inlineSources",
              "signature": "inlineSources?: boolean;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2811,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2811",
              },
              "type": "boolean",
            },
            Object {
              "docs": Array [],
              "id": "CompilerOptions.isolatedModules",
              "isOptional": true,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "isolatedModules",
              "signature": "isolatedModules?: boolean;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2812,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2812",
              },
              "type": "boolean",
            },
            Object {
              "docs": Array [],
              "id": "CompilerOptions.jsx",
              "isOptional": true,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "jsx",
              "signature": "jsx?: JsxEmit;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2813,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2813",
              },
              "type": "JsxEmit",
            },
            Object {
              "docs": Array [],
              "id": "CompilerOptions.jsxFactory",
              "isOptional": true,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "jsxFactory",
              "signature": "jsxFactory?: string;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2846,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2846",
              },
              "type": "string",
            },
            Object {
              "docs": Array [],
              "id": "CompilerOptions.jsxFragmentFactory",
              "isOptional": true,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "jsxFragmentFactory",
              "signature": "jsxFragmentFactory?: string;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2847,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2847",
              },
              "type": "string",
            },
            Object {
              "docs": Array [],
              "id": "CompilerOptions.jsxImportSource",
              "isOptional": true,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "jsxImportSource",
              "signature": "jsxImportSource?: string;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2848,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2848",
              },
              "type": "string",
            },
            Object {
              "docs": Array [],
              "id": "CompilerOptions.keyofStringsOnly",
              "isOptional": true,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "keyofStringsOnly",
              "signature": "keyofStringsOnly?: boolean;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2814,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2814",
              },
              "type": "boolean",
            },
            Object {
              "docs": Array [],
              "id": "CompilerOptions.lib",
              "isOptional": true,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "lib",
              "signature": "lib?: string[];",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2815,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2815",
              },
              "type": "string[]",
            },
            Object {
              "docs": Array [],
              "id": "CompilerOptions.locale",
              "isOptional": true,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "locale",
              "signature": "locale?: string;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2816,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2816",
              },
              "type": "string",
            },
            Object {
              "docs": Array [],
              "id": "CompilerOptions.mapRoot",
              "isOptional": true,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "mapRoot",
              "signature": "mapRoot?: string;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2817,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2817",
              },
              "type": "string",
            },
            Object {
              "docs": Array [],
              "id": "CompilerOptions.maxNodeModuleJsDepth",
              "isOptional": true,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "maxNodeModuleJsDepth",
              "signature": "maxNodeModuleJsDepth?: number;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2818,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2818",
              },
              "type": "number",
            },
            Object {
              "docs": Array [],
              "id": "CompilerOptions.module",
              "isOptional": true,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "module",
              "signature": "module?: ModuleKind;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2819,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2819",
              },
              "type": "ModuleKind",
            },
            Object {
              "docs": Array [],
              "id": "CompilerOptions.moduleResolution",
              "isOptional": true,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "moduleResolution",
              "signature": "moduleResolution?: ModuleResolutionKind;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2820,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2820",
              },
              "type": "ModuleResolutionKind",
            },
            Object {
              "docs": Array [],
              "id": "CompilerOptions.newLine",
              "isOptional": true,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "newLine",
              "signature": "newLine?: NewLineKind;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2821,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2821",
              },
              "type": "NewLineKind",
            },
            Object {
              "docs": Array [],
              "id": "CompilerOptions.noEmit",
              "isOptional": true,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "noEmit",
              "signature": "noEmit?: boolean;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2822,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2822",
              },
              "type": "boolean",
            },
            Object {
              "docs": Array [],
              "id": "CompilerOptions.noEmitHelpers",
              "isOptional": true,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "noEmitHelpers",
              "signature": "noEmitHelpers?: boolean;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2823,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2823",
              },
              "type": "boolean",
            },
            Object {
              "docs": Array [],
              "id": "CompilerOptions.noEmitOnError",
              "isOptional": true,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "noEmitOnError",
              "signature": "noEmitOnError?: boolean;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2824,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2824",
              },
              "type": "boolean",
            },
            Object {
              "docs": Array [],
              "id": "CompilerOptions.noErrorTruncation",
              "isOptional": true,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "noErrorTruncation",
              "signature": "noErrorTruncation?: boolean;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2825,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2825",
              },
              "type": "boolean",
            },
            Object {
              "docs": Array [],
              "id": "CompilerOptions.noFallthroughCasesInSwitch",
              "isOptional": true,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "noFallthroughCasesInSwitch",
              "signature": "noFallthroughCasesInSwitch?: boolean;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2826,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2826",
              },
              "type": "boolean",
            },
            Object {
              "docs": Array [],
              "id": "CompilerOptions.noImplicitAny",
              "isOptional": true,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "noImplicitAny",
              "signature": "noImplicitAny?: boolean;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2827,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2827",
              },
              "type": "boolean",
            },
            Object {
              "docs": Array [],
              "id": "CompilerOptions.noImplicitReturns",
              "isOptional": true,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "noImplicitReturns",
              "signature": "noImplicitReturns?: boolean;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2828,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2828",
              },
              "type": "boolean",
            },
            Object {
              "docs": Array [],
              "id": "CompilerOptions.noImplicitThis",
              "isOptional": true,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "noImplicitThis",
              "signature": "noImplicitThis?: boolean;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2829,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2829",
              },
              "type": "boolean",
            },
            Object {
              "docs": Array [],
              "id": "CompilerOptions.noImplicitUseStrict",
              "isOptional": true,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "noImplicitUseStrict",
              "signature": "noImplicitUseStrict?: boolean;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2833,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2833",
              },
              "type": "boolean",
            },
            Object {
              "docs": Array [],
              "id": "CompilerOptions.noLib",
              "isOptional": true,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "noLib",
              "signature": "noLib?: boolean;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2835,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2835",
              },
              "type": "boolean",
            },
            Object {
              "docs": Array [],
              "id": "CompilerOptions.noResolve",
              "isOptional": true,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "noResolve",
              "signature": "noResolve?: boolean;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2836,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2836",
              },
              "type": "boolean",
            },
            Object {
              "docs": Array [],
              "id": "CompilerOptions.noStrictGenericChecks",
              "isOptional": true,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "noStrictGenericChecks",
              "signature": "noStrictGenericChecks?: boolean;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2830,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2830",
              },
              "type": "boolean",
            },
            Object {
              "docs": Array [],
              "id": "CompilerOptions.noUncheckedIndexedAccess",
              "isOptional": true,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "noUncheckedIndexedAccess",
              "signature": "noUncheckedIndexedAccess?: boolean;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2837,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2837",
              },
              "type": "boolean",
            },
            Object {
              "docs": Array [],
              "id": "CompilerOptions.noUnusedLocals",
              "isOptional": true,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "noUnusedLocals",
              "signature": "noUnusedLocals?: boolean;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2831,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2831",
              },
              "type": "boolean",
            },
            Object {
              "docs": Array [],
              "id": "CompilerOptions.noUnusedParameters",
              "isOptional": true,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "noUnusedParameters",
              "signature": "noUnusedParameters?: boolean;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2832,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2832",
              },
              "type": "boolean",
            },
            Object {
              "docs": Array [],
              "id": "CompilerOptions.out",
              "isOptional": true,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "out",
              "signature": "out?: string;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2838,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2838",
              },
              "type": "string",
            },
            Object {
              "docs": Array [],
              "id": "CompilerOptions.outDir",
              "isOptional": true,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "outDir",
              "signature": "outDir?: string;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2839,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2839",
              },
              "type": "string",
            },
            Object {
              "docs": Array [],
              "id": "CompilerOptions.outFile",
              "isOptional": true,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "outFile",
              "signature": "outFile?: string;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2840,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2840",
              },
              "type": "string",
            },
            Object {
              "docs": Array [],
              "id": "CompilerOptions.paths",
              "isOptional": true,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "paths",
              "signature": "paths?: MapLike<string[]>;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2841,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2841",
              },
              "type": "MapLike<string[]>",
            },
            Object {
              "docs": Array [],
              "id": "CompilerOptions.preserveConstEnums",
              "isOptional": true,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "preserveConstEnums",
              "signature": "preserveConstEnums?: boolean;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2842,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2842",
              },
              "type": "boolean",
            },
            Object {
              "docs": Array [],
              "id": "CompilerOptions.preserveSymlinks",
              "isOptional": true,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "preserveSymlinks",
              "signature": "preserveSymlinks?: boolean;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2843,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2843",
              },
              "type": "boolean",
            },
            Object {
              "docs": Array [],
              "id": "CompilerOptions.project",
              "isOptional": true,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "project",
              "signature": "project?: string;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2844,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2844",
              },
              "type": "string",
            },
            Object {
              "docs": Array [],
              "id": "CompilerOptions.reactNamespace",
              "isOptional": true,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "reactNamespace",
              "signature": "reactNamespace?: string;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2845,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2845",
              },
              "type": "string",
            },
            Object {
              "docs": Array [],
              "id": "CompilerOptions.removeComments",
              "isOptional": true,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "removeComments",
              "signature": "removeComments?: boolean;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2852,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2852",
              },
              "type": "boolean",
            },
            Object {
              "docs": Array [],
              "id": "CompilerOptions.resolveJsonModule",
              "isOptional": true,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "resolveJsonModule",
              "signature": "resolveJsonModule?: boolean;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2869,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2869",
              },
              "type": "boolean",
            },
            Object {
              "docs": Array [],
              "id": "CompilerOptions.rootDir",
              "isOptional": true,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "rootDir",
              "signature": "rootDir?: string;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2853,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2853",
              },
              "type": "string",
            },
            Object {
              "docs": Array [],
              "id": "CompilerOptions.rootDirs",
              "isOptional": true,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "rootDirs",
              "signature": "rootDirs?: string[];",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2854,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2854",
              },
              "type": "string[]",
            },
            Object {
              "docs": Array [],
              "id": "CompilerOptions.skipDefaultLibCheck",
              "isOptional": true,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "skipDefaultLibCheck",
              "signature": "skipDefaultLibCheck?: boolean;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2856,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2856",
              },
              "type": "boolean",
            },
            Object {
              "docs": Array [],
              "id": "CompilerOptions.skipLibCheck",
              "isOptional": true,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "skipLibCheck",
              "signature": "skipLibCheck?: boolean;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2855,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2855",
              },
              "type": "boolean",
            },
            Object {
              "docs": Array [],
              "id": "CompilerOptions.sourceMap",
              "isOptional": true,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "sourceMap",
              "signature": "sourceMap?: boolean;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2857,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2857",
              },
              "type": "boolean",
            },
            Object {
              "docs": Array [],
              "id": "CompilerOptions.sourceRoot",
              "isOptional": true,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "sourceRoot",
              "signature": "sourceRoot?: string;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2858,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2858",
              },
              "type": "string",
            },
            Object {
              "docs": Array [],
              "id": "CompilerOptions.strict",
              "isOptional": true,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "strict",
              "signature": "strict?: boolean;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2859,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2859",
              },
              "type": "boolean",
            },
            Object {
              "docs": Array [],
              "id": "CompilerOptions.strictBindCallApply",
              "isOptional": true,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "strictBindCallApply",
              "signature": "strictBindCallApply?: boolean;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2861,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2861",
              },
              "type": "boolean",
            },
            Object {
              "docs": Array [],
              "id": "CompilerOptions.strictFunctionTypes",
              "isOptional": true,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "strictFunctionTypes",
              "signature": "strictFunctionTypes?: boolean;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2860,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2860",
              },
              "type": "boolean",
            },
            Object {
              "docs": Array [],
              "id": "CompilerOptions.strictNullChecks",
              "isOptional": true,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "strictNullChecks",
              "signature": "strictNullChecks?: boolean;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2862,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2862",
              },
              "type": "boolean",
            },
            Object {
              "docs": Array [],
              "id": "CompilerOptions.strictPropertyInitialization",
              "isOptional": true,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "strictPropertyInitialization",
              "signature": "strictPropertyInitialization?: boolean;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2863,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2863",
              },
              "type": "boolean",
            },
            Object {
              "docs": Array [],
              "id": "CompilerOptions.stripInternal",
              "isOptional": true,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "stripInternal",
              "signature": "stripInternal?: boolean;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2864,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2864",
              },
              "type": "boolean",
            },
            Object {
              "docs": Array [],
              "id": "CompilerOptions.suppressExcessPropertyErrors",
              "isOptional": true,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "suppressExcessPropertyErrors",
              "signature": "suppressExcessPropertyErrors?: boolean;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2865,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2865",
              },
              "type": "boolean",
            },
            Object {
              "docs": Array [],
              "id": "CompilerOptions.suppressImplicitAnyIndexErrors",
              "isOptional": true,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "suppressImplicitAnyIndexErrors",
              "signature": "suppressImplicitAnyIndexErrors?: boolean;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2866,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2866",
              },
              "type": "boolean",
            },
            Object {
              "docs": Array [],
              "id": "CompilerOptions.target",
              "isOptional": true,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "target",
              "signature": "target?: ScriptTarget;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2867,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2867",
              },
              "type": "ScriptTarget",
            },
            Object {
              "docs": Array [],
              "id": "CompilerOptions.traceResolution",
              "isOptional": true,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "traceResolution",
              "signature": "traceResolution?: boolean;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2868,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2868",
              },
              "type": "boolean",
            },
            Object {
              "docs": Array [],
              "id": "CompilerOptions.tsBuildInfoFile",
              "isOptional": true,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "tsBuildInfoFile",
              "signature": "tsBuildInfoFile?: string;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2851,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2851",
              },
              "type": "string",
            },
            Object {
              "docs": Array [
                "/** Paths used to compute primary types search locations */",
              ],
              "id": "CompilerOptions.typeRoots",
              "isOptional": true,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "typeRoots",
              "signature": "typeRoots?: string[];",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2872,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2872",
              },
              "type": "string[]",
            },
            Object {
              "docs": Array [],
              "id": "CompilerOptions.types",
              "isOptional": true,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "types",
              "signature": "types?: string[];",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2870,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2870",
              },
              "type": "string[]",
            },
            Object {
              "docs": Array [],
              "id": "CompilerOptions.useDefineForClassFields",
              "isOptional": true,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "useDefineForClassFields",
              "signature": "useDefineForClassFields?: boolean;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2874,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2874",
              },
              "type": "boolean",
            },
          ],
        },
        "name": "CompilerOptions",
        "signature": "interface CompilerOptions {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 2785,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2785",
        },
      },
      Object {
        "docs": Array [],
        "id": "CompletionEntry",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "CompletionEntry.hasAction",
              "isOptional": true,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "hasAction",
              "signature": "hasAction?: true;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 6073,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6073",
              },
              "type": "boolean",
            },
            Object {
              "docs": Array [],
              "id": "CompletionEntry.insertText",
              "isOptional": true,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "insertText",
              "signature": "insertText?: string;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 6066,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6066",
              },
              "type": "string",
            },
            Object {
              "docs": Array [],
              "id": "CompletionEntry.isFromUncheckedFile",
              "isOptional": true,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "isFromUncheckedFile",
              "signature": "isFromUncheckedFile?: true;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 6076,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6076",
              },
              "type": "boolean",
            },
            Object {
              "docs": Array [],
              "id": "CompletionEntry.isPackageJsonImport",
              "isOptional": true,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "isPackageJsonImport",
              "signature": "isPackageJsonImport?: true;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 6077,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6077",
              },
              "type": "boolean",
            },
            Object {
              "docs": Array [],
              "id": "CompletionEntry.isRecommended",
              "isOptional": true,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "isRecommended",
              "signature": "isRecommended?: true;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 6075,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6075",
              },
              "type": "boolean",
            },
            Object {
              "docs": Array [],
              "id": "CompletionEntry.kind",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "kind",
              "signature": "kind: ScriptElementKind;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 6063,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6063",
              },
              "type": "ScriptElementKind",
            },
            Object {
              "docs": Array [],
              "id": "CompletionEntry.kindModifiers",
              "isOptional": true,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "kindModifiers",
              "signature": "kindModifiers?: string;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 6064,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6064",
              },
              "type": "string",
            },
            Object {
              "docs": Array [],
              "id": "CompletionEntry.name",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "name",
              "signature": "name: string;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 6062,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6062",
              },
              "type": "string",
            },
            Object {
              "docs": Array [
                "/**
         * An optional span that indicates the text to be replaced by this completion item.
         * If present, this span should be used instead of the default one.
         * It will be set if the required span differs from the one generated by the default replacement behavior.
         */",
              ],
              "id": "CompletionEntry.replacementSpan",
              "isOptional": true,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "replacementSpan",
              "signature": "replacementSpan?: TextSpan;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 6072,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6072",
              },
              "type": "TextSpan",
            },
            Object {
              "docs": Array [],
              "id": "CompletionEntry.sortText",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "sortText",
              "signature": "sortText: string;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 6065,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6065",
              },
              "type": "string",
            },
            Object {
              "docs": Array [],
              "id": "CompletionEntry.source",
              "isOptional": true,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "source",
              "signature": "source?: string;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 6074,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6074",
              },
              "type": "string",
            },
          ],
        },
        "name": "CompletionEntry",
        "signature": "interface CompletionEntry {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 6061,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6061",
        },
      },
      Object {
        "docs": Array [],
        "id": "CompletionEntryDetails",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "CompletionEntryDetails.codeActions",
              "isOptional": true,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "codeActions",
              "signature": "codeActions?: CodeAction[];",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 6086,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6086",
              },
              "type": "CodeAction[]",
            },
            Object {
              "docs": Array [],
              "id": "CompletionEntryDetails.displayParts",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "displayParts",
              "signature": "displayParts: SymbolDisplayPart[];",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 6083,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6083",
              },
              "type": "SymbolDisplayPart[]",
            },
            Object {
              "docs": Array [],
              "id": "CompletionEntryDetails.documentation",
              "isOptional": true,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "documentation",
              "signature": "documentation?: SymbolDisplayPart[];",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 6084,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6084",
              },
              "type": "SymbolDisplayPart[]",
            },
            Object {
              "docs": Array [],
              "id": "CompletionEntryDetails.kind",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "kind",
              "signature": "kind: ScriptElementKind;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 6081,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6081",
              },
              "type": "ScriptElementKind",
            },
            Object {
              "docs": Array [],
              "id": "CompletionEntryDetails.kindModifiers",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "kindModifiers",
              "signature": "kindModifiers: string;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 6082,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6082",
              },
              "type": "string",
            },
            Object {
              "docs": Array [],
              "id": "CompletionEntryDetails.name",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "name",
              "signature": "name: string;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 6080,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6080",
              },
              "type": "string",
            },
            Object {
              "docs": Array [],
              "id": "CompletionEntryDetails.source",
              "isOptional": true,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "source",
              "signature": "source?: SymbolDisplayPart[];",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 6087,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6087",
              },
              "type": "SymbolDisplayPart[]",
            },
            Object {
              "docs": Array [],
              "id": "CompletionEntryDetails.tags",
              "isOptional": true,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "tags",
              "signature": "tags?: JSDocTagInfo[];",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 6085,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6085",
              },
              "type": "JSDocTagInfo[]",
            },
          ],
        },
        "name": "CompletionEntryDetails",
        "signature": "interface CompletionEntryDetails {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 6079,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6079",
        },
      },
      Object {
        "docs": Array [],
        "id": "CompletionInfo",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "CompletionInfo.entries",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "entries",
              "signature": "entries: CompletionEntry[];",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 6059,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6059",
              },
              "type": "CompletionEntry[]",
            },
            Object {
              "docs": Array [
                "/** Not true for all global completions. This will be true if the enclosing scope matches a few syntax kinds. See \`isSnippetScope\`. */",
              ],
              "id": "CompletionInfo.isGlobalCompletion",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "isGlobalCompletion",
              "signature": "isGlobalCompletion: boolean;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 6047,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6047",
              },
              "type": "boolean",
            },
            Object {
              "docs": Array [],
              "id": "CompletionInfo.isMemberCompletion",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "isMemberCompletion",
              "signature": "isMemberCompletion: boolean;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 6048,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6048",
              },
              "type": "boolean",
            },
            Object {
              "docs": Array [
                "/**
         * true when the current location also allows for a new identifier
         */",
              ],
              "id": "CompletionInfo.isNewIdentifierLocation",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "isNewIdentifierLocation",
              "signature": "isNewIdentifierLocation: boolean;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 6058,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6058",
              },
              "type": "boolean",
            },
            Object {
              "docs": Array [
                "/**
         * In the absence of \`CompletionEntry[\\"replacementSpan\\"], the editor may choose whether to use
         * this span or its default one. If \`CompletionEntry[\\"replacementSpan\\"]\` is defined, that span
         * must be used to commit that completion entry.
         */",
              ],
              "id": "CompletionInfo.optionalReplacementSpan",
              "isOptional": true,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "optionalReplacementSpan",
              "signature": "optionalReplacementSpan?: TextSpan;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 6054,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6054",
              },
              "type": "TextSpan",
            },
          ],
        },
        "name": "CompletionInfo",
        "signature": "interface CompletionInfo {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 6045,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6045",
        },
      },
      Object {
        "docs": Array [],
        "id": "ComputedPropertyName",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "ComputedPropertyName.expression",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "expression",
              "signature": "readonly expression: Expression;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 654,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L654",
              },
              "type": "Expression",
            },
            Object {
              "docs": Array [],
              "id": "ComputedPropertyName.kind",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "kind",
              "signature": "readonly kind: SyntaxKind.ComputedPropertyName;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 652,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L652",
              },
              "type": "number",
            },
            Object {
              "docs": Array [],
              "id": "ComputedPropertyName.parent",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "parent",
              "signature": "readonly parent: Declaration;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 653,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L653",
              },
              "type": "Declaration",
            },
          ],
        },
        "name": "ComputedPropertyName",
        "signature": "interface ComputedPropertyName extends Node {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 651,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L651",
        },
      },
      Object {
        "docs": Array [],
        "id": "ConditionalExpression",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "ConditionalExpression.colonToken",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "colonToken",
              "signature": "readonly colonToken: ColonToken;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1113,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1113",
              },
              "type": "ColonToken",
            },
            Object {
              "docs": Array [],
              "id": "ConditionalExpression.condition",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "condition",
              "signature": "readonly condition: Expression;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1110,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1110",
              },
              "type": "Expression",
            },
            Object {
              "docs": Array [],
              "id": "ConditionalExpression.kind",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "kind",
              "signature": "readonly kind: SyntaxKind.ConditionalExpression;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1109,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1109",
              },
              "type": "number",
            },
            Object {
              "docs": Array [],
              "id": "ConditionalExpression.questionToken",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "questionToken",
              "signature": "readonly questionToken: QuestionToken;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1111,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1111",
              },
              "type": "QuestionToken",
            },
            Object {
              "docs": Array [],
              "id": "ConditionalExpression.whenFalse",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "whenFalse",
              "signature": "readonly whenFalse: Expression;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1114,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1114",
              },
              "type": "Expression",
            },
            Object {
              "docs": Array [],
              "id": "ConditionalExpression.whenTrue",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "whenTrue",
              "signature": "readonly whenTrue: Expression;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1112,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1112",
              },
              "type": "Expression",
            },
          ],
        },
        "name": "ConditionalExpression",
        "signature": "interface ConditionalExpression extends Expression {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 1108,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1108",
        },
      },
      Object {
        "docs": Array [],
        "id": "ConditionalRoot",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "ConditionalRoot.aliasSymbol",
              "isOptional": true,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "aliasSymbol",
              "signature": "aliasSymbol?: Symbol;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2642,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2642",
              },
              "type": "Symbol",
            },
            Object {
              "docs": Array [],
              "id": "ConditionalRoot.aliasTypeArguments",
              "isOptional": true,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "aliasTypeArguments",
              "signature": "aliasTypeArguments?: Type[];",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2643,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2643",
              },
              "type": "Type[]",
            },
            Object {
              "docs": Array [],
              "id": "ConditionalRoot.checkType",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "checkType",
              "signature": "checkType: Type;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2636,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2636",
              },
              "type": "Type",
            },
            Object {
              "docs": Array [],
              "id": "ConditionalRoot.extendsType",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "extendsType",
              "signature": "extendsType: Type;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2637,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2637",
              },
              "type": "Type",
            },
            Object {
              "docs": Array [],
              "id": "ConditionalRoot.inferTypeParameters",
              "isOptional": true,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "inferTypeParameters",
              "signature": "inferTypeParameters?: TypeParameter[];",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2639,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2639",
              },
              "type": "TypeParameter[]",
            },
            Object {
              "docs": Array [],
              "id": "ConditionalRoot.instantiations",
              "isOptional": true,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "instantiations",
              "signature": "instantiations?: Map<Type>;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2641,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2641",
              },
              "type": "Map<Type>",
            },
            Object {
              "docs": Array [],
              "id": "ConditionalRoot.isDistributive",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "isDistributive",
              "signature": "isDistributive: boolean;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2638,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2638",
              },
              "type": "boolean",
            },
            Object {
              "docs": Array [],
              "id": "ConditionalRoot.node",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "node",
              "signature": "node: ConditionalTypeNode;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2635,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2635",
              },
              "type": "ConditionalTypeNode",
            },
            Object {
              "docs": Array [],
              "id": "ConditionalRoot.outerTypeParameters",
              "isOptional": true,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "outerTypeParameters",
              "signature": "outerTypeParameters?: TypeParameter[];",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2640,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2640",
              },
              "type": "TypeParameter[]",
            },
          ],
        },
        "name": "ConditionalRoot",
        "signature": "interface ConditionalRoot {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 2634,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2634",
        },
      },
      Object {
        "docs": Array [],
        "id": "ConditionalType",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "ConditionalType.checkType",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "checkType",
              "signature": "checkType: Type;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2647,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2647",
              },
              "type": "Type",
            },
            Object {
              "docs": Array [],
              "id": "ConditionalType.extendsType",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "extendsType",
              "signature": "extendsType: Type;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2648,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2648",
              },
              "type": "Type",
            },
            Object {
              "docs": Array [],
              "id": "ConditionalType.resolvedFalseType",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "resolvedFalseType",
              "signature": "resolvedFalseType: Type;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2650,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2650",
              },
              "type": "Type",
            },
            Object {
              "docs": Array [],
              "id": "ConditionalType.resolvedTrueType",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "resolvedTrueType",
              "signature": "resolvedTrueType: Type;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2649,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2649",
              },
              "type": "Type",
            },
            Object {
              "docs": Array [],
              "id": "ConditionalType.root",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "root",
              "signature": "root: ConditionalRoot;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2646,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2646",
              },
              "type": "ConditionalRoot",
            },
          ],
        },
        "name": "ConditionalType",
        "signature": "interface ConditionalType extends InstantiableType {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 2645,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2645",
        },
      },
      Object {
        "docs": Array [],
        "id": "ConditionalTypeNode",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "ConditionalTypeNode.checkType",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "checkType",
              "signature": "readonly checkType: TypeNode;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 924,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L924",
              },
              "type": "TypeNode",
            },
            Object {
              "docs": Array [],
              "id": "ConditionalTypeNode.extendsType",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "extendsType",
              "signature": "readonly extendsType: TypeNode;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 925,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L925",
              },
              "type": "TypeNode",
            },
            Object {
              "docs": Array [],
              "id": "ConditionalTypeNode.falseType",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "falseType",
              "signature": "readonly falseType: TypeNode;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 927,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L927",
              },
              "type": "TypeNode",
            },
            Object {
              "docs": Array [],
              "id": "ConditionalTypeNode.kind",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "kind",
              "signature": "readonly kind: SyntaxKind.ConditionalType;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 923,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L923",
              },
              "type": "number",
            },
            Object {
              "docs": Array [],
              "id": "ConditionalTypeNode.trueType",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "trueType",
              "signature": "readonly trueType: TypeNode;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 926,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L926",
              },
              "type": "TypeNode",
            },
          ],
        },
        "name": "ConditionalTypeNode",
        "signature": "interface ConditionalTypeNode extends TypeNode {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 922,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L922",
        },
      },
      Object {
        "docs": Array [
          "/**
     * Reports config file diagnostics
     */",
        ],
        "id": "ConfigFileDiagnosticsReporter",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [
                "/**
         * Reports unrecoverable error when parsing config file
         */",
              ],
              "id": "ConfigFileDiagnosticsReporter.onUnRecoverableConfigFileDiagnostic",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "onUnRecoverableConfigFileDiagnostic",
              "signature": "onUnRecoverableConfigFileDiagnostic: DiagnosticReporter;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 4558,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4558",
              },
              "type": "DiagnosticReporter",
            },
          ],
        },
        "name": "ConfigFileDiagnosticsReporter",
        "signature": "interface ConfigFileDiagnosticsReporter {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4554,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4554",
        },
      },
      Object {
        "docs": Array [],
        "id": "ConstructorDeclaration",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "ConstructorDeclaration.body",
              "isOptional": true,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "body",
              "signature": "readonly body?: FunctionBody;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 816,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L816",
              },
              "type": "Block",
            },
            Object {
              "docs": Array [],
              "id": "ConstructorDeclaration.kind",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "kind",
              "signature": "readonly kind: SyntaxKind.Constructor;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 814,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L814",
              },
              "type": "number",
            },
            Object {
              "docs": Array [],
              "id": "ConstructorDeclaration.parent",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "parent",
              "signature": "readonly parent: ClassLikeDeclaration;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 815,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L815",
              },
              "type": "ClassLikeDeclaration",
            },
          ],
        },
        "name": "ConstructorDeclaration",
        "signature": "interface ConstructorDeclaration
    extends FunctionLikeDeclarationBase,
        ClassElement,
        JSDocContainer {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 813,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L813",
        },
      },
      Object {
        "docs": Array [],
        "id": "ConstructorTypeNode",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "ConstructorTypeNode.kind",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "kind",
              "signature": "readonly kind: SyntaxKind.ConstructorType;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 865,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L865",
              },
              "type": "number",
            },
          ],
        },
        "name": "ConstructorTypeNode",
        "signature": "interface ConstructorTypeNode extends FunctionOrConstructorTypeNodeBase {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 864,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L864",
        },
      },
      Object {
        "docs": Array [],
        "id": "ConstructSignatureDeclaration",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "ConstructSignatureDeclaration.kind",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "kind",
              "signature": "readonly kind: SyntaxKind.ConstructSignature;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 686,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L686",
              },
              "type": "number",
            },
          ],
        },
        "name": "ConstructSignatureDeclaration",
        "signature": "interface ConstructSignatureDeclaration
    extends SignatureDeclarationBase,
        TypeElement {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 685,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L685",
        },
      },
      Object {
        "docs": Array [],
        "id": "ContinueStatement",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "ContinueStatement.kind",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "kind",
              "signature": "readonly kind: SyntaxKind.ContinueStatement;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1453,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1453",
              },
              "type": "number",
            },
            Object {
              "docs": Array [],
              "id": "ContinueStatement.label",
              "isOptional": true,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "label",
              "signature": "readonly label?: Identifier;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1454,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1454",
              },
              "type": "Identifier",
            },
          ],
        },
        "name": "ContinueStatement",
        "signature": "interface ContinueStatement extends Statement {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 1452,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1452",
        },
      },
      Object {
        "docs": Array [],
        "id": "CoreTransformationContext",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [
            Object {
              "docs": Array [
                "/** Ends a lexical environment, returning any declarations. */",
              ],
              "id": "CoreTransformationContext.endLexicalEnvironment",
              "kind": "InterfaceMethodDeclaration",
              "name": "endLexicalEnvironment",
              "signature": "endLexicalEnvironment: () => Statement[] | undefined;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3597,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3597",
              },
              "type": "() => Statement[] | undefined",
            },
            Object {
              "docs": Array [
                "/** Gets the compiler options supplied to the transformer. */",
              ],
              "id": "CoreTransformationContext.getCompilerOptions",
              "kind": "InterfaceMethodDeclaration",
              "name": "getCompilerOptions",
              "signature": "getCompilerOptions: () => CompilerOptions;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3589,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3589",
              },
              "type": "() => CompilerOptions",
            },
            Object {
              "docs": Array [
                "/** Hoists a function declaration to the containing scope. */",
              ],
              "id": "CoreTransformationContext.hoistFunctionDeclaration",
              "kind": "InterfaceMethodDeclaration",
              "name": "hoistFunctionDeclaration",
              "signature": "hoistFunctionDeclaration: (node: FunctionDeclaration) => void;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3599,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3599",
              },
              "type": "(node: FunctionDeclaration) => void",
            },
            Object {
              "docs": Array [
                "/** Hoists a variable declaration to the containing scope. */",
              ],
              "id": "CoreTransformationContext.hoistVariableDeclaration",
              "kind": "InterfaceMethodDeclaration",
              "name": "hoistVariableDeclaration",
              "signature": "hoistVariableDeclaration: (node: Identifier) => void;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3601,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3601",
              },
              "type": "(node: Identifier) => void",
            },
            Object {
              "docs": Array [
                "/** Resumes a suspended lexical environment, usually before visiting a function body. */",
              ],
              "id": "CoreTransformationContext.resumeLexicalEnvironment",
              "kind": "InterfaceMethodDeclaration",
              "name": "resumeLexicalEnvironment",
              "signature": "resumeLexicalEnvironment: () => void;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3595,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3595",
              },
              "type": "() => void",
            },
            Object {
              "docs": Array [
                "/** Starts a new lexical environment. */",
              ],
              "id": "CoreTransformationContext.startLexicalEnvironment",
              "kind": "InterfaceMethodDeclaration",
              "name": "startLexicalEnvironment",
              "signature": "startLexicalEnvironment: () => void;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3591,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3591",
              },
              "type": "() => void",
            },
            Object {
              "docs": Array [
                "/** Suspends the current lexical environment, usually after visiting a parameter list. */",
              ],
              "id": "CoreTransformationContext.suspendLexicalEnvironment",
              "kind": "InterfaceMethodDeclaration",
              "name": "suspendLexicalEnvironment",
              "signature": "suspendLexicalEnvironment: () => void;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3593,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3593",
              },
              "type": "() => void",
            },
          ],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "CoreTransformationContext.factory",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "factory",
              "signature": "readonly factory: NodeFactory;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3587,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3587",
              },
              "type": "NodeFactory",
            },
          ],
        },
        "name": "CoreTransformationContext",
        "signature": "interface CoreTransformationContext {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 3586,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3586",
        },
      },
      Object {
        "docs": Array [],
        "id": "CreateProgramOptions",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "CreateProgramOptions.configFileParsingDiagnostics",
              "isOptional": true,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "configFileParsingDiagnostics",
              "signature": "configFileParsingDiagnostics?: readonly Diagnostic[];",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2985,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2985",
              },
              "type": "readonly Diagnostic[]",
            },
            Object {
              "docs": Array [],
              "id": "CreateProgramOptions.host",
              "isOptional": true,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "host",
              "signature": "host?: CompilerHost;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2983,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2983",
              },
              "type": "CompilerHost",
            },
            Object {
              "docs": Array [],
              "id": "CreateProgramOptions.oldProgram",
              "isOptional": true,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "oldProgram",
              "signature": "oldProgram?: Program;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2984,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2984",
              },
              "type": "Program",
            },
            Object {
              "docs": Array [],
              "id": "CreateProgramOptions.options",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "options",
              "signature": "options: CompilerOptions;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2981,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2981",
              },
              "type": "CompilerOptions",
            },
            Object {
              "docs": Array [],
              "id": "CreateProgramOptions.projectReferences",
              "isOptional": true,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "projectReferences",
              "signature": "projectReferences?: readonly ProjectReference[];",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2982,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2982",
              },
              "type": "readonly ProjectReference[]",
            },
            Object {
              "docs": Array [],
              "id": "CreateProgramOptions.rootNames",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "rootNames",
              "signature": "rootNames: readonly string[];",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2980,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2980",
              },
              "type": "readonly string[]",
            },
          ],
        },
        "name": "CreateProgramOptions",
        "signature": "interface CreateProgramOptions {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 2979,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2979",
        },
      },
      Object {
        "docs": Array [],
        "id": "CustomTransformer",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [
            Object {
              "docs": Array [],
              "id": "CustomTransformer.transformBundle",
              "kind": "InterfaceMethodDeclaration",
              "name": "transformBundle",
              "signature": "transformBundle: (node: Bundle) => Bundle;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2107,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2107",
              },
              "type": "(node: Bundle) => Bundle",
            },
            Object {
              "docs": Array [],
              "id": "CustomTransformer.transformSourceFile",
              "kind": "InterfaceMethodDeclaration",
              "name": "transformSourceFile",
              "signature": "transformSourceFile: (node: SourceFile) => SourceFile;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2106,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2106",
              },
              "type": "(node: SourceFile) => SourceFile",
            },
          ],
          "properties": Array [],
        },
        "name": "CustomTransformer",
        "signature": "interface CustomTransformer {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 2105,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2105",
        },
      },
      Object {
        "docs": Array [],
        "id": "CustomTransformers",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [
                "/** Custom transformers to evaluate after built-in .js transformations. */",
              ],
              "id": "CustomTransformers.after",
              "isOptional": true,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "after",
              "signature": "after?: (TransformerFactory<SourceFile> | CustomTransformerFactory)[];",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2113,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2113",
              },
              "type": "(TransformerFactory<SourceFile> | CustomTransformerFactory)[]",
            },
            Object {
              "docs": Array [
                "/** Custom transformers to evaluate after built-in .d.ts transformations. */",
              ],
              "id": "CustomTransformers.afterDeclarations",
              "isOptional": true,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "afterDeclarations",
              "signature": "afterDeclarations?: (
    | TransformerFactory<Bundle | SourceFile>
    | CustomTransformerFactory
)[];",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2115,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2115",
              },
              "type": "(CustomTransformerFactory | TransformerFactory<SourceFile | Bundle>)[]",
            },
            Object {
              "docs": Array [
                "/** Custom transformers to evaluate before built-in .js transformations. */",
              ],
              "id": "CustomTransformers.before",
              "isOptional": true,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "before",
              "signature": "before?: (TransformerFactory<SourceFile> | CustomTransformerFactory)[];",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2111,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2111",
              },
              "type": "(TransformerFactory<SourceFile> | CustomTransformerFactory)[]",
            },
          ],
        },
        "name": "CustomTransformers",
        "signature": "interface CustomTransformers {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 2109,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2109",
        },
      },
      Object {
        "docs": Array [],
        "id": "DebuggerStatement",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "DebuggerStatement.kind",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "kind",
              "signature": "readonly kind: SyntaxKind.DebuggerStatement;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1393,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1393",
              },
              "type": "number",
            },
          ],
        },
        "name": "DebuggerStatement",
        "signature": "interface DebuggerStatement extends Statement {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 1392,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1392",
        },
      },
      Object {
        "docs": Array [],
        "id": "Declaration",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [],
        },
        "name": "Declaration",
        "signature": "interface Declaration extends Node {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 642,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L642",
        },
      },
      Object {
        "docs": Array [],
        "id": "DeclarationStatement",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "DeclarationStatement.name",
              "isOptional": true,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "name",
              "signature": "readonly name?: Identifier | StringLiteral | NumericLiteral;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 649,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L649",
              },
              "type": "Identifier | StringLiteral | NumericLiteral",
            },
          ],
        },
        "name": "DeclarationStatement",
        "signature": "interface DeclarationStatement extends NamedDeclaration, Statement {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 648,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L648",
        },
      },
      Object {
        "docs": Array [],
        "id": "Decorator",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "Decorator.expression",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "expression",
              "signature": "readonly expression: LeftHandSideExpression;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 663,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L663",
              },
              "type": "LeftHandSideExpression",
            },
            Object {
              "docs": Array [],
              "id": "Decorator.kind",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "kind",
              "signature": "readonly kind: SyntaxKind.Decorator;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 661,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L661",
              },
              "type": "number",
            },
            Object {
              "docs": Array [],
              "id": "Decorator.parent",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "parent",
              "signature": "readonly parent: NamedDeclaration;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 662,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L662",
              },
              "type": "NamedDeclaration",
            },
          ],
        },
        "name": "Decorator",
        "signature": "interface Decorator extends Node {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 660,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L660",
        },
      },
      Object {
        "docs": Array [],
        "id": "DefaultClause",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "DefaultClause.kind",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "kind",
              "signature": "readonly kind: SyntaxKind.DefaultClause;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1484,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1484",
              },
              "type": "number",
            },
            Object {
              "docs": Array [],
              "id": "DefaultClause.parent",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "parent",
              "signature": "readonly parent: CaseBlock;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1485,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1485",
              },
              "type": "CaseBlock",
            },
            Object {
              "docs": Array [],
              "id": "DefaultClause.statements",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "statements",
              "signature": "readonly statements: NodeArray<Statement>;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1486,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1486",
              },
              "type": "NodeArray<Statement>",
            },
          ],
        },
        "name": "DefaultClause",
        "signature": "interface DefaultClause extends Node {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 1483,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1483",
        },
      },
      Object {
        "docs": Array [],
        "id": "DeferredTypeReference",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [],
        },
        "name": "DeferredTypeReference",
        "signature": "interface DeferredTypeReference extends TypeReference {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 2584,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2584",
        },
      },
      Object {
        "docs": Array [],
        "id": "DefinitionInfo",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "DefinitionInfo.containerKind",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "containerKind",
              "signature": "containerKind: ScriptElementKind;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5934,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5934",
              },
              "type": "ScriptElementKind",
            },
            Object {
              "docs": Array [],
              "id": "DefinitionInfo.containerName",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "containerName",
              "signature": "containerName: string;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5935,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5935",
              },
              "type": "string",
            },
            Object {
              "docs": Array [],
              "id": "DefinitionInfo.kind",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "kind",
              "signature": "kind: ScriptElementKind;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5932,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5932",
              },
              "type": "ScriptElementKind",
            },
            Object {
              "docs": Array [],
              "id": "DefinitionInfo.name",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "name",
              "signature": "name: string;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5933,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5933",
              },
              "type": "string",
            },
          ],
        },
        "name": "DefinitionInfo",
        "signature": "interface DefinitionInfo extends DocumentSpan {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 5931,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5931",
        },
      },
      Object {
        "docs": Array [],
        "id": "DefinitionInfoAndBoundSpan",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "DefinitionInfoAndBoundSpan.definitions",
              "isOptional": true,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "definitions",
              "signature": "definitions?: readonly DefinitionInfo[];",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5938,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5938",
              },
              "type": "readonly DefinitionInfo[]",
            },
            Object {
              "docs": Array [],
              "id": "DefinitionInfoAndBoundSpan.textSpan",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "textSpan",
              "signature": "textSpan: TextSpan;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5939,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5939",
              },
              "type": "TextSpan",
            },
          ],
        },
        "name": "DefinitionInfoAndBoundSpan",
        "signature": "interface DefinitionInfoAndBoundSpan {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 5937,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5937",
        },
      },
      Object {
        "docs": Array [],
        "id": "DeleteExpression",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "DeleteExpression.expression",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "expression",
              "signature": "readonly expression: UnaryExpression;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1035,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1035",
              },
              "type": "UnaryExpression",
            },
            Object {
              "docs": Array [],
              "id": "DeleteExpression.kind",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "kind",
              "signature": "readonly kind: SyntaxKind.DeleteExpression;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1034,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1034",
              },
              "type": "number",
            },
          ],
        },
        "name": "DeleteExpression",
        "signature": "interface DeleteExpression extends UnaryExpression {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 1033,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1033",
        },
      },
      Object {
        "docs": Array [],
        "id": "Diagnostic",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "Diagnostic.relatedInformation",
              "isOptional": true,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "relatedInformation",
              "signature": "relatedInformation?: DiagnosticRelatedInformation[];",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2729,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2729",
              },
              "type": "DiagnosticRelatedInformation[]",
            },
            Object {
              "docs": Array [],
              "id": "Diagnostic.reportsDeprecated",
              "isOptional": true,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "reportsDeprecated",
              "signature": "reportsDeprecated?: {};",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2727,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2727",
              },
              "type": "{}",
            },
            Object {
              "docs": Array [
                "/** May store more in future. For now, this will simply be \`true\` to indicate when a diagnostic is an unused-identifier diagnostic. */",
              ],
              "id": "Diagnostic.reportsUnnecessary",
              "isOptional": true,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "reportsUnnecessary",
              "signature": "reportsUnnecessary?: {};",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2726,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2726",
              },
              "type": "{}",
            },
            Object {
              "docs": Array [],
              "id": "Diagnostic.source",
              "isOptional": true,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "source",
              "signature": "source?: string;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2728,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2728",
              },
              "type": "string",
            },
          ],
        },
        "name": "Diagnostic",
        "signature": "interface Diagnostic extends DiagnosticRelatedInformation {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 2724,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2724",
        },
      },
      Object {
        "docs": Array [],
        "id": "DiagnosticMessage",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "DiagnosticMessage.category",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "category",
              "signature": "category: DiagnosticCategory;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2706,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2706",
              },
              "type": "DiagnosticCategory",
            },
            Object {
              "docs": Array [],
              "id": "DiagnosticMessage.code",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "code",
              "signature": "code: number;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2707,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2707",
              },
              "type": "number",
            },
            Object {
              "docs": Array [],
              "id": "DiagnosticMessage.key",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "key",
              "signature": "key: string;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2705,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2705",
              },
              "type": "string",
            },
            Object {
              "docs": Array [],
              "id": "DiagnosticMessage.message",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "message",
              "signature": "message: string;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2708,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2708",
              },
              "type": "string",
            },
            Object {
              "docs": Array [],
              "id": "DiagnosticMessage.reportsDeprecated",
              "isOptional": true,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "reportsDeprecated",
              "signature": "reportsDeprecated?: {};",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2710,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2710",
              },
              "type": "{}",
            },
            Object {
              "docs": Array [],
              "id": "DiagnosticMessage.reportsUnnecessary",
              "isOptional": true,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "reportsUnnecessary",
              "signature": "reportsUnnecessary?: {};",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2709,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2709",
              },
              "type": "{}",
            },
          ],
        },
        "name": "DiagnosticMessage",
        "signature": "interface DiagnosticMessage {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 2704,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2704",
        },
      },
      Object {
        "docs": Array [
          "/**
     * A linked list of formatted diagnostic messages to be used as part of a multiline message.
     * It is built from the bottom up, leaving the head to be the \\"main\\" diagnostic.
     * While it seems that DiagnosticMessageChain is structurally similar to DiagnosticMessage,
     * the difference is that messages are all preformatted in DMC.
     */",
        ],
        "id": "DiagnosticMessageChain",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "DiagnosticMessageChain.category",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "category",
              "signature": "category: DiagnosticCategory;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2720,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2720",
              },
              "type": "DiagnosticCategory",
            },
            Object {
              "docs": Array [],
              "id": "DiagnosticMessageChain.code",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "code",
              "signature": "code: number;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2721,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2721",
              },
              "type": "number",
            },
            Object {
              "docs": Array [],
              "id": "DiagnosticMessageChain.messageText",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "messageText",
              "signature": "messageText: string;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2719,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2719",
              },
              "type": "string",
            },
            Object {
              "docs": Array [],
              "id": "DiagnosticMessageChain.next",
              "isOptional": true,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "next",
              "signature": "next?: DiagnosticMessageChain[];",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2722,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2722",
              },
              "type": "DiagnosticMessageChain[]",
            },
          ],
        },
        "name": "DiagnosticMessageChain",
        "signature": "interface DiagnosticMessageChain {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 2718,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2718",
        },
      },
      Object {
        "docs": Array [],
        "id": "DiagnosticRelatedInformation",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "DiagnosticRelatedInformation.category",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "category",
              "signature": "category: DiagnosticCategory;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2732,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2732",
              },
              "type": "DiagnosticCategory",
            },
            Object {
              "docs": Array [],
              "id": "DiagnosticRelatedInformation.code",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "code",
              "signature": "code: number;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2733,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2733",
              },
              "type": "number",
            },
            Object {
              "docs": Array [],
              "id": "DiagnosticRelatedInformation.file",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "file",
              "signature": "file: SourceFile | undefined;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2734,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2734",
              },
              "type": "SourceFile",
            },
            Object {
              "docs": Array [],
              "id": "DiagnosticRelatedInformation.length",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "length",
              "signature": "length: number | undefined;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2736,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2736",
              },
              "type": "number",
            },
            Object {
              "docs": Array [],
              "id": "DiagnosticRelatedInformation.messageText",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "messageText",
              "signature": "messageText: string | DiagnosticMessageChain;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2737,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2737",
              },
              "type": "string | DiagnosticMessageChain",
            },
            Object {
              "docs": Array [],
              "id": "DiagnosticRelatedInformation.start",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "start",
              "signature": "start: number | undefined;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2735,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2735",
              },
              "type": "number",
            },
          ],
        },
        "name": "DiagnosticRelatedInformation",
        "signature": "interface DiagnosticRelatedInformation {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 2731,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2731",
        },
      },
      Object {
        "docs": Array [],
        "id": "DiagnosticWithLocation",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "DiagnosticWithLocation.file",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "file",
              "signature": "file: SourceFile;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2740,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2740",
              },
              "type": "SourceFile",
            },
            Object {
              "docs": Array [],
              "id": "DiagnosticWithLocation.length",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "length",
              "signature": "length: number;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2742,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2742",
              },
              "type": "number",
            },
            Object {
              "docs": Array [],
              "id": "DiagnosticWithLocation.start",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "start",
              "signature": "start: number;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2741,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2741",
              },
              "type": "number",
            },
          ],
        },
        "name": "DiagnosticWithLocation",
        "signature": "interface DiagnosticWithLocation extends Diagnostic {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 2739,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2739",
        },
      },
      Object {
        "docs": Array [],
        "id": "DocumentHighlights",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "DocumentHighlights.fileName",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "fileName",
              "signature": "fileName: string;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 6321,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6321",
              },
              "type": "string",
            },
            Object {
              "docs": Array [],
              "id": "DocumentHighlights.highlightSpans",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "highlightSpans",
              "signature": "highlightSpans: HighlightSpan[];",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 6322,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6322",
              },
              "type": "HighlightSpan[]",
            },
          ],
        },
        "name": "DocumentHighlights",
        "signature": "interface DocumentHighlights {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 6320,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6320",
        },
      },
      Object {
        "docs": Array [
          "/**
     * The document registry represents a store of SourceFile objects that can be shared between
     * multiple LanguageService instances. A LanguageService instance holds on the SourceFile (AST)
     * of files in the context.
     * SourceFile objects account for most of the memory usage by the language service. Sharing
     * the same DocumentRegistry instance between different instances of LanguageService allow
     * for more efficient memory utilization since all projects will share at least the library
     * file (lib.d.ts).
     *
     * A more advanced use of the document registry is to serialize sourceFile objects to disk
     * and re-hydrate them when needed.
     *
     * To create a default DocumentRegistry, use createDocumentRegistry to create one, and pass it
     * to all subsequent createLanguageService calls.
     */",
        ],
        "id": "DocumentRegistry",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [
            Object {
              "docs": Array [
                "/**
         * Request a stored SourceFile with a given fileName and compilationSettings.
         * The first call to acquire will call createLanguageServiceSourceFile to generate
         * the SourceFile if was not found in the registry.
         *
         * @param fileName The name of the file requested
         * @param compilationSettings Some compilation settings like target affects the
         * shape of a the resulting SourceFile. This allows the DocumentRegistry to store
         * multiple copies of the same file for different compilation settings.
         * @param scriptSnapshot Text of the file. Only used if the file was not found
         * in the registry and a new one was created.
         * @param version Current version of the file. Only used if the file was not found
         * in the registry and a new one was created.
         */",
              ],
              "id": "DocumentRegistry.acquireDocument",
              "kind": "InterfaceMethodDeclaration",
              "name": "acquireDocument",
              "signature": "acquireDocument: (
    fileName: string,
    compilationSettings: CompilerOptions,
    scriptSnapshot: IScriptSnapshot,
    version: string,
    scriptKind?: ScriptKind
) => SourceFile;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 6356,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6356",
              },
              "type": "(fileName: string, compilationSettings: CompilerOptions, scriptSnapshot: IScriptSnapshot, version: string, scriptKind?: ScriptKind) => SourceFile",
            },
            Object {
              "docs": Array [],
              "id": "DocumentRegistry.acquireDocumentWithKey",
              "kind": "InterfaceMethodDeclaration",
              "name": "acquireDocumentWithKey",
              "signature": "acquireDocumentWithKey: (
    fileName: string,
    path: Path,
    compilationSettings: CompilerOptions,
    key: DocumentRegistryBucketKey,
    scriptSnapshot: IScriptSnapshot,
    version: string,
    scriptKind?: ScriptKind
) => SourceFile;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 6357,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6357",
              },
              "type": "(fileName: string, path: Path, compilationSettings: CompilerOptions, key: DocumentRegistryBucketKey, scriptSnapshot: IScriptSnapshot, version: string, scriptKind?: ScriptKind) => SourceFile",
            },
            Object {
              "docs": Array [],
              "id": "DocumentRegistry.getKeyForCompilationSettings",
              "kind": "InterfaceMethodDeclaration",
              "name": "getKeyForCompilationSettings",
              "signature": "getKeyForCompilationSettings: (
    settings: CompilerOptions
) => DocumentRegistryBucketKey;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 6372,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6372",
              },
              "type": "(settings: CompilerOptions) => DocumentRegistryBucketKey",
            },
            Object {
              "docs": Array [
                "/**
         * Informs the DocumentRegistry that a file is not needed any longer.
         *
         * Note: It is not allowed to call release on a SourceFile that was not acquired from
         * this registry originally.
         *
         * @param fileName The name of the file to be released
         * @param compilationSettings The compilation settings used to acquire the file
         */",
              ],
              "id": "DocumentRegistry.releaseDocument",
              "kind": "InterfaceMethodDeclaration",
              "name": "releaseDocument",
              "signature": "releaseDocument: (
    fileName: string,
    compilationSettings: CompilerOptions
) => void;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 6382,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6382",
              },
              "type": "(fileName: string, compilationSettings: CompilerOptions) => void",
            },
            Object {
              "docs": Array [],
              "id": "DocumentRegistry.releaseDocumentWithKey",
              "kind": "InterfaceMethodDeclaration",
              "name": "releaseDocumentWithKey",
              "signature": "releaseDocumentWithKey: (path: Path, key: DocumentRegistryBucketKey) => void;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 6383,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6383",
              },
              "type": "(path: Path, key: DocumentRegistryBucketKey) => void",
            },
            Object {
              "docs": Array [],
              "id": "DocumentRegistry.reportStats",
              "kind": "InterfaceMethodDeclaration",
              "name": "reportStats",
              "signature": "reportStats: () => string;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 6384,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6384",
              },
              "type": "() => string",
            },
            Object {
              "docs": Array [
                "/**
         * Request an updated version of an already existing SourceFile with a given fileName
         * and compilationSettings. The update will in-turn call updateLanguageServiceSourceFile
         * to get an updated SourceFile.
         *
         * @param fileName The name of the file requested
         * @param compilationSettings Some compilation settings like target affects the
         * shape of a the resulting SourceFile. This allows the DocumentRegistry to store
         * multiple copies of the same file for different compilation settings.
         * @param scriptSnapshot Text of the file.
         * @param version Current version of the file.
         */",
              ],
              "id": "DocumentRegistry.updateDocument",
              "kind": "InterfaceMethodDeclaration",
              "name": "updateDocument",
              "signature": "updateDocument: (
    fileName: string,
    compilationSettings: CompilerOptions,
    scriptSnapshot: IScriptSnapshot,
    version: string,
    scriptKind?: ScriptKind
) => SourceFile;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 6370,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6370",
              },
              "type": "(fileName: string, compilationSettings: CompilerOptions, scriptSnapshot: IScriptSnapshot, version: string, scriptKind?: ScriptKind) => SourceFile",
            },
            Object {
              "docs": Array [],
              "id": "DocumentRegistry.updateDocumentWithKey",
              "kind": "InterfaceMethodDeclaration",
              "name": "updateDocumentWithKey",
              "signature": "updateDocumentWithKey: (
    fileName: string,
    path: Path,
    compilationSettings: CompilerOptions,
    key: DocumentRegistryBucketKey,
    scriptSnapshot: IScriptSnapshot,
    version: string,
    scriptKind?: ScriptKind
) => SourceFile;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 6371,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6371",
              },
              "type": "(fileName: string, path: Path, compilationSettings: CompilerOptions, key: DocumentRegistryBucketKey, scriptSnapshot: IScriptSnapshot, version: string, scriptKind?: ScriptKind) => SourceFile",
            },
          ],
          "properties": Array [],
        },
        "name": "DocumentRegistry",
        "signature": "interface DocumentRegistry {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 6341,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6341",
        },
      },
      Object {
        "docs": Array [],
        "id": "DocumentSpan",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [
                "/**
         * If DocumentSpan.textSpan is the span for name of the declaration,
         * then this is the span for relevant declaration
         */",
              ],
              "id": "DocumentSpan.contextSpan",
              "isOptional": true,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "contextSpan",
              "signature": "contextSpan?: TextSpan;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5824,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5824",
              },
              "type": "TextSpan",
            },
            Object {
              "docs": Array [],
              "id": "DocumentSpan.fileName",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "fileName",
              "signature": "fileName: string;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5813,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5813",
              },
              "type": "string",
            },
            Object {
              "docs": Array [],
              "id": "DocumentSpan.originalContextSpan",
              "isOptional": true,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "originalContextSpan",
              "signature": "originalContextSpan?: TextSpan;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5825,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5825",
              },
              "type": "TextSpan",
            },
            Object {
              "docs": Array [],
              "id": "DocumentSpan.originalFileName",
              "isOptional": true,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "originalFileName",
              "signature": "originalFileName?: string;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5819,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5819",
              },
              "type": "string",
            },
            Object {
              "docs": Array [
                "/**
         * If the span represents a location that was remapped (e.g. via a .d.ts.map file),
         * then the original filename and span will be specified here
         */",
              ],
              "id": "DocumentSpan.originalTextSpan",
              "isOptional": true,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "originalTextSpan",
              "signature": "originalTextSpan?: TextSpan;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5818,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5818",
              },
              "type": "TextSpan",
            },
            Object {
              "docs": Array [],
              "id": "DocumentSpan.textSpan",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "textSpan",
              "signature": "textSpan: TextSpan;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5812,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5812",
              },
              "type": "TextSpan",
            },
          ],
        },
        "name": "DocumentSpan",
        "signature": "interface DocumentSpan {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 5811,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5811",
        },
      },
      Object {
        "docs": Array [],
        "id": "DoStatement",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "DoStatement.expression",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "expression",
              "signature": "readonly expression: Expression;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1423,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1423",
              },
              "type": "Expression",
            },
            Object {
              "docs": Array [],
              "id": "DoStatement.kind",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "kind",
              "signature": "readonly kind: SyntaxKind.DoStatement;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1422,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1422",
              },
              "type": "number",
            },
          ],
        },
        "name": "DoStatement",
        "signature": "interface DoStatement extends IterationStatement {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 1421,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1421",
        },
      },
      Object {
        "docs": Array [],
        "id": "EditorOptions",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "EditorOptions.BaseIndentSize",
              "isOptional": true,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "BaseIndentSize",
              "signature": "BaseIndentSize?: number;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5875,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5875",
              },
              "type": "number",
            },
            Object {
              "docs": Array [],
              "id": "EditorOptions.ConvertTabsToSpaces",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "ConvertTabsToSpaces",
              "signature": "ConvertTabsToSpaces: boolean;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5879,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5879",
              },
              "type": "boolean",
            },
            Object {
              "docs": Array [],
              "id": "EditorOptions.IndentSize",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "IndentSize",
              "signature": "IndentSize: number;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5876,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5876",
              },
              "type": "number",
            },
            Object {
              "docs": Array [],
              "id": "EditorOptions.IndentStyle",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "IndentStyle",
              "signature": "IndentStyle: IndentStyle;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5880,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5880",
              },
              "type": "IndentStyle",
            },
            Object {
              "docs": Array [],
              "id": "EditorOptions.NewLineCharacter",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "NewLineCharacter",
              "signature": "NewLineCharacter: string;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5878,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5878",
              },
              "type": "string",
            },
            Object {
              "docs": Array [],
              "id": "EditorOptions.TabSize",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "TabSize",
              "signature": "TabSize: number;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5877,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5877",
              },
              "type": "number",
            },
          ],
        },
        "name": "EditorOptions",
        "signature": "interface EditorOptions {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 5874,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5874",
        },
      },
      Object {
        "docs": Array [],
        "id": "EditorSettings",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "EditorSettings.baseIndentSize",
              "isOptional": true,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "baseIndentSize",
              "signature": "baseIndentSize?: number;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5883,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5883",
              },
              "type": "number",
            },
            Object {
              "docs": Array [],
              "id": "EditorSettings.convertTabsToSpaces",
              "isOptional": true,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "convertTabsToSpaces",
              "signature": "convertTabsToSpaces?: boolean;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5887,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5887",
              },
              "type": "boolean",
            },
            Object {
              "docs": Array [],
              "id": "EditorSettings.indentSize",
              "isOptional": true,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "indentSize",
              "signature": "indentSize?: number;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5884,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5884",
              },
              "type": "number",
            },
            Object {
              "docs": Array [],
              "id": "EditorSettings.indentStyle",
              "isOptional": true,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "indentStyle",
              "signature": "indentStyle?: IndentStyle;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5888,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5888",
              },
              "type": "IndentStyle",
            },
            Object {
              "docs": Array [],
              "id": "EditorSettings.newLineCharacter",
              "isOptional": true,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "newLineCharacter",
              "signature": "newLineCharacter?: string;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5886,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5886",
              },
              "type": "string",
            },
            Object {
              "docs": Array [],
              "id": "EditorSettings.tabSize",
              "isOptional": true,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "tabSize",
              "signature": "tabSize?: number;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5885,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5885",
              },
              "type": "number",
            },
            Object {
              "docs": Array [],
              "id": "EditorSettings.trimTrailingWhitespace",
              "isOptional": true,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "trimTrailingWhitespace",
              "signature": "trimTrailingWhitespace?: boolean;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5889,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5889",
              },
              "type": "boolean",
            },
          ],
        },
        "name": "EditorSettings",
        "signature": "interface EditorSettings {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 5882,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5882",
        },
      },
      Object {
        "docs": Array [],
        "id": "ElementAccessChain",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [],
        },
        "name": "ElementAccessChain",
        "signature": "interface ElementAccessChain extends ElementAccessExpression {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 1240,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1240",
        },
      },
      Object {
        "docs": Array [],
        "id": "ElementAccessExpression",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "ElementAccessExpression.argumentExpression",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "argumentExpression",
              "signature": "readonly argumentExpression: Expression;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1238,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1238",
              },
              "type": "Expression",
            },
            Object {
              "docs": Array [],
              "id": "ElementAccessExpression.expression",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "expression",
              "signature": "readonly expression: LeftHandSideExpression;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1236,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1236",
              },
              "type": "LeftHandSideExpression",
            },
            Object {
              "docs": Array [],
              "id": "ElementAccessExpression.kind",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "kind",
              "signature": "readonly kind: SyntaxKind.ElementAccessExpression;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1235,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1235",
              },
              "type": "number",
            },
            Object {
              "docs": Array [],
              "id": "ElementAccessExpression.questionDotToken",
              "isOptional": true,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "questionDotToken",
              "signature": "readonly questionDotToken?: QuestionDotToken;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1237,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1237",
              },
              "type": "QuestionDotToken",
            },
          ],
        },
        "name": "ElementAccessExpression",
        "signature": "interface ElementAccessExpression extends MemberExpression {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 1234,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1234",
        },
      },
      Object {
        "docs": Array [
          "/**
     * The builder that can handle the changes in program and iterate through changed file to emit the files
     * The semantic diagnostics are cached per file and managed by clearing for the changed/affected files
     */",
        ],
        "id": "EmitAndSemanticDiagnosticsBuilderProgram",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [
            Object {
              "docs": Array [
                "/**
         * Emits the next affected file's emit result (EmitResult and sourceFiles emitted) or returns undefined if iteration is complete
         * The first of writeFile if provided, writeFile of BuilderProgramHost if provided, writeFile of compiler host
         * in that order would be used to write the files
         */",
              ],
              "id": "EmitAndSemanticDiagnosticsBuilderProgram.emitNextAffectedFile",
              "kind": "InterfaceMethodDeclaration",
              "name": "emitNextAffectedFile",
              "signature": "emitNextAffectedFile: (
    writeFile?: WriteFileCallback,
    cancellationToken?: CancellationToken,
    emitOnlyDtsFiles?: boolean,
    customTransformers?: CustomTransformers
) => AffectedFileResult<EmitResult>;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 4937,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4937",
              },
              "type": "(writeFile?: WriteFileCallback, cancellationToken?: CancellationToken, emitOnlyDtsFiles?: boolean, customTransformers?: CustomTransformers) => AffectedFileResult<EmitResult>",
            },
          ],
          "properties": Array [],
        },
        "name": "EmitAndSemanticDiagnosticsBuilderProgram",
        "signature": "interface EmitAndSemanticDiagnosticsBuilderProgram
    extends SemanticDiagnosticsBuilderProgram {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4931,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4931",
        },
      },
      Object {
        "docs": Array [],
        "id": "EmitHelper",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "EmitHelper.dependencies",
              "isOptional": true,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "dependencies",
              "signature": "readonly dependencies?: EmitHelper[];",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3133,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3133",
              },
              "type": "EmitHelper[]",
            },
            Object {
              "docs": Array [],
              "id": "EmitHelper.name",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "name",
              "signature": "readonly name: string;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3129,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3129",
              },
              "type": "string",
            },
            Object {
              "docs": Array [],
              "id": "EmitHelper.priority",
              "isOptional": true,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "priority",
              "signature": "readonly priority?: number;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3132,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3132",
              },
              "type": "number",
            },
            Object {
              "docs": Array [],
              "id": "EmitHelper.scoped",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "scoped",
              "signature": "readonly scoped: boolean;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3130,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3130",
              },
              "type": "boolean",
            },
            Object {
              "docs": Array [],
              "id": "EmitHelper.text",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "text",
              "signature": "readonly text: string | ((node: EmitHelperUniqueNameCallback) => string);",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3131,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3131",
              },
              "type": "string | ((node: EmitHelperUniqueNameCallback) => string)",
            },
          ],
        },
        "name": "EmitHelper",
        "signature": "interface EmitHelper {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 3128,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3128",
        },
      },
      Object {
        "docs": Array [],
        "id": "EmitOutput",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "EmitOutput.emitSkipped",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "emitSkipped",
              "signature": "emitSkipped: boolean;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 4819,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4819",
              },
              "type": "boolean",
            },
            Object {
              "docs": Array [],
              "id": "EmitOutput.outputFiles",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "outputFiles",
              "signature": "outputFiles: OutputFile[];",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 4818,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4818",
              },
              "type": "OutputFile[]",
            },
          ],
        },
        "name": "EmitOutput",
        "signature": "interface EmitOutput {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4817,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4817",
        },
      },
      Object {
        "docs": Array [],
        "id": "EmitResult",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [
                "/** Contains declaration emit diagnostics */",
              ],
              "id": "EmitResult.diagnostics",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "diagnostics",
              "signature": "diagnostics: readonly Diagnostic[];",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2144,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2144",
              },
              "type": "readonly Diagnostic[]",
            },
            Object {
              "docs": Array [],
              "id": "EmitResult.emitSkipped",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "emitSkipped",
              "signature": "emitSkipped: boolean;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2142,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2142",
              },
              "type": "boolean",
            },
            Object {
              "docs": Array [],
              "id": "EmitResult.emittedFiles",
              "isOptional": true,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "emittedFiles",
              "signature": "emittedFiles?: string[];",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2145,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2145",
              },
              "type": "string[]",
            },
          ],
        },
        "name": "EmitResult",
        "signature": "interface EmitResult {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 2141,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2141",
        },
      },
      Object {
        "docs": Array [],
        "id": "EmptyStatement",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "EmptyStatement.kind",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "kind",
              "signature": "readonly kind: SyntaxKind.EmptyStatement;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1390,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1390",
              },
              "type": "number",
            },
          ],
        },
        "name": "EmptyStatement",
        "signature": "interface EmptyStatement extends Statement {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 1389,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1389",
        },
      },
      Object {
        "docs": Array [],
        "id": "EnumDeclaration",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "EnumDeclaration.kind",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "kind",
              "signature": "readonly kind: SyntaxKind.EnumDeclaration;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1564,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1564",
              },
              "type": "number",
            },
            Object {
              "docs": Array [],
              "id": "EnumDeclaration.members",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "members",
              "signature": "readonly members: NodeArray<EnumMember>;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1566,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1566",
              },
              "type": "NodeArray<EnumMember>",
            },
            Object {
              "docs": Array [],
              "id": "EnumDeclaration.name",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "name",
              "signature": "readonly name: Identifier;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1565,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1565",
              },
              "type": "Identifier",
            },
          ],
        },
        "name": "EnumDeclaration",
        "signature": "interface EnumDeclaration extends DeclarationStatement, JSDocContainer {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 1563,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1563",
        },
      },
      Object {
        "docs": Array [],
        "id": "EnumMember",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "EnumMember.initializer",
              "isOptional": true,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "initializer",
              "signature": "readonly initializer?: Expression;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1561,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1561",
              },
              "type": "Expression",
            },
            Object {
              "docs": Array [],
              "id": "EnumMember.kind",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "kind",
              "signature": "readonly kind: SyntaxKind.EnumMember;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1558,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1558",
              },
              "type": "number",
            },
            Object {
              "docs": Array [],
              "id": "EnumMember.name",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "name",
              "signature": "readonly name: PropertyName;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1560,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1560",
              },
              "type": "PropertyName",
            },
            Object {
              "docs": Array [],
              "id": "EnumMember.parent",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "parent",
              "signature": "readonly parent: EnumDeclaration;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1559,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1559",
              },
              "type": "EnumDeclaration",
            },
          ],
        },
        "name": "EnumMember",
        "signature": "interface EnumMember extends NamedDeclaration, JSDocContainer {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 1557,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1557",
        },
      },
      Object {
        "docs": Array [],
        "id": "EnumType",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [],
        },
        "name": "EnumType",
        "signature": "interface EnumType extends Type {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 2529,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2529",
        },
      },
      Object {
        "docs": Array [
          "/** ES6 Map interface. */",
        ],
        "id": "ESMap",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [
            Object {
              "docs": Array [],
              "id": "ESMap.set",
              "kind": "InterfaceMethodDeclaration",
              "name": "set",
              "signature": "set: (key: K, value: V) => this;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 59,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L59",
              },
              "type": "(key: K, value: V) => this",
            },
          ],
          "properties": Array [],
        },
        "name": "ESMap",
        "signature": "interface ESMap<K, V> extends ReadonlyESMap<K, V>, Collection<K> {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 58,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L58",
        },
      },
      Object {
        "docs": Array [],
        "id": "EvolvingArrayType",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "EvolvingArrayType.elementType",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "elementType",
              "signature": "elementType: Type;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2616,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2616",
              },
              "type": "Type",
            },
            Object {
              "docs": Array [],
              "id": "EvolvingArrayType.finalArrayType",
              "isOptional": true,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "finalArrayType",
              "signature": "finalArrayType?: Type;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2617,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2617",
              },
              "type": "Type",
            },
          ],
        },
        "name": "EvolvingArrayType",
        "signature": "interface EvolvingArrayType extends ObjectType {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 2615,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2615",
        },
      },
      Object {
        "docs": Array [],
        "id": "ExpandResult",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "ExpandResult.fileNames",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "fileNames",
              "signature": "fileNames: string[];",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2976,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2976",
              },
              "type": "string[]",
            },
            Object {
              "docs": Array [],
              "id": "ExpandResult.wildcardDirectories",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "wildcardDirectories",
              "signature": "wildcardDirectories: MapLike<WatchDirectoryFlags>;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2977,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2977",
              },
              "type": "MapLike<WatchDirectoryFlags>",
            },
          ],
        },
        "name": "ExpandResult",
        "signature": "interface ExpandResult {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 2975,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2975",
        },
      },
      Object {
        "docs": Array [
          "/**
     * This is either an \`export =\` or an \`export default\` declaration.
     * Unless \`isExportEquals\` is set, this node was parsed as an \`export default\`.
     */",
        ],
        "id": "ExportAssignment",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "ExportAssignment.expression",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "expression",
              "signature": "readonly expression: Expression;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1680,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1680",
              },
              "type": "Expression",
            },
            Object {
              "docs": Array [],
              "id": "ExportAssignment.isExportEquals",
              "isOptional": true,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "isExportEquals",
              "signature": "readonly isExportEquals?: boolean;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1679,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1679",
              },
              "type": "boolean",
            },
            Object {
              "docs": Array [],
              "id": "ExportAssignment.kind",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "kind",
              "signature": "readonly kind: SyntaxKind.ExportAssignment;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1677,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1677",
              },
              "type": "number",
            },
            Object {
              "docs": Array [],
              "id": "ExportAssignment.parent",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "parent",
              "signature": "readonly parent: SourceFile;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1678,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1678",
              },
              "type": "SourceFile",
            },
          ],
        },
        "name": "ExportAssignment",
        "signature": "interface ExportAssignment extends DeclarationStatement, JSDocContainer {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 1676,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1676",
        },
      },
      Object {
        "docs": Array [],
        "id": "ExportDeclaration",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [
                "/** Will not be assigned in the case of \`export * from \\"foo\\";\` */",
              ],
              "id": "ExportDeclaration.exportClause",
              "isOptional": true,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "exportClause",
              "signature": "readonly exportClause?: NamedExportBindings;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1643,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1643",
              },
              "type": "NamedExportBindings",
            },
            Object {
              "docs": Array [],
              "id": "ExportDeclaration.isTypeOnly",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "isTypeOnly",
              "signature": "readonly isTypeOnly: boolean;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1641,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1641",
              },
              "type": "boolean",
            },
            Object {
              "docs": Array [],
              "id": "ExportDeclaration.kind",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "kind",
              "signature": "readonly kind: SyntaxKind.ExportDeclaration;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1639,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1639",
              },
              "type": "number",
            },
            Object {
              "docs": Array [
                "/** If this is not a StringLiteral it will be a grammar error. */",
              ],
              "id": "ExportDeclaration.moduleSpecifier",
              "isOptional": true,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "moduleSpecifier",
              "signature": "readonly moduleSpecifier?: Expression;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1645,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1645",
              },
              "type": "Expression",
            },
            Object {
              "docs": Array [],
              "id": "ExportDeclaration.parent",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "parent",
              "signature": "readonly parent: SourceFile | ModuleBlock;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1640,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1640",
              },
              "type": "SourceFile | ModuleBlock",
            },
          ],
        },
        "name": "ExportDeclaration",
        "signature": "interface ExportDeclaration extends DeclarationStatement, JSDocContainer {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 1638,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1638",
        },
      },
      Object {
        "docs": Array [],
        "id": "ExportSpecifier",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "ExportSpecifier.kind",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "kind",
              "signature": "readonly kind: SyntaxKind.ExportSpecifier;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1665,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1665",
              },
              "type": "number",
            },
            Object {
              "docs": Array [],
              "id": "ExportSpecifier.name",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "name",
              "signature": "readonly name: Identifier;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1668,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1668",
              },
              "type": "Identifier",
            },
            Object {
              "docs": Array [],
              "id": "ExportSpecifier.parent",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "parent",
              "signature": "readonly parent: NamedExports;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1666,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1666",
              },
              "type": "NamedExports",
            },
            Object {
              "docs": Array [],
              "id": "ExportSpecifier.propertyName",
              "isOptional": true,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "propertyName",
              "signature": "readonly propertyName?: Identifier;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1667,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1667",
              },
              "type": "Identifier",
            },
          ],
        },
        "name": "ExportSpecifier",
        "signature": "interface ExportSpecifier extends NamedDeclaration {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 1664,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1664",
        },
      },
      Object {
        "docs": Array [],
        "id": "Expression",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [],
        },
        "name": "Expression",
        "signature": "interface Expression extends Node {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 975,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L975",
        },
      },
      Object {
        "docs": Array [],
        "id": "ExpressionStatement",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "ExpressionStatement.expression",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "expression",
              "signature": "readonly expression: Expression;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1410,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1410",
              },
              "type": "Expression",
            },
            Object {
              "docs": Array [],
              "id": "ExpressionStatement.kind",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "kind",
              "signature": "readonly kind: SyntaxKind.ExpressionStatement;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1409,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1409",
              },
              "type": "number",
            },
          ],
        },
        "name": "ExpressionStatement",
        "signature": "interface ExpressionStatement extends Statement, JSDocContainer {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 1408,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1408",
        },
      },
      Object {
        "docs": Array [],
        "id": "ExpressionWithTypeArguments",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "ExpressionWithTypeArguments.expression",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "expression",
              "signature": "readonly expression: LeftHandSideExpression;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1267,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1267",
              },
              "type": "LeftHandSideExpression",
            },
            Object {
              "docs": Array [],
              "id": "ExpressionWithTypeArguments.kind",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "kind",
              "signature": "readonly kind: SyntaxKind.ExpressionWithTypeArguments;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1265,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1265",
              },
              "type": "number",
            },
            Object {
              "docs": Array [],
              "id": "ExpressionWithTypeArguments.parent",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "parent",
              "signature": "readonly parent: HeritageClause | JSDocAugmentsTag | JSDocImplementsTag;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1266,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1266",
              },
              "type": "HeritageClause | JSDocAugmentsTag | JSDocImplementsTag",
            },
          ],
        },
        "name": "ExpressionWithTypeArguments",
        "signature": "interface ExpressionWithTypeArguments extends NodeWithTypeArguments {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 1264,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1264",
        },
      },
      Object {
        "docs": Array [],
        "id": "ExtendedConfigCacheEntry",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "ExtendedConfigCacheEntry.extendedConfig",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "extendedConfig",
              "signature": "extendedConfig: ParsedTsconfig | undefined;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 4624,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4624",
              },
              "type": "ParsedTsconfig",
            },
            Object {
              "docs": Array [],
              "id": "ExtendedConfigCacheEntry.extendedResult",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "extendedResult",
              "signature": "extendedResult: TsConfigSourceFile;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 4623,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4623",
              },
              "type": "TsConfigSourceFile",
            },
          ],
        },
        "name": "ExtendedConfigCacheEntry",
        "signature": "interface ExtendedConfigCacheEntry {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4622,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4622",
        },
      },
      Object {
        "docs": Array [],
        "id": "ExternalModuleReference",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "ExternalModuleReference.expression",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "expression",
              "signature": "readonly expression: Expression;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1606,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1606",
              },
              "type": "Expression",
            },
            Object {
              "docs": Array [],
              "id": "ExternalModuleReference.kind",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "kind",
              "signature": "readonly kind: SyntaxKind.ExternalModuleReference;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1604,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1604",
              },
              "type": "number",
            },
            Object {
              "docs": Array [],
              "id": "ExternalModuleReference.parent",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "parent",
              "signature": "readonly parent: ImportEqualsDeclaration;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1605,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1605",
              },
              "type": "ImportEqualsDeclaration",
            },
          ],
        },
        "name": "ExternalModuleReference",
        "signature": "interface ExternalModuleReference extends Node {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 1603,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1603",
        },
      },
      Object {
        "docs": Array [],
        "id": "FalseLiteral",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "FalseLiteral.kind",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "kind",
              "signature": "readonly kind: SyntaxKind.FalseKeyword;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1021,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1021",
              },
              "type": "number",
            },
          ],
        },
        "name": "FalseLiteral",
        "signature": "interface FalseLiteral extends PrimaryExpression {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 1020,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1020",
        },
      },
      Object {
        "docs": Array [],
        "id": "FileExtensionInfo",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "FileExtensionInfo.extension",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "extension",
              "signature": "extension: string;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2700,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2700",
              },
              "type": "string",
            },
            Object {
              "docs": Array [],
              "id": "FileExtensionInfo.isMixedContent",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "isMixedContent",
              "signature": "isMixedContent: boolean;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2701,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2701",
              },
              "type": "boolean",
            },
            Object {
              "docs": Array [],
              "id": "FileExtensionInfo.scriptKind",
              "isOptional": true,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "scriptKind",
              "signature": "scriptKind?: ScriptKind;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2702,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2702",
              },
              "type": "ScriptKind",
            },
          ],
        },
        "name": "FileExtensionInfo",
        "signature": "interface FileExtensionInfo {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 2699,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2699",
        },
      },
      Object {
        "docs": Array [],
        "id": "FileReference",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "FileReference.fileName",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "fileName",
              "signature": "fileName: string;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1683,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1683",
              },
              "type": "string",
            },
          ],
        },
        "name": "FileReference",
        "signature": "interface FileReference extends TextRange {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 1682,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1682",
        },
      },
      Object {
        "docs": Array [],
        "id": "FileTextChanges",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "FileTextChanges.fileName",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "fileName",
              "signature": "fileName: string;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5719,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5719",
              },
              "type": "string",
            },
            Object {
              "docs": Array [],
              "id": "FileTextChanges.isNewFile",
              "isOptional": true,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "isNewFile",
              "signature": "isNewFile?: boolean;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5721,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5721",
              },
              "type": "boolean",
            },
            Object {
              "docs": Array [],
              "id": "FileTextChanges.textChanges",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "textChanges",
              "signature": "textChanges: readonly TextChange[];",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5720,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5720",
              },
              "type": "readonly TextChange[]",
            },
          ],
        },
        "name": "FileTextChanges",
        "signature": "interface FileTextChanges {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 5718,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5718",
        },
      },
      Object {
        "docs": Array [],
        "id": "FileWatcher",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [
            Object {
              "docs": Array [],
              "id": "FileWatcher.close",
              "kind": "InterfaceMethodDeclaration",
              "name": "close",
              "signature": "close: () => void;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3932,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3932",
              },
              "type": "() => void",
            },
          ],
          "properties": Array [],
        },
        "name": "FileWatcher",
        "signature": "interface FileWatcher {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 3931,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3931",
        },
      },
      Object {
        "docs": Array [],
        "id": "FlowArrayMutation",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "FlowArrayMutation.antecedent",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "antecedent",
              "signature": "antecedent: FlowNode;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1905,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1905",
              },
              "type": "FlowNode",
            },
            Object {
              "docs": Array [],
              "id": "FlowArrayMutation.node",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "node",
              "signature": "node: CallExpression | BinaryExpression;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1904,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1904",
              },
              "type": "CallExpression | BinaryExpression",
            },
          ],
        },
        "name": "FlowArrayMutation",
        "signature": "interface FlowArrayMutation extends FlowNodeBase {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 1903,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1903",
        },
      },
      Object {
        "docs": Array [],
        "id": "FlowAssignment",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "FlowAssignment.antecedent",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "antecedent",
              "signature": "antecedent: FlowNode;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1887,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1887",
              },
              "type": "FlowNode",
            },
            Object {
              "docs": Array [],
              "id": "FlowAssignment.node",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "node",
              "signature": "node: Expression | VariableDeclaration | BindingElement;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1886,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1886",
              },
              "type": "Expression | VariableDeclaration | BindingElement",
            },
          ],
        },
        "name": "FlowAssignment",
        "signature": "interface FlowAssignment extends FlowNodeBase {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 1885,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1885",
        },
      },
      Object {
        "docs": Array [],
        "id": "FlowCall",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "FlowCall.antecedent",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "antecedent",
              "signature": "antecedent: FlowNode;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1891,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1891",
              },
              "type": "FlowNode",
            },
            Object {
              "docs": Array [],
              "id": "FlowCall.node",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "node",
              "signature": "node: CallExpression;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1890,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1890",
              },
              "type": "CallExpression",
            },
          ],
        },
        "name": "FlowCall",
        "signature": "interface FlowCall extends FlowNodeBase {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 1889,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1889",
        },
      },
      Object {
        "docs": Array [],
        "id": "FlowCondition",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "FlowCondition.antecedent",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "antecedent",
              "signature": "antecedent: FlowNode;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1895,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1895",
              },
              "type": "FlowNode",
            },
            Object {
              "docs": Array [],
              "id": "FlowCondition.node",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "node",
              "signature": "node: Expression;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1894,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1894",
              },
              "type": "Expression",
            },
          ],
        },
        "name": "FlowCondition",
        "signature": "interface FlowCondition extends FlowNodeBase {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 1893,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1893",
        },
      },
      Object {
        "docs": Array [],
        "id": "FlowLabel",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "FlowLabel.antecedents",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "antecedents",
              "signature": "antecedents: FlowNode[] | undefined;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1883,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1883",
              },
              "type": "FlowNode[]",
            },
          ],
        },
        "name": "FlowLabel",
        "signature": "interface FlowLabel extends FlowNodeBase {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 1882,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1882",
        },
      },
      Object {
        "docs": Array [],
        "id": "FlowNodeBase",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "FlowNodeBase.flags",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "flags",
              "signature": "flags: FlowFlags;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1876,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1876",
              },
              "type": "FlowFlags",
            },
            Object {
              "docs": Array [],
              "id": "FlowNodeBase.id",
              "isOptional": true,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "id",
              "signature": "id?: number;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1877,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1877",
              },
              "type": "number",
            },
          ],
        },
        "name": "FlowNodeBase",
        "signature": "interface FlowNodeBase {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 1875,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1875",
        },
      },
      Object {
        "docs": Array [],
        "id": "FlowReduceLabel",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "FlowReduceLabel.antecedent",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "antecedent",
              "signature": "antecedent: FlowNode;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1910,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1910",
              },
              "type": "FlowNode",
            },
            Object {
              "docs": Array [],
              "id": "FlowReduceLabel.antecedents",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "antecedents",
              "signature": "antecedents: FlowNode[];",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1909,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1909",
              },
              "type": "FlowNode[]",
            },
            Object {
              "docs": Array [],
              "id": "FlowReduceLabel.target",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "target",
              "signature": "target: FlowLabel;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1908,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1908",
              },
              "type": "FlowLabel",
            },
          ],
        },
        "name": "FlowReduceLabel",
        "signature": "interface FlowReduceLabel extends FlowNodeBase {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 1907,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1907",
        },
      },
      Object {
        "docs": Array [],
        "id": "FlowStart",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "FlowStart.node",
              "isOptional": true,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "node",
              "signature": "node?: FunctionExpression | ArrowFunction | MethodDeclaration;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1880,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1880",
              },
              "type": "MethodDeclaration | FunctionExpression | ArrowFunction",
            },
          ],
        },
        "name": "FlowStart",
        "signature": "interface FlowStart extends FlowNodeBase {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 1879,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1879",
        },
      },
      Object {
        "docs": Array [],
        "id": "FlowSwitchClause",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "FlowSwitchClause.antecedent",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "antecedent",
              "signature": "antecedent: FlowNode;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1901,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1901",
              },
              "type": "FlowNode",
            },
            Object {
              "docs": Array [],
              "id": "FlowSwitchClause.clauseEnd",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "clauseEnd",
              "signature": "clauseEnd: number;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1900,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1900",
              },
              "type": "number",
            },
            Object {
              "docs": Array [],
              "id": "FlowSwitchClause.clauseStart",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "clauseStart",
              "signature": "clauseStart: number;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1899,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1899",
              },
              "type": "number",
            },
            Object {
              "docs": Array [],
              "id": "FlowSwitchClause.switchStatement",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "switchStatement",
              "signature": "switchStatement: SwitchStatement;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1898,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1898",
              },
              "type": "SwitchStatement",
            },
          ],
        },
        "name": "FlowSwitchClause",
        "signature": "interface FlowSwitchClause extends FlowNodeBase {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 1897,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1897",
        },
      },
      Object {
        "docs": Array [],
        "id": "ForInStatement",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "ForInStatement.expression",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "expression",
              "signature": "readonly expression: Expression;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1440,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1440",
              },
              "type": "Expression",
            },
            Object {
              "docs": Array [],
              "id": "ForInStatement.initializer",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "initializer",
              "signature": "readonly initializer: ForInitializer;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1439,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1439",
              },
              "type": "ForInitializer",
            },
            Object {
              "docs": Array [],
              "id": "ForInStatement.kind",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "kind",
              "signature": "readonly kind: SyntaxKind.ForInStatement;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1438,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1438",
              },
              "type": "number",
            },
          ],
        },
        "name": "ForInStatement",
        "signature": "interface ForInStatement extends IterationStatement {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 1437,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1437",
        },
      },
      Object {
        "docs": Array [],
        "id": "FormatCodeOptions",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "FormatCodeOptions.InsertSpaceAfterCommaDelimiter",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "InsertSpaceAfterCommaDelimiter",
              "signature": "InsertSpaceAfterCommaDelimiter: boolean;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5892,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5892",
              },
              "type": "boolean",
            },
            Object {
              "docs": Array [],
              "id": "FormatCodeOptions.InsertSpaceAfterConstructor",
              "isOptional": true,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "InsertSpaceAfterConstructor",
              "signature": "InsertSpaceAfterConstructor?: boolean;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5895,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5895",
              },
              "type": "boolean",
            },
            Object {
              "docs": Array [],
              "id": "FormatCodeOptions.InsertSpaceAfterFunctionKeywordForAnonymousFunctions",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "InsertSpaceAfterFunctionKeywordForAnonymousFunctions",
              "signature": "InsertSpaceAfterFunctionKeywordForAnonymousFunctions: boolean;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5897,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5897",
              },
              "type": "boolean",
            },
            Object {
              "docs": Array [],
              "id": "FormatCodeOptions.InsertSpaceAfterKeywordsInControlFlowStatements",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "InsertSpaceAfterKeywordsInControlFlowStatements",
              "signature": "InsertSpaceAfterKeywordsInControlFlowStatements: boolean;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5896,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5896",
              },
              "type": "boolean",
            },
            Object {
              "docs": Array [],
              "id": "FormatCodeOptions.InsertSpaceAfterOpeningAndBeforeClosingJsxExpressionBraces",
              "isOptional": true,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "InsertSpaceAfterOpeningAndBeforeClosingJsxExpressionBraces",
              "signature": "InsertSpaceAfterOpeningAndBeforeClosingJsxExpressionBraces?: boolean;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5902,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5902",
              },
              "type": "boolean",
            },
            Object {
              "docs": Array [],
              "id": "FormatCodeOptions.InsertSpaceAfterOpeningAndBeforeClosingNonemptyBraces",
              "isOptional": true,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "InsertSpaceAfterOpeningAndBeforeClosingNonemptyBraces",
              "signature": "InsertSpaceAfterOpeningAndBeforeClosingNonemptyBraces?: boolean;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5900,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5900",
              },
              "type": "boolean",
            },
            Object {
              "docs": Array [],
              "id": "FormatCodeOptions.InsertSpaceAfterOpeningAndBeforeClosingNonemptyBrackets",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "InsertSpaceAfterOpeningAndBeforeClosingNonemptyBrackets",
              "signature": "InsertSpaceAfterOpeningAndBeforeClosingNonemptyBrackets: boolean;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5899,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5899",
              },
              "type": "boolean",
            },
            Object {
              "docs": Array [],
              "id": "FormatCodeOptions.InsertSpaceAfterOpeningAndBeforeClosingNonemptyParenthesis",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "InsertSpaceAfterOpeningAndBeforeClosingNonemptyParenthesis",
              "signature": "InsertSpaceAfterOpeningAndBeforeClosingNonemptyParenthesis: boolean;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5898,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5898",
              },
              "type": "boolean",
            },
            Object {
              "docs": Array [],
              "id": "FormatCodeOptions.InsertSpaceAfterOpeningAndBeforeClosingTemplateStringBraces",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "InsertSpaceAfterOpeningAndBeforeClosingTemplateStringBraces",
              "signature": "InsertSpaceAfterOpeningAndBeforeClosingTemplateStringBraces: boolean;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5901,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5901",
              },
              "type": "boolean",
            },
            Object {
              "docs": Array [],
              "id": "FormatCodeOptions.InsertSpaceAfterSemicolonInForStatements",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "InsertSpaceAfterSemicolonInForStatements",
              "signature": "InsertSpaceAfterSemicolonInForStatements: boolean;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5893,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5893",
              },
              "type": "boolean",
            },
            Object {
              "docs": Array [],
              "id": "FormatCodeOptions.InsertSpaceAfterTypeAssertion",
              "isOptional": true,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "InsertSpaceAfterTypeAssertion",
              "signature": "InsertSpaceAfterTypeAssertion?: boolean;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5903,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5903",
              },
              "type": "boolean",
            },
            Object {
              "docs": Array [],
              "id": "FormatCodeOptions.InsertSpaceBeforeAndAfterBinaryOperators",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "InsertSpaceBeforeAndAfterBinaryOperators",
              "signature": "InsertSpaceBeforeAndAfterBinaryOperators: boolean;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5894,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5894",
              },
              "type": "boolean",
            },
            Object {
              "docs": Array [],
              "id": "FormatCodeOptions.InsertSpaceBeforeFunctionParenthesis",
              "isOptional": true,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "InsertSpaceBeforeFunctionParenthesis",
              "signature": "InsertSpaceBeforeFunctionParenthesis?: boolean;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5904,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5904",
              },
              "type": "boolean",
            },
            Object {
              "docs": Array [],
              "id": "FormatCodeOptions.insertSpaceBeforeTypeAnnotation",
              "isOptional": true,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "insertSpaceBeforeTypeAnnotation",
              "signature": "insertSpaceBeforeTypeAnnotation?: boolean;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5907,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5907",
              },
              "type": "boolean",
            },
            Object {
              "docs": Array [],
              "id": "FormatCodeOptions.PlaceOpenBraceOnNewLineForControlBlocks",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "PlaceOpenBraceOnNewLineForControlBlocks",
              "signature": "PlaceOpenBraceOnNewLineForControlBlocks: boolean;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5906,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5906",
              },
              "type": "boolean",
            },
            Object {
              "docs": Array [],
              "id": "FormatCodeOptions.PlaceOpenBraceOnNewLineForFunctions",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "PlaceOpenBraceOnNewLineForFunctions",
              "signature": "PlaceOpenBraceOnNewLineForFunctions: boolean;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5905,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5905",
              },
              "type": "boolean",
            },
          ],
        },
        "name": "FormatCodeOptions",
        "signature": "interface FormatCodeOptions extends EditorOptions {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 5891,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5891",
        },
      },
      Object {
        "docs": Array [],
        "id": "FormatCodeSettings",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "FormatCodeSettings.indentMultiLineObjectLiteralBeginningOnBlankLine",
              "isOptional": true,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "indentMultiLineObjectLiteralBeginningOnBlankLine",
              "signature": "readonly indentMultiLineObjectLiteralBeginningOnBlankLine?: boolean;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5927,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5927",
              },
              "type": "boolean",
            },
            Object {
              "docs": Array [],
              "id": "FormatCodeSettings.insertSpaceAfterCommaDelimiter",
              "isOptional": true,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "insertSpaceAfterCommaDelimiter",
              "signature": "readonly insertSpaceAfterCommaDelimiter?: boolean;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5910,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5910",
              },
              "type": "boolean",
            },
            Object {
              "docs": Array [],
              "id": "FormatCodeSettings.insertSpaceAfterConstructor",
              "isOptional": true,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "insertSpaceAfterConstructor",
              "signature": "readonly insertSpaceAfterConstructor?: boolean;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5913,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5913",
              },
              "type": "boolean",
            },
            Object {
              "docs": Array [],
              "id": "FormatCodeSettings.insertSpaceAfterFunctionKeywordForAnonymousFunctions",
              "isOptional": true,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "insertSpaceAfterFunctionKeywordForAnonymousFunctions",
              "signature": "readonly insertSpaceAfterFunctionKeywordForAnonymousFunctions?: boolean;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5915,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5915",
              },
              "type": "boolean",
            },
            Object {
              "docs": Array [],
              "id": "FormatCodeSettings.insertSpaceAfterKeywordsInControlFlowStatements",
              "isOptional": true,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "insertSpaceAfterKeywordsInControlFlowStatements",
              "signature": "readonly insertSpaceAfterKeywordsInControlFlowStatements?: boolean;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5914,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5914",
              },
              "type": "boolean",
            },
            Object {
              "docs": Array [],
              "id": "FormatCodeSettings.insertSpaceAfterOpeningAndBeforeClosingEmptyBraces",
              "isOptional": true,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "insertSpaceAfterOpeningAndBeforeClosingEmptyBraces",
              "signature": "readonly insertSpaceAfterOpeningAndBeforeClosingEmptyBraces?: boolean;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5919,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5919",
              },
              "type": "boolean",
            },
            Object {
              "docs": Array [],
              "id": "FormatCodeSettings.insertSpaceAfterOpeningAndBeforeClosingJsxExpressionBraces",
              "isOptional": true,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "insertSpaceAfterOpeningAndBeforeClosingJsxExpressionBraces",
              "signature": "readonly insertSpaceAfterOpeningAndBeforeClosingJsxExpressionBraces?: boolean;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5921,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5921",
              },
              "type": "boolean",
            },
            Object {
              "docs": Array [],
              "id": "FormatCodeSettings.insertSpaceAfterOpeningAndBeforeClosingNonemptyBraces",
              "isOptional": true,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "insertSpaceAfterOpeningAndBeforeClosingNonemptyBraces",
              "signature": "readonly insertSpaceAfterOpeningAndBeforeClosingNonemptyBraces?: boolean;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5918,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5918",
              },
              "type": "boolean",
            },
            Object {
              "docs": Array [],
              "id": "FormatCodeSettings.insertSpaceAfterOpeningAndBeforeClosingNonemptyBrackets",
              "isOptional": true,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "insertSpaceAfterOpeningAndBeforeClosingNonemptyBrackets",
              "signature": "readonly insertSpaceAfterOpeningAndBeforeClosingNonemptyBrackets?: boolean;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5917,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5917",
              },
              "type": "boolean",
            },
            Object {
              "docs": Array [],
              "id": "FormatCodeSettings.insertSpaceAfterOpeningAndBeforeClosingNonemptyParenthesis",
              "isOptional": true,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "insertSpaceAfterOpeningAndBeforeClosingNonemptyParenthesis",
              "signature": "readonly insertSpaceAfterOpeningAndBeforeClosingNonemptyParenthesis?: boolean;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5916,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5916",
              },
              "type": "boolean",
            },
            Object {
              "docs": Array [],
              "id": "FormatCodeSettings.insertSpaceAfterOpeningAndBeforeClosingTemplateStringBraces",
              "isOptional": true,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "insertSpaceAfterOpeningAndBeforeClosingTemplateStringBraces",
              "signature": "readonly insertSpaceAfterOpeningAndBeforeClosingTemplateStringBraces?: boolean;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5920,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5920",
              },
              "type": "boolean",
            },
            Object {
              "docs": Array [],
              "id": "FormatCodeSettings.insertSpaceAfterSemicolonInForStatements",
              "isOptional": true,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "insertSpaceAfterSemicolonInForStatements",
              "signature": "readonly insertSpaceAfterSemicolonInForStatements?: boolean;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5911,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5911",
              },
              "type": "boolean",
            },
            Object {
              "docs": Array [],
              "id": "FormatCodeSettings.insertSpaceAfterTypeAssertion",
              "isOptional": true,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "insertSpaceAfterTypeAssertion",
              "signature": "readonly insertSpaceAfterTypeAssertion?: boolean;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5922,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5922",
              },
              "type": "boolean",
            },
            Object {
              "docs": Array [],
              "id": "FormatCodeSettings.insertSpaceBeforeAndAfterBinaryOperators",
              "isOptional": true,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "insertSpaceBeforeAndAfterBinaryOperators",
              "signature": "readonly insertSpaceBeforeAndAfterBinaryOperators?: boolean;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5912,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5912",
              },
              "type": "boolean",
            },
            Object {
              "docs": Array [],
              "id": "FormatCodeSettings.insertSpaceBeforeFunctionParenthesis",
              "isOptional": true,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "insertSpaceBeforeFunctionParenthesis",
              "signature": "readonly insertSpaceBeforeFunctionParenthesis?: boolean;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5923,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5923",
              },
              "type": "boolean",
            },
            Object {
              "docs": Array [],
              "id": "FormatCodeSettings.insertSpaceBeforeTypeAnnotation",
              "isOptional": true,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "insertSpaceBeforeTypeAnnotation",
              "signature": "readonly insertSpaceBeforeTypeAnnotation?: boolean;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5926,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5926",
              },
              "type": "boolean",
            },
            Object {
              "docs": Array [],
              "id": "FormatCodeSettings.placeOpenBraceOnNewLineForControlBlocks",
              "isOptional": true,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "placeOpenBraceOnNewLineForControlBlocks",
              "signature": "readonly placeOpenBraceOnNewLineForControlBlocks?: boolean;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5925,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5925",
              },
              "type": "boolean",
            },
            Object {
              "docs": Array [],
              "id": "FormatCodeSettings.placeOpenBraceOnNewLineForFunctions",
              "isOptional": true,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "placeOpenBraceOnNewLineForFunctions",
              "signature": "readonly placeOpenBraceOnNewLineForFunctions?: boolean;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5924,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5924",
              },
              "type": "boolean",
            },
            Object {
              "docs": Array [],
              "id": "FormatCodeSettings.semicolons",
              "isOptional": true,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "semicolons",
              "signature": "readonly semicolons?: SemicolonPreference;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5928,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5928",
              },
              "type": "SemicolonPreference",
            },
          ],
        },
        "name": "FormatCodeSettings",
        "signature": "interface FormatCodeSettings extends EditorSettings {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 5909,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5909",
        },
      },
      Object {
        "docs": Array [],
        "id": "FormatDiagnosticsHost",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [
            Object {
              "docs": Array [],
              "id": "FormatDiagnosticsHost.getCanonicalFileName",
              "kind": "InterfaceMethodDeclaration",
              "name": "getCanonicalFileName",
              "signature": "getCanonicalFileName: (fileName: string) => string;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 4771,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4771",
              },
              "type": "(fileName: string) => string",
            },
            Object {
              "docs": Array [],
              "id": "FormatDiagnosticsHost.getCurrentDirectory",
              "kind": "InterfaceMethodDeclaration",
              "name": "getCurrentDirectory",
              "signature": "getCurrentDirectory: () => string;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 4770,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4770",
              },
              "type": "() => string",
            },
            Object {
              "docs": Array [],
              "id": "FormatDiagnosticsHost.getNewLine",
              "kind": "InterfaceMethodDeclaration",
              "name": "getNewLine",
              "signature": "getNewLine: () => string;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 4772,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4772",
              },
              "type": "() => string",
            },
          ],
          "properties": Array [],
        },
        "name": "FormatDiagnosticsHost",
        "signature": "interface FormatDiagnosticsHost {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4769,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4769",
        },
      },
      Object {
        "docs": Array [],
        "id": "ForOfStatement",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "ForOfStatement.awaitModifier",
              "isOptional": true,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "awaitModifier",
              "signature": "readonly awaitModifier?: AwaitKeywordToken;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1444,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1444",
              },
              "type": "AwaitKeyword",
            },
            Object {
              "docs": Array [],
              "id": "ForOfStatement.expression",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "expression",
              "signature": "readonly expression: Expression;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1446,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1446",
              },
              "type": "Expression",
            },
            Object {
              "docs": Array [],
              "id": "ForOfStatement.initializer",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "initializer",
              "signature": "readonly initializer: ForInitializer;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1445,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1445",
              },
              "type": "ForInitializer",
            },
            Object {
              "docs": Array [],
              "id": "ForOfStatement.kind",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "kind",
              "signature": "readonly kind: SyntaxKind.ForOfStatement;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1443,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1443",
              },
              "type": "number",
            },
          ],
        },
        "name": "ForOfStatement",
        "signature": "interface ForOfStatement extends IterationStatement {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 1442,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1442",
        },
      },
      Object {
        "docs": Array [],
        "id": "ForStatement",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "ForStatement.condition",
              "isOptional": true,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "condition",
              "signature": "readonly condition?: Expression;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1433,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1433",
              },
              "type": "Expression",
            },
            Object {
              "docs": Array [],
              "id": "ForStatement.incrementor",
              "isOptional": true,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "incrementor",
              "signature": "readonly incrementor?: Expression;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1434,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1434",
              },
              "type": "Expression",
            },
            Object {
              "docs": Array [],
              "id": "ForStatement.initializer",
              "isOptional": true,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "initializer",
              "signature": "readonly initializer?: ForInitializer;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1432,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1432",
              },
              "type": "ForInitializer",
            },
            Object {
              "docs": Array [],
              "id": "ForStatement.kind",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "kind",
              "signature": "readonly kind: SyntaxKind.ForStatement;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1431,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1431",
              },
              "type": "number",
            },
          ],
        },
        "name": "ForStatement",
        "signature": "interface ForStatement extends IterationStatement {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 1430,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1430",
        },
      },
      Object {
        "docs": Array [],
        "id": "FunctionDeclaration",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "FunctionDeclaration.body",
              "isOptional": true,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "body",
              "signature": "readonly body?: FunctionBody;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 800,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L800",
              },
              "type": "Block",
            },
            Object {
              "docs": Array [],
              "id": "FunctionDeclaration.kind",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "kind",
              "signature": "readonly kind: SyntaxKind.FunctionDeclaration;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 798,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L798",
              },
              "type": "number",
            },
            Object {
              "docs": Array [],
              "id": "FunctionDeclaration.name",
              "isOptional": true,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "name",
              "signature": "readonly name?: Identifier;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 799,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L799",
              },
              "type": "Identifier",
            },
          ],
        },
        "name": "FunctionDeclaration",
        "signature": "interface FunctionDeclaration
    extends FunctionLikeDeclarationBase,
        DeclarationStatement {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 797,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L797",
        },
      },
      Object {
        "docs": Array [],
        "id": "FunctionExpression",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "FunctionExpression.body",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "body",
              "signature": "readonly body: FunctionBody;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1121,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1121",
              },
              "type": "Block",
            },
            Object {
              "docs": Array [],
              "id": "FunctionExpression.kind",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "kind",
              "signature": "readonly kind: SyntaxKind.FunctionExpression;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1119,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1119",
              },
              "type": "number",
            },
            Object {
              "docs": Array [],
              "id": "FunctionExpression.name",
              "isOptional": true,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "name",
              "signature": "readonly name?: Identifier;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1120,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1120",
              },
              "type": "Identifier",
            },
          ],
        },
        "name": "FunctionExpression",
        "signature": "interface FunctionExpression
    extends PrimaryExpression,
        FunctionLikeDeclarationBase,
        JSDocContainer {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 1118,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1118",
        },
      },
      Object {
        "docs": Array [
          "/**
     * Several node kinds share function-like features such as a signature,
     * a name, and a body. These nodes should extend FunctionLikeDeclarationBase.
     * Examples:
     * - FunctionDeclaration
     * - MethodDeclaration
     * - AccessorDeclaration
     */",
        ],
        "id": "FunctionLikeDeclarationBase",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "FunctionLikeDeclarationBase.asteriskToken",
              "isOptional": true,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "asteriskToken",
              "signature": "readonly asteriskToken?: AsteriskToken;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 789,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L789",
              },
              "type": "AsteriskToken",
            },
            Object {
              "docs": Array [],
              "id": "FunctionLikeDeclarationBase.body",
              "isOptional": true,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "body",
              "signature": "readonly body?: Block | Expression;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 792,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L792",
              },
              "type": "Expression | Block",
            },
            Object {
              "docs": Array [],
              "id": "FunctionLikeDeclarationBase.exclamationToken",
              "isOptional": true,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "exclamationToken",
              "signature": "readonly exclamationToken?: ExclamationToken;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 791,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L791",
              },
              "type": "ExclamationToken",
            },
            Object {
              "docs": Array [],
              "id": "FunctionLikeDeclarationBase.questionToken",
              "isOptional": true,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "questionToken",
              "signature": "readonly questionToken?: QuestionToken;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 790,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L790",
              },
              "type": "QuestionToken",
            },
          ],
        },
        "name": "FunctionLikeDeclarationBase",
        "signature": "interface FunctionLikeDeclarationBase extends SignatureDeclarationBase {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 787,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L787",
        },
      },
      Object {
        "docs": Array [],
        "id": "FunctionOrConstructorTypeNodeBase",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "FunctionOrConstructorTypeNodeBase.kind",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "kind",
              "signature": "readonly kind: SyntaxKind.FunctionType | SyntaxKind.ConstructorType;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 858,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L858",
              },
              "type": "SyntaxKind.FunctionType | SyntaxKind.ConstructorType",
            },
            Object {
              "docs": Array [],
              "id": "FunctionOrConstructorTypeNodeBase.type",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "type",
              "signature": "readonly type: TypeNode;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 859,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L859",
              },
              "type": "TypeNode",
            },
          ],
        },
        "name": "FunctionOrConstructorTypeNodeBase",
        "signature": "interface FunctionOrConstructorTypeNodeBase
    extends TypeNode,
        SignatureDeclarationBase {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 857,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L857",
        },
      },
      Object {
        "docs": Array [],
        "id": "FunctionTypeNode",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "FunctionTypeNode.kind",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "kind",
              "signature": "readonly kind: SyntaxKind.FunctionType;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 862,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L862",
              },
              "type": "number",
            },
          ],
        },
        "name": "FunctionTypeNode",
        "signature": "interface FunctionTypeNode extends FunctionOrConstructorTypeNodeBase {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 861,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L861",
        },
      },
      Object {
        "docs": Array [],
        "id": "GenericType",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [],
        },
        "name": "GenericType",
        "signature": "interface GenericType extends InterfaceType, TypeReference {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 2586,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2586",
        },
      },
      Object {
        "docs": Array [],
        "id": "GetAccessorDeclaration",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "GetAccessorDeclaration.body",
              "isOptional": true,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "body",
              "signature": "readonly body?: FunctionBody;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 827,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L827",
              },
              "type": "Block",
            },
            Object {
              "docs": Array [],
              "id": "GetAccessorDeclaration.kind",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "kind",
              "signature": "readonly kind: SyntaxKind.GetAccessor;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 824,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L824",
              },
              "type": "number",
            },
            Object {
              "docs": Array [],
              "id": "GetAccessorDeclaration.name",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "name",
              "signature": "readonly name: PropertyName;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 826,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L826",
              },
              "type": "PropertyName",
            },
            Object {
              "docs": Array [],
              "id": "GetAccessorDeclaration.parent",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "parent",
              "signature": "readonly parent: ClassLikeDeclaration | ObjectLiteralExpression;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 825,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L825",
              },
              "type": "ClassLikeDeclaration | ObjectLiteralExpression",
            },
          ],
        },
        "name": "GetAccessorDeclaration",
        "signature": "interface GetAccessorDeclaration
    extends FunctionLikeDeclarationBase,
        ClassElement,
        ObjectLiteralElement,
        JSDocContainer {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 823,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L823",
        },
      },
      Object {
        "docs": Array [],
        "id": "GetCompletionsAtPositionOptions",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [
                "/** @deprecated Use includeCompletionsForModuleExports */",
              ],
              "id": "GetCompletionsAtPositionOptions.includeExternalModuleExports",
              "isOptional": true,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "includeExternalModuleExports",
              "signature": "includeExternalModuleExports?: boolean;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5596,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5596",
              },
              "type": "boolean",
            },
            Object {
              "docs": Array [
                "/** @deprecated Use includeCompletionsWithInsertText */",
              ],
              "id": "GetCompletionsAtPositionOptions.includeInsertTextCompletions",
              "isOptional": true,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "includeInsertTextCompletions",
              "signature": "includeInsertTextCompletions?: boolean;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5598,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5598",
              },
              "type": "boolean",
            },
            Object {
              "docs": Array [
                "/**
         * If the editor is asking for completions because a certain character was typed
         * (as opposed to when the user explicitly requested them) this should be set.
         */",
              ],
              "id": "GetCompletionsAtPositionOptions.triggerCharacter",
              "isOptional": true,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "triggerCharacter",
              "signature": "triggerCharacter?: CompletionsTriggerCharacter;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5594,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5594",
              },
              "type": "CompletionsTriggerCharacter",
            },
          ],
        },
        "name": "GetCompletionsAtPositionOptions",
        "signature": "interface GetCompletionsAtPositionOptions extends UserPreferences {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 5589,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5589",
        },
      },
      Object {
        "docs": Array [],
        "id": "GetEffectiveTypeRootsHost",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [
            Object {
              "docs": Array [],
              "id": "GetEffectiveTypeRootsHost.directoryExists",
              "kind": "InterfaceMethodDeclaration",
              "name": "directoryExists",
              "signature": "directoryExists: (directoryName: string) => boolean;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3775,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3775",
              },
              "type": "(directoryName: string) => boolean",
            },
            Object {
              "docs": Array [],
              "id": "GetEffectiveTypeRootsHost.getCurrentDirectory",
              "kind": "InterfaceMethodDeclaration",
              "name": "getCurrentDirectory",
              "signature": "getCurrentDirectory: () => string;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3776,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3776",
              },
              "type": "() => string",
            },
          ],
          "properties": Array [],
        },
        "name": "GetEffectiveTypeRootsHost",
        "signature": "interface GetEffectiveTypeRootsHost {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 3774,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3774",
        },
      },
      Object {
        "docs": Array [],
        "id": "HeritageClause",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "HeritageClause.kind",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "kind",
              "signature": "readonly kind: SyntaxKind.HeritageClause;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1546,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1546",
              },
              "type": "number",
            },
            Object {
              "docs": Array [],
              "id": "HeritageClause.parent",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "parent",
              "signature": "readonly parent: InterfaceDeclaration | ClassLikeDeclaration;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1547,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1547",
              },
              "type": "ClassLikeDeclaration | InterfaceDeclaration",
            },
            Object {
              "docs": Array [],
              "id": "HeritageClause.token",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "token",
              "signature": "readonly token: SyntaxKind.ExtendsKeyword | SyntaxKind.ImplementsKeyword;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1548,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1548",
              },
              "type": "SyntaxKind.ExtendsKeyword | SyntaxKind.ImplementsKeyword",
            },
            Object {
              "docs": Array [],
              "id": "HeritageClause.types",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "types",
              "signature": "readonly types: NodeArray<ExpressionWithTypeArguments>;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1549,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1549",
              },
              "type": "NodeArray<ExpressionWithTypeArguments>",
            },
          ],
        },
        "name": "HeritageClause",
        "signature": "interface HeritageClause extends Node {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 1545,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1545",
        },
      },
      Object {
        "docs": Array [],
        "id": "HighlightSpan",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "HighlightSpan.contextSpan",
              "isOptional": true,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "contextSpan",
              "signature": "contextSpan?: TextSpan;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5850,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5850",
              },
              "type": "TextSpan",
            },
            Object {
              "docs": Array [],
              "id": "HighlightSpan.fileName",
              "isOptional": true,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "fileName",
              "signature": "fileName?: string;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5847,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5847",
              },
              "type": "string",
            },
            Object {
              "docs": Array [],
              "id": "HighlightSpan.isInString",
              "isOptional": true,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "isInString",
              "signature": "isInString?: true;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5848,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5848",
              },
              "type": "boolean",
            },
            Object {
              "docs": Array [],
              "id": "HighlightSpan.kind",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "kind",
              "signature": "kind: HighlightSpanKind;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5851,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5851",
              },
              "type": "HighlightSpanKind",
            },
            Object {
              "docs": Array [],
              "id": "HighlightSpan.textSpan",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "textSpan",
              "signature": "textSpan: TextSpan;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5849,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5849",
              },
              "type": "TextSpan",
            },
          ],
        },
        "name": "HighlightSpan",
        "signature": "interface HighlightSpan {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 5846,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5846",
        },
      },
      Object {
        "docs": Array [],
        "id": "HostCancellationToken",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [
            Object {
              "docs": Array [],
              "id": "HostCancellationToken.isCancellationRequested",
              "kind": "InterfaceMethodDeclaration",
              "name": "isCancellationRequested",
              "signature": "isCancellationRequested: () => boolean;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5368,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5368",
              },
              "type": "() => boolean",
            },
          ],
          "properties": Array [],
        },
        "name": "HostCancellationToken",
        "signature": "interface HostCancellationToken {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 5367,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5367",
        },
      },
      Object {
        "docs": Array [],
        "id": "Identifier",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [
                "/**
         * Prefer to use \`id.unescapedText\`. (Note: This is available only in services, not internally to the TypeScript compiler.)
         * Text of identifier, but if the identifier begins with two underscores, this will begin with three.
         */",
              ],
              "id": "Identifier.escapedText",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "escapedText",
              "signature": "readonly escapedText: __String;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 627,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L627",
              },
              "type": "__String",
            },
            Object {
              "docs": Array [],
              "id": "Identifier.isInJSDocNamespace",
              "isOptional": true,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "isInJSDocNamespace",
              "signature": "isInJSDocNamespace?: boolean;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 629,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L629",
              },
              "type": "boolean",
            },
            Object {
              "docs": Array [],
              "id": "Identifier.kind",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "kind",
              "signature": "readonly kind: SyntaxKind.Identifier;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 622,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L622",
              },
              "type": "number",
            },
            Object {
              "docs": Array [],
              "id": "Identifier.originalKeywordKind",
              "isOptional": true,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "originalKeywordKind",
              "signature": "readonly originalKeywordKind?: SyntaxKind;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 628,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L628",
              },
              "type": "SyntaxKind",
            },
          ],
        },
        "name": "Identifier",
        "signature": "interface Identifier extends PrimaryExpression, Declaration {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 621,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L621",
        },
      },
      Object {
        "docs": Array [],
        "id": "Identifier",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "Identifier.text",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "text",
              "signature": "readonly text: string;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5273,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5273",
              },
              "type": "string",
            },
          ],
        },
        "name": "Identifier",
        "signature": "interface Identifier {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 5272,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5272",
        },
      },
      Object {
        "docs": Array [],
        "id": "IdentifierTypePredicate",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "IdentifierTypePredicate.kind",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "kind",
              "signature": "kind: TypePredicateKind.Identifier;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2325,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2325",
              },
              "type": "number",
            },
            Object {
              "docs": Array [],
              "id": "IdentifierTypePredicate.parameterIndex",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "parameterIndex",
              "signature": "parameterIndex: number;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2327,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2327",
              },
              "type": "number",
            },
            Object {
              "docs": Array [],
              "id": "IdentifierTypePredicate.parameterName",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "parameterName",
              "signature": "parameterName: string;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2326,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2326",
              },
              "type": "string",
            },
            Object {
              "docs": Array [],
              "id": "IdentifierTypePredicate.type",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "type",
              "signature": "type: Type;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2328,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2328",
              },
              "type": "Type",
            },
          ],
        },
        "name": "IdentifierTypePredicate",
        "signature": "interface IdentifierTypePredicate extends TypePredicateBase {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 2324,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2324",
        },
      },
      Object {
        "docs": Array [],
        "id": "IfStatement",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "IfStatement.elseStatement",
              "isOptional": true,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "elseStatement",
              "signature": "readonly elseStatement?: Statement;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1416,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1416",
              },
              "type": "Statement",
            },
            Object {
              "docs": Array [],
              "id": "IfStatement.expression",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "expression",
              "signature": "readonly expression: Expression;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1414,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1414",
              },
              "type": "Expression",
            },
            Object {
              "docs": Array [],
              "id": "IfStatement.kind",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "kind",
              "signature": "readonly kind: SyntaxKind.IfStatement;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1413,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1413",
              },
              "type": "number",
            },
            Object {
              "docs": Array [],
              "id": "IfStatement.thenStatement",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "thenStatement",
              "signature": "readonly thenStatement: Statement;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1415,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1415",
              },
              "type": "Statement",
            },
          ],
        },
        "name": "IfStatement",
        "signature": "interface IfStatement extends Statement {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 1412,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1412",
        },
      },
      Object {
        "docs": Array [],
        "id": "ImplementationLocation",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "ImplementationLocation.displayParts",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "displayParts",
              "signature": "displayParts: SymbolDisplayPart[];",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5838,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5838",
              },
              "type": "SymbolDisplayPart[]",
            },
            Object {
              "docs": Array [],
              "id": "ImplementationLocation.kind",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "kind",
              "signature": "kind: ScriptElementKind;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5837,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5837",
              },
              "type": "ScriptElementKind",
            },
          ],
        },
        "name": "ImplementationLocation",
        "signature": "interface ImplementationLocation extends DocumentSpan {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 5836,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5836",
        },
      },
      Object {
        "docs": Array [],
        "id": "ImportCall",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "ImportCall.expression",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "expression",
              "signature": "readonly expression: ImportExpression;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1262,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1262",
              },
              "type": "ImportExpression",
            },
          ],
        },
        "name": "ImportCall",
        "signature": "interface ImportCall extends CallExpression {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 1261,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1261",
        },
      },
      Object {
        "docs": Array [],
        "id": "ImportClause",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "ImportClause.isTypeOnly",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "isTypeOnly",
              "signature": "readonly isTypeOnly: boolean;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1620,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1620",
              },
              "type": "boolean",
            },
            Object {
              "docs": Array [],
              "id": "ImportClause.kind",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "kind",
              "signature": "readonly kind: SyntaxKind.ImportClause;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1618,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1618",
              },
              "type": "number",
            },
            Object {
              "docs": Array [],
              "id": "ImportClause.name",
              "isOptional": true,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "name",
              "signature": "readonly name?: Identifier;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1621,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1621",
              },
              "type": "Identifier",
            },
            Object {
              "docs": Array [],
              "id": "ImportClause.namedBindings",
              "isOptional": true,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "namedBindings",
              "signature": "readonly namedBindings?: NamedImportBindings;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1622,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1622",
              },
              "type": "NamedImportBindings",
            },
            Object {
              "docs": Array [],
              "id": "ImportClause.parent",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "parent",
              "signature": "readonly parent: ImportDeclaration;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1619,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1619",
              },
              "type": "ImportDeclaration",
            },
          ],
        },
        "name": "ImportClause",
        "signature": "interface ImportClause extends NamedDeclaration {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 1617,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1617",
        },
      },
      Object {
        "docs": Array [],
        "id": "ImportDeclaration",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "ImportDeclaration.importClause",
              "isOptional": true,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "importClause",
              "signature": "readonly importClause?: ImportClause;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1611,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1611",
              },
              "type": "ImportClause",
            },
            Object {
              "docs": Array [],
              "id": "ImportDeclaration.kind",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "kind",
              "signature": "readonly kind: SyntaxKind.ImportDeclaration;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1609,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1609",
              },
              "type": "number",
            },
            Object {
              "docs": Array [
                "/** If this is not a StringLiteral it will be a grammar error. */",
              ],
              "id": "ImportDeclaration.moduleSpecifier",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "moduleSpecifier",
              "signature": "readonly moduleSpecifier: Expression;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1613,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1613",
              },
              "type": "Expression",
            },
            Object {
              "docs": Array [],
              "id": "ImportDeclaration.parent",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "parent",
              "signature": "readonly parent: SourceFile | ModuleBlock;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1610,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1610",
              },
              "type": "SourceFile | ModuleBlock",
            },
          ],
        },
        "name": "ImportDeclaration",
        "signature": "interface ImportDeclaration extends Statement, JSDocContainer {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 1608,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1608",
        },
      },
      Object {
        "docs": Array [
          "/**
     * One of:
     * - import x = require(\\"mod\\");
     * - import x = M.x;
     */",
        ],
        "id": "ImportEqualsDeclaration",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "ImportEqualsDeclaration.kind",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "kind",
              "signature": "readonly kind: SyntaxKind.ImportEqualsDeclaration;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1598,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1598",
              },
              "type": "number",
            },
            Object {
              "docs": Array [],
              "id": "ImportEqualsDeclaration.moduleReference",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "moduleReference",
              "signature": "readonly moduleReference: ModuleReference;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1601,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1601",
              },
              "type": "ModuleReference",
            },
            Object {
              "docs": Array [],
              "id": "ImportEqualsDeclaration.name",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "name",
              "signature": "readonly name: Identifier;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1600,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1600",
              },
              "type": "Identifier",
            },
            Object {
              "docs": Array [],
              "id": "ImportEqualsDeclaration.parent",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "parent",
              "signature": "readonly parent: SourceFile | ModuleBlock;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1599,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1599",
              },
              "type": "SourceFile | ModuleBlock",
            },
          ],
        },
        "name": "ImportEqualsDeclaration",
        "signature": "interface ImportEqualsDeclaration extends DeclarationStatement, JSDocContainer {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 1597,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1597",
        },
      },
      Object {
        "docs": Array [],
        "id": "ImportExpression",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "ImportExpression.kind",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "kind",
              "signature": "readonly kind: SyntaxKind.ImportKeyword;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1031,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1031",
              },
              "type": "number",
            },
          ],
        },
        "name": "ImportExpression",
        "signature": "interface ImportExpression extends PrimaryExpression {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 1030,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1030",
        },
      },
      Object {
        "docs": Array [],
        "id": "ImportSpecifier",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "ImportSpecifier.kind",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "kind",
              "signature": "readonly kind: SyntaxKind.ImportSpecifier;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1659,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1659",
              },
              "type": "number",
            },
            Object {
              "docs": Array [],
              "id": "ImportSpecifier.name",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "name",
              "signature": "readonly name: Identifier;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1662,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1662",
              },
              "type": "Identifier",
            },
            Object {
              "docs": Array [],
              "id": "ImportSpecifier.parent",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "parent",
              "signature": "readonly parent: NamedImports;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1660,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1660",
              },
              "type": "NamedImports",
            },
            Object {
              "docs": Array [],
              "id": "ImportSpecifier.propertyName",
              "isOptional": true,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "propertyName",
              "signature": "readonly propertyName?: Identifier;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1661,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1661",
              },
              "type": "Identifier",
            },
          ],
        },
        "name": "ImportSpecifier",
        "signature": "interface ImportSpecifier extends NamedDeclaration {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 1658,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1658",
        },
      },
      Object {
        "docs": Array [],
        "id": "ImportTypeNode",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "ImportTypeNode.argument",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "argument",
              "signature": "readonly argument: TypeNode;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 850,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L850",
              },
              "type": "TypeNode",
            },
            Object {
              "docs": Array [],
              "id": "ImportTypeNode.isTypeOf",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "isTypeOf",
              "signature": "readonly isTypeOf: boolean;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 849,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L849",
              },
              "type": "boolean",
            },
            Object {
              "docs": Array [],
              "id": "ImportTypeNode.kind",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "kind",
              "signature": "readonly kind: SyntaxKind.ImportType;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 848,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L848",
              },
              "type": "number",
            },
            Object {
              "docs": Array [],
              "id": "ImportTypeNode.qualifier",
              "isOptional": true,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "qualifier",
              "signature": "readonly qualifier?: EntityName;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 851,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L851",
              },
              "type": "EntityName",
            },
          ],
        },
        "name": "ImportTypeNode",
        "signature": "interface ImportTypeNode extends NodeWithTypeArguments {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 847,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L847",
        },
      },
      Object {
        "docs": Array [],
        "id": "IncompleteType",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "IncompleteType.flags",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "flags",
              "signature": "flags: TypeFlags;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1914,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1914",
              },
              "type": "TypeFlags",
            },
            Object {
              "docs": Array [],
              "id": "IncompleteType.type",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "type",
              "signature": "type: Type;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1915,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1915",
              },
              "type": "Type",
            },
          ],
        },
        "name": "IncompleteType",
        "signature": "interface IncompleteType {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 1913,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1913",
        },
      },
      Object {
        "docs": Array [],
        "id": "IncrementalProgramOptions",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "IncrementalProgramOptions.configFileParsingDiagnostics",
              "isOptional": true,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "configFileParsingDiagnostics",
              "signature": "configFileParsingDiagnostics?: readonly Diagnostic[];",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 4967,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4967",
              },
              "type": "readonly Diagnostic[]",
            },
            Object {
              "docs": Array [],
              "id": "IncrementalProgramOptions.createProgram",
              "isOptional": true,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "createProgram",
              "signature": "createProgram?: CreateProgram<T>;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 4970,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4970",
              },
              "type": "CreateProgram<T>",
            },
            Object {
              "docs": Array [],
              "id": "IncrementalProgramOptions.host",
              "isOptional": true,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "host",
              "signature": "host?: CompilerHost;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 4969,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4969",
              },
              "type": "CompilerHost",
            },
            Object {
              "docs": Array [],
              "id": "IncrementalProgramOptions.options",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "options",
              "signature": "options: CompilerOptions;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 4966,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4966",
              },
              "type": "CompilerOptions",
            },
            Object {
              "docs": Array [],
              "id": "IncrementalProgramOptions.projectReferences",
              "isOptional": true,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "projectReferences",
              "signature": "projectReferences?: readonly ProjectReference[];",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 4968,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4968",
              },
              "type": "readonly ProjectReference[]",
            },
            Object {
              "docs": Array [],
              "id": "IncrementalProgramOptions.rootNames",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "rootNames",
              "signature": "rootNames: readonly string[];",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 4965,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4965",
              },
              "type": "readonly string[]",
            },
          ],
        },
        "name": "IncrementalProgramOptions",
        "signature": "interface IncrementalProgramOptions<T extends BuilderProgram> {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4964,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4964",
        },
      },
      Object {
        "docs": Array [],
        "id": "IndexedAccessType",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "IndexedAccessType.constraint",
              "isOptional": true,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "constraint",
              "signature": "constraint?: Type;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2626,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2626",
              },
              "type": "Type",
            },
            Object {
              "docs": Array [],
              "id": "IndexedAccessType.indexType",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "indexType",
              "signature": "indexType: Type;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2625,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2625",
              },
              "type": "Type",
            },
            Object {
              "docs": Array [],
              "id": "IndexedAccessType.objectType",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "objectType",
              "signature": "objectType: Type;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2624,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2624",
              },
              "type": "Type",
            },
            Object {
              "docs": Array [],
              "id": "IndexedAccessType.simplifiedForReading",
              "isOptional": true,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "simplifiedForReading",
              "signature": "simplifiedForReading?: Type;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2627,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2627",
              },
              "type": "Type",
            },
            Object {
              "docs": Array [],
              "id": "IndexedAccessType.simplifiedForWriting",
              "isOptional": true,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "simplifiedForWriting",
              "signature": "simplifiedForWriting?: Type;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2628,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2628",
              },
              "type": "Type",
            },
          ],
        },
        "name": "IndexedAccessType",
        "signature": "interface IndexedAccessType extends InstantiableType {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 2623,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2623",
        },
      },
      Object {
        "docs": Array [],
        "id": "IndexedAccessTypeNode",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "IndexedAccessTypeNode.indexType",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "indexType",
              "signature": "readonly indexType: TypeNode;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 945,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L945",
              },
              "type": "TypeNode",
            },
            Object {
              "docs": Array [],
              "id": "IndexedAccessTypeNode.kind",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "kind",
              "signature": "readonly kind: SyntaxKind.IndexedAccessType;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 943,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L943",
              },
              "type": "number",
            },
            Object {
              "docs": Array [],
              "id": "IndexedAccessTypeNode.objectType",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "objectType",
              "signature": "readonly objectType: TypeNode;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 944,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L944",
              },
              "type": "TypeNode",
            },
          ],
        },
        "name": "IndexedAccessTypeNode",
        "signature": "interface IndexedAccessTypeNode extends TypeNode {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 942,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L942",
        },
      },
      Object {
        "docs": Array [],
        "id": "IndexInfo",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "IndexInfo.declaration",
              "isOptional": true,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "declaration",
              "signature": "declaration?: IndexSignatureDeclaration;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2680,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2680",
              },
              "type": "IndexSignatureDeclaration",
            },
            Object {
              "docs": Array [],
              "id": "IndexInfo.isReadonly",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "isReadonly",
              "signature": "isReadonly: boolean;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2679,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2679",
              },
              "type": "boolean",
            },
            Object {
              "docs": Array [],
              "id": "IndexInfo.type",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "type",
              "signature": "type: Type;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2678,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2678",
              },
              "type": "Type",
            },
          ],
        },
        "name": "IndexInfo",
        "signature": "interface IndexInfo {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 2677,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2677",
        },
      },
      Object {
        "docs": Array [],
        "id": "IndexSignatureDeclaration",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "IndexSignatureDeclaration.kind",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "kind",
              "signature": "readonly kind: SyntaxKind.IndexSignature;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 837,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L837",
              },
              "type": "number",
            },
            Object {
              "docs": Array [],
              "id": "IndexSignatureDeclaration.parent",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "parent",
              "signature": "readonly parent: ObjectTypeDeclaration;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 838,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L838",
              },
              "type": "ObjectTypeDeclaration",
            },
            Object {
              "docs": Array [],
              "id": "IndexSignatureDeclaration.type",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "type",
              "signature": "readonly type: TypeNode;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 839,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L839",
              },
              "type": "TypeNode",
            },
          ],
        },
        "name": "IndexSignatureDeclaration",
        "signature": "interface IndexSignatureDeclaration
    extends SignatureDeclarationBase,
        ClassElement,
        TypeElement {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 836,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L836",
        },
      },
      Object {
        "docs": Array [],
        "id": "IndexType",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "IndexType.type",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "type",
              "signature": "type: InstantiableType | UnionOrIntersectionType;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2632,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2632",
              },
              "type": "UnionOrIntersectionType | InstantiableType",
            },
          ],
        },
        "name": "IndexType",
        "signature": "interface IndexType extends InstantiableType {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 2631,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2631",
        },
      },
      Object {
        "docs": Array [],
        "id": "InferTypeNode",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "InferTypeNode.kind",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "kind",
              "signature": "readonly kind: SyntaxKind.InferType;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 930,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L930",
              },
              "type": "number",
            },
            Object {
              "docs": Array [],
              "id": "InferTypeNode.typeParameter",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "typeParameter",
              "signature": "readonly typeParameter: TypeParameterDeclaration;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 931,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L931",
              },
              "type": "TypeParameterDeclaration",
            },
          ],
        },
        "name": "InferTypeNode",
        "signature": "interface InferTypeNode extends TypeNode {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 929,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L929",
        },
      },
      Object {
        "docs": Array [],
        "id": "InputFiles",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "InputFiles.declarationMapPath",
              "isOptional": true,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "declarationMapPath",
              "signature": "declarationMapPath?: string;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1958,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1958",
              },
              "type": "string",
            },
            Object {
              "docs": Array [],
              "id": "InputFiles.declarationMapText",
              "isOptional": true,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "declarationMapText",
              "signature": "declarationMapText?: string;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1959,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1959",
              },
              "type": "string",
            },
            Object {
              "docs": Array [],
              "id": "InputFiles.declarationPath",
              "isOptional": true,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "declarationPath",
              "signature": "declarationPath?: string;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1956,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1956",
              },
              "type": "string",
            },
            Object {
              "docs": Array [],
              "id": "InputFiles.declarationText",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "declarationText",
              "signature": "declarationText: string;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1957,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1957",
              },
              "type": "string",
            },
            Object {
              "docs": Array [],
              "id": "InputFiles.javascriptMapPath",
              "isOptional": true,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "javascriptMapPath",
              "signature": "javascriptMapPath?: string;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1954,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1954",
              },
              "type": "string",
            },
            Object {
              "docs": Array [],
              "id": "InputFiles.javascriptMapText",
              "isOptional": true,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "javascriptMapText",
              "signature": "javascriptMapText?: string;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1955,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1955",
              },
              "type": "string",
            },
            Object {
              "docs": Array [],
              "id": "InputFiles.javascriptPath",
              "isOptional": true,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "javascriptPath",
              "signature": "javascriptPath?: string;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1952,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1952",
              },
              "type": "string",
            },
            Object {
              "docs": Array [],
              "id": "InputFiles.javascriptText",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "javascriptText",
              "signature": "javascriptText: string;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1953,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1953",
              },
              "type": "string",
            },
            Object {
              "docs": Array [],
              "id": "InputFiles.kind",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "kind",
              "signature": "readonly kind: SyntaxKind.InputFiles;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1951,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1951",
              },
              "type": "number",
            },
          ],
        },
        "name": "InputFiles",
        "signature": "interface InputFiles extends Node {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 1950,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1950",
        },
      },
      Object {
        "docs": Array [],
        "id": "InstallPackageAction",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [],
        },
        "name": "InstallPackageAction",
        "signature": "interface InstallPackageAction {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 5749,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5749",
        },
      },
      Object {
        "docs": Array [],
        "id": "InstallPackageOptions",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "InstallPackageOptions.fileName",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "fileName",
              "signature": "fileName: Path;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5371,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5371",
              },
              "type": "String & { __pathBrand: any; }",
            },
            Object {
              "docs": Array [],
              "id": "InstallPackageOptions.packageName",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "packageName",
              "signature": "packageName: string;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5372,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5372",
              },
              "type": "string",
            },
          ],
        },
        "name": "InstallPackageOptions",
        "signature": "interface InstallPackageOptions {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 5370,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5370",
        },
      },
      Object {
        "docs": Array [],
        "id": "InstantiableType",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [],
        },
        "name": "InstantiableType",
        "signature": "interface InstantiableType extends Type {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 2619,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2619",
        },
      },
      Object {
        "docs": Array [],
        "id": "InterfaceDeclaration",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "InterfaceDeclaration.heritageClauses",
              "isOptional": true,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "heritageClauses",
              "signature": "readonly heritageClauses?: NodeArray<HeritageClause>;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1542,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1542",
              },
              "type": "NodeArray<HeritageClause>",
            },
            Object {
              "docs": Array [],
              "id": "InterfaceDeclaration.kind",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "kind",
              "signature": "readonly kind: SyntaxKind.InterfaceDeclaration;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1539,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1539",
              },
              "type": "number",
            },
            Object {
              "docs": Array [],
              "id": "InterfaceDeclaration.members",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "members",
              "signature": "readonly members: NodeArray<TypeElement>;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1543,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1543",
              },
              "type": "NodeArray<TypeElement>",
            },
            Object {
              "docs": Array [],
              "id": "InterfaceDeclaration.name",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "name",
              "signature": "readonly name: Identifier;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1540,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1540",
              },
              "type": "Identifier",
            },
            Object {
              "docs": Array [],
              "id": "InterfaceDeclaration.typeParameters",
              "isOptional": true,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "typeParameters",
              "signature": "readonly typeParameters?: NodeArray<TypeParameterDeclaration>;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1541,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1541",
              },
              "type": "NodeArray<TypeParameterDeclaration>",
            },
          ],
        },
        "name": "InterfaceDeclaration",
        "signature": "interface InterfaceDeclaration extends DeclarationStatement, JSDocContainer {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 1538,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1538",
        },
      },
      Object {
        "docs": Array [
          "/** Class and interface types (ObjectFlags.Class and ObjectFlags.Interface). */",
        ],
        "id": "InterfaceType",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "InterfaceType.localTypeParameters",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "localTypeParameters",
              "signature": "localTypeParameters: TypeParameter[] | undefined;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2559,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2559",
              },
              "type": "TypeParameter[]",
            },
            Object {
              "docs": Array [],
              "id": "InterfaceType.outerTypeParameters",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "outerTypeParameters",
              "signature": "outerTypeParameters: TypeParameter[] | undefined;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2558,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2558",
              },
              "type": "TypeParameter[]",
            },
            Object {
              "docs": Array [],
              "id": "InterfaceType.thisType",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "thisType",
              "signature": "thisType: TypeParameter | undefined;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2560,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2560",
              },
              "type": "TypeParameter",
            },
            Object {
              "docs": Array [],
              "id": "InterfaceType.typeParameters",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "typeParameters",
              "signature": "typeParameters: TypeParameter[] | undefined;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2557,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2557",
              },
              "type": "TypeParameter[]",
            },
          ],
        },
        "name": "InterfaceType",
        "signature": "interface InterfaceType extends ObjectType {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 2556,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2556",
        },
      },
      Object {
        "docs": Array [],
        "id": "InterfaceTypeWithDeclaredMembers",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "InterfaceTypeWithDeclaredMembers.declaredCallSignatures",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "declaredCallSignatures",
              "signature": "declaredCallSignatures: Signature[];",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2565,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2565",
              },
              "type": "Signature[]",
            },
            Object {
              "docs": Array [],
              "id": "InterfaceTypeWithDeclaredMembers.declaredConstructSignatures",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "declaredConstructSignatures",
              "signature": "declaredConstructSignatures: Signature[];",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2566,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2566",
              },
              "type": "Signature[]",
            },
            Object {
              "docs": Array [],
              "id": "InterfaceTypeWithDeclaredMembers.declaredNumberIndexInfo",
              "isOptional": true,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "declaredNumberIndexInfo",
              "signature": "declaredNumberIndexInfo?: IndexInfo;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2568,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2568",
              },
              "type": "IndexInfo",
            },
            Object {
              "docs": Array [],
              "id": "InterfaceTypeWithDeclaredMembers.declaredProperties",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "declaredProperties",
              "signature": "declaredProperties: Symbol[];",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2564,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2564",
              },
              "type": "Symbol[]",
            },
            Object {
              "docs": Array [],
              "id": "InterfaceTypeWithDeclaredMembers.declaredStringIndexInfo",
              "isOptional": true,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "declaredStringIndexInfo",
              "signature": "declaredStringIndexInfo?: IndexInfo;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2567,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2567",
              },
              "type": "IndexInfo",
            },
          ],
        },
        "name": "InterfaceTypeWithDeclaredMembers",
        "signature": "interface InterfaceTypeWithDeclaredMembers extends InterfaceType {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 2563,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2563",
        },
      },
      Object {
        "docs": Array [],
        "id": "IntersectionType",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [],
        },
        "name": "IntersectionType",
        "signature": "interface IntersectionType extends UnionOrIntersectionType {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 2612,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2612",
        },
      },
      Object {
        "docs": Array [],
        "id": "IntersectionTypeNode",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "IntersectionTypeNode.kind",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "kind",
              "signature": "readonly kind: SyntaxKind.IntersectionType;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 919,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L919",
              },
              "type": "number",
            },
            Object {
              "docs": Array [],
              "id": "IntersectionTypeNode.types",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "types",
              "signature": "readonly types: NodeArray<TypeNode>;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 920,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L920",
              },
              "type": "NodeArray<TypeNode>",
            },
          ],
        },
        "name": "IntersectionTypeNode",
        "signature": "interface IntersectionTypeNode extends TypeNode {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 918,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L918",
        },
      },
      Object {
        "docs": Array [],
        "id": "InvalidatedProjectBase",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [
            Object {
              "docs": Array [
                "/**
         *  To dispose this project and ensure that all the necessary actions are taken and state is updated accordingly
         */",
              ],
              "id": "InvalidatedProjectBase.done",
              "kind": "InterfaceMethodDeclaration",
              "name": "done",
              "signature": "done: (
    cancellationToken?: CancellationToken,
    writeFile?: WriteFileCallback,
    customTransformers?: CustomTransformers
) => ExitStatus;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5150,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5150",
              },
              "type": "(cancellationToken?: CancellationToken, writeFile?: WriteFileCallback, customTransformers?: CustomTransformers) => ExitStatus",
            },
            Object {
              "docs": Array [],
              "id": "InvalidatedProjectBase.getCompilerOptions",
              "kind": "InterfaceMethodDeclaration",
              "name": "getCompilerOptions",
              "signature": "getCompilerOptions: () => CompilerOptions;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5151,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5151",
              },
              "type": "() => CompilerOptions",
            },
            Object {
              "docs": Array [],
              "id": "InvalidatedProjectBase.getCurrentDirectory",
              "kind": "InterfaceMethodDeclaration",
              "name": "getCurrentDirectory",
              "signature": "getCurrentDirectory: () => string;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5152,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5152",
              },
              "type": "() => string",
            },
          ],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "InvalidatedProjectBase.kind",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "kind",
              "signature": "readonly kind: InvalidatedProjectKind;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5145,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5145",
              },
              "type": "InvalidatedProjectKind",
            },
            Object {
              "docs": Array [],
              "id": "InvalidatedProjectBase.project",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "project",
              "signature": "readonly project: ResolvedConfigFileName;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5146,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5146",
              },
              "type": "String & { _isResolvedConfigFileName: never; }",
            },
          ],
        },
        "name": "InvalidatedProjectBase",
        "signature": "interface InvalidatedProjectBase {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 5144,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5144",
        },
      },
      Object {
        "docs": Array [
          "/**
     * Represents an immutable snapshot of a script at a specified time.Once acquired, the
     * snapshot is observably immutable. i.e. the same calls with the same parameters will return
     * the same values.
     */",
        ],
        "id": "IScriptSnapshot",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [
            Object {
              "docs": Array [
                "/** Releases all resources held by this script snapshot */",
              ],
              "id": "IScriptSnapshot.dispose",
              "kind": "InterfaceMethodDeclaration",
              "name": "dispose",
              "signature": "dispose: () => void;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5354,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5354",
              },
              "type": "() => void",
            },
            Object {
              "docs": Array [
                "/**
         * Gets the TextChangeRange that describe how the text changed between this text and
         * an older version.  This information is used by the incremental parser to determine
         * what sections of the script need to be re-parsed.  'undefined' can be returned if the
         * change range cannot be determined.  However, in that case, incremental parsing will
         * not happen and the entire document will be re - parsed.
         */",
              ],
              "id": "IScriptSnapshot.getChangeRange",
              "kind": "InterfaceMethodDeclaration",
              "name": "getChangeRange",
              "signature": "getChangeRange: (oldSnapshot: IScriptSnapshot) => TextChangeRange | undefined;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5352,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5352",
              },
              "type": "(oldSnapshot: IScriptSnapshot) => TextChangeRange | undefined",
            },
            Object {
              "docs": Array [
                "/** Gets the length of this script snapshot. */",
              ],
              "id": "IScriptSnapshot.getLength",
              "kind": "InterfaceMethodDeclaration",
              "name": "getLength",
              "signature": "getLength: () => number;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5344,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5344",
              },
              "type": "() => number",
            },
            Object {
              "docs": Array [
                "/** Gets a portion of the script snapshot specified by [start, end). */",
              ],
              "id": "IScriptSnapshot.getText",
              "kind": "InterfaceMethodDeclaration",
              "name": "getText",
              "signature": "getText: (start: number, end: number) => string;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5342,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5342",
              },
              "type": "(start: number, end: number) => string",
            },
          ],
          "properties": Array [],
        },
        "name": "IScriptSnapshot",
        "signature": "interface IScriptSnapshot {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 5340,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5340",
        },
      },
      Object {
        "docs": Array [],
        "id": "IterationStatement",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "IterationStatement.statement",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "statement",
              "signature": "readonly statement: Statement;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1419,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1419",
              },
              "type": "Statement",
            },
          ],
        },
        "name": "IterationStatement",
        "signature": "interface IterationStatement extends Statement {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 1418,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1418",
        },
      },
      Object {
        "docs": Array [
          "/** ES6 Iterator type. */",
        ],
        "id": "Iterator",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [
            Object {
              "docs": Array [],
              "id": "Iterator.next",
              "kind": "InterfaceMethodDeclaration",
              "name": "next",
              "signature": "next: () => { value: T; done?: false } | { value: never; done: true };",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 80,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L80",
              },
              "type": "() => {    value: T;    done?: false;} | {    value: never;    done: true;}",
            },
          ],
          "properties": Array [],
        },
        "name": "Iterator",
        "signature": "interface Iterator<T> {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 79,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L79",
        },
      },
      Object {
        "docs": Array [],
        "id": "JSDoc",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "JSDoc.comment",
              "isOptional": true,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "comment",
              "signature": "readonly comment?: string;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1744,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1744",
              },
              "type": "string",
            },
            Object {
              "docs": Array [],
              "id": "JSDoc.kind",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "kind",
              "signature": "readonly kind: SyntaxKind.JSDocComment;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1741,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1741",
              },
              "type": "number",
            },
            Object {
              "docs": Array [],
              "id": "JSDoc.parent",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "parent",
              "signature": "readonly parent: HasJSDoc;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1742,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1742",
              },
              "type": "HasJSDoc",
            },
            Object {
              "docs": Array [],
              "id": "JSDoc.tags",
              "isOptional": true,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "tags",
              "signature": "readonly tags?: NodeArray<JSDocTag>;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1743,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1743",
              },
              "type": "NodeArray<JSDocTag>",
            },
          ],
        },
        "name": "JSDoc",
        "signature": "interface JSDoc extends Node {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 1740,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1740",
        },
      },
      Object {
        "docs": Array [],
        "id": "JSDocAllType",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "JSDocAllType.kind",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "kind",
              "signature": "readonly kind: SyntaxKind.JSDocAllType;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1711,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1711",
              },
              "type": "number",
            },
          ],
        },
        "name": "JSDocAllType",
        "signature": "interface JSDocAllType extends JSDocType {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 1710,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1710",
        },
      },
      Object {
        "docs": Array [
          "/**
     * Note that \`@extends\` is a synonym of \`@augments\`.
     * Both tags are represented by this interface.
     */",
        ],
        "id": "JSDocAugmentsTag",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "JSDocAugmentsTag.class",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "class",
              "signature": "readonly class: ExpressionWithTypeArguments & {
    readonly expression: Identifier | PropertyAccessEntityNameExpression;
};",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1760,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1760",
              },
              "type": "ExpressionWithTypeArguments & { readonly expression: Identifier | PropertyAccessEntityNameExpression; }",
            },
            Object {
              "docs": Array [],
              "id": "JSDocAugmentsTag.kind",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "kind",
              "signature": "readonly kind: SyntaxKind.JSDocAugmentsTag;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1759,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1759",
              },
              "type": "number",
            },
          ],
        },
        "name": "JSDocAugmentsTag",
        "signature": "interface JSDocAugmentsTag extends JSDocTag {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 1758,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1758",
        },
      },
      Object {
        "docs": Array [],
        "id": "JSDocAuthorTag",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "JSDocAuthorTag.kind",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "kind",
              "signature": "readonly kind: SyntaxKind.JSDocAuthorTag;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1771,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1771",
              },
              "type": "number",
            },
          ],
        },
        "name": "JSDocAuthorTag",
        "signature": "interface JSDocAuthorTag extends JSDocTag {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 1770,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1770",
        },
      },
      Object {
        "docs": Array [],
        "id": "JSDocCallbackTag",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "JSDocCallbackTag.fullName",
              "isOptional": true,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "fullName",
              "signature": "readonly fullName?: JSDocNamespaceDeclaration | Identifier;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1827,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1827",
              },
              "type": "Identifier | JSDocNamespaceDeclaration",
            },
            Object {
              "docs": Array [],
              "id": "JSDocCallbackTag.kind",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "kind",
              "signature": "readonly kind: SyntaxKind.JSDocCallbackTag;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1825,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1825",
              },
              "type": "number",
            },
            Object {
              "docs": Array [],
              "id": "JSDocCallbackTag.name",
              "isOptional": true,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "name",
              "signature": "readonly name?: Identifier;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1828,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1828",
              },
              "type": "Identifier",
            },
            Object {
              "docs": Array [],
              "id": "JSDocCallbackTag.parent",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "parent",
              "signature": "readonly parent: JSDoc;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1826,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1826",
              },
              "type": "JSDoc",
            },
            Object {
              "docs": Array [],
              "id": "JSDocCallbackTag.typeExpression",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "typeExpression",
              "signature": "readonly typeExpression: JSDocSignature;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1829,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1829",
              },
              "type": "JSDocSignature",
            },
          ],
        },
        "name": "JSDocCallbackTag",
        "signature": "interface JSDocCallbackTag extends JSDocTag, NamedDeclaration {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 1824,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1824",
        },
      },
      Object {
        "docs": Array [],
        "id": "JSDocClassTag",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "JSDocClassTag.kind",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "kind",
              "signature": "readonly kind: SyntaxKind.JSDocClassTag;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1777,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1777",
              },
              "type": "number",
            },
          ],
        },
        "name": "JSDocClassTag",
        "signature": "interface JSDocClassTag extends JSDocTag {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 1776,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1776",
        },
      },
      Object {
        "docs": Array [],
        "id": "JSDocContainer",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [],
        },
        "name": "JSDocContainer",
        "signature": "interface JSDocContainer {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 559,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L559",
        },
      },
      Object {
        "docs": Array [],
        "id": "JSDocDeprecatedTag",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "JSDocDeprecatedTag.kind",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "kind",
              "signature": "kind: SyntaxKind.JSDocDeprecatedTag;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1774,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1774",
              },
              "type": "number",
            },
          ],
        },
        "name": "JSDocDeprecatedTag",
        "signature": "interface JSDocDeprecatedTag extends JSDocTag {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 1773,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1773",
        },
      },
      Object {
        "docs": Array [],
        "id": "JSDocEnumTag",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "JSDocEnumTag.kind",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "kind",
              "signature": "readonly kind: SyntaxKind.JSDocEnumTag;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1792,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1792",
              },
              "type": "number",
            },
            Object {
              "docs": Array [],
              "id": "JSDocEnumTag.parent",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "parent",
              "signature": "readonly parent: JSDoc;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1793,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1793",
              },
              "type": "JSDoc",
            },
            Object {
              "docs": Array [],
              "id": "JSDocEnumTag.typeExpression",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "typeExpression",
              "signature": "readonly typeExpression: JSDocTypeExpression;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1794,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1794",
              },
              "type": "JSDocTypeExpression",
            },
          ],
        },
        "name": "JSDocEnumTag",
        "signature": "interface JSDocEnumTag extends JSDocTag, Declaration {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 1791,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1791",
        },
      },
      Object {
        "docs": Array [],
        "id": "JSDocFunctionType",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "JSDocFunctionType.kind",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "kind",
              "signature": "readonly kind: SyntaxKind.JSDocFunctionType;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1729,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1729",
              },
              "type": "number",
            },
          ],
        },
        "name": "JSDocFunctionType",
        "signature": "interface JSDocFunctionType extends JSDocType, SignatureDeclarationBase {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 1728,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1728",
        },
      },
      Object {
        "docs": Array [],
        "id": "JSDocImplementsTag",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "JSDocImplementsTag.class",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "class",
              "signature": "readonly class: ExpressionWithTypeArguments & {
    readonly expression: Identifier | PropertyAccessEntityNameExpression;
};",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1766,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1766",
              },
              "type": "ExpressionWithTypeArguments & { readonly expression: Identifier | PropertyAccessEntityNameExpression; }",
            },
            Object {
              "docs": Array [],
              "id": "JSDocImplementsTag.kind",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "kind",
              "signature": "readonly kind: SyntaxKind.JSDocImplementsTag;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1765,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1765",
              },
              "type": "number",
            },
          ],
        },
        "name": "JSDocImplementsTag",
        "signature": "interface JSDocImplementsTag extends JSDocTag {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 1764,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1764",
        },
      },
      Object {
        "docs": Array [],
        "id": "JSDocNamepathType",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "JSDocNamepathType.kind",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "kind",
              "signature": "readonly kind: SyntaxKind.JSDocNamepathType;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1736,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1736",
              },
              "type": "number",
            },
            Object {
              "docs": Array [],
              "id": "JSDocNamepathType.type",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "type",
              "signature": "readonly type: TypeNode;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1737,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1737",
              },
              "type": "TypeNode",
            },
          ],
        },
        "name": "JSDocNamepathType",
        "signature": "interface JSDocNamepathType extends JSDocType {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 1735,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1735",
        },
      },
      Object {
        "docs": Array [],
        "id": "JSDocNameReference",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "JSDocNameReference.kind",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "kind",
              "signature": "readonly kind: SyntaxKind.JSDocNameReference;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1704,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1704",
              },
              "type": "number",
            },
            Object {
              "docs": Array [],
              "id": "JSDocNameReference.name",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "name",
              "signature": "readonly name: EntityName;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1705,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1705",
              },
              "type": "EntityName",
            },
          ],
        },
        "name": "JSDocNameReference",
        "signature": "interface JSDocNameReference extends Node {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 1703,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1703",
        },
      },
      Object {
        "docs": Array [],
        "id": "JSDocNamespaceDeclaration",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "JSDocNamespaceDeclaration.body",
              "isOptional": true,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "body",
              "signature": "readonly body?: JSDocNamespaceBody;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1584,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1584",
              },
              "type": "JSDocNamespaceBody",
            },
            Object {
              "docs": Array [],
              "id": "JSDocNamespaceDeclaration.name",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "name",
              "signature": "readonly name: Identifier;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1583,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1583",
              },
              "type": "Identifier",
            },
          ],
        },
        "name": "JSDocNamespaceDeclaration",
        "signature": "interface JSDocNamespaceDeclaration extends ModuleDeclaration {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 1582,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1582",
        },
      },
      Object {
        "docs": Array [],
        "id": "JSDocNonNullableType",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "JSDocNonNullableType.kind",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "kind",
              "signature": "readonly kind: SyntaxKind.JSDocNonNullableType;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1717,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1717",
              },
              "type": "number",
            },
            Object {
              "docs": Array [],
              "id": "JSDocNonNullableType.type",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "type",
              "signature": "readonly type: TypeNode;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1718,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1718",
              },
              "type": "TypeNode",
            },
          ],
        },
        "name": "JSDocNonNullableType",
        "signature": "interface JSDocNonNullableType extends JSDocType {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 1716,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1716",
        },
      },
      Object {
        "docs": Array [],
        "id": "JSDocNullableType",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "JSDocNullableType.kind",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "kind",
              "signature": "readonly kind: SyntaxKind.JSDocNullableType;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1721,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1721",
              },
              "type": "number",
            },
            Object {
              "docs": Array [],
              "id": "JSDocNullableType.type",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "type",
              "signature": "readonly type: TypeNode;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1722,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1722",
              },
              "type": "TypeNode",
            },
          ],
        },
        "name": "JSDocNullableType",
        "signature": "interface JSDocNullableType extends JSDocType {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 1720,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1720",
        },
      },
      Object {
        "docs": Array [],
        "id": "JSDocOptionalType",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "JSDocOptionalType.kind",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "kind",
              "signature": "readonly kind: SyntaxKind.JSDocOptionalType;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1725,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1725",
              },
              "type": "number",
            },
            Object {
              "docs": Array [],
              "id": "JSDocOptionalType.type",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "type",
              "signature": "readonly type: TypeNode;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1726,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1726",
              },
              "type": "TypeNode",
            },
          ],
        },
        "name": "JSDocOptionalType",
        "signature": "interface JSDocOptionalType extends JSDocType {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 1724,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1724",
        },
      },
      Object {
        "docs": Array [],
        "id": "JSDocParameterTag",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "JSDocParameterTag.kind",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "kind",
              "signature": "readonly kind: SyntaxKind.JSDocParameterTag;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1849,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1849",
              },
              "type": "number",
            },
          ],
        },
        "name": "JSDocParameterTag",
        "signature": "interface JSDocParameterTag extends JSDocPropertyLikeTag {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 1848,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1848",
        },
      },
      Object {
        "docs": Array [],
        "id": "JSDocPrivateTag",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "JSDocPrivateTag.kind",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "kind",
              "signature": "readonly kind: SyntaxKind.JSDocPrivateTag;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1783,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1783",
              },
              "type": "number",
            },
          ],
        },
        "name": "JSDocPrivateTag",
        "signature": "interface JSDocPrivateTag extends JSDocTag {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 1782,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1782",
        },
      },
      Object {
        "docs": Array [],
        "id": "JSDocPropertyLikeTag",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "JSDocPropertyLikeTag.isBracketed",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "isBracketed",
              "signature": "readonly isBracketed: boolean;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1843,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1843",
              },
              "type": "boolean",
            },
            Object {
              "docs": Array [
                "/** Whether the property name came before the type -- non-standard for JSDoc, but Typescript-like */",
              ],
              "id": "JSDocPropertyLikeTag.isNameFirst",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "isNameFirst",
              "signature": "readonly isNameFirst: boolean;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1842,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1842",
              },
              "type": "boolean",
            },
            Object {
              "docs": Array [],
              "id": "JSDocPropertyLikeTag.name",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "name",
              "signature": "readonly name: EntityName;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1839,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1839",
              },
              "type": "EntityName",
            },
            Object {
              "docs": Array [],
              "id": "JSDocPropertyLikeTag.parent",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "parent",
              "signature": "readonly parent: JSDoc;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1838,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1838",
              },
              "type": "JSDoc",
            },
            Object {
              "docs": Array [],
              "id": "JSDocPropertyLikeTag.typeExpression",
              "isOptional": true,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "typeExpression",
              "signature": "readonly typeExpression?: JSDocTypeExpression;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1840,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1840",
              },
              "type": "JSDocTypeExpression",
            },
          ],
        },
        "name": "JSDocPropertyLikeTag",
        "signature": "interface JSDocPropertyLikeTag extends JSDocTag, Declaration {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 1837,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1837",
        },
      },
      Object {
        "docs": Array [],
        "id": "JSDocPropertyTag",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "JSDocPropertyTag.kind",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "kind",
              "signature": "readonly kind: SyntaxKind.JSDocPropertyTag;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1846,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1846",
              },
              "type": "number",
            },
          ],
        },
        "name": "JSDocPropertyTag",
        "signature": "interface JSDocPropertyTag extends JSDocPropertyLikeTag {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 1845,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1845",
        },
      },
      Object {
        "docs": Array [],
        "id": "JSDocProtectedTag",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "JSDocProtectedTag.kind",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "kind",
              "signature": "readonly kind: SyntaxKind.JSDocProtectedTag;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1786,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1786",
              },
              "type": "number",
            },
          ],
        },
        "name": "JSDocProtectedTag",
        "signature": "interface JSDocProtectedTag extends JSDocTag {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 1785,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1785",
        },
      },
      Object {
        "docs": Array [],
        "id": "JSDocPublicTag",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "JSDocPublicTag.kind",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "kind",
              "signature": "readonly kind: SyntaxKind.JSDocPublicTag;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1780,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1780",
              },
              "type": "number",
            },
          ],
        },
        "name": "JSDocPublicTag",
        "signature": "interface JSDocPublicTag extends JSDocTag {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 1779,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1779",
        },
      },
      Object {
        "docs": Array [],
        "id": "JSDocReadonlyTag",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "JSDocReadonlyTag.kind",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "kind",
              "signature": "readonly kind: SyntaxKind.JSDocReadonlyTag;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1789,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1789",
              },
              "type": "number",
            },
          ],
        },
        "name": "JSDocReadonlyTag",
        "signature": "interface JSDocReadonlyTag extends JSDocTag {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 1788,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1788",
        },
      },
      Object {
        "docs": Array [],
        "id": "JSDocReturnTag",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "JSDocReturnTag.kind",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "kind",
              "signature": "readonly kind: SyntaxKind.JSDocReturnTag;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1810,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1810",
              },
              "type": "number",
            },
            Object {
              "docs": Array [],
              "id": "JSDocReturnTag.typeExpression",
              "isOptional": true,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "typeExpression",
              "signature": "readonly typeExpression?: JSDocTypeExpression;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1811,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1811",
              },
              "type": "JSDocTypeExpression",
            },
          ],
        },
        "name": "JSDocReturnTag",
        "signature": "interface JSDocReturnTag extends JSDocTag {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 1809,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1809",
        },
      },
      Object {
        "docs": Array [],
        "id": "JSDocSeeTag",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "JSDocSeeTag.kind",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "kind",
              "signature": "readonly kind: SyntaxKind.JSDocSeeTag;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1806,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1806",
              },
              "type": "number",
            },
            Object {
              "docs": Array [],
              "id": "JSDocSeeTag.name",
              "isOptional": true,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "name",
              "signature": "readonly name?: JSDocNameReference;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1807,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1807",
              },
              "type": "JSDocNameReference",
            },
          ],
        },
        "name": "JSDocSeeTag",
        "signature": "interface JSDocSeeTag extends JSDocTag {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 1805,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1805",
        },
      },
      Object {
        "docs": Array [],
        "id": "JSDocSignature",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "JSDocSignature.kind",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "kind",
              "signature": "readonly kind: SyntaxKind.JSDocSignature;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1832,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1832",
              },
              "type": "number",
            },
            Object {
              "docs": Array [],
              "id": "JSDocSignature.parameters",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "parameters",
              "signature": "readonly parameters: readonly JSDocParameterTag[];",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1834,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1834",
              },
              "type": "readonly JSDocParameterTag[]",
            },
            Object {
              "docs": Array [],
              "id": "JSDocSignature.type",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "type",
              "signature": "readonly type: JSDocReturnTag | undefined;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1835,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1835",
              },
              "type": "JSDocReturnTag",
            },
            Object {
              "docs": Array [],
              "id": "JSDocSignature.typeParameters",
              "isOptional": true,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "typeParameters",
              "signature": "readonly typeParameters?: readonly JSDocTemplateTag[];",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1833,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1833",
              },
              "type": "readonly JSDocTemplateTag[]",
            },
          ],
        },
        "name": "JSDocSignature",
        "signature": "interface JSDocSignature extends JSDocType, Declaration {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 1831,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1831",
        },
      },
      Object {
        "docs": Array [],
        "id": "JSDocTag",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "JSDocTag.comment",
              "isOptional": true,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "comment",
              "signature": "readonly comment?: string;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1749,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1749",
              },
              "type": "string",
            },
            Object {
              "docs": Array [],
              "id": "JSDocTag.parent",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "parent",
              "signature": "readonly parent: JSDoc | JSDocTypeLiteral;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1747,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1747",
              },
              "type": "JSDoc | JSDocTypeLiteral",
            },
            Object {
              "docs": Array [],
              "id": "JSDocTag.tagName",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "tagName",
              "signature": "readonly tagName: Identifier;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1748,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1748",
              },
              "type": "Identifier",
            },
          ],
        },
        "name": "JSDocTag",
        "signature": "interface JSDocTag extends Node {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 1746,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1746",
        },
      },
      Object {
        "docs": Array [],
        "id": "JSDocTagInfo",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "JSDocTagInfo.name",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "name",
              "signature": "name: string;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5977,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5977",
              },
              "type": "string",
            },
            Object {
              "docs": Array [],
              "id": "JSDocTagInfo.text",
              "isOptional": true,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "text",
              "signature": "text?: string;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5978,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5978",
              },
              "type": "string",
            },
          ],
        },
        "name": "JSDocTagInfo",
        "signature": "interface JSDocTagInfo {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 5976,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5976",
        },
      },
      Object {
        "docs": Array [],
        "id": "JSDocTemplateTag",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "JSDocTemplateTag.constraint",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "constraint",
              "signature": "readonly constraint: JSDocTypeExpression | undefined;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1802,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1802",
              },
              "type": "JSDocTypeExpression",
            },
            Object {
              "docs": Array [],
              "id": "JSDocTemplateTag.kind",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "kind",
              "signature": "readonly kind: SyntaxKind.JSDocTemplateTag;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1801,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1801",
              },
              "type": "number",
            },
            Object {
              "docs": Array [],
              "id": "JSDocTemplateTag.typeParameters",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "typeParameters",
              "signature": "readonly typeParameters: NodeArray<TypeParameterDeclaration>;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1803,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1803",
              },
              "type": "NodeArray<TypeParameterDeclaration>",
            },
          ],
        },
        "name": "JSDocTemplateTag",
        "signature": "interface JSDocTemplateTag extends JSDocTag {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 1800,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1800",
        },
      },
      Object {
        "docs": Array [],
        "id": "JSDocThisTag",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "JSDocThisTag.kind",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "kind",
              "signature": "readonly kind: SyntaxKind.JSDocThisTag;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1797,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1797",
              },
              "type": "number",
            },
            Object {
              "docs": Array [],
              "id": "JSDocThisTag.typeExpression",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "typeExpression",
              "signature": "readonly typeExpression: JSDocTypeExpression;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1798,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1798",
              },
              "type": "JSDocTypeExpression",
            },
          ],
        },
        "name": "JSDocThisTag",
        "signature": "interface JSDocThisTag extends JSDocTag {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 1796,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1796",
        },
      },
      Object {
        "docs": Array [],
        "id": "JSDocType",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [],
        },
        "name": "JSDocType",
        "signature": "interface JSDocType extends TypeNode {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 1707,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1707",
        },
      },
      Object {
        "docs": Array [],
        "id": "JSDocTypedefTag",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "JSDocTypedefTag.fullName",
              "isOptional": true,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "fullName",
              "signature": "readonly fullName?: JSDocNamespaceDeclaration | Identifier;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1820,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1820",
              },
              "type": "Identifier | JSDocNamespaceDeclaration",
            },
            Object {
              "docs": Array [],
              "id": "JSDocTypedefTag.kind",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "kind",
              "signature": "readonly kind: SyntaxKind.JSDocTypedefTag;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1818,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1818",
              },
              "type": "number",
            },
            Object {
              "docs": Array [],
              "id": "JSDocTypedefTag.name",
              "isOptional": true,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "name",
              "signature": "readonly name?: Identifier;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1821,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1821",
              },
              "type": "Identifier",
            },
            Object {
              "docs": Array [],
              "id": "JSDocTypedefTag.parent",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "parent",
              "signature": "readonly parent: JSDoc;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1819,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1819",
              },
              "type": "JSDoc",
            },
            Object {
              "docs": Array [],
              "id": "JSDocTypedefTag.typeExpression",
              "isOptional": true,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "typeExpression",
              "signature": "readonly typeExpression?: JSDocTypeExpression | JSDocTypeLiteral;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1822,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1822",
              },
              "type": "JSDocTypeExpression | JSDocTypeLiteral",
            },
          ],
        },
        "name": "JSDocTypedefTag",
        "signature": "interface JSDocTypedefTag extends JSDocTag, NamedDeclaration {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 1817,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1817",
        },
      },
      Object {
        "docs": Array [],
        "id": "JSDocTypeExpression",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "JSDocTypeExpression.kind",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "kind",
              "signature": "readonly kind: SyntaxKind.JSDocTypeExpression;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1700,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1700",
              },
              "type": "number",
            },
            Object {
              "docs": Array [],
              "id": "JSDocTypeExpression.type",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "type",
              "signature": "readonly type: TypeNode;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1701,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1701",
              },
              "type": "TypeNode",
            },
          ],
        },
        "name": "JSDocTypeExpression",
        "signature": "interface JSDocTypeExpression extends TypeNode {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 1699,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1699",
        },
      },
      Object {
        "docs": Array [],
        "id": "JSDocTypeLiteral",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [
                "/** If true, then this type literal represents an *array* of its type. */",
              ],
              "id": "JSDocTypeLiteral.isArrayType",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "isArrayType",
              "signature": "readonly isArrayType: boolean;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1855,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1855",
              },
              "type": "boolean",
            },
            Object {
              "docs": Array [],
              "id": "JSDocTypeLiteral.jsDocPropertyTags",
              "isOptional": true,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "jsDocPropertyTags",
              "signature": "readonly jsDocPropertyTags?: readonly JSDocPropertyLikeTag[];",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1853,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1853",
              },
              "type": "readonly JSDocPropertyLikeTag[]",
            },
            Object {
              "docs": Array [],
              "id": "JSDocTypeLiteral.kind",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "kind",
              "signature": "readonly kind: SyntaxKind.JSDocTypeLiteral;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1852,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1852",
              },
              "type": "number",
            },
          ],
        },
        "name": "JSDocTypeLiteral",
        "signature": "interface JSDocTypeLiteral extends JSDocType {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 1851,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1851",
        },
      },
      Object {
        "docs": Array [],
        "id": "JSDocTypeTag",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "JSDocTypeTag.kind",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "kind",
              "signature": "readonly kind: SyntaxKind.JSDocTypeTag;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1814,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1814",
              },
              "type": "number",
            },
            Object {
              "docs": Array [],
              "id": "JSDocTypeTag.typeExpression",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "typeExpression",
              "signature": "readonly typeExpression: JSDocTypeExpression;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1815,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1815",
              },
              "type": "JSDocTypeExpression",
            },
          ],
        },
        "name": "JSDocTypeTag",
        "signature": "interface JSDocTypeTag extends JSDocTag {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 1813,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1813",
        },
      },
      Object {
        "docs": Array [],
        "id": "JSDocUnknownTag",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "JSDocUnknownTag.kind",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "kind",
              "signature": "readonly kind: SyntaxKind.JSDocTag;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1752,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1752",
              },
              "type": "number",
            },
          ],
        },
        "name": "JSDocUnknownTag",
        "signature": "interface JSDocUnknownTag extends JSDocTag {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 1751,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1751",
        },
      },
      Object {
        "docs": Array [],
        "id": "JSDocUnknownType",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "JSDocUnknownType.kind",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "kind",
              "signature": "readonly kind: SyntaxKind.JSDocUnknownType;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1714,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1714",
              },
              "type": "number",
            },
          ],
        },
        "name": "JSDocUnknownType",
        "signature": "interface JSDocUnknownType extends JSDocType {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 1713,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1713",
        },
      },
      Object {
        "docs": Array [],
        "id": "JSDocVariadicType",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "JSDocVariadicType.kind",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "kind",
              "signature": "readonly kind: SyntaxKind.JSDocVariadicType;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1732,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1732",
              },
              "type": "number",
            },
            Object {
              "docs": Array [],
              "id": "JSDocVariadicType.type",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "type",
              "signature": "readonly type: TypeNode;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1733,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1733",
              },
              "type": "TypeNode",
            },
          ],
        },
        "name": "JSDocVariadicType",
        "signature": "interface JSDocVariadicType extends JSDocType {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 1731,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1731",
        },
      },
      Object {
        "docs": Array [],
        "id": "JsonMinusNumericLiteral",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "JsonMinusNumericLiteral.kind",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "kind",
              "signature": "readonly kind: SyntaxKind.PrefixUnaryExpression;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2009,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2009",
              },
              "type": "number",
            },
            Object {
              "docs": Array [],
              "id": "JsonMinusNumericLiteral.operand",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "operand",
              "signature": "readonly operand: NumericLiteral;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2011,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2011",
              },
              "type": "NumericLiteral",
            },
            Object {
              "docs": Array [],
              "id": "JsonMinusNumericLiteral.operator",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "operator",
              "signature": "readonly operator: SyntaxKind.MinusToken;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2010,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2010",
              },
              "type": "number",
            },
          ],
        },
        "name": "JsonMinusNumericLiteral",
        "signature": "interface JsonMinusNumericLiteral extends PrefixUnaryExpression {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 2008,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2008",
        },
      },
      Object {
        "docs": Array [],
        "id": "JsonObjectExpressionStatement",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "JsonObjectExpressionStatement.expression",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "expression",
              "signature": "readonly expression: JsonObjectExpression;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2015,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2015",
              },
              "type": "JsonObjectExpression",
            },
          ],
        },
        "name": "JsonObjectExpressionStatement",
        "signature": "interface JsonObjectExpressionStatement extends ExpressionStatement {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 2014,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2014",
        },
      },
      Object {
        "docs": Array [],
        "id": "JsonSourceFile",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "JsonSourceFile.statements",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "statements",
              "signature": "readonly statements: NodeArray<JsonObjectExpressionStatement>;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2003,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2003",
              },
              "type": "NodeArray<JsonObjectExpressionStatement>",
            },
          ],
        },
        "name": "JsonSourceFile",
        "signature": "interface JsonSourceFile extends SourceFile {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 2002,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2002",
        },
      },
      Object {
        "docs": Array [],
        "id": "JsxAttribute",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "JsxAttribute.initializer",
              "isOptional": true,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "initializer",
              "signature": "readonly initializer?: StringLiteral | JsxExpression;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1352,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1352",
              },
              "type": "StringLiteral | JsxExpression",
            },
            Object {
              "docs": Array [],
              "id": "JsxAttribute.kind",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "kind",
              "signature": "readonly kind: SyntaxKind.JsxAttribute;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1349,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1349",
              },
              "type": "number",
            },
            Object {
              "docs": Array [],
              "id": "JsxAttribute.name",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "name",
              "signature": "readonly name: Identifier;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1351,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1351",
              },
              "type": "Identifier",
            },
            Object {
              "docs": Array [],
              "id": "JsxAttribute.parent",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "parent",
              "signature": "readonly parent: JsxAttributes;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1350,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1350",
              },
              "type": "JsxAttributes",
            },
          ],
        },
        "name": "JsxAttribute",
        "signature": "interface JsxAttribute extends ObjectLiteralElement {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 1348,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1348",
        },
      },
      Object {
        "docs": Array [],
        "id": "JsxAttributes",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "JsxAttributes.kind",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "kind",
              "signature": "readonly kind: SyntaxKind.JsxAttributes;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1318,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1318",
              },
              "type": "number",
            },
            Object {
              "docs": Array [],
              "id": "JsxAttributes.parent",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "parent",
              "signature": "readonly parent: JsxOpeningLikeElement;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1319,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1319",
              },
              "type": "JsxOpeningLikeElement",
            },
          ],
        },
        "name": "JsxAttributes",
        "signature": "interface JsxAttributes extends ObjectLiteralExpressionBase<JsxAttributeLike> {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 1317,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1317",
        },
      },
      Object {
        "docs": Array [],
        "id": "JsxClosingElement",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "JsxClosingElement.kind",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "kind",
              "signature": "readonly kind: SyntaxKind.JsxClosingElement;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1360,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1360",
              },
              "type": "number",
            },
            Object {
              "docs": Array [],
              "id": "JsxClosingElement.parent",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "parent",
              "signature": "readonly parent: JsxElement;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1361,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1361",
              },
              "type": "JsxElement",
            },
            Object {
              "docs": Array [],
              "id": "JsxClosingElement.tagName",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "tagName",
              "signature": "readonly tagName: JsxTagNameExpression;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1362,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1362",
              },
              "type": "JsxTagNameExpression",
            },
          ],
        },
        "name": "JsxClosingElement",
        "signature": "interface JsxClosingElement extends Node {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 1359,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1359",
        },
      },
      Object {
        "docs": Array [],
        "id": "JsxClosingFragment",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "JsxClosingFragment.kind",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "kind",
              "signature": "readonly kind: SyntaxKind.JsxClosingFragment;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1345,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1345",
              },
              "type": "number",
            },
            Object {
              "docs": Array [],
              "id": "JsxClosingFragment.parent",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "parent",
              "signature": "readonly parent: JsxFragment;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1346,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1346",
              },
              "type": "JsxFragment",
            },
          ],
        },
        "name": "JsxClosingFragment",
        "signature": "interface JsxClosingFragment extends Expression {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 1344,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1344",
        },
      },
      Object {
        "docs": Array [],
        "id": "JsxClosingTagInfo",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "JsxClosingTagInfo.newText",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "newText",
              "signature": "readonly newText: string;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5581,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5581",
              },
              "type": "string",
            },
          ],
        },
        "name": "JsxClosingTagInfo",
        "signature": "interface JsxClosingTagInfo {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 5580,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5580",
        },
      },
      Object {
        "docs": Array [],
        "id": "JsxElement",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "JsxElement.children",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "children",
              "signature": "readonly children: NodeArray<JsxChild>;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1308,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1308",
              },
              "type": "NodeArray<JsxChild>",
            },
            Object {
              "docs": Array [],
              "id": "JsxElement.closingElement",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "closingElement",
              "signature": "readonly closingElement: JsxClosingElement;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1309,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1309",
              },
              "type": "JsxClosingElement",
            },
            Object {
              "docs": Array [],
              "id": "JsxElement.kind",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "kind",
              "signature": "readonly kind: SyntaxKind.JsxElement;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1306,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1306",
              },
              "type": "number",
            },
            Object {
              "docs": Array [],
              "id": "JsxElement.openingElement",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "openingElement",
              "signature": "readonly openingElement: JsxOpeningElement;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1307,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1307",
              },
              "type": "JsxOpeningElement",
            },
          ],
        },
        "name": "JsxElement",
        "signature": "interface JsxElement extends PrimaryExpression {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 1305,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1305",
        },
      },
      Object {
        "docs": Array [],
        "id": "JsxExpression",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "JsxExpression.dotDotDotToken",
              "isOptional": true,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "dotDotDotToken",
              "signature": "readonly dotDotDotToken?: Token<SyntaxKind.DotDotDotToken>;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1367,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1367",
              },
              "type": "Token<SyntaxKind.DotDotDotToken>",
            },
            Object {
              "docs": Array [],
              "id": "JsxExpression.expression",
              "isOptional": true,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "expression",
              "signature": "readonly expression?: Expression;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1368,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1368",
              },
              "type": "Expression",
            },
            Object {
              "docs": Array [],
              "id": "JsxExpression.kind",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "kind",
              "signature": "readonly kind: SyntaxKind.JsxExpression;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1365,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1365",
              },
              "type": "number",
            },
            Object {
              "docs": Array [],
              "id": "JsxExpression.parent",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "parent",
              "signature": "readonly parent: JsxElement | JsxAttributeLike;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1366,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1366",
              },
              "type": "JsxElement | JsxAttributeLike",
            },
          ],
        },
        "name": "JsxExpression",
        "signature": "interface JsxExpression extends Expression {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 1364,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1364",
        },
      },
      Object {
        "docs": Array [],
        "id": "JsxFragment",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "JsxFragment.children",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "children",
              "signature": "readonly children: NodeArray<JsxChild>;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1337,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1337",
              },
              "type": "NodeArray<JsxChild>",
            },
            Object {
              "docs": Array [],
              "id": "JsxFragment.closingFragment",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "closingFragment",
              "signature": "readonly closingFragment: JsxClosingFragment;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1338,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1338",
              },
              "type": "JsxClosingFragment",
            },
            Object {
              "docs": Array [],
              "id": "JsxFragment.kind",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "kind",
              "signature": "readonly kind: SyntaxKind.JsxFragment;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1335,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1335",
              },
              "type": "number",
            },
            Object {
              "docs": Array [],
              "id": "JsxFragment.openingFragment",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "openingFragment",
              "signature": "readonly openingFragment: JsxOpeningFragment;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1336,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1336",
              },
              "type": "JsxOpeningFragment",
            },
          ],
        },
        "name": "JsxFragment",
        "signature": "interface JsxFragment extends PrimaryExpression {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 1334,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1334",
        },
      },
      Object {
        "docs": Array [],
        "id": "JsxOpeningElement",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "JsxOpeningElement.attributes",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "attributes",
              "signature": "readonly attributes: JsxAttributes;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1326,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1326",
              },
              "type": "JsxAttributes",
            },
            Object {
              "docs": Array [],
              "id": "JsxOpeningElement.kind",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "kind",
              "signature": "readonly kind: SyntaxKind.JsxOpeningElement;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1322,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1322",
              },
              "type": "number",
            },
            Object {
              "docs": Array [],
              "id": "JsxOpeningElement.parent",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "parent",
              "signature": "readonly parent: JsxElement;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1323,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1323",
              },
              "type": "JsxElement",
            },
            Object {
              "docs": Array [],
              "id": "JsxOpeningElement.tagName",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "tagName",
              "signature": "readonly tagName: JsxTagNameExpression;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1324,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1324",
              },
              "type": "JsxTagNameExpression",
            },
            Object {
              "docs": Array [],
              "id": "JsxOpeningElement.typeArguments",
              "isOptional": true,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "typeArguments",
              "signature": "readonly typeArguments?: NodeArray<TypeNode>;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1325,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1325",
              },
              "type": "NodeArray<TypeNode>",
            },
          ],
        },
        "name": "JsxOpeningElement",
        "signature": "interface JsxOpeningElement extends Expression {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 1321,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1321",
        },
      },
      Object {
        "docs": Array [],
        "id": "JsxOpeningFragment",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "JsxOpeningFragment.kind",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "kind",
              "signature": "readonly kind: SyntaxKind.JsxOpeningFragment;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1341,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1341",
              },
              "type": "number",
            },
            Object {
              "docs": Array [],
              "id": "JsxOpeningFragment.parent",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "parent",
              "signature": "readonly parent: JsxFragment;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1342,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1342",
              },
              "type": "JsxFragment",
            },
          ],
        },
        "name": "JsxOpeningFragment",
        "signature": "interface JsxOpeningFragment extends Expression {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 1340,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1340",
        },
      },
      Object {
        "docs": Array [],
        "id": "JsxSelfClosingElement",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "JsxSelfClosingElement.attributes",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "attributes",
              "signature": "readonly attributes: JsxAttributes;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1332,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1332",
              },
              "type": "JsxAttributes",
            },
            Object {
              "docs": Array [],
              "id": "JsxSelfClosingElement.kind",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "kind",
              "signature": "readonly kind: SyntaxKind.JsxSelfClosingElement;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1329,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1329",
              },
              "type": "number",
            },
            Object {
              "docs": Array [],
              "id": "JsxSelfClosingElement.tagName",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "tagName",
              "signature": "readonly tagName: JsxTagNameExpression;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1330,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1330",
              },
              "type": "JsxTagNameExpression",
            },
            Object {
              "docs": Array [],
              "id": "JsxSelfClosingElement.typeArguments",
              "isOptional": true,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "typeArguments",
              "signature": "readonly typeArguments?: NodeArray<TypeNode>;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1331,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1331",
              },
              "type": "NodeArray<TypeNode>",
            },
          ],
        },
        "name": "JsxSelfClosingElement",
        "signature": "interface JsxSelfClosingElement extends PrimaryExpression {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 1328,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1328",
        },
      },
      Object {
        "docs": Array [],
        "id": "JsxSpreadAttribute",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "JsxSpreadAttribute.expression",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "expression",
              "signature": "readonly expression: Expression;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1357,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1357",
              },
              "type": "Expression",
            },
            Object {
              "docs": Array [],
              "id": "JsxSpreadAttribute.kind",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "kind",
              "signature": "readonly kind: SyntaxKind.JsxSpreadAttribute;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1355,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1355",
              },
              "type": "number",
            },
            Object {
              "docs": Array [],
              "id": "JsxSpreadAttribute.parent",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "parent",
              "signature": "readonly parent: JsxAttributes;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1356,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1356",
              },
              "type": "JsxAttributes",
            },
          ],
        },
        "name": "JsxSpreadAttribute",
        "signature": "interface JsxSpreadAttribute extends ObjectLiteralElement {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 1354,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1354",
        },
      },
      Object {
        "docs": Array [],
        "id": "JsxTagNamePropertyAccess",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "JsxTagNamePropertyAccess.expression",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "expression",
              "signature": "readonly expression: JsxTagNameExpression;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1315,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1315",
              },
              "type": "JsxTagNameExpression",
            },
          ],
        },
        "name": "JsxTagNamePropertyAccess",
        "signature": "interface JsxTagNamePropertyAccess extends PropertyAccessExpression {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 1314,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1314",
        },
      },
      Object {
        "docs": Array [],
        "id": "JsxText",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "JsxText.containsOnlyTriviaWhiteSpaces",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "containsOnlyTriviaWhiteSpaces",
              "signature": "readonly containsOnlyTriviaWhiteSpaces: boolean;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1373,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1373",
              },
              "type": "boolean",
            },
            Object {
              "docs": Array [],
              "id": "JsxText.kind",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "kind",
              "signature": "readonly kind: SyntaxKind.JsxText;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1371,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1371",
              },
              "type": "number",
            },
            Object {
              "docs": Array [],
              "id": "JsxText.parent",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "parent",
              "signature": "readonly parent: JsxElement;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1372,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1372",
              },
              "type": "JsxElement",
            },
          ],
        },
        "name": "JsxText",
        "signature": "interface JsxText extends LiteralLikeNode {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 1370,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1370",
        },
      },
      Object {
        "docs": Array [],
        "id": "KeywordToken",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [],
        },
        "name": "KeywordToken",
        "signature": "interface KeywordToken<TKind extends KeywordSyntaxKind> extends Token<TKind> {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 586,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L586",
        },
      },
      Object {
        "docs": Array [],
        "id": "KeywordTypeNode",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "KeywordTypeNode.kind",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "kind",
              "signature": "readonly kind: TKind;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 845,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L845",
              },
              "type": "KeywordTypeSyntaxKind",
            },
          ],
        },
        "name": "KeywordTypeNode",
        "signature": "interface KeywordTypeNode<
    TKind extends KeywordTypeSyntaxKind = KeywordTypeSyntaxKind
> extends KeywordToken<TKind>,
        TypeNode {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 844,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L844",
        },
      },
      Object {
        "docs": Array [],
        "id": "LabeledStatement",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "LabeledStatement.kind",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "kind",
              "signature": "readonly kind: SyntaxKind.LabeledStatement;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1490,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1490",
              },
              "type": "number",
            },
            Object {
              "docs": Array [],
              "id": "LabeledStatement.label",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "label",
              "signature": "readonly label: Identifier;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1491,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1491",
              },
              "type": "Identifier",
            },
            Object {
              "docs": Array [],
              "id": "LabeledStatement.statement",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "statement",
              "signature": "readonly statement: Statement;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1492,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1492",
              },
              "type": "Statement",
            },
          ],
        },
        "name": "LabeledStatement",
        "signature": "interface LabeledStatement extends Statement, JSDocContainer {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 1489,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1489",
        },
      },
      Object {
        "docs": Array [],
        "id": "LanguageService",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [
            Object {
              "docs": Array [
                "/** @deprecated \`fileName\` will be ignored */",
              ],
              "id": "LanguageService.applyCodeActionCommand",
              "kind": "InterfaceMethodDeclaration",
              "name": "applyCodeActionCommand",
              "signature": "applyCodeActionCommand: {
    (
        action: CodeActionCommand,
        formatSettings?: FormatCodeSettings
    ): Promise<ApplyCodeActionCommandResult>;
    (
        action: InstallPackageAction[],
        formatSettings?: FormatCodeSettings
    ): Promise<ApplyCodeActionCommandResult[]>;
    (
        action: InstallPackageAction | InstallPackageAction[],
        formatSettings?: FormatCodeSettings
    ): Promise<ApplyCodeActionCommandResult | ApplyCodeActionCommandResult[]>;
    (
        fileName: string,
        action: InstallPackageAction
    ): Promise<ApplyCodeActionCommandResult>;
    (fileName: string, action: InstallPackageAction[]): Promise<
        ApplyCodeActionCommandResult[]
    >;
    (
        fileName: string,
        action: InstallPackageAction | InstallPackageAction[]
    ): Promise<ApplyCodeActionCommandResult | ApplyCodeActionCommandResult[]>;
};",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5559,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5559",
              },
              "type": "{ (action: CodeActionCommand, formatSettings?: FormatCodeSettings): Promise<ApplyCodeActionCommandResult>; (action: InstallPackageAction[], formatSettings?: FormatCodeSettings): Promise<ApplyCodeActionCommandResult[]>; (action: InstallPackageAction | InstallPackageAction[], formatSettings?: FormatCodeSettings): Promise<ApplyCodeActionCommandResult | ApplyCodeActionCommandResult[]>; (fileName: string, action: InstallPackageAction): Promise<ApplyCodeActionCommandResult>; (fileName: string, action: InstallPackageAction[]): Promise<ApplyCodeActionCommandResult[]>; (fileName: string, action: InstallPackageAction | InstallPackageAction[]): Promise<ApplyCodeActionCommandResult | ApplyCodeActionCommandResult[]>; }",
            },
            Object {
              "docs": Array [
                "/** This is used as a part of restarting the language service. */",
              ],
              "id": "LanguageService.cleanupSemanticCache",
              "kind": "InterfaceMethodDeclaration",
              "name": "cleanupSemanticCache",
              "signature": "cleanupSemanticCache: () => void;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5426,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5426",
              },
              "type": "() => void",
            },
            Object {
              "docs": Array [],
              "id": "LanguageService.commentSelection",
              "kind": "InterfaceMethodDeclaration",
              "name": "commentSelection",
              "signature": "commentSelection: (fileName: string, textRange: TextRange) => TextChange[];",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5576,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5576",
              },
              "type": "(fileName: string, textRange: TextRange) => TextChange[]",
            },
            Object {
              "docs": Array [],
              "id": "LanguageService.dispose",
              "kind": "InterfaceMethodDeclaration",
              "name": "dispose",
              "signature": "dispose: () => void;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5578,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5578",
              },
              "type": "() => void",
            },
            Object {
              "docs": Array [],
              "id": "LanguageService.findReferences",
              "kind": "InterfaceMethodDeclaration",
              "name": "findReferences",
              "signature": "findReferences: (
    fileName: string,
    position: number
) => ReferencedSymbol[] | undefined;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5531,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5531",
              },
              "type": "(fileName: string, position: number) => ReferencedSymbol[] | undefined",
            },
            Object {
              "docs": Array [],
              "id": "LanguageService.findRenameLocations",
              "kind": "InterfaceMethodDeclaration",
              "name": "findRenameLocations",
              "signature": "findRenameLocations: (
    fileName: string,
    position: number,
    findInStrings: boolean,
    findInComments: boolean,
    providePrefixAndSuffixTextForRename?: boolean
) => readonly RenameLocation[] | undefined;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5524,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5524",
              },
              "type": "(fileName: string, position: number, findInStrings: boolean, findInComments: boolean, providePrefixAndSuffixTextForRename?: boolean) => readonly RenameLocation[] | undefined",
            },
            Object {
              "docs": Array [],
              "id": "LanguageService.getApplicableRefactors",
              "kind": "InterfaceMethodDeclaration",
              "name": "getApplicableRefactors",
              "signature": "getApplicableRefactors: (
    fileName: string,
    positionOrRange: number | TextRange,
    preferences: UserPreferences | undefined,
    triggerReason?: RefactorTriggerReason
) => ApplicableRefactorInfo[];",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5568,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5568",
              },
              "type": "(fileName: string, positionOrRange: number | TextRange, preferences: UserPreferences | undefined, triggerReason?: RefactorTriggerReason) => ApplicableRefactorInfo[]",
            },
            Object {
              "docs": Array [],
              "id": "LanguageService.getBraceMatchingAtPosition",
              "kind": "InterfaceMethodDeclaration",
              "name": "getBraceMatchingAtPosition",
              "signature": "getBraceMatchingAtPosition: (fileName: string, position: number) => TextSpan[];",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5543,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5543",
              },
              "type": "(fileName: string, position: number) => TextSpan[]",
            },
            Object {
              "docs": Array [],
              "id": "LanguageService.getBreakpointStatementAtPosition",
              "kind": "InterfaceMethodDeclaration",
              "name": "getBreakpointStatementAtPosition",
              "signature": "getBreakpointStatementAtPosition: (
    fileName: string,
    position: number
) => TextSpan | undefined;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5521,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5521",
              },
              "type": "(fileName: string, position: number) => TextSpan | undefined",
            },
            Object {
              "docs": Array [],
              "id": "LanguageService.getCodeFixesAtPosition",
              "kind": "InterfaceMethodDeclaration",
              "name": "getCodeFixesAtPosition",
              "signature": "getCodeFixesAtPosition: (
    fileName: string,
    start: number,
    end: number,
    errorCodes: readonly number[],
    formatOptions: FormatCodeSettings,
    preferences: UserPreferences
) => readonly CodeFixAction[];",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5557,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5557",
              },
              "type": "(fileName: string, start: number, end: number, errorCodes: readonly number[], formatOptions: FormatCodeSettings, preferences: UserPreferences) => readonly CodeFixAction[]",
            },
            Object {
              "docs": Array [],
              "id": "LanguageService.getCombinedCodeFix",
              "kind": "InterfaceMethodDeclaration",
              "name": "getCombinedCodeFix",
              "signature": "getCombinedCodeFix: (
    scope: CombinedCodeFixScope,
    fixId: {},
    formatOptions: FormatCodeSettings,
    preferences: UserPreferences
) => CombinedCodeActions;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5558,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5558",
              },
              "type": "(scope: CombinedCodeFixScope, fixId: {}, formatOptions: FormatCodeSettings, preferences: UserPreferences) => CombinedCodeActions",
            },
            Object {
              "docs": Array [
                "/**
         * Gets global diagnostics related to the program configuration and compiler options.
         */",
              ],
              "id": "LanguageService.getCompilerOptionsDiagnostics",
              "kind": "InterfaceMethodDeclaration",
              "name": "getCompilerOptionsDiagnostics",
              "signature": "getCompilerOptionsDiagnostics: () => Diagnostic[];",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5472,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5472",
              },
              "type": "() => Diagnostic[]",
            },
            Object {
              "docs": Array [
                "/**
         * Gets the extended details for a completion entry retrieved from \`getCompletionsAtPosition\`.
         *
         * @param fileName The path to the file
         * @param position A zero based index of the character where you want the entries
         * @param entryName The name from an existing completion which came from \`getCompletionsAtPosition\`
         * @param formatOptions How should code samples in the completions be formatted, can be undefined for backwards compatibility
         * @param source Source code for the current file, can be undefined for backwards compatibility
         * @param preferences User settings, can be undefined for backwards compatibility
         */",
              ],
              "id": "LanguageService.getCompletionEntryDetails",
              "kind": "InterfaceMethodDeclaration",
              "name": "getCompletionEntryDetails",
              "signature": "getCompletionEntryDetails: (
    fileName: string,
    position: number,
    entryName: string,
    formatOptions: FormatCodeOptions | FormatCodeSettings | undefined,
    source: string | undefined,
    preferences: UserPreferences | undefined
) => CompletionEntryDetails | undefined;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5510,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5510",
              },
              "type": "(fileName: string, position: number, entryName: string, formatOptions: FormatCodeOptions | FormatCodeSettings | undefined, source: string | undefined, preferences: UserPreferences | undefined) => CompletionEntryDetails | undefined",
            },
            Object {
              "docs": Array [],
              "id": "LanguageService.getCompletionEntrySymbol",
              "kind": "InterfaceMethodDeclaration",
              "name": "getCompletionEntrySymbol",
              "signature": "getCompletionEntrySymbol: (
    fileName: string,
    position: number,
    name: string,
    source: string | undefined
) => Symbol | undefined;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5511,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5511",
              },
              "type": "(fileName: string, position: number, name: string, source: string | undefined) => Symbol | undefined",
            },
            Object {
              "docs": Array [
                "/**
         * Gets completion entries at a particular position in a file.
         *
         * @param fileName The path to the file
         * @param position A zero-based index of the character where you want the entries
         * @param options An object describing how the request was triggered and what kinds
         * of code actions can be returned with the completions.
         */",
              ],
              "id": "LanguageService.getCompletionsAtPosition",
              "kind": "InterfaceMethodDeclaration",
              "name": "getCompletionsAtPosition",
              "signature": "getCompletionsAtPosition: (
    fileName: string,
    position: number,
    options: GetCompletionsAtPositionOptions | undefined
) => WithMetadata<CompletionInfo> | undefined;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5499,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5499",
              },
              "type": "(fileName: string, position: number, options: GetCompletionsAtPositionOptions | undefined) => WithMetadata<CompletionInfo> | undefined",
            },
            Object {
              "docs": Array [],
              "id": "LanguageService.getDefinitionAndBoundSpan",
              "kind": "InterfaceMethodDeclaration",
              "name": "getDefinitionAndBoundSpan",
              "signature": "getDefinitionAndBoundSpan: (
    fileName: string,
    position: number
) => DefinitionInfoAndBoundSpan | undefined;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5527,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5527",
              },
              "type": "(fileName: string, position: number) => DefinitionInfoAndBoundSpan | undefined",
            },
            Object {
              "docs": Array [],
              "id": "LanguageService.getDefinitionAtPosition",
              "kind": "InterfaceMethodDeclaration",
              "name": "getDefinitionAtPosition",
              "signature": "getDefinitionAtPosition: (
    fileName: string,
    position: number
) => readonly DefinitionInfo[] | undefined;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5526,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5526",
              },
              "type": "(fileName: string, position: number) => readonly DefinitionInfo[] | undefined",
            },
            Object {
              "docs": Array [],
              "id": "LanguageService.getDocCommentTemplateAtPosition",
              "kind": "InterfaceMethodDeclaration",
              "name": "getDocCommentTemplateAtPosition",
              "signature": "getDocCommentTemplateAtPosition: (
    fileName: string,
    position: number
) => TextInsertion | undefined;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5548,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5548",
              },
              "type": "(fileName: string, position: number) => TextInsertion | undefined",
            },
            Object {
              "docs": Array [],
              "id": "LanguageService.getDocumentHighlights",
              "kind": "InterfaceMethodDeclaration",
              "name": "getDocumentHighlights",
              "signature": "getDocumentHighlights: (
    fileName: string,
    position: number,
    filesToSearch: string[]
) => DocumentHighlights[] | undefined;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5532,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5532",
              },
              "type": "(fileName: string, position: number, filesToSearch: string[]) => DocumentHighlights[] | undefined",
            },
            Object {
              "docs": Array [],
              "id": "LanguageService.getEditsForFileRename",
              "kind": "InterfaceMethodDeclaration",
              "name": "getEditsForFileRename",
              "signature": "getEditsForFileRename: (
    oldFilePath: string,
    newFilePath: string,
    formatOptions: FormatCodeSettings,
    preferences: UserPreferences | undefined
) => readonly FileTextChanges[];",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5571,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5571",
              },
              "type": "(oldFilePath: string, newFilePath: string, formatOptions: FormatCodeSettings, preferences: UserPreferences | undefined) => readonly FileTextChanges[]",
            },
            Object {
              "docs": Array [],
              "id": "LanguageService.getEditsForRefactor",
              "kind": "InterfaceMethodDeclaration",
              "name": "getEditsForRefactor",
              "signature": "getEditsForRefactor: (
    fileName: string,
    formatOptions: FormatCodeSettings,
    positionOrRange: number | TextRange,
    refactorName: string,
    actionName: string,
    preferences: UserPreferences | undefined
) => RefactorEditInfo | undefined;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5569,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5569",
              },
              "type": "(fileName: string, formatOptions: FormatCodeSettings, positionOrRange: number | TextRange, refactorName: string, actionName: string, preferences: UserPreferences | undefined) => RefactorEditInfo | undefined",
            },
            Object {
              "docs": Array [],
              "id": "LanguageService.getEmitOutput",
              "kind": "InterfaceMethodDeclaration",
              "name": "getEmitOutput",
              "signature": "getEmitOutput: (
    fileName: string,
    emitOnlyDtsFiles?: boolean,
    forceDtsEmit?: boolean
) => EmitOutput;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5572,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5572",
              },
              "type": "(fileName: string, emitOnlyDtsFiles?: boolean, forceDtsEmit?: boolean) => EmitOutput",
            },
            Object {
              "docs": Array [
                "/**
         * Gets semantic highlights information for a particular file. Has two formats, an older
         * version used by VS and a format used by VS Code.
         *
         * @param fileName The path to the file
         * @param position A text span to return results within
         * @param format Which format to use, defaults to \\"original\\"
         * @returns a number array encoded as triples of [start, length, ClassificationType, ...].
         */",
              ],
              "id": "LanguageService.getEncodedSemanticClassifications",
              "kind": "InterfaceMethodDeclaration",
              "name": "getEncodedSemanticClassifications",
              "signature": "getEncodedSemanticClassifications: (
    fileName: string,
    span: TextSpan,
    format?: SemanticClassificationFormat
) => Classifications;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5490,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5490",
              },
              "type": "(fileName: string, span: TextSpan, format?: SemanticClassificationFormat) => Classifications",
            },
            Object {
              "docs": Array [
                "/** Encoded as triples of [start, length, ClassificationType]. */",
              ],
              "id": "LanguageService.getEncodedSyntacticClassifications",
              "kind": "InterfaceMethodDeclaration",
              "name": "getEncodedSyntacticClassifications",
              "signature": "getEncodedSyntacticClassifications: (
    fileName: string,
    span: TextSpan
) => Classifications;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5480,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5480",
              },
              "type": "(fileName: string, span: TextSpan) => Classifications",
            },
            Object {
              "docs": Array [],
              "id": "LanguageService.getFormattingEditsAfterKeystroke",
              "kind": "InterfaceMethodDeclaration",
              "name": "getFormattingEditsAfterKeystroke",
              "signature": "getFormattingEditsAfterKeystroke: (
    fileName: string,
    position: number,
    key: string,
    options: FormatCodeOptions | FormatCodeSettings
) => TextChange[];",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5547,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5547",
              },
              "type": "(fileName: string, position: number, key: string, options: FormatCodeOptions | FormatCodeSettings) => TextChange[]",
            },
            Object {
              "docs": Array [],
              "id": "LanguageService.getFormattingEditsForDocument",
              "kind": "InterfaceMethodDeclaration",
              "name": "getFormattingEditsForDocument",
              "signature": "getFormattingEditsForDocument: (
    fileName: string,
    options: FormatCodeOptions | FormatCodeSettings
) => TextChange[];",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5546,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5546",
              },
              "type": "(fileName: string, options: FormatCodeOptions | FormatCodeSettings) => TextChange[]",
            },
            Object {
              "docs": Array [],
              "id": "LanguageService.getFormattingEditsForRange",
              "kind": "InterfaceMethodDeclaration",
              "name": "getFormattingEditsForRange",
              "signature": "getFormattingEditsForRange: (
    fileName: string,
    start: number,
    end: number,
    options: FormatCodeOptions | FormatCodeSettings
) => TextChange[];",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5545,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5545",
              },
              "type": "(fileName: string, start: number, end: number, options: FormatCodeOptions | FormatCodeSettings) => TextChange[]",
            },
            Object {
              "docs": Array [],
              "id": "LanguageService.getImplementationAtPosition",
              "kind": "InterfaceMethodDeclaration",
              "name": "getImplementationAtPosition",
              "signature": "getImplementationAtPosition: (
    fileName: string,
    position: number
) => readonly ImplementationLocation[] | undefined;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5529,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5529",
              },
              "type": "(fileName: string, position: number) => readonly ImplementationLocation[] | undefined",
            },
            Object {
              "docs": Array [],
              "id": "LanguageService.getIndentationAtPosition",
              "kind": "InterfaceMethodDeclaration",
              "name": "getIndentationAtPosition",
              "signature": "getIndentationAtPosition: (
    fileName: string,
    position: number,
    options: EditorOptions | EditorSettings
) => number;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5544,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5544",
              },
              "type": "(fileName: string, position: number, options: EditorOptions | EditorSettings) => number",
            },
            Object {
              "docs": Array [
                "/**
         * This will return a defined result if the position is after the \`>\` of the opening tag, or somewhere in the text, of a JSXElement with no closing tag.
         * Editors should call this after \`>\` is typed.
         */",
              ],
              "id": "LanguageService.getJsxClosingTagAtPosition",
              "kind": "InterfaceMethodDeclaration",
              "name": "getJsxClosingTagAtPosition",
              "signature": "getJsxClosingTagAtPosition: (
    fileName: string,
    position: number
) => JsxClosingTagInfo | undefined;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5554,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5554",
              },
              "type": "(fileName: string, position: number) => JsxClosingTagInfo | undefined",
            },
            Object {
              "docs": Array [],
              "id": "LanguageService.getNameOrDottedNameSpan",
              "kind": "InterfaceMethodDeclaration",
              "name": "getNameOrDottedNameSpan",
              "signature": "getNameOrDottedNameSpan: (
    fileName: string,
    startPos: number,
    endPos: number
) => TextSpan | undefined;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5520,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5520",
              },
              "type": "(fileName: string, startPos: number, endPos: number) => TextSpan | undefined",
            },
            Object {
              "docs": Array [],
              "id": "LanguageService.getNavigateToItems",
              "kind": "InterfaceMethodDeclaration",
              "name": "getNavigateToItems",
              "signature": "getNavigateToItems: (
    searchValue: string,
    maxResultCount?: number,
    fileName?: string,
    excludeDtsFiles?: boolean
) => NavigateToItem[];",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5535,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5535",
              },
              "type": "(searchValue: string, maxResultCount?: number, fileName?: string, excludeDtsFiles?: boolean) => NavigateToItem[]",
            },
            Object {
              "docs": Array [],
              "id": "LanguageService.getNavigationBarItems",
              "kind": "InterfaceMethodDeclaration",
              "name": "getNavigationBarItems",
              "signature": "getNavigationBarItems: (fileName: string) => NavigationBarItem[];",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5536,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5536",
              },
              "type": "(fileName: string) => NavigationBarItem[]",
            },
            Object {
              "docs": Array [],
              "id": "LanguageService.getNavigationTree",
              "kind": "InterfaceMethodDeclaration",
              "name": "getNavigationTree",
              "signature": "getNavigationTree: (fileName: string) => NavigationTree;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5537,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5537",
              },
              "type": "(fileName: string) => NavigationTree",
            },
            Object {
              "docs": Array [
                "/** @deprecated */",
              ],
              "id": "LanguageService.getOccurrencesAtPosition",
              "kind": "InterfaceMethodDeclaration",
              "name": "getOccurrencesAtPosition",
              "signature": "getOccurrencesAtPosition: (
    fileName: string,
    position: number
) => readonly ReferenceEntry[] | undefined;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5534,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5534",
              },
              "type": "(fileName: string, position: number) => readonly ReferenceEntry[] | undefined",
            },
            Object {
              "docs": Array [],
              "id": "LanguageService.getOutliningSpans",
              "kind": "InterfaceMethodDeclaration",
              "name": "getOutliningSpans",
              "signature": "getOutliningSpans: (fileName: string) => OutliningSpan[];",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5541,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5541",
              },
              "type": "(fileName: string) => OutliningSpan[]",
            },
            Object {
              "docs": Array [],
              "id": "LanguageService.getProgram",
              "kind": "InterfaceMethodDeclaration",
              "name": "getProgram",
              "signature": "getProgram: () => Program | undefined;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5573,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5573",
              },
              "type": "() => Program | undefined",
            },
            Object {
              "docs": Array [
                "/**
         * Gets semantic information about the identifier at a particular position in a
         * file. Quick info is what you typically see when you hover in an editor.
         *
         * @param fileName The path to the file
         * @param position A zero-based index of the character where you want the quick info
         */",
              ],
              "id": "LanguageService.getQuickInfoAtPosition",
              "kind": "InterfaceMethodDeclaration",
              "name": "getQuickInfoAtPosition",
              "signature": "getQuickInfoAtPosition: (
    fileName: string,
    position: number
) => QuickInfo | undefined;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5519,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5519",
              },
              "type": "(fileName: string, position: number) => QuickInfo | undefined",
            },
            Object {
              "docs": Array [],
              "id": "LanguageService.getReferencesAtPosition",
              "kind": "InterfaceMethodDeclaration",
              "name": "getReferencesAtPosition",
              "signature": "getReferencesAtPosition: (
    fileName: string,
    position: number
) => ReferenceEntry[] | undefined;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5530,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5530",
              },
              "type": "(fileName: string, position: number) => ReferenceEntry[] | undefined",
            },
            Object {
              "docs": Array [],
              "id": "LanguageService.getRenameInfo",
              "kind": "InterfaceMethodDeclaration",
              "name": "getRenameInfo",
              "signature": "getRenameInfo: (
    fileName: string,
    position: number,
    options?: RenameInfoOptions
) => RenameInfo;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5523,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5523",
              },
              "type": "(fileName: string, position: number, options?: RenameInfoOptions) => RenameInfo",
            },
            Object {
              "docs": Array [
                "/** @deprecated Use getEncodedSemanticClassifications instead. */",
              ],
              "id": "LanguageService.getSemanticClassifications",
              "kind": "InterfaceMethodDeclaration",
              "name": "getSemanticClassifications",
              "signature": "getSemanticClassifications: {
    (fileName: string, span: TextSpan): ClassifiedSpan[];
    (fileName: string, span: TextSpan, format: SemanticClassificationFormat):
        | ClassifiedSpan[]
        | ClassifiedSpan2020[];
};",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5477,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5477",
              },
              "type": "{ (fileName: string, span: TextSpan): ClassifiedSpan[]; (fileName: string, span: TextSpan, format: SemanticClassificationFormat): ClassifiedSpan[] | ClassifiedSpan2020[]; }",
            },
            Object {
              "docs": Array [
                "/**
         * Gets warnings or errors indicating type system issues in a given file.
         * Requesting semantic diagnostics may start up the type system and
         * run deferred work, so the first call may take longer than subsequent calls.
         *
         * Unlike the other get*Diagnostics functions, these diagnostics can potentially not
         * include a reference to a source file. Specifically, the first time this is called,
         * it will return global diagnostics with no associated location.
         *
         * To contrast the differences between semantic and syntactic diagnostics, consider the
         * sentence: \\"The sun is green.\\" is syntactically correct; those are real English words with
         * correct sentence structure. However, it is semantically invalid, because it is not true.
         *
         * @param fileName A path to the file you want semantic diagnostics for
         */",
              ],
              "id": "LanguageService.getSemanticDiagnostics",
              "kind": "InterfaceMethodDeclaration",
              "name": "getSemanticDiagnostics",
              "signature": "getSemanticDiagnostics: (fileName: string) => Diagnostic[];",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5460,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5460",
              },
              "type": "(fileName: string) => Diagnostic[]",
            },
            Object {
              "docs": Array [],
              "id": "LanguageService.getSignatureHelpItems",
              "kind": "InterfaceMethodDeclaration",
              "name": "getSignatureHelpItems",
              "signature": "getSignatureHelpItems: (
    fileName: string,
    position: number,
    options: SignatureHelpItemsOptions | undefined
) => SignatureHelpItems | undefined;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5522,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5522",
              },
              "type": "(fileName: string, position: number, options: SignatureHelpItemsOptions | undefined) => SignatureHelpItems | undefined",
            },
            Object {
              "docs": Array [],
              "id": "LanguageService.getSmartSelectionRange",
              "kind": "InterfaceMethodDeclaration",
              "name": "getSmartSelectionRange",
              "signature": "getSmartSelectionRange: (fileName: string, position: number) => SelectionRange;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5525,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5525",
              },
              "type": "(fileName: string, position: number) => SelectionRange",
            },
            Object {
              "docs": Array [],
              "id": "LanguageService.getSpanOfEnclosingComment",
              "kind": "InterfaceMethodDeclaration",
              "name": "getSpanOfEnclosingComment",
              "signature": "getSpanOfEnclosingComment: (
    fileName: string,
    position: number,
    onlyMultiLine: boolean
) => TextSpan | undefined;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5555,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5555",
              },
              "type": "(fileName: string, position: number, onlyMultiLine: boolean) => TextSpan | undefined",
            },
            Object {
              "docs": Array [
                "/**
         * Gets suggestion diagnostics for a specific file. These diagnostics tend to
         * proactively suggest refactors, as opposed to diagnostics that indicate
         * potentially incorrect runtime behavior.
         *
         * @param fileName A path to the file you want semantic diagnostics for
         */",
              ],
              "id": "LanguageService.getSuggestionDiagnostics",
              "kind": "InterfaceMethodDeclaration",
              "name": "getSuggestionDiagnostics",
              "signature": "getSuggestionDiagnostics: (fileName: string) => DiagnosticWithLocation[];",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5468,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5468",
              },
              "type": "(fileName: string) => DiagnosticWithLocation[]",
            },
            Object {
              "docs": Array [
                "/** @deprecated Use getEncodedSyntacticClassifications instead. */",
              ],
              "id": "LanguageService.getSyntacticClassifications",
              "kind": "InterfaceMethodDeclaration",
              "name": "getSyntacticClassifications",
              "signature": "getSyntacticClassifications: {
    (fileName: string, span: TextSpan): ClassifiedSpan[];
    (fileName: string, span: TextSpan, format: SemanticClassificationFormat):
        | ClassifiedSpan[]
        | ClassifiedSpan2020[];
};",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5474,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5474",
              },
              "type": "{ (fileName: string, span: TextSpan): ClassifiedSpan[]; (fileName: string, span: TextSpan, format: SemanticClassificationFormat): ClassifiedSpan[] | ClassifiedSpan2020[]; }",
            },
            Object {
              "docs": Array [
                "/**
         * Gets errors indicating invalid syntax in a file.
         *
         * In English, \\"this cdeo have, erorrs\\" is syntactically invalid because it has typos,
         * grammatical errors, and misplaced punctuation. Likewise, examples of syntax
         * errors in TypeScript are missing parentheses in an \`if\` statement, mismatched
         * curly braces, and using a reserved keyword as a variable name.
         *
         * These diagnostics are inexpensive to compute and don't require knowledge of
         * other files. Note that a non-empty result increases the likelihood of false positives
         * from \`getSemanticDiagnostics\`.
         *
         * While these represent the majority of syntax-related diagnostics, there are some
         * that require the type system, which will be present in \`getSemanticDiagnostics\`.
         *
         * @param fileName A path to the file you want syntactic diagnostics for
         */",
              ],
              "id": "LanguageService.getSyntacticDiagnostics",
              "kind": "InterfaceMethodDeclaration",
              "name": "getSyntacticDiagnostics",
              "signature": "getSyntacticDiagnostics: (fileName: string) => DiagnosticWithLocation[];",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5444,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5444",
              },
              "type": "(fileName: string) => DiagnosticWithLocation[]",
            },
            Object {
              "docs": Array [],
              "id": "LanguageService.getTodoComments",
              "kind": "InterfaceMethodDeclaration",
              "name": "getTodoComments",
              "signature": "getTodoComments: (
    fileName: string,
    descriptors: TodoCommentDescriptor[]
) => TodoComment[];",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5542,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5542",
              },
              "type": "(fileName: string, descriptors: TodoCommentDescriptor[]) => TodoComment[]",
            },
            Object {
              "docs": Array [],
              "id": "LanguageService.getTypeDefinitionAtPosition",
              "kind": "InterfaceMethodDeclaration",
              "name": "getTypeDefinitionAtPosition",
              "signature": "getTypeDefinitionAtPosition: (
    fileName: string,
    position: number
) => readonly DefinitionInfo[] | undefined;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5528,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5528",
              },
              "type": "(fileName: string, position: number) => readonly DefinitionInfo[] | undefined",
            },
            Object {
              "docs": Array [],
              "id": "LanguageService.isValidBraceCompletionAtPosition",
              "kind": "InterfaceMethodDeclaration",
              "name": "isValidBraceCompletionAtPosition",
              "signature": "isValidBraceCompletionAtPosition: (
    fileName: string,
    position: number,
    openingBrace: number
) => boolean;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5549,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5549",
              },
              "type": "(fileName: string, position: number, openingBrace: number) => boolean",
            },
            Object {
              "docs": Array [],
              "id": "LanguageService.organizeImports",
              "kind": "InterfaceMethodDeclaration",
              "name": "organizeImports",
              "signature": "organizeImports: (
    scope: OrganizeImportsScope,
    formatOptions: FormatCodeSettings,
    preferences: UserPreferences | undefined
) => readonly FileTextChanges[];",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5570,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5570",
              },
              "type": "(scope: OrganizeImportsScope, formatOptions: FormatCodeSettings, preferences: UserPreferences | undefined) => readonly FileTextChanges[]",
            },
            Object {
              "docs": Array [],
              "id": "LanguageService.prepareCallHierarchy",
              "kind": "InterfaceMethodDeclaration",
              "name": "prepareCallHierarchy",
              "signature": "prepareCallHierarchy: (
    fileName: string,
    position: number
) => CallHierarchyItem | CallHierarchyItem[] | undefined;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5538,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5538",
              },
              "type": "(fileName: string, position: number) => CallHierarchyItem | CallHierarchyItem[] | undefined",
            },
            Object {
              "docs": Array [],
              "id": "LanguageService.provideCallHierarchyIncomingCalls",
              "kind": "InterfaceMethodDeclaration",
              "name": "provideCallHierarchyIncomingCalls",
              "signature": "provideCallHierarchyIncomingCalls: (
    fileName: string,
    position: number
) => CallHierarchyIncomingCall[];",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5539,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5539",
              },
              "type": "(fileName: string, position: number) => CallHierarchyIncomingCall[]",
            },
            Object {
              "docs": Array [],
              "id": "LanguageService.provideCallHierarchyOutgoingCalls",
              "kind": "InterfaceMethodDeclaration",
              "name": "provideCallHierarchyOutgoingCalls",
              "signature": "provideCallHierarchyOutgoingCalls: (
    fileName: string,
    position: number
) => CallHierarchyOutgoingCall[];",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5540,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5540",
              },
              "type": "(fileName: string, position: number) => CallHierarchyOutgoingCall[]",
            },
            Object {
              "docs": Array [],
              "id": "LanguageService.toggleLineComment",
              "kind": "InterfaceMethodDeclaration",
              "name": "toggleLineComment",
              "signature": "toggleLineComment: (fileName: string, textRange: TextRange) => TextChange[];",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5574,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5574",
              },
              "type": "(fileName: string, textRange: TextRange) => TextChange[]",
            },
            Object {
              "docs": Array [],
              "id": "LanguageService.toggleMultilineComment",
              "kind": "InterfaceMethodDeclaration",
              "name": "toggleMultilineComment",
              "signature": "toggleMultilineComment: (fileName: string, textRange: TextRange) => TextChange[];",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5575,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5575",
              },
              "type": "(fileName: string, textRange: TextRange) => TextChange[]",
            },
            Object {
              "docs": Array [],
              "id": "LanguageService.toLineColumnOffset",
              "kind": "InterfaceMethodDeclaration",
              "name": "toLineColumnOffset",
              "signature": "toLineColumnOffset: (fileName: string, position: number) => LineAndCharacter;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5556,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5556",
              },
              "type": "(fileName: string, position: number) => LineAndCharacter",
            },
            Object {
              "docs": Array [],
              "id": "LanguageService.uncommentSelection",
              "kind": "InterfaceMethodDeclaration",
              "name": "uncommentSelection",
              "signature": "uncommentSelection: (fileName: string, textRange: TextRange) => TextChange[];",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5577,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5577",
              },
              "type": "(fileName: string, textRange: TextRange) => TextChange[]",
            },
          ],
          "properties": Array [],
        },
        "name": "LanguageService",
        "signature": "interface LanguageService {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 5424,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5424",
        },
      },
      Object {
        "docs": Array [],
        "id": "LanguageServiceHost",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [
            Object {
              "docs": Array [],
              "id": "LanguageServiceHost.error",
              "kind": "InterfaceMethodDeclaration",
              "name": "error",
              "signature": "error: (s: string) => void;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5398,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5398",
              },
              "type": "(s: string) => void",
            },
            Object {
              "docs": Array [],
              "id": "LanguageServiceHost.fileExists",
              "kind": "InterfaceMethodDeclaration",
              "name": "fileExists",
              "signature": "fileExists: (path: string) => boolean;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5403,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5403",
              },
              "type": "(path: string) => boolean",
            },
            Object {
              "docs": Array [],
              "id": "LanguageServiceHost.getCancellationToken",
              "kind": "InterfaceMethodDeclaration",
              "name": "getCancellationToken",
              "signature": "getCancellationToken: () => HostCancellationToken;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5393,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5393",
              },
              "type": "() => HostCancellationToken",
            },
            Object {
              "docs": Array [],
              "id": "LanguageServiceHost.getCompilationSettings",
              "kind": "InterfaceMethodDeclaration",
              "name": "getCompilationSettings",
              "signature": "getCompilationSettings: () => CompilerOptions;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5384,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5384",
              },
              "type": "() => CompilerOptions",
            },
            Object {
              "docs": Array [],
              "id": "LanguageServiceHost.getCurrentDirectory",
              "kind": "InterfaceMethodDeclaration",
              "name": "getCurrentDirectory",
              "signature": "getCurrentDirectory: () => string;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5394,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5394",
              },
              "type": "() => string",
            },
            Object {
              "docs": Array [
                "/**
         * Gets a set of custom transformers to use during emit.
         */",
              ],
              "id": "LanguageServiceHost.getCustomTransformers",
              "kind": "InterfaceMethodDeclaration",
              "name": "getCustomTransformers",
              "signature": "getCustomTransformers: () => CustomTransformers | undefined;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5412,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5412",
              },
              "type": "() => CustomTransformers | undefined",
            },
            Object {
              "docs": Array [],
              "id": "LanguageServiceHost.getDefaultLibFileName",
              "kind": "InterfaceMethodDeclaration",
              "name": "getDefaultLibFileName",
              "signature": "getDefaultLibFileName: (options: CompilerOptions) => string;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5395,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5395",
              },
              "type": "(options: CompilerOptions) => string",
            },
            Object {
              "docs": Array [],
              "id": "LanguageServiceHost.getDirectories",
              "kind": "InterfaceMethodDeclaration",
              "name": "getDirectories",
              "signature": "getDirectories: (directoryName: string) => string[];",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5408,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5408",
              },
              "type": "(directoryName: string) => string[]",
            },
            Object {
              "docs": Array [],
              "id": "LanguageServiceHost.getLocalizedDiagnosticMessages",
              "kind": "InterfaceMethodDeclaration",
              "name": "getLocalizedDiagnosticMessages",
              "signature": "getLocalizedDiagnosticMessages: () => any;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5392,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5392",
              },
              "type": "() => any",
            },
            Object {
              "docs": Array [],
              "id": "LanguageServiceHost.getNewLine",
              "kind": "InterfaceMethodDeclaration",
              "name": "getNewLine",
              "signature": "getNewLine: () => string;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5385,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5385",
              },
              "type": "() => string",
            },
            Object {
              "docs": Array [],
              "id": "LanguageServiceHost.getProjectReferences",
              "kind": "InterfaceMethodDeclaration",
              "name": "getProjectReferences",
              "signature": "getProjectReferences: () => readonly ProjectReference[] | undefined;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5391,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5391",
              },
              "type": "() => readonly ProjectReference[] | undefined",
            },
            Object {
              "docs": Array [],
              "id": "LanguageServiceHost.getProjectVersion",
              "kind": "InterfaceMethodDeclaration",
              "name": "getProjectVersion",
              "signature": "getProjectVersion: () => string;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5386,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5386",
              },
              "type": "() => string",
            },
            Object {
              "docs": Array [],
              "id": "LanguageServiceHost.getResolvedModuleWithFailedLookupLocationsFromCache",
              "kind": "InterfaceMethodDeclaration",
              "name": "getResolvedModuleWithFailedLookupLocationsFromCache",
              "signature": "getResolvedModuleWithFailedLookupLocationsFromCache: (
    modulename: string,
    containingFile: string
) => ResolvedModuleWithFailedLookupLocations | undefined;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5406,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5406",
              },
              "type": "(modulename: string, containingFile: string) => ResolvedModuleWithFailedLookupLocations | undefined",
            },
            Object {
              "docs": Array [],
              "id": "LanguageServiceHost.getScriptFileNames",
              "kind": "InterfaceMethodDeclaration",
              "name": "getScriptFileNames",
              "signature": "getScriptFileNames: () => string[];",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5387,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5387",
              },
              "type": "() => string[]",
            },
            Object {
              "docs": Array [],
              "id": "LanguageServiceHost.getScriptKind",
              "kind": "InterfaceMethodDeclaration",
              "name": "getScriptKind",
              "signature": "getScriptKind: (fileName: string) => ScriptKind;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5388,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5388",
              },
              "type": "(fileName: string) => ScriptKind",
            },
            Object {
              "docs": Array [],
              "id": "LanguageServiceHost.getScriptSnapshot",
              "kind": "InterfaceMethodDeclaration",
              "name": "getScriptSnapshot",
              "signature": "getScriptSnapshot: (fileName: string) => IScriptSnapshot | undefined;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5390,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5390",
              },
              "type": "(fileName: string) => IScriptSnapshot | undefined",
            },
            Object {
              "docs": Array [],
              "id": "LanguageServiceHost.getScriptVersion",
              "kind": "InterfaceMethodDeclaration",
              "name": "getScriptVersion",
              "signature": "getScriptVersion: (fileName: string) => string;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5389,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5389",
              },
              "type": "(fileName: string) => string",
            },
            Object {
              "docs": Array [],
              "id": "LanguageServiceHost.getTypeRootsVersion",
              "kind": "InterfaceMethodDeclaration",
              "name": "getTypeRootsVersion",
              "signature": "getTypeRootsVersion: () => number;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5404,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5404",
              },
              "type": "() => number",
            },
            Object {
              "docs": Array [],
              "id": "LanguageServiceHost.installPackage",
              "kind": "InterfaceMethodDeclaration",
              "name": "installPackage",
              "signature": "installPackage: (
    options: InstallPackageOptions
) => Promise<ApplyCodeActionCommandResult>;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5414,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5414",
              },
              "type": "(options: InstallPackageOptions) => Promise<ApplyCodeActionCommandResult>",
            },
            Object {
              "docs": Array [],
              "id": "LanguageServiceHost.isKnownTypesPackageName",
              "kind": "InterfaceMethodDeclaration",
              "name": "isKnownTypesPackageName",
              "signature": "isKnownTypesPackageName: (name: string) => boolean;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5413,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5413",
              },
              "type": "(name: string) => boolean",
            },
            Object {
              "docs": Array [],
              "id": "LanguageServiceHost.log",
              "kind": "InterfaceMethodDeclaration",
              "name": "log",
              "signature": "log: (s: string) => void;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5396,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5396",
              },
              "type": "(s: string) => void",
            },
            Object {
              "docs": Array [],
              "id": "LanguageServiceHost.readDirectory",
              "kind": "InterfaceMethodDeclaration",
              "name": "readDirectory",
              "signature": "readDirectory: (
    path: string,
    extensions?: readonly string[],
    exclude?: readonly string[],
    include?: readonly string[],
    depth?: number
) => string[];",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5400,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5400",
              },
              "type": "(path: string, extensions?: readonly string[], exclude?: readonly string[], include?: readonly string[], depth?: number) => string[]",
            },
            Object {
              "docs": Array [],
              "id": "LanguageServiceHost.readFile",
              "kind": "InterfaceMethodDeclaration",
              "name": "readFile",
              "signature": "readFile: (path: string, encoding?: string) => string | undefined;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5401,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5401",
              },
              "type": "(path: string, encoding?: string) => string | undefined",
            },
            Object {
              "docs": Array [],
              "id": "LanguageServiceHost.realpath",
              "kind": "InterfaceMethodDeclaration",
              "name": "realpath",
              "signature": "realpath: (path: string) => string;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5402,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5402",
              },
              "type": "(path: string) => string",
            },
            Object {
              "docs": Array [],
              "id": "LanguageServiceHost.resolveModuleNames",
              "kind": "InterfaceMethodDeclaration",
              "name": "resolveModuleNames",
              "signature": "resolveModuleNames: (
    moduleNames: string[],
    containingFile: string,
    reusedNames: string[] | undefined,
    redirectedReference: ResolvedProjectReference | undefined,
    options: CompilerOptions
) => (ResolvedModule | undefined)[];",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5405,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5405",
              },
              "type": "(moduleNames: string[], containingFile: string, reusedNames: string[] | undefined, redirectedReference: ResolvedProjectReference | undefined, options: CompilerOptions) => (ResolvedModule | undefined)[]",
            },
            Object {
              "docs": Array [],
              "id": "LanguageServiceHost.resolveTypeReferenceDirectives",
              "kind": "InterfaceMethodDeclaration",
              "name": "resolveTypeReferenceDirectives",
              "signature": "resolveTypeReferenceDirectives: (
    typeDirectiveNames: string[],
    containingFile: string,
    redirectedReference: ResolvedProjectReference | undefined,
    options: CompilerOptions
) => (ResolvedTypeReferenceDirective | undefined)[];",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5407,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5407",
              },
              "type": "(typeDirectiveNames: string[], containingFile: string, redirectedReference: ResolvedProjectReference | undefined, options: CompilerOptions) => (ResolvedTypeReferenceDirective | undefined)[]",
            },
            Object {
              "docs": Array [],
              "id": "LanguageServiceHost.trace",
              "kind": "InterfaceMethodDeclaration",
              "name": "trace",
              "signature": "trace: (s: string) => void;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5397,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5397",
              },
              "type": "(s: string) => void",
            },
            Object {
              "docs": Array [],
              "id": "LanguageServiceHost.useCaseSensitiveFileNames",
              "kind": "InterfaceMethodDeclaration",
              "name": "useCaseSensitiveFileNames",
              "signature": "useCaseSensitiveFileNames: () => boolean;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5399,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5399",
              },
              "type": "() => boolean",
            },
            Object {
              "docs": Array [],
              "id": "LanguageServiceHost.writeFile",
              "kind": "InterfaceMethodDeclaration",
              "name": "writeFile",
              "signature": "writeFile: (fileName: string, content: string) => void;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5415,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5415",
              },
              "type": "(fileName: string, content: string) => void",
            },
          ],
          "properties": Array [],
        },
        "name": "LanguageServiceHost",
        "signature": "interface LanguageServiceHost extends GetEffectiveTypeRootsHost {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 5383,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5383",
        },
      },
      Object {
        "docs": Array [],
        "id": "LeftHandSideExpression",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [],
        },
        "name": "LeftHandSideExpression",
        "signature": "interface LeftHandSideExpression extends UpdateExpression {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 1005,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1005",
        },
      },
      Object {
        "docs": Array [],
        "id": "LineAndCharacter",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "LineAndCharacter.character",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "character",
              "signature": "character: number;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2926,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2926",
              },
              "type": "number",
            },
            Object {
              "docs": Array [
                "/** 0-based. */",
              ],
              "id": "LineAndCharacter.line",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "line",
              "signature": "line: number;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2925,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2925",
              },
              "type": "number",
            },
          ],
        },
        "name": "LineAndCharacter",
        "signature": "interface LineAndCharacter {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 2923,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2923",
        },
      },
      Object {
        "docs": Array [],
        "id": "LiteralExpression",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [],
        },
        "name": "LiteralExpression",
        "signature": "interface LiteralExpression extends LiteralLikeNode, PrimaryExpression {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 1137,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1137",
        },
      },
      Object {
        "docs": Array [],
        "id": "LiteralLikeNode",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "LiteralLikeNode.hasExtendedUnicodeEscape",
              "isOptional": true,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "hasExtendedUnicodeEscape",
              "signature": "hasExtendedUnicodeEscape?: boolean;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1132,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1132",
              },
              "type": "boolean",
            },
            Object {
              "docs": Array [],
              "id": "LiteralLikeNode.isUnterminated",
              "isOptional": true,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "isUnterminated",
              "signature": "isUnterminated?: boolean;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1131,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1131",
              },
              "type": "boolean",
            },
            Object {
              "docs": Array [],
              "id": "LiteralLikeNode.text",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "text",
              "signature": "text: string;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1130,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1130",
              },
              "type": "string",
            },
          ],
        },
        "name": "LiteralLikeNode",
        "signature": "interface LiteralLikeNode extends Node {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 1129,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1129",
        },
      },
      Object {
        "docs": Array [],
        "id": "LiteralType",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "LiteralType.freshType",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "freshType",
              "signature": "freshType: LiteralType;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2513,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2513",
              },
              "type": "LiteralType",
            },
            Object {
              "docs": Array [],
              "id": "LiteralType.regularType",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "regularType",
              "signature": "regularType: LiteralType;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2514,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2514",
              },
              "type": "LiteralType",
            },
            Object {
              "docs": Array [],
              "id": "LiteralType.value",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "value",
              "signature": "value: string | number | PseudoBigInt;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2512,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2512",
              },
              "type": "string | number | PseudoBigInt",
            },
          ],
        },
        "name": "LiteralType",
        "signature": "interface LiteralType extends Type {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 2511,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2511",
        },
      },
      Object {
        "docs": Array [],
        "id": "LiteralTypeNode",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "LiteralTypeNode.kind",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "kind",
              "signature": "readonly kind: SyntaxKind.LiteralType;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 956,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L956",
              },
              "type": "number",
            },
            Object {
              "docs": Array [],
              "id": "LiteralTypeNode.literal",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "literal",
              "signature": "readonly literal:
    | NullLiteral
    | BooleanLiteral
    | LiteralExpression
    | PrefixUnaryExpression;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 957,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L957",
              },
              "type": "LiteralExpression | NullLiteral | BooleanLiteral | PrefixUnaryExpression",
            },
          ],
        },
        "name": "LiteralTypeNode",
        "signature": "interface LiteralTypeNode extends TypeNode {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 955,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L955",
        },
      },
      Object {
        "docs": Array [
          "/**
     * ES6 Map interface.
     */",
        ],
        "id": "Map",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [],
        },
        "name": "Map",
        "signature": "interface Map<T> extends ESMap<string, T> {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 64,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L64",
        },
      },
      Object {
        "docs": Array [
          "/**
     * @deprecated Use \`ts.ESMap<K, V>\` instead.
     */",
        ],
        "id": "Map",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [],
        },
        "name": "Map",
        "signature": "interface Map<T> extends ESMap<string, T> {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 7200,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L7200",
        },
      },
      Object {
        "docs": Array [
          "/**
     * Type of objects whose values are all of the same type.
     * The \`in\` and \`for-in\` operators can *not* be safely used,
     * since \`Object.prototype\` may be modified by outside code.
     */",
        ],
        "id": "MapLike",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [
            Object {
              "docs": Array [],
              "id": "MapLike.0-index-signature",
              "kind": "InterfaceIndexSignatureDeclaration",
              "name": "index signature",
              "signature": "[index: string]: T;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 26,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L26",
              },
            },
          ],
          "methods": Array [],
          "properties": Array [],
        },
        "name": "MapLike",
        "signature": "interface MapLike<T> {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 25,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L25",
        },
      },
      Object {
        "docs": Array [],
        "id": "MappedTypeNode",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "MappedTypeNode.kind",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "kind",
              "signature": "readonly kind: SyntaxKind.MappedType;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 948,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L948",
              },
              "type": "number",
            },
            Object {
              "docs": Array [],
              "id": "MappedTypeNode.nameType",
              "isOptional": true,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "nameType",
              "signature": "readonly nameType?: TypeNode;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 951,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L951",
              },
              "type": "TypeNode",
            },
            Object {
              "docs": Array [],
              "id": "MappedTypeNode.questionToken",
              "isOptional": true,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "questionToken",
              "signature": "readonly questionToken?: QuestionToken | PlusToken | MinusToken;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 952,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L952",
              },
              "type": "QuestionToken | PlusToken | MinusToken",
            },
            Object {
              "docs": Array [],
              "id": "MappedTypeNode.readonlyToken",
              "isOptional": true,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "readonlyToken",
              "signature": "readonly readonlyToken?: ReadonlyToken | PlusToken | MinusToken;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 949,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L949",
              },
              "type": "ReadonlyKeyword | PlusToken | MinusToken",
            },
            Object {
              "docs": Array [],
              "id": "MappedTypeNode.type",
              "isOptional": true,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "type",
              "signature": "readonly type?: TypeNode;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 953,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L953",
              },
              "type": "TypeNode",
            },
            Object {
              "docs": Array [],
              "id": "MappedTypeNode.typeParameter",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "typeParameter",
              "signature": "readonly typeParameter: TypeParameterDeclaration;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 950,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L950",
              },
              "type": "TypeParameterDeclaration",
            },
          ],
        },
        "name": "MappedTypeNode",
        "signature": "interface MappedTypeNode extends TypeNode, Declaration {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 947,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L947",
        },
      },
      Object {
        "docs": Array [],
        "id": "MemberExpression",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [],
        },
        "name": "MemberExpression",
        "signature": "interface MemberExpression extends LeftHandSideExpression {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 1008,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1008",
        },
      },
      Object {
        "docs": Array [],
        "id": "MetaProperty",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "MetaProperty.keywordToken",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "keywordToken",
              "signature": "readonly keywordToken: SyntaxKind.NewKeyword | SyntaxKind.ImportKeyword;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1302,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1302",
              },
              "type": "SyntaxKind.ImportKeyword | SyntaxKind.NewKeyword",
            },
            Object {
              "docs": Array [],
              "id": "MetaProperty.kind",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "kind",
              "signature": "readonly kind: SyntaxKind.MetaProperty;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1301,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1301",
              },
              "type": "number",
            },
            Object {
              "docs": Array [],
              "id": "MetaProperty.name",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "name",
              "signature": "readonly name: Identifier;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1303,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1303",
              },
              "type": "Identifier",
            },
          ],
        },
        "name": "MetaProperty",
        "signature": "interface MetaProperty extends PrimaryExpression {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 1300,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1300",
        },
      },
      Object {
        "docs": Array [],
        "id": "MethodDeclaration",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "MethodDeclaration.body",
              "isOptional": true,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "body",
              "signature": "readonly body?: FunctionBody;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 811,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L811",
              },
              "type": "Block",
            },
            Object {
              "docs": Array [],
              "id": "MethodDeclaration.kind",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "kind",
              "signature": "readonly kind: SyntaxKind.MethodDeclaration;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 808,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L808",
              },
              "type": "number",
            },
            Object {
              "docs": Array [],
              "id": "MethodDeclaration.name",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "name",
              "signature": "readonly name: PropertyName;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 810,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L810",
              },
              "type": "PropertyName",
            },
            Object {
              "docs": Array [],
              "id": "MethodDeclaration.parent",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "parent",
              "signature": "readonly parent: ClassLikeDeclaration | ObjectLiteralExpression;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 809,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L809",
              },
              "type": "ClassLikeDeclaration | ObjectLiteralExpression",
            },
          ],
        },
        "name": "MethodDeclaration",
        "signature": "interface MethodDeclaration
    extends FunctionLikeDeclarationBase,
        ClassElement,
        ObjectLiteralElement,
        JSDocContainer {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 807,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L807",
        },
      },
      Object {
        "docs": Array [],
        "id": "MethodSignature",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "MethodSignature.kind",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "kind",
              "signature": "readonly kind: SyntaxKind.MethodSignature;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 803,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L803",
              },
              "type": "number",
            },
            Object {
              "docs": Array [],
              "id": "MethodSignature.name",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "name",
              "signature": "readonly name: PropertyName;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 805,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L805",
              },
              "type": "PropertyName",
            },
            Object {
              "docs": Array [],
              "id": "MethodSignature.parent",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "parent",
              "signature": "readonly parent: ObjectTypeDeclaration;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 804,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L804",
              },
              "type": "ObjectTypeDeclaration",
            },
          ],
        },
        "name": "MethodSignature",
        "signature": "interface MethodSignature extends SignatureDeclarationBase, TypeElement {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 802,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L802",
        },
      },
      Object {
        "docs": Array [],
        "id": "MissingDeclaration",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "MissingDeclaration.kind",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "kind",
              "signature": "readonly kind: SyntaxKind.MissingDeclaration;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1396,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1396",
              },
              "type": "number",
            },
            Object {
              "docs": Array [],
              "id": "MissingDeclaration.name",
              "isOptional": true,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "name",
              "signature": "readonly name?: Identifier;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1397,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1397",
              },
              "type": "Identifier",
            },
          ],
        },
        "name": "MissingDeclaration",
        "signature": "interface MissingDeclaration extends DeclarationStatement {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 1395,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1395",
        },
      },
      Object {
        "docs": Array [],
        "id": "ModifierToken",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [],
        },
        "name": "ModifierToken",
        "signature": "interface ModifierToken<TKind extends ModifierSyntaxKind>
    extends KeywordToken<TKind> {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 594,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L594",
        },
      },
      Object {
        "docs": Array [],
        "id": "ModuleBlock",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "ModuleBlock.kind",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "kind",
              "signature": "readonly kind: SyntaxKind.ModuleBlock;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1587,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1587",
              },
              "type": "number",
            },
            Object {
              "docs": Array [],
              "id": "ModuleBlock.parent",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "parent",
              "signature": "readonly parent: ModuleDeclaration;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1588,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1588",
              },
              "type": "ModuleDeclaration",
            },
            Object {
              "docs": Array [],
              "id": "ModuleBlock.statements",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "statements",
              "signature": "readonly statements: NodeArray<Statement>;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1589,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1589",
              },
              "type": "NodeArray<Statement>",
            },
          ],
        },
        "name": "ModuleBlock",
        "signature": "interface ModuleBlock extends Node, Statement {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 1586,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1586",
        },
      },
      Object {
        "docs": Array [],
        "id": "ModuleDeclaration",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "ModuleDeclaration.body",
              "isOptional": true,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "body",
              "signature": "readonly body?: ModuleBody | JSDocNamespaceDeclaration;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1574,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1574",
              },
              "type": "ModuleBody",
            },
            Object {
              "docs": Array [],
              "id": "ModuleDeclaration.kind",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "kind",
              "signature": "readonly kind: SyntaxKind.ModuleDeclaration;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1571,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1571",
              },
              "type": "number",
            },
            Object {
              "docs": Array [],
              "id": "ModuleDeclaration.name",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "name",
              "signature": "readonly name: ModuleName;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1573,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1573",
              },
              "type": "ModuleName",
            },
            Object {
              "docs": Array [],
              "id": "ModuleDeclaration.parent",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "parent",
              "signature": "readonly parent: ModuleBody | SourceFile;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1572,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1572",
              },
              "type": "SourceFile | ModuleBody",
            },
          ],
        },
        "name": "ModuleDeclaration",
        "signature": "interface ModuleDeclaration extends DeclarationStatement, JSDocContainer {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 1570,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1570",
        },
      },
      Object {
        "docs": Array [
          "/**
     * Cached module resolutions per containing directory.
     * This assumes that any module id will have the same resolution for sibling files located in the same folder.
     */",
        ],
        "id": "ModuleResolutionCache",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [
            Object {
              "docs": Array [],
              "id": "ModuleResolutionCache.getOrCreateCacheForDirectory",
              "kind": "InterfaceMethodDeclaration",
              "name": "getOrCreateCacheForDirectory",
              "signature": "getOrCreateCacheForDirectory: (
    directoryName: string,
    redirectedReference?: ResolvedProjectReference
) => Map<ResolvedModuleWithFailedLookupLocations>;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 4658,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4658",
              },
              "type": "(directoryName: string, redirectedReference?: ResolvedProjectReference) => Map<ResolvedModuleWithFailedLookupLocations>",
            },
          ],
          "properties": Array [],
        },
        "name": "ModuleResolutionCache",
        "signature": "interface ModuleResolutionCache extends NonRelativeModuleNameResolutionCache {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4657,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4657",
        },
      },
      Object {
        "docs": Array [],
        "id": "ModuleResolutionHost",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [
            Object {
              "docs": Array [],
              "id": "ModuleResolutionHost.directoryExists",
              "kind": "InterfaceMethodDeclaration",
              "name": "directoryExists",
              "signature": "directoryExists: (directoryName: string) => boolean;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2991,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2991",
              },
              "type": "(directoryName: string) => boolean",
            },
            Object {
              "docs": Array [],
              "id": "ModuleResolutionHost.fileExists",
              "kind": "InterfaceMethodDeclaration",
              "name": "fileExists",
              "signature": "fileExists: (fileName: string) => boolean;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2988,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2988",
              },
              "type": "(fileName: string) => boolean",
            },
            Object {
              "docs": Array [],
              "id": "ModuleResolutionHost.getCurrentDirectory",
              "kind": "InterfaceMethodDeclaration",
              "name": "getCurrentDirectory",
              "signature": "getCurrentDirectory: () => string;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2997,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2997",
              },
              "type": "() => string",
            },
            Object {
              "docs": Array [],
              "id": "ModuleResolutionHost.getDirectories",
              "kind": "InterfaceMethodDeclaration",
              "name": "getDirectories",
              "signature": "getDirectories: (path: string) => string[];",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2998,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2998",
              },
              "type": "(path: string) => string[]",
            },
            Object {
              "docs": Array [],
              "id": "ModuleResolutionHost.readFile",
              "kind": "InterfaceMethodDeclaration",
              "name": "readFile",
              "signature": "readFile: (fileName: string) => string | undefined;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2989,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2989",
              },
              "type": "(fileName: string) => string | undefined",
            },
            Object {
              "docs": Array [
                "/**
         * Resolve a symbolic link.
         * @see https://nodejs.org/api/fs.html#fs_fs_realpathsync_path_options
         */",
              ],
              "id": "ModuleResolutionHost.realpath",
              "kind": "InterfaceMethodDeclaration",
              "name": "realpath",
              "signature": "realpath: (path: string) => string;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2996,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2996",
              },
              "type": "(path: string) => string",
            },
            Object {
              "docs": Array [],
              "id": "ModuleResolutionHost.trace",
              "kind": "InterfaceMethodDeclaration",
              "name": "trace",
              "signature": "trace: (s: string) => void;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2990,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2990",
              },
              "type": "(s: string) => void",
            },
          ],
          "properties": Array [],
        },
        "name": "ModuleResolutionHost",
        "signature": "interface ModuleResolutionHost {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 2987,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2987",
        },
      },
      Object {
        "docs": Array [],
        "id": "NamedDeclaration",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "NamedDeclaration.name",
              "isOptional": true,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "name",
              "signature": "readonly name?: DeclarationName;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 646,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L646",
              },
              "type": "DeclarationName",
            },
          ],
        },
        "name": "NamedDeclaration",
        "signature": "interface NamedDeclaration extends Declaration {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 645,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L645",
        },
      },
      Object {
        "docs": Array [],
        "id": "NamedExports",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "NamedExports.elements",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "elements",
              "signature": "readonly elements: NodeArray<ExportSpecifier>;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1655,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1655",
              },
              "type": "NodeArray<ExportSpecifier>",
            },
            Object {
              "docs": Array [],
              "id": "NamedExports.kind",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "kind",
              "signature": "readonly kind: SyntaxKind.NamedExports;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1653,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1653",
              },
              "type": "number",
            },
            Object {
              "docs": Array [],
              "id": "NamedExports.parent",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "parent",
              "signature": "readonly parent: ExportDeclaration;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1654,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1654",
              },
              "type": "ExportDeclaration",
            },
          ],
        },
        "name": "NamedExports",
        "signature": "interface NamedExports extends Node {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 1652,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1652",
        },
      },
      Object {
        "docs": Array [],
        "id": "NamedImports",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "NamedImports.elements",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "elements",
              "signature": "readonly elements: NodeArray<ImportSpecifier>;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1650,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1650",
              },
              "type": "NodeArray<ImportSpecifier>",
            },
            Object {
              "docs": Array [],
              "id": "NamedImports.kind",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "kind",
              "signature": "readonly kind: SyntaxKind.NamedImports;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1648,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1648",
              },
              "type": "number",
            },
            Object {
              "docs": Array [],
              "id": "NamedImports.parent",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "parent",
              "signature": "readonly parent: ImportClause;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1649,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1649",
              },
              "type": "ImportClause",
            },
          ],
        },
        "name": "NamedImports",
        "signature": "interface NamedImports extends Node {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 1647,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1647",
        },
      },
      Object {
        "docs": Array [],
        "id": "NamedTupleMember",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "NamedTupleMember.dotDotDotToken",
              "isOptional": true,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "dotDotDotToken",
              "signature": "readonly dotDotDotToken?: Token<SyntaxKind.DotDotDotToken>;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 900,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L900",
              },
              "type": "Token<SyntaxKind.DotDotDotToken>",
            },
            Object {
              "docs": Array [],
              "id": "NamedTupleMember.kind",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "kind",
              "signature": "readonly kind: SyntaxKind.NamedTupleMember;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 899,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L899",
              },
              "type": "number",
            },
            Object {
              "docs": Array [],
              "id": "NamedTupleMember.name",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "name",
              "signature": "readonly name: Identifier;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 901,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L901",
              },
              "type": "Identifier",
            },
            Object {
              "docs": Array [],
              "id": "NamedTupleMember.questionToken",
              "isOptional": true,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "questionToken",
              "signature": "readonly questionToken?: Token<SyntaxKind.QuestionToken>;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 902,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L902",
              },
              "type": "Token<SyntaxKind.QuestionToken>",
            },
            Object {
              "docs": Array [],
              "id": "NamedTupleMember.type",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "type",
              "signature": "readonly type: TypeNode;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 903,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L903",
              },
              "type": "TypeNode",
            },
          ],
        },
        "name": "NamedTupleMember",
        "signature": "interface NamedTupleMember extends TypeNode, JSDocContainer, Declaration {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 898,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L898",
        },
      },
      Object {
        "docs": Array [],
        "id": "NamespaceDeclaration",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "NamespaceDeclaration.body",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "body",
              "signature": "readonly body: NamespaceBody;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1579,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1579",
              },
              "type": "NamespaceBody",
            },
            Object {
              "docs": Array [],
              "id": "NamespaceDeclaration.name",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "name",
              "signature": "readonly name: Identifier;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1578,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1578",
              },
              "type": "Identifier",
            },
          ],
        },
        "name": "NamespaceDeclaration",
        "signature": "interface NamespaceDeclaration extends ModuleDeclaration {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 1577,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1577",
        },
      },
      Object {
        "docs": Array [],
        "id": "NamespaceExport",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "NamespaceExport.kind",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "kind",
              "signature": "readonly kind: SyntaxKind.NamespaceExport;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1630,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1630",
              },
              "type": "number",
            },
            Object {
              "docs": Array [],
              "id": "NamespaceExport.name",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "name",
              "signature": "readonly name: Identifier;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1632,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1632",
              },
              "type": "Identifier",
            },
            Object {
              "docs": Array [],
              "id": "NamespaceExport.parent",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "parent",
              "signature": "readonly parent: ExportDeclaration;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1631,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1631",
              },
              "type": "ExportDeclaration",
            },
          ],
        },
        "name": "NamespaceExport",
        "signature": "interface NamespaceExport extends NamedDeclaration {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 1629,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1629",
        },
      },
      Object {
        "docs": Array [],
        "id": "NamespaceExportDeclaration",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "NamespaceExportDeclaration.kind",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "kind",
              "signature": "readonly kind: SyntaxKind.NamespaceExportDeclaration;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1635,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1635",
              },
              "type": "number",
            },
            Object {
              "docs": Array [],
              "id": "NamespaceExportDeclaration.name",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "name",
              "signature": "readonly name: Identifier;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1636,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1636",
              },
              "type": "Identifier",
            },
          ],
        },
        "name": "NamespaceExportDeclaration",
        "signature": "interface NamespaceExportDeclaration extends DeclarationStatement, JSDocContainer {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 1634,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1634",
        },
      },
      Object {
        "docs": Array [],
        "id": "NamespaceImport",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "NamespaceImport.kind",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "kind",
              "signature": "readonly kind: SyntaxKind.NamespaceImport;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1625,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1625",
              },
              "type": "number",
            },
            Object {
              "docs": Array [],
              "id": "NamespaceImport.name",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "name",
              "signature": "readonly name: Identifier;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1627,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1627",
              },
              "type": "Identifier",
            },
            Object {
              "docs": Array [],
              "id": "NamespaceImport.parent",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "parent",
              "signature": "readonly parent: ImportClause;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1626,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1626",
              },
              "type": "ImportClause",
            },
          ],
        },
        "name": "NamespaceImport",
        "signature": "interface NamespaceImport extends NamedDeclaration {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 1624,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1624",
        },
      },
      Object {
        "docs": Array [],
        "id": "NavigateToItem",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "NavigateToItem.containerKind",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "containerKind",
              "signature": "containerKind: ScriptElementKind;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5862,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5862",
              },
              "type": "ScriptElementKind",
            },
            Object {
              "docs": Array [],
              "id": "NavigateToItem.containerName",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "containerName",
              "signature": "containerName: string;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5861,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5861",
              },
              "type": "string",
            },
            Object {
              "docs": Array [],
              "id": "NavigateToItem.fileName",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "fileName",
              "signature": "fileName: string;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5859,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5859",
              },
              "type": "string",
            },
            Object {
              "docs": Array [],
              "id": "NavigateToItem.isCaseSensitive",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "isCaseSensitive",
              "signature": "isCaseSensitive: boolean;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5858,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5858",
              },
              "type": "boolean",
            },
            Object {
              "docs": Array [],
              "id": "NavigateToItem.kind",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "kind",
              "signature": "kind: ScriptElementKind;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5855,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5855",
              },
              "type": "ScriptElementKind",
            },
            Object {
              "docs": Array [],
              "id": "NavigateToItem.kindModifiers",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "kindModifiers",
              "signature": "kindModifiers: string;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5856,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5856",
              },
              "type": "string",
            },
            Object {
              "docs": Array [],
              "id": "NavigateToItem.matchKind",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "matchKind",
              "signature": "matchKind: 'exact' | 'prefix' | 'substring' | 'camelCase';",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5857,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5857",
              },
              "type": "\\"exact\\" | \\"prefix\\" | \\"substring\\" | \\"camelCase\\"",
            },
            Object {
              "docs": Array [],
              "id": "NavigateToItem.name",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "name",
              "signature": "name: string;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5854,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5854",
              },
              "type": "string",
            },
            Object {
              "docs": Array [],
              "id": "NavigateToItem.textSpan",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "textSpan",
              "signature": "textSpan: TextSpan;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5860,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5860",
              },
              "type": "TextSpan",
            },
          ],
        },
        "name": "NavigateToItem",
        "signature": "interface NavigateToItem {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 5853,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5853",
        },
      },
      Object {
        "docs": Array [
          "/**
     * Navigation bar interface designed for visual studio's dual-column layout.
     * This does not form a proper tree.
     * The navbar is returned as a list of top-level items, each of which has a list of child items.
     * Child items always have an empty array for their \`childItems\`.
     */",
        ],
        "id": "NavigationBarItem",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "NavigationBarItem.bolded",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "bolded",
              "signature": "bolded: boolean;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5666,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5666",
              },
              "type": "boolean",
            },
            Object {
              "docs": Array [],
              "id": "NavigationBarItem.childItems",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "childItems",
              "signature": "childItems: NavigationBarItem[];",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5664,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5664",
              },
              "type": "NavigationBarItem[]",
            },
            Object {
              "docs": Array [],
              "id": "NavigationBarItem.grayed",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "grayed",
              "signature": "grayed: boolean;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5667,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5667",
              },
              "type": "boolean",
            },
            Object {
              "docs": Array [],
              "id": "NavigationBarItem.indent",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "indent",
              "signature": "indent: number;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5665,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5665",
              },
              "type": "number",
            },
            Object {
              "docs": Array [],
              "id": "NavigationBarItem.kind",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "kind",
              "signature": "kind: ScriptElementKind;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5661,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5661",
              },
              "type": "ScriptElementKind",
            },
            Object {
              "docs": Array [],
              "id": "NavigationBarItem.kindModifiers",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "kindModifiers",
              "signature": "kindModifiers: string;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5662,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5662",
              },
              "type": "string",
            },
            Object {
              "docs": Array [],
              "id": "NavigationBarItem.spans",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "spans",
              "signature": "spans: TextSpan[];",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5663,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5663",
              },
              "type": "TextSpan[]",
            },
            Object {
              "docs": Array [],
              "id": "NavigationBarItem.text",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "text",
              "signature": "text: string;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5660,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5660",
              },
              "type": "string",
            },
          ],
        },
        "name": "NavigationBarItem",
        "signature": "interface NavigationBarItem {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 5659,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5659",
        },
      },
      Object {
        "docs": Array [
          "/**
     * Node in a tree of nested declarations in a file.
     * The top node is always a script or module node.
     */",
        ],
        "id": "NavigationTree",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [
                "/** Present if non-empty */",
              ],
              "id": "NavigationTree.childItems",
              "isOptional": true,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "childItems",
              "signature": "childItems?: NavigationTree[];",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5686,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5686",
              },
              "type": "NavigationTree[]",
            },
            Object {
              "docs": Array [],
              "id": "NavigationTree.kind",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "kind",
              "signature": "kind: ScriptElementKind;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5676,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5676",
              },
              "type": "ScriptElementKind",
            },
            Object {
              "docs": Array [
                "/** ScriptElementKindModifier separated by commas, e.g. \\"public,abstract\\" */",
              ],
              "id": "NavigationTree.kindModifiers",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "kindModifiers",
              "signature": "kindModifiers: string;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5678,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5678",
              },
              "type": "string",
            },
            Object {
              "docs": Array [],
              "id": "NavigationTree.nameSpan",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "nameSpan",
              "signature": "nameSpan: TextSpan | undefined;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5684,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5684",
              },
              "type": "TextSpan",
            },
            Object {
              "docs": Array [
                "/**
         * Spans of the nodes that generated this declaration.
         * There will be more than one if this is the result of merging.
         */",
              ],
              "id": "NavigationTree.spans",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "spans",
              "signature": "spans: TextSpan[];",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5683,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5683",
              },
              "type": "TextSpan[]",
            },
            Object {
              "docs": Array [
                "/** Name of the declaration, or a short description, e.g. \\"<class>\\". */",
              ],
              "id": "NavigationTree.text",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "text",
              "signature": "text: string;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5675,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5675",
              },
              "type": "string",
            },
          ],
        },
        "name": "NavigationTree",
        "signature": "interface NavigationTree {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 5673,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5673",
        },
      },
      Object {
        "docs": Array [],
        "id": "NewExpression",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "NewExpression.arguments",
              "isOptional": true,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "arguments",
              "signature": "readonly arguments?: NodeArray<Expression>;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1273,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1273",
              },
              "type": "NodeArray<Expression>",
            },
            Object {
              "docs": Array [],
              "id": "NewExpression.expression",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "expression",
              "signature": "readonly expression: LeftHandSideExpression;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1271,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1271",
              },
              "type": "LeftHandSideExpression",
            },
            Object {
              "docs": Array [],
              "id": "NewExpression.kind",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "kind",
              "signature": "readonly kind: SyntaxKind.NewExpression;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1270,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1270",
              },
              "type": "number",
            },
            Object {
              "docs": Array [],
              "id": "NewExpression.typeArguments",
              "isOptional": true,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "typeArguments",
              "signature": "readonly typeArguments?: NodeArray<TypeNode>;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1272,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1272",
              },
              "type": "NodeArray<TypeNode>",
            },
          ],
        },
        "name": "NewExpression",
        "signature": "interface NewExpression extends PrimaryExpression, Declaration {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 1269,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1269",
        },
      },
      Object {
        "docs": Array [],
        "id": "Node",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "Node.decorators",
              "isOptional": true,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "decorators",
              "signature": "readonly decorators?: NodeArray<Decorator>;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 555,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L555",
              },
              "type": "NodeArray<Decorator>",
            },
            Object {
              "docs": Array [],
              "id": "Node.flags",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "flags",
              "signature": "readonly flags: NodeFlags;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 554,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L554",
              },
              "type": "NodeFlags",
            },
            Object {
              "docs": Array [],
              "id": "Node.kind",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "kind",
              "signature": "readonly kind: SyntaxKind;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 553,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L553",
              },
              "type": "SyntaxKind",
            },
            Object {
              "docs": Array [],
              "id": "Node.modifiers",
              "isOptional": true,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "modifiers",
              "signature": "readonly modifiers?: ModifiersArray;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 556,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L556",
              },
              "type": "ModifiersArray",
            },
            Object {
              "docs": Array [],
              "id": "Node.parent",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "parent",
              "signature": "readonly parent: Node;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 557,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L557",
              },
              "type": "Node",
            },
          ],
        },
        "name": "Node",
        "signature": "interface Node extends ReadonlyTextRange {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 552,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L552",
        },
      },
      Object {
        "docs": Array [],
        "id": "Node",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [
            Object {
              "docs": Array [],
              "id": "Node.forEachChild",
              "kind": "InterfaceMethodDeclaration",
              "name": "forEachChild",
              "signature": "forEachChild: <T>(
    cbNode: (node: Node) => T | undefined,
    cbNodeArray?: (nodes: NodeArray<Node>) => T | undefined
) => T | undefined;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5270,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5270",
              },
              "type": "<T>(cbNode: (node: Node) => T | undefined, cbNodeArray?: (nodes: NodeArray<Node>) => T | undefined) => T | undefined",
            },
            Object {
              "docs": Array [],
              "id": "Node.getChildAt",
              "kind": "InterfaceMethodDeclaration",
              "name": "getChildAt",
              "signature": "getChildAt: (index: number, sourceFile?: SourceFile) => Node;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5258,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5258",
              },
              "type": "(index: number, sourceFile?: SourceFile) => Node",
            },
            Object {
              "docs": Array [],
              "id": "Node.getChildCount",
              "kind": "InterfaceMethodDeclaration",
              "name": "getChildCount",
              "signature": "getChildCount: (sourceFile?: SourceFile) => number;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5257,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5257",
              },
              "type": "(sourceFile?: SourceFile) => number",
            },
            Object {
              "docs": Array [],
              "id": "Node.getChildren",
              "kind": "InterfaceMethodDeclaration",
              "name": "getChildren",
              "signature": "getChildren: (sourceFile?: SourceFile) => Node[];",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5259,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5259",
              },
              "type": "(sourceFile?: SourceFile) => Node[]",
            },
            Object {
              "docs": Array [],
              "id": "Node.getEnd",
              "kind": "InterfaceMethodDeclaration",
              "name": "getEnd",
              "signature": "getEnd: () => number;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5262,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5262",
              },
              "type": "() => number",
            },
            Object {
              "docs": Array [],
              "id": "Node.getFirstToken",
              "kind": "InterfaceMethodDeclaration",
              "name": "getFirstToken",
              "signature": "getFirstToken: (sourceFile?: SourceFile) => Node | undefined;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5268,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5268",
              },
              "type": "(sourceFile?: SourceFile) => Node | undefined",
            },
            Object {
              "docs": Array [],
              "id": "Node.getFullStart",
              "kind": "InterfaceMethodDeclaration",
              "name": "getFullStart",
              "signature": "getFullStart: () => number;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5261,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5261",
              },
              "type": "() => number",
            },
            Object {
              "docs": Array [],
              "id": "Node.getFullText",
              "kind": "InterfaceMethodDeclaration",
              "name": "getFullText",
              "signature": "getFullText: (sourceFile?: SourceFile) => string;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5266,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5266",
              },
              "type": "(sourceFile?: SourceFile) => string",
            },
            Object {
              "docs": Array [],
              "id": "Node.getFullWidth",
              "kind": "InterfaceMethodDeclaration",
              "name": "getFullWidth",
              "signature": "getFullWidth: () => number;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5264,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5264",
              },
              "type": "() => number",
            },
            Object {
              "docs": Array [],
              "id": "Node.getLastToken",
              "kind": "InterfaceMethodDeclaration",
              "name": "getLastToken",
              "signature": "getLastToken: (sourceFile?: SourceFile) => Node | undefined;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5269,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5269",
              },
              "type": "(sourceFile?: SourceFile) => Node | undefined",
            },
            Object {
              "docs": Array [],
              "id": "Node.getLeadingTriviaWidth",
              "kind": "InterfaceMethodDeclaration",
              "name": "getLeadingTriviaWidth",
              "signature": "getLeadingTriviaWidth: (sourceFile?: SourceFile) => number;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5265,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5265",
              },
              "type": "(sourceFile?: SourceFile) => number",
            },
            Object {
              "docs": Array [],
              "id": "Node.getSourceFile",
              "kind": "InterfaceMethodDeclaration",
              "name": "getSourceFile",
              "signature": "getSourceFile: () => SourceFile;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5256,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5256",
              },
              "type": "() => SourceFile",
            },
            Object {
              "docs": Array [],
              "id": "Node.getStart",
              "kind": "InterfaceMethodDeclaration",
              "name": "getStart",
              "signature": "getStart: (sourceFile?: SourceFile, includeJsDocComment?: boolean) => number;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5260,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5260",
              },
              "type": "(sourceFile?: SourceFile, includeJsDocComment?: boolean) => number",
            },
            Object {
              "docs": Array [],
              "id": "Node.getText",
              "kind": "InterfaceMethodDeclaration",
              "name": "getText",
              "signature": "getText: (sourceFile?: SourceFile) => string;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5267,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5267",
              },
              "type": "(sourceFile?: SourceFile) => string",
            },
            Object {
              "docs": Array [],
              "id": "Node.getWidth",
              "kind": "InterfaceMethodDeclaration",
              "name": "getWidth",
              "signature": "getWidth: (sourceFile?: SourceFileLike) => number;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5263,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5263",
              },
              "type": "(sourceFile?: SourceFileLike) => number",
            },
          ],
          "properties": Array [],
        },
        "name": "Node",
        "signature": "interface Node {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 5255,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5255",
        },
      },
      Object {
        "docs": Array [],
        "id": "NodeArray",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "NodeArray.hasTrailingComma",
              "isOptional": true,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "hasTrailingComma",
              "signature": "hasTrailingComma?: boolean;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 567,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L567",
              },
              "type": "boolean",
            },
          ],
        },
        "name": "NodeArray",
        "signature": "interface NodeArray<T extends Node> extends ReadonlyArray<T>, ReadonlyTextRange {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 566,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L566",
        },
      },
      Object {
        "docs": Array [],
        "id": "NodeFactory",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [
            Object {
              "docs": Array [],
              "id": "NodeFactory.createAdd",
              "kind": "InterfaceMethodDeclaration",
              "name": "createAdd",
              "signature": "createAdd: (left: Expression, right: Expression) => BinaryExpression;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3563,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3563",
              },
              "type": "(left: Expression, right: Expression) => BinaryExpression",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.createArrayBindingPattern",
              "kind": "InterfaceMethodDeclaration",
              "name": "createArrayBindingPattern",
              "signature": "createArrayBindingPattern: (
    elements: readonly ArrayBindingElement[]
) => ArrayBindingPattern;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3272,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3272",
              },
              "type": "(elements: readonly ArrayBindingElement[]) => ArrayBindingPattern",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.createArrayLiteralExpression",
              "kind": "InterfaceMethodDeclaration",
              "name": "createArrayLiteralExpression",
              "signature": "createArrayLiteralExpression: (
    elements?: readonly Expression[],
    multiLine?: boolean
) => ArrayLiteralExpression;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3276,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3276",
              },
              "type": "(elements?: readonly Expression[], multiLine?: boolean) => ArrayLiteralExpression",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.createArrayTypeNode",
              "kind": "InterfaceMethodDeclaration",
              "name": "createArrayTypeNode",
              "signature": "createArrayTypeNode: (elementType: TypeNode) => ArrayTypeNode;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3237,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3237",
              },
              "type": "(elementType: TypeNode) => ArrayTypeNode",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.createArrowFunction",
              "kind": "InterfaceMethodDeclaration",
              "name": "createArrowFunction",
              "signature": "createArrowFunction: (
    modifiers: readonly Modifier[] | undefined,
    typeParameters: readonly TypeParameterDeclaration[] | undefined,
    parameters: readonly ParameterDeclaration[],
    type: TypeNode | undefined,
    equalsGreaterThanToken: EqualsGreaterThanToken | undefined,
    body: ConciseBody
) => ArrowFunction;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3302,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3302",
              },
              "type": "(modifiers: readonly Modifier[] | undefined, typeParameters: readonly TypeParameterDeclaration[] | undefined, parameters: readonly ParameterDeclaration[], type: TypeNode | undefined, equalsGreaterThanToken: EqualsGreaterThanToken | undefined, body: ConciseBody) => ArrowFunction",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.createAsExpression",
              "kind": "InterfaceMethodDeclaration",
              "name": "createAsExpression",
              "signature": "createAsExpression: (expression: Expression, type: TypeNode) => AsExpression;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3340,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3340",
              },
              "type": "(expression: Expression, type: TypeNode) => AsExpression",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.createAssignment",
              "kind": "InterfaceMethodDeclaration",
              "name": "createAssignment",
              "signature": "createAssignment: {
    (
        left: ObjectLiteralExpression | ArrayLiteralExpression,
        right: Expression
    ): DestructuringAssignment;
    (left: Expression, right: Expression): AssignmentExpression<EqualsToken>;
};",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3545,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3545",
              },
              "type": "{ (left: ObjectLiteralExpression | ArrayLiteralExpression, right: Expression): DestructuringAssignment; (left: Expression, right: Expression): AssignmentExpression<EqualsToken>; }",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.createAwaitExpression",
              "kind": "InterfaceMethodDeclaration",
              "name": "createAwaitExpression",
              "signature": "createAwaitExpression: (expression: Expression) => AwaitExpression;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3310,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3310",
              },
              "type": "(expression: Expression) => AwaitExpression",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.createBigIntLiteral",
              "kind": "InterfaceMethodDeclaration",
              "name": "createBigIntLiteral",
              "signature": "createBigIntLiteral: (value: string | PseudoBigInt) => BigIntLiteral;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3161,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3161",
              },
              "type": "(value: string | PseudoBigInt) => BigIntLiteral",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.createBinaryExpression",
              "kind": "InterfaceMethodDeclaration",
              "name": "createBinaryExpression",
              "signature": "createBinaryExpression: (
    left: Expression,
    operator: BinaryOperator | BinaryOperatorToken,
    right: Expression
) => BinaryExpression;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3316,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3316",
              },
              "type": "(left: Expression, operator: BinaryOperator | BinaryOperatorToken, right: Expression) => BinaryExpression",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.createBindingElement",
              "kind": "InterfaceMethodDeclaration",
              "name": "createBindingElement",
              "signature": "createBindingElement: (
    dotDotDotToken: DotDotDotToken | undefined,
    propertyName: string | PropertyName | undefined,
    name: string | BindingName,
    initializer?: Expression
) => BindingElement;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3274,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3274",
              },
              "type": "(dotDotDotToken: DotDotDotToken | undefined, propertyName: string | PropertyName | undefined, name: string | BindingName, initializer?: Expression) => BindingElement",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.createBitwiseAnd",
              "kind": "InterfaceMethodDeclaration",
              "name": "createBitwiseAnd",
              "signature": "createBitwiseAnd: (left: Expression, right: Expression) => BinaryExpression;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3551,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3551",
              },
              "type": "(left: Expression, right: Expression) => BinaryExpression",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.createBitwiseNot",
              "kind": "InterfaceMethodDeclaration",
              "name": "createBitwiseNot",
              "signature": "createBitwiseNot: (operand: Expression) => PrefixUnaryExpression;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3573,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3573",
              },
              "type": "(operand: Expression) => PrefixUnaryExpression",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.createBitwiseOr",
              "kind": "InterfaceMethodDeclaration",
              "name": "createBitwiseOr",
              "signature": "createBitwiseOr: (left: Expression, right: Expression) => BinaryExpression;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3549,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3549",
              },
              "type": "(left: Expression, right: Expression) => BinaryExpression",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.createBitwiseXor",
              "kind": "InterfaceMethodDeclaration",
              "name": "createBitwiseXor",
              "signature": "createBitwiseXor: (left: Expression, right: Expression) => BinaryExpression;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3550,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3550",
              },
              "type": "(left: Expression, right: Expression) => BinaryExpression",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.createBlock",
              "kind": "InterfaceMethodDeclaration",
              "name": "createBlock",
              "signature": "createBlock: (statements: readonly Statement[], multiLine?: boolean) => Block;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3351,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3351",
              },
              "type": "(statements: readonly Statement[], multiLine?: boolean) => Block",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.createBreakStatement",
              "kind": "InterfaceMethodDeclaration",
              "name": "createBreakStatement",
              "signature": "createBreakStatement: (label?: string | Identifier) => BreakStatement;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3372,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3372",
              },
              "type": "(label?: string | Identifier) => BreakStatement",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.createBundle",
              "kind": "InterfaceMethodDeclaration",
              "name": "createBundle",
              "signature": "createBundle: (
    sourceFiles: readonly SourceFile[],
    prepends?: readonly (UnparsedSource | InputFiles)[]
) => Bundle;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3542,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3542",
              },
              "type": "(sourceFiles: readonly SourceFile[], prepends?: readonly (UnparsedSource | InputFiles)[]) => Bundle",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.createCallChain",
              "kind": "InterfaceMethodDeclaration",
              "name": "createCallChain",
              "signature": "createCallChain: (
    expression: Expression,
    questionDotToken: QuestionDotToken | undefined,
    typeArguments: readonly TypeNode[] | undefined,
    argumentsArray: readonly Expression[] | undefined
) => CallChain;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3290,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3290",
              },
              "type": "(expression: Expression, questionDotToken: QuestionDotToken | undefined, typeArguments: readonly TypeNode[] | undefined, argumentsArray: readonly Expression[] | undefined) => CallChain",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.createCallExpression",
              "kind": "InterfaceMethodDeclaration",
              "name": "createCallExpression",
              "signature": "createCallExpression: (
    expression: Expression,
    typeArguments: readonly TypeNode[] | undefined,
    argumentsArray: readonly Expression[] | undefined
) => CallExpression;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3288,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3288",
              },
              "type": "(expression: Expression, typeArguments: readonly TypeNode[] | undefined, argumentsArray: readonly Expression[] | undefined) => CallExpression",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.createCallSignature",
              "kind": "InterfaceMethodDeclaration",
              "name": "createCallSignature",
              "signature": "createCallSignature: (
    typeParameters: readonly TypeParameterDeclaration[] | undefined,
    parameters: readonly ParameterDeclaration[],
    type: TypeNode | undefined
) => CallSignatureDeclaration;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3216,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3216",
              },
              "type": "(typeParameters: readonly TypeParameterDeclaration[] | undefined, parameters: readonly ParameterDeclaration[], type: TypeNode | undefined) => CallSignatureDeclaration",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.createCaseBlock",
              "kind": "InterfaceMethodDeclaration",
              "name": "createCaseBlock",
              "signature": "createCaseBlock: (clauses: readonly CaseOrDefaultClause[]) => CaseBlock;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3405,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3405",
              },
              "type": "(clauses: readonly CaseOrDefaultClause[]) => CaseBlock",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.createCaseClause",
              "kind": "InterfaceMethodDeclaration",
              "name": "createCaseClause",
              "signature": "createCaseClause: (
    expression: Expression,
    statements: readonly Statement[]
) => CaseClause;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3519,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3519",
              },
              "type": "(expression: Expression, statements: readonly Statement[]) => CaseClause",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.createCatchClause",
              "kind": "InterfaceMethodDeclaration",
              "name": "createCatchClause",
              "signature": "createCatchClause: (
    variableDeclaration: string | VariableDeclaration | undefined,
    block: Block
) => CatchClause;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3525,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3525",
              },
              "type": "(variableDeclaration: string | VariableDeclaration | undefined, block: Block) => CatchClause",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.createClassDeclaration",
              "kind": "InterfaceMethodDeclaration",
              "name": "createClassDeclaration",
              "signature": "createClassDeclaration: (
    decorators: readonly Decorator[] | undefined,
    modifiers: readonly Modifier[] | undefined,
    name: string | Identifier | undefined,
    typeParameters: readonly TypeParameterDeclaration[] | undefined,
    heritageClauses: readonly HeritageClause[] | undefined,
    members: readonly ClassElement[]
) => ClassDeclaration;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3393,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3393",
              },
              "type": "(decorators: readonly Decorator[] | undefined, modifiers: readonly Modifier[] | undefined, name: string | Identifier | undefined, typeParameters: readonly TypeParameterDeclaration[] | undefined, heritageClauses: readonly HeritageClause[] | undefined, members: readonly ClassElement[]) => ClassDeclaration",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.createClassExpression",
              "kind": "InterfaceMethodDeclaration",
              "name": "createClassExpression",
              "signature": "createClassExpression: (
    decorators: readonly Decorator[] | undefined,
    modifiers: readonly Modifier[] | undefined,
    name: string | Identifier | undefined,
    typeParameters: readonly TypeParameterDeclaration[] | undefined,
    heritageClauses: readonly HeritageClause[] | undefined,
    members: readonly ClassElement[]
) => ClassExpression;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3335,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3335",
              },
              "type": "(decorators: readonly Decorator[] | undefined, modifiers: readonly Modifier[] | undefined, name: string | Identifier | undefined, typeParameters: readonly TypeParameterDeclaration[] | undefined, heritageClauses: readonly HeritageClause[] | undefined, members: readonly ClassElement[]) => ClassExpression",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.createComma",
              "kind": "InterfaceMethodDeclaration",
              "name": "createComma",
              "signature": "createComma: (left: Expression, right: Expression) => BinaryExpression;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3544,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3544",
              },
              "type": "(left: Expression, right: Expression) => BinaryExpression",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.createCommaListExpression",
              "kind": "InterfaceMethodDeclaration",
              "name": "createCommaListExpression",
              "signature": "createCommaListExpression: (
    elements: readonly Expression[]
) => CommaListExpression;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3540,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3540",
              },
              "type": "(elements: readonly Expression[]) => CommaListExpression",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.createComputedPropertyName",
              "kind": "InterfaceMethodDeclaration",
              "name": "createComputedPropertyName",
              "signature": "createComputedPropertyName: (expression: Expression) => ComputedPropertyName;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3194,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3194",
              },
              "type": "(expression: Expression) => ComputedPropertyName",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.createConditionalExpression",
              "kind": "InterfaceMethodDeclaration",
              "name": "createConditionalExpression",
              "signature": "createConditionalExpression: (
    condition: Expression,
    questionToken: QuestionToken | undefined,
    whenTrue: Expression,
    colonToken: ColonToken | undefined,
    whenFalse: Expression
) => ConditionalExpression;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3318,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3318",
              },
              "type": "(condition: Expression, questionToken: QuestionToken | undefined, whenTrue: Expression, colonToken: ColonToken | undefined, whenFalse: Expression) => ConditionalExpression",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.createConditionalTypeNode",
              "kind": "InterfaceMethodDeclaration",
              "name": "createConditionalTypeNode",
              "signature": "createConditionalTypeNode: (
    checkType: TypeNode,
    extendsType: TypeNode,
    trueType: TypeNode,
    falseType: TypeNode
) => ConditionalTypeNode;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3251,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3251",
              },
              "type": "(checkType: TypeNode, extendsType: TypeNode, trueType: TypeNode, falseType: TypeNode) => ConditionalTypeNode",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.createConstructorDeclaration",
              "kind": "InterfaceMethodDeclaration",
              "name": "createConstructorDeclaration",
              "signature": "createConstructorDeclaration: (
    decorators: readonly Decorator[] | undefined,
    modifiers: readonly Modifier[] | undefined,
    parameters: readonly ParameterDeclaration[],
    body: Block | undefined
) => ConstructorDeclaration;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3210,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3210",
              },
              "type": "(decorators: readonly Decorator[] | undefined, modifiers: readonly Modifier[] | undefined, parameters: readonly ParameterDeclaration[], body: Block | undefined) => ConstructorDeclaration",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.createConstructorTypeNode",
              "kind": "InterfaceMethodDeclaration",
              "name": "createConstructorTypeNode",
              "signature": "createConstructorTypeNode: (
    typeParameters: readonly TypeParameterDeclaration[] | undefined,
    parameters: readonly ParameterDeclaration[],
    type: TypeNode
) => ConstructorTypeNode;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3231,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3231",
              },
              "type": "(typeParameters: readonly TypeParameterDeclaration[] | undefined, parameters: readonly ParameterDeclaration[], type: TypeNode) => ConstructorTypeNode",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.createConstructSignature",
              "kind": "InterfaceMethodDeclaration",
              "name": "createConstructSignature",
              "signature": "createConstructSignature: (
    typeParameters: readonly TypeParameterDeclaration[] | undefined,
    parameters: readonly ParameterDeclaration[],
    type: TypeNode | undefined
) => ConstructSignatureDeclaration;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3218,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3218",
              },
              "type": "(typeParameters: readonly TypeParameterDeclaration[] | undefined, parameters: readonly ParameterDeclaration[], type: TypeNode | undefined) => ConstructSignatureDeclaration",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.createContinueStatement",
              "kind": "InterfaceMethodDeclaration",
              "name": "createContinueStatement",
              "signature": "createContinueStatement: (label?: string | Identifier) => ContinueStatement;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3370,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3370",
              },
              "type": "(label?: string | Identifier) => ContinueStatement",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.createDebuggerStatement",
              "kind": "InterfaceMethodDeclaration",
              "name": "createDebuggerStatement",
              "signature": "createDebuggerStatement: () => DebuggerStatement;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3386,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3386",
              },
              "type": "() => DebuggerStatement",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.createDecorator",
              "kind": "InterfaceMethodDeclaration",
              "name": "createDecorator",
              "signature": "createDecorator: (expression: Expression) => Decorator;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3200,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3200",
              },
              "type": "(expression: Expression) => Decorator",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.createDefaultClause",
              "kind": "InterfaceMethodDeclaration",
              "name": "createDefaultClause",
              "signature": "createDefaultClause: (statements: readonly Statement[]) => DefaultClause;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3521,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3521",
              },
              "type": "(statements: readonly Statement[]) => DefaultClause",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.createDeleteExpression",
              "kind": "InterfaceMethodDeclaration",
              "name": "createDeleteExpression",
              "signature": "createDeleteExpression: (expression: Expression) => DeleteExpression;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3304,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3304",
              },
              "type": "(expression: Expression) => DeleteExpression",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.createDivide",
              "kind": "InterfaceMethodDeclaration",
              "name": "createDivide",
              "signature": "createDivide: (left: Expression, right: Expression) => BinaryExpression;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3566,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3566",
              },
              "type": "(left: Expression, right: Expression) => BinaryExpression",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.createDoStatement",
              "kind": "InterfaceMethodDeclaration",
              "name": "createDoStatement",
              "signature": "createDoStatement: (statement: Statement, expression: Expression) => DoStatement;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3360,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3360",
              },
              "type": "(statement: Statement, expression: Expression) => DoStatement",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.createElementAccessChain",
              "kind": "InterfaceMethodDeclaration",
              "name": "createElementAccessChain",
              "signature": "createElementAccessChain: (
    expression: Expression,
    questionDotToken: QuestionDotToken | undefined,
    index: number | Expression
) => ElementAccessChain;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3286,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3286",
              },
              "type": "(expression: Expression, questionDotToken: QuestionDotToken | undefined, index: number | Expression) => ElementAccessChain",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.createElementAccessExpression",
              "kind": "InterfaceMethodDeclaration",
              "name": "createElementAccessExpression",
              "signature": "createElementAccessExpression: (
    expression: Expression,
    index: number | Expression
) => ElementAccessExpression;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3284,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3284",
              },
              "type": "(expression: Expression, index: number | Expression) => ElementAccessExpression",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.createEmptyStatement",
              "kind": "InterfaceMethodDeclaration",
              "name": "createEmptyStatement",
              "signature": "createEmptyStatement: () => EmptyStatement;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3355,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3355",
              },
              "type": "() => EmptyStatement",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.createEnumDeclaration",
              "kind": "InterfaceMethodDeclaration",
              "name": "createEnumDeclaration",
              "signature": "createEnumDeclaration: (
    decorators: readonly Decorator[] | undefined,
    modifiers: readonly Modifier[] | undefined,
    name: string | Identifier,
    members: readonly EnumMember[]
) => EnumDeclaration;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3399,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3399",
              },
              "type": "(decorators: readonly Decorator[] | undefined, modifiers: readonly Modifier[] | undefined, name: string | Identifier, members: readonly EnumMember[]) => EnumDeclaration",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.createEnumMember",
              "kind": "InterfaceMethodDeclaration",
              "name": "createEnumMember",
              "signature": "createEnumMember: (
    name: string | PropertyName,
    initializer?: Expression
) => EnumMember;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3533,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3533",
              },
              "type": "(name: string | PropertyName, initializer?: Expression) => EnumMember",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.createEquality",
              "kind": "InterfaceMethodDeclaration",
              "name": "createEquality",
              "signature": "createEquality: (left: Expression, right: Expression) => BinaryExpression;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3554,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3554",
              },
              "type": "(left: Expression, right: Expression) => BinaryExpression",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.createExponent",
              "kind": "InterfaceMethodDeclaration",
              "name": "createExponent",
              "signature": "createExponent: (left: Expression, right: Expression) => BinaryExpression;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3568,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3568",
              },
              "type": "(left: Expression, right: Expression) => BinaryExpression",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.createExportAssignment",
              "kind": "InterfaceMethodDeclaration",
              "name": "createExportAssignment",
              "signature": "createExportAssignment: (
    decorators: readonly Decorator[] | undefined,
    modifiers: readonly Modifier[] | undefined,
    isExportEquals: boolean | undefined,
    expression: Expression
) => ExportAssignment;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3423,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3423",
              },
              "type": "(decorators: readonly Decorator[] | undefined, modifiers: readonly Modifier[] | undefined, isExportEquals: boolean | undefined, expression: Expression) => ExportAssignment",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.createExportDeclaration",
              "kind": "InterfaceMethodDeclaration",
              "name": "createExportDeclaration",
              "signature": "createExportDeclaration: (
    decorators: readonly Decorator[] | undefined,
    modifiers: readonly Modifier[] | undefined,
    isTypeOnly: boolean,
    exportClause: NamedExportBindings | undefined,
    moduleSpecifier?: Expression
) => ExportDeclaration;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3425,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3425",
              },
              "type": "(decorators: readonly Decorator[] | undefined, modifiers: readonly Modifier[] | undefined, isTypeOnly: boolean, exportClause: NamedExportBindings | undefined, moduleSpecifier?: Expression) => ExportDeclaration",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.createExportDefault",
              "kind": "InterfaceMethodDeclaration",
              "name": "createExportDefault",
              "signature": "createExportDefault: (expression: Expression) => ExportAssignment;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3582,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3582",
              },
              "type": "(expression: Expression) => ExportAssignment",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.createExportSpecifier",
              "kind": "InterfaceMethodDeclaration",
              "name": "createExportSpecifier",
              "signature": "createExportSpecifier: (
    propertyName: string | Identifier | undefined,
    name: string | Identifier
) => ExportSpecifier;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3429,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3429",
              },
              "type": "(propertyName: string | Identifier | undefined, name: string | Identifier) => ExportSpecifier",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.createExpressionStatement",
              "kind": "InterfaceMethodDeclaration",
              "name": "createExpressionStatement",
              "signature": "createExpressionStatement: (expression: Expression) => ExpressionStatement;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3356,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3356",
              },
              "type": "(expression: Expression) => ExpressionStatement",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.createExpressionWithTypeArguments",
              "kind": "InterfaceMethodDeclaration",
              "name": "createExpressionWithTypeArguments",
              "signature": "createExpressionWithTypeArguments: (
    expression: Expression,
    typeArguments: readonly TypeNode[] | undefined
) => ExpressionWithTypeArguments;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3338,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3338",
              },
              "type": "(expression: Expression, typeArguments: readonly TypeNode[] | undefined) => ExpressionWithTypeArguments",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.createExternalModuleExport",
              "kind": "InterfaceMethodDeclaration",
              "name": "createExternalModuleExport",
              "signature": "createExternalModuleExport: (exportName: Identifier) => ExportDeclaration;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3583,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3583",
              },
              "type": "(exportName: Identifier) => ExportDeclaration",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.createExternalModuleReference",
              "kind": "InterfaceMethodDeclaration",
              "name": "createExternalModuleReference",
              "signature": "createExternalModuleReference: (
    expression: Expression
) => ExternalModuleReference;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3431,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3431",
              },
              "type": "(expression: Expression) => ExternalModuleReference",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.createFalse",
              "kind": "InterfaceMethodDeclaration",
              "name": "createFalse",
              "signature": "createFalse: () => FalseLiteral;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3189,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3189",
              },
              "type": "() => FalseLiteral",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.createForInStatement",
              "kind": "InterfaceMethodDeclaration",
              "name": "createForInStatement",
              "signature": "createForInStatement: (
    initializer: ForInitializer,
    expression: Expression,
    statement: Statement
) => ForInStatement;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3366,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3366",
              },
              "type": "(initializer: ForInitializer, expression: Expression, statement: Statement) => ForInStatement",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.createForOfStatement",
              "kind": "InterfaceMethodDeclaration",
              "name": "createForOfStatement",
              "signature": "createForOfStatement: (
    awaitModifier: AwaitKeyword | undefined,
    initializer: ForInitializer,
    expression: Expression,
    statement: Statement
) => ForOfStatement;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3368,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3368",
              },
              "type": "(awaitModifier: AwaitKeyword | undefined, initializer: ForInitializer, expression: Expression, statement: Statement) => ForOfStatement",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.createForStatement",
              "kind": "InterfaceMethodDeclaration",
              "name": "createForStatement",
              "signature": "createForStatement: (
    initializer: ForInitializer | undefined,
    condition: Expression | undefined,
    incrementor: Expression | undefined,
    statement: Statement
) => ForStatement;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3364,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3364",
              },
              "type": "(initializer: ForInitializer | undefined, condition: Expression | undefined, incrementor: Expression | undefined, statement: Statement) => ForStatement",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.createFunctionDeclaration",
              "kind": "InterfaceMethodDeclaration",
              "name": "createFunctionDeclaration",
              "signature": "createFunctionDeclaration: (
    decorators: readonly Decorator[] | undefined,
    modifiers: readonly Modifier[] | undefined,
    asteriskToken: AsteriskToken | undefined,
    name: string | Identifier | undefined,
    typeParameters: readonly TypeParameterDeclaration[] | undefined,
    parameters: readonly ParameterDeclaration[],
    type: TypeNode | undefined,
    body: Block | undefined
) => FunctionDeclaration;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3391,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3391",
              },
              "type": "(decorators: readonly Decorator[] | undefined, modifiers: readonly Modifier[] | undefined, asteriskToken: AsteriskToken | undefined, name: string | Identifier | undefined, typeParameters: readonly TypeParameterDeclaration[] | undefined, parameters: readonly ParameterDeclaration[], type: TypeNode | undefined, body: Block | undefined) => FunctionDeclaration",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.createFunctionExpression",
              "kind": "InterfaceMethodDeclaration",
              "name": "createFunctionExpression",
              "signature": "createFunctionExpression: (
    modifiers: readonly Modifier[] | undefined,
    asteriskToken: AsteriskToken | undefined,
    name: string | Identifier | undefined,
    typeParameters: readonly TypeParameterDeclaration[] | undefined,
    parameters: readonly ParameterDeclaration[] | undefined,
    type: TypeNode | undefined,
    body: Block
) => FunctionExpression;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3300,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3300",
              },
              "type": "(modifiers: readonly Modifier[] | undefined, asteriskToken: AsteriskToken | undefined, name: string | Identifier | undefined, typeParameters: readonly TypeParameterDeclaration[] | undefined, parameters: readonly ParameterDeclaration[] | undefined, type: TypeNode | undefined, body: Block) => FunctionExpression",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.createFunctionTypeNode",
              "kind": "InterfaceMethodDeclaration",
              "name": "createFunctionTypeNode",
              "signature": "createFunctionTypeNode: (
    typeParameters: readonly TypeParameterDeclaration[] | undefined,
    parameters: readonly ParameterDeclaration[],
    type: TypeNode
) => FunctionTypeNode;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3229,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3229",
              },
              "type": "(typeParameters: readonly TypeParameterDeclaration[] | undefined, parameters: readonly ParameterDeclaration[], type: TypeNode) => FunctionTypeNode",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.createGetAccessorDeclaration",
              "kind": "InterfaceMethodDeclaration",
              "name": "createGetAccessorDeclaration",
              "signature": "createGetAccessorDeclaration: (
    decorators: readonly Decorator[] | undefined,
    modifiers: readonly Modifier[] | undefined,
    name: string | PropertyName,
    parameters: readonly ParameterDeclaration[],
    type: TypeNode | undefined,
    body: Block | undefined
) => GetAccessorDeclaration;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3212,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3212",
              },
              "type": "(decorators: readonly Decorator[] | undefined, modifiers: readonly Modifier[] | undefined, name: string | PropertyName, parameters: readonly ParameterDeclaration[], type: TypeNode | undefined, body: Block | undefined) => GetAccessorDeclaration",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.createGreaterThan",
              "kind": "InterfaceMethodDeclaration",
              "name": "createGreaterThan",
              "signature": "createGreaterThan: (left: Expression, right: Expression) => BinaryExpression;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3558,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3558",
              },
              "type": "(left: Expression, right: Expression) => BinaryExpression",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.createGreaterThanEquals",
              "kind": "InterfaceMethodDeclaration",
              "name": "createGreaterThanEquals",
              "signature": "createGreaterThanEquals: (
    left: Expression,
    right: Expression
) => BinaryExpression;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3559,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3559",
              },
              "type": "(left: Expression, right: Expression) => BinaryExpression",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.createHeritageClause",
              "kind": "InterfaceMethodDeclaration",
              "name": "createHeritageClause",
              "signature": "createHeritageClause: (
    token: HeritageClause['token'],
    types: readonly ExpressionWithTypeArguments[]
) => HeritageClause;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3523,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3523",
              },
              "type": "(token: HeritageClause[\\"token\\"], types: readonly ExpressionWithTypeArguments[]) => HeritageClause",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.createIdentifier",
              "kind": "InterfaceMethodDeclaration",
              "name": "createIdentifier",
              "signature": "createIdentifier: (text: string) => Identifier;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3165,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3165",
              },
              "type": "(text: string) => Identifier",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.createIfStatement",
              "kind": "InterfaceMethodDeclaration",
              "name": "createIfStatement",
              "signature": "createIfStatement: (
    expression: Expression,
    thenStatement: Statement,
    elseStatement?: Statement
) => IfStatement;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3358,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3358",
              },
              "type": "(expression: Expression, thenStatement: Statement, elseStatement?: Statement) => IfStatement",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.createImmediatelyInvokedArrowFunction",
              "kind": "InterfaceMethodDeclaration",
              "name": "createImmediatelyInvokedArrowFunction",
              "signature": "createImmediatelyInvokedArrowFunction: {
    (statements: readonly Statement[]): CallExpression;
    (
        statements: readonly Statement[],
        param: ParameterDeclaration,
        paramValue: Expression
    ): CallExpression;
};",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3579,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3579",
              },
              "type": "{ (statements: readonly Statement[]): CallExpression; (statements: readonly Statement[], param: ParameterDeclaration, paramValue: Expression): CallExpression; }",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.createImmediatelyInvokedFunctionExpression",
              "kind": "InterfaceMethodDeclaration",
              "name": "createImmediatelyInvokedFunctionExpression",
              "signature": "createImmediatelyInvokedFunctionExpression: {
    (statements: readonly Statement[]): CallExpression;
    (
        statements: readonly Statement[],
        param: ParameterDeclaration,
        paramValue: Expression
    ): CallExpression;
};",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3577,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3577",
              },
              "type": "{ (statements: readonly Statement[]): CallExpression; (statements: readonly Statement[], param: ParameterDeclaration, paramValue: Expression): CallExpression; }",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.createImportClause",
              "kind": "InterfaceMethodDeclaration",
              "name": "createImportClause",
              "signature": "createImportClause: (
    isTypeOnly: boolean,
    name: Identifier | undefined,
    namedBindings: NamedImportBindings | undefined
) => ImportClause;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3413,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3413",
              },
              "type": "(isTypeOnly: boolean, name: Identifier | undefined, namedBindings: NamedImportBindings | undefined) => ImportClause",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.createImportDeclaration",
              "kind": "InterfaceMethodDeclaration",
              "name": "createImportDeclaration",
              "signature": "createImportDeclaration: (
    decorators: readonly Decorator[] | undefined,
    modifiers: readonly Modifier[] | undefined,
    importClause: ImportClause | undefined,
    moduleSpecifier: Expression
) => ImportDeclaration;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3411,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3411",
              },
              "type": "(decorators: readonly Decorator[] | undefined, modifiers: readonly Modifier[] | undefined, importClause: ImportClause | undefined, moduleSpecifier: Expression) => ImportDeclaration",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.createImportEqualsDeclaration",
              "kind": "InterfaceMethodDeclaration",
              "name": "createImportEqualsDeclaration",
              "signature": "createImportEqualsDeclaration: (
    decorators: readonly Decorator[] | undefined,
    modifiers: readonly Modifier[] | undefined,
    name: string | Identifier,
    moduleReference: ModuleReference
) => ImportEqualsDeclaration;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3409,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3409",
              },
              "type": "(decorators: readonly Decorator[] | undefined, modifiers: readonly Modifier[] | undefined, name: string | Identifier, moduleReference: ModuleReference) => ImportEqualsDeclaration",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.createImportSpecifier",
              "kind": "InterfaceMethodDeclaration",
              "name": "createImportSpecifier",
              "signature": "createImportSpecifier: (
    propertyName: Identifier | undefined,
    name: Identifier
) => ImportSpecifier;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3421,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3421",
              },
              "type": "(propertyName: Identifier | undefined, name: Identifier) => ImportSpecifier",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.createImportTypeNode",
              "kind": "InterfaceMethodDeclaration",
              "name": "createImportTypeNode",
              "signature": "createImportTypeNode: (
    argument: TypeNode,
    qualifier?: EntityName,
    typeArguments?: readonly TypeNode[],
    isTypeOf?: boolean
) => ImportTypeNode;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3255,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3255",
              },
              "type": "(argument: TypeNode, qualifier?: EntityName, typeArguments?: readonly TypeNode[], isTypeOf?: boolean) => ImportTypeNode",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.createIndexedAccessTypeNode",
              "kind": "InterfaceMethodDeclaration",
              "name": "createIndexedAccessTypeNode",
              "signature": "createIndexedAccessTypeNode: (
    objectType: TypeNode,
    indexType: TypeNode
) => IndexedAccessTypeNode;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3262,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3262",
              },
              "type": "(objectType: TypeNode, indexType: TypeNode) => IndexedAccessTypeNode",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.createIndexSignature",
              "kind": "InterfaceMethodDeclaration",
              "name": "createIndexSignature",
              "signature": "createIndexSignature: (
    decorators: readonly Decorator[] | undefined,
    modifiers: readonly Modifier[] | undefined,
    parameters: readonly ParameterDeclaration[],
    type: TypeNode
) => IndexSignatureDeclaration;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3220,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3220",
              },
              "type": "(decorators: readonly Decorator[] | undefined, modifiers: readonly Modifier[] | undefined, parameters: readonly ParameterDeclaration[], type: TypeNode) => IndexSignatureDeclaration",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.createInequality",
              "kind": "InterfaceMethodDeclaration",
              "name": "createInequality",
              "signature": "createInequality: (left: Expression, right: Expression) => BinaryExpression;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3555,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3555",
              },
              "type": "(left: Expression, right: Expression) => BinaryExpression",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.createInferTypeNode",
              "kind": "InterfaceMethodDeclaration",
              "name": "createInferTypeNode",
              "signature": "createInferTypeNode: (typeParameter: TypeParameterDeclaration) => InferTypeNode;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3253,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3253",
              },
              "type": "(typeParameter: TypeParameterDeclaration) => InferTypeNode",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.createInterfaceDeclaration",
              "kind": "InterfaceMethodDeclaration",
              "name": "createInterfaceDeclaration",
              "signature": "createInterfaceDeclaration: (
    decorators: readonly Decorator[] | undefined,
    modifiers: readonly Modifier[] | undefined,
    name: string | Identifier,
    typeParameters: readonly TypeParameterDeclaration[] | undefined,
    heritageClauses: readonly HeritageClause[] | undefined,
    members: readonly TypeElement[]
) => InterfaceDeclaration;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3395,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3395",
              },
              "type": "(decorators: readonly Decorator[] | undefined, modifiers: readonly Modifier[] | undefined, name: string | Identifier, typeParameters: readonly TypeParameterDeclaration[] | undefined, heritageClauses: readonly HeritageClause[] | undefined, members: readonly TypeElement[]) => InterfaceDeclaration",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.createIntersectionTypeNode",
              "kind": "InterfaceMethodDeclaration",
              "name": "createIntersectionTypeNode",
              "signature": "createIntersectionTypeNode: (types: readonly TypeNode[]) => IntersectionTypeNode;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3249,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3249",
              },
              "type": "(types: readonly TypeNode[]) => IntersectionTypeNode",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.createJSDocAllType",
              "kind": "InterfaceMethodDeclaration",
              "name": "createJSDocAllType",
              "signature": "createJSDocAllType: () => JSDocAllType;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3433,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3433",
              },
              "type": "() => JSDocAllType",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.createJSDocAugmentsTag",
              "kind": "InterfaceMethodDeclaration",
              "name": "createJSDocAugmentsTag",
              "signature": "createJSDocAugmentsTag: (
    tagName: Identifier | undefined,
    className: JSDocAugmentsTag['class'],
    comment?: string
) => JSDocAugmentsTag;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3475,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3475",
              },
              "type": "(tagName: Identifier | undefined, className: JSDocAugmentsTag[\\"class\\"], comment?: string) => JSDocAugmentsTag",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.createJSDocAuthorTag",
              "kind": "InterfaceMethodDeclaration",
              "name": "createJSDocAuthorTag",
              "signature": "createJSDocAuthorTag: (
    tagName: Identifier | undefined,
    comment?: string
) => JSDocAuthorTag;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3479,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3479",
              },
              "type": "(tagName: Identifier | undefined, comment?: string) => JSDocAuthorTag",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.createJSDocCallbackTag",
              "kind": "InterfaceMethodDeclaration",
              "name": "createJSDocCallbackTag",
              "signature": "createJSDocCallbackTag: (
    tagName: Identifier | undefined,
    typeExpression: JSDocSignature,
    fullName?: Identifier | JSDocNamespaceDeclaration,
    comment?: string
) => JSDocCallbackTag;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3473,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3473",
              },
              "type": "(tagName: Identifier | undefined, typeExpression: JSDocSignature, fullName?: Identifier | JSDocNamespaceDeclaration, comment?: string) => JSDocCallbackTag",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.createJSDocClassTag",
              "kind": "InterfaceMethodDeclaration",
              "name": "createJSDocClassTag",
              "signature": "createJSDocClassTag: (
    tagName: Identifier | undefined,
    comment?: string
) => JSDocClassTag;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3481,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3481",
              },
              "type": "(tagName: Identifier | undefined, comment?: string) => JSDocClassTag",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.createJSDocComment",
              "kind": "InterfaceMethodDeclaration",
              "name": "createJSDocComment",
              "signature": "createJSDocComment: (
    comment?: string | undefined,
    tags?: readonly JSDocTag[] | undefined
) => JSDoc;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3495,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3495",
              },
              "type": "(comment?: string | undefined, tags?: readonly JSDocTag[] | undefined) => JSDoc",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.createJSDocDeprecatedTag",
              "kind": "InterfaceMethodDeclaration",
              "name": "createJSDocDeprecatedTag",
              "signature": "createJSDocDeprecatedTag: (
    tagName: Identifier,
    comment?: string
) => JSDocDeprecatedTag;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3493,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3493",
              },
              "type": "(tagName: Identifier, comment?: string) => JSDocDeprecatedTag",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.createJSDocEnumTag",
              "kind": "InterfaceMethodDeclaration",
              "name": "createJSDocEnumTag",
              "signature": "createJSDocEnumTag: (
    tagName: Identifier | undefined,
    typeExpression: JSDocTypeExpression,
    comment?: string
) => JSDocEnumTag;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3471,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3471",
              },
              "type": "(tagName: Identifier | undefined, typeExpression: JSDocTypeExpression, comment?: string) => JSDocEnumTag",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.createJSDocFunctionType",
              "kind": "InterfaceMethodDeclaration",
              "name": "createJSDocFunctionType",
              "signature": "createJSDocFunctionType: (
    parameters: readonly ParameterDeclaration[],
    type: TypeNode | undefined
) => JSDocFunctionType;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3441,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3441",
              },
              "type": "(parameters: readonly ParameterDeclaration[], type: TypeNode | undefined) => JSDocFunctionType",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.createJSDocImplementsTag",
              "kind": "InterfaceMethodDeclaration",
              "name": "createJSDocImplementsTag",
              "signature": "createJSDocImplementsTag: (
    tagName: Identifier | undefined,
    className: JSDocImplementsTag['class'],
    comment?: string
) => JSDocImplementsTag;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3477,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3477",
              },
              "type": "(tagName: Identifier | undefined, className: JSDocImplementsTag[\\"class\\"], comment?: string) => JSDocImplementsTag",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.createJSDocNamepathType",
              "kind": "InterfaceMethodDeclaration",
              "name": "createJSDocNamepathType",
              "signature": "createJSDocNamepathType: (type: TypeNode) => JSDocNamepathType;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3445,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3445",
              },
              "type": "(type: TypeNode) => JSDocNamepathType",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.createJSDocNameReference",
              "kind": "InterfaceMethodDeclaration",
              "name": "createJSDocNameReference",
              "signature": "createJSDocNameReference: (name: EntityName) => JSDocNameReference;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3449,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3449",
              },
              "type": "(name: EntityName) => JSDocNameReference",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.createJSDocNonNullableType",
              "kind": "InterfaceMethodDeclaration",
              "name": "createJSDocNonNullableType",
              "signature": "createJSDocNonNullableType: (type: TypeNode) => JSDocNonNullableType;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3435,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3435",
              },
              "type": "(type: TypeNode) => JSDocNonNullableType",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.createJSDocNullableType",
              "kind": "InterfaceMethodDeclaration",
              "name": "createJSDocNullableType",
              "signature": "createJSDocNullableType: (type: TypeNode) => JSDocNullableType;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3437,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3437",
              },
              "type": "(type: TypeNode) => JSDocNullableType",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.createJSDocOptionalType",
              "kind": "InterfaceMethodDeclaration",
              "name": "createJSDocOptionalType",
              "signature": "createJSDocOptionalType: (type: TypeNode) => JSDocOptionalType;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3439,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3439",
              },
              "type": "(type: TypeNode) => JSDocOptionalType",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.createJSDocParameterTag",
              "kind": "InterfaceMethodDeclaration",
              "name": "createJSDocParameterTag",
              "signature": "createJSDocParameterTag: (
    tagName: Identifier | undefined,
    name: EntityName,
    isBracketed: boolean,
    typeExpression?: JSDocTypeExpression,
    isNameFirst?: boolean,
    comment?: string
) => JSDocParameterTag;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3459,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3459",
              },
              "type": "(tagName: Identifier | undefined, name: EntityName, isBracketed: boolean, typeExpression?: JSDocTypeExpression, isNameFirst?: boolean, comment?: string) => JSDocParameterTag",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.createJSDocPrivateTag",
              "kind": "InterfaceMethodDeclaration",
              "name": "createJSDocPrivateTag",
              "signature": "createJSDocPrivateTag: (
    tagName: Identifier | undefined,
    comment?: string
) => JSDocPrivateTag;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3485,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3485",
              },
              "type": "(tagName: Identifier | undefined, comment?: string) => JSDocPrivateTag",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.createJSDocPropertyTag",
              "kind": "InterfaceMethodDeclaration",
              "name": "createJSDocPropertyTag",
              "signature": "createJSDocPropertyTag: (
    tagName: Identifier | undefined,
    name: EntityName,
    isBracketed: boolean,
    typeExpression?: JSDocTypeExpression,
    isNameFirst?: boolean,
    comment?: string
) => JSDocPropertyTag;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3461,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3461",
              },
              "type": "(tagName: Identifier | undefined, name: EntityName, isBracketed: boolean, typeExpression?: JSDocTypeExpression, isNameFirst?: boolean, comment?: string) => JSDocPropertyTag",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.createJSDocProtectedTag",
              "kind": "InterfaceMethodDeclaration",
              "name": "createJSDocProtectedTag",
              "signature": "createJSDocProtectedTag: (
    tagName: Identifier | undefined,
    comment?: string
) => JSDocProtectedTag;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3487,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3487",
              },
              "type": "(tagName: Identifier | undefined, comment?: string) => JSDocProtectedTag",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.createJSDocPublicTag",
              "kind": "InterfaceMethodDeclaration",
              "name": "createJSDocPublicTag",
              "signature": "createJSDocPublicTag: (
    tagName: Identifier | undefined,
    comment?: string
) => JSDocPublicTag;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3483,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3483",
              },
              "type": "(tagName: Identifier | undefined, comment?: string) => JSDocPublicTag",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.createJSDocReadonlyTag",
              "kind": "InterfaceMethodDeclaration",
              "name": "createJSDocReadonlyTag",
              "signature": "createJSDocReadonlyTag: (
    tagName: Identifier | undefined,
    comment?: string
) => JSDocReadonlyTag;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3489,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3489",
              },
              "type": "(tagName: Identifier | undefined, comment?: string) => JSDocReadonlyTag",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.createJSDocReturnTag",
              "kind": "InterfaceMethodDeclaration",
              "name": "createJSDocReturnTag",
              "signature": "createJSDocReturnTag: (
    tagName: Identifier | undefined,
    typeExpression?: JSDocTypeExpression,
    comment?: string
) => JSDocReturnTag;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3467,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3467",
              },
              "type": "(tagName: Identifier | undefined, typeExpression?: JSDocTypeExpression, comment?: string) => JSDocReturnTag",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.createJSDocSeeTag",
              "kind": "InterfaceMethodDeclaration",
              "name": "createJSDocSeeTag",
              "signature": "createJSDocSeeTag: (
    tagName: Identifier | undefined,
    nameExpression: JSDocNameReference | undefined,
    comment?: string
) => JSDocSeeTag;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3465,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3465",
              },
              "type": "(tagName: Identifier | undefined, nameExpression: JSDocNameReference | undefined, comment?: string) => JSDocSeeTag",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.createJSDocSignature",
              "kind": "InterfaceMethodDeclaration",
              "name": "createJSDocSignature",
              "signature": "createJSDocSignature: (
    typeParameters: readonly JSDocTemplateTag[] | undefined,
    parameters: readonly JSDocParameterTag[],
    type?: JSDocReturnTag
) => JSDocSignature;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3453,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3453",
              },
              "type": "(typeParameters: readonly JSDocTemplateTag[] | undefined, parameters: readonly JSDocParameterTag[], type?: JSDocReturnTag) => JSDocSignature",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.createJSDocTemplateTag",
              "kind": "InterfaceMethodDeclaration",
              "name": "createJSDocTemplateTag",
              "signature": "createJSDocTemplateTag: (
    tagName: Identifier | undefined,
    constraint: JSDocTypeExpression | undefined,
    typeParameters: readonly TypeParameterDeclaration[],
    comment?: string
) => JSDocTemplateTag;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3455,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3455",
              },
              "type": "(tagName: Identifier | undefined, constraint: JSDocTypeExpression | undefined, typeParameters: readonly TypeParameterDeclaration[], comment?: string) => JSDocTemplateTag",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.createJSDocThisTag",
              "kind": "InterfaceMethodDeclaration",
              "name": "createJSDocThisTag",
              "signature": "createJSDocThisTag: (
    tagName: Identifier | undefined,
    typeExpression: JSDocTypeExpression,
    comment?: string
) => JSDocThisTag;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3469,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3469",
              },
              "type": "(tagName: Identifier | undefined, typeExpression: JSDocTypeExpression, comment?: string) => JSDocThisTag",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.createJSDocTypedefTag",
              "kind": "InterfaceMethodDeclaration",
              "name": "createJSDocTypedefTag",
              "signature": "createJSDocTypedefTag: (
    tagName: Identifier | undefined,
    typeExpression?: JSDocTypeExpression | JSDocTypeLiteral,
    fullName?: Identifier | JSDocNamespaceDeclaration,
    comment?: string
) => JSDocTypedefTag;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3457,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3457",
              },
              "type": "(tagName: Identifier | undefined, typeExpression?: JSDocTypeExpression | JSDocTypeLiteral, fullName?: Identifier | JSDocNamespaceDeclaration, comment?: string) => JSDocTypedefTag",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.createJSDocTypeExpression",
              "kind": "InterfaceMethodDeclaration",
              "name": "createJSDocTypeExpression",
              "signature": "createJSDocTypeExpression: (type: TypeNode) => JSDocTypeExpression;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3447,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3447",
              },
              "type": "(type: TypeNode) => JSDocTypeExpression",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.createJSDocTypeLiteral",
              "kind": "InterfaceMethodDeclaration",
              "name": "createJSDocTypeLiteral",
              "signature": "createJSDocTypeLiteral: (
    jsDocPropertyTags?: readonly JSDocPropertyLikeTag[],
    isArrayType?: boolean
) => JSDocTypeLiteral;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3451,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3451",
              },
              "type": "(jsDocPropertyTags?: readonly JSDocPropertyLikeTag[], isArrayType?: boolean) => JSDocTypeLiteral",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.createJSDocTypeTag",
              "kind": "InterfaceMethodDeclaration",
              "name": "createJSDocTypeTag",
              "signature": "createJSDocTypeTag: (
    tagName: Identifier | undefined,
    typeExpression: JSDocTypeExpression,
    comment?: string
) => JSDocTypeTag;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3463,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3463",
              },
              "type": "(tagName: Identifier | undefined, typeExpression: JSDocTypeExpression, comment?: string) => JSDocTypeTag",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.createJSDocUnknownTag",
              "kind": "InterfaceMethodDeclaration",
              "name": "createJSDocUnknownTag",
              "signature": "createJSDocUnknownTag: (
    tagName: Identifier,
    comment?: string
) => JSDocUnknownTag;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3491,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3491",
              },
              "type": "(tagName: Identifier, comment?: string) => JSDocUnknownTag",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.createJSDocUnknownType",
              "kind": "InterfaceMethodDeclaration",
              "name": "createJSDocUnknownType",
              "signature": "createJSDocUnknownType: () => JSDocUnknownType;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3434,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3434",
              },
              "type": "() => JSDocUnknownType",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.createJSDocVariadicType",
              "kind": "InterfaceMethodDeclaration",
              "name": "createJSDocVariadicType",
              "signature": "createJSDocVariadicType: (type: TypeNode) => JSDocVariadicType;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3443,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3443",
              },
              "type": "(type: TypeNode) => JSDocVariadicType",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.createJsxAttribute",
              "kind": "InterfaceMethodDeclaration",
              "name": "createJsxAttribute",
              "signature": "createJsxAttribute: (
    name: Identifier,
    initializer: StringLiteral | JsxExpression | undefined
) => JsxAttribute;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3511,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3511",
              },
              "type": "(name: Identifier, initializer: StringLiteral | JsxExpression | undefined) => JsxAttribute",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.createJsxAttributes",
              "kind": "InterfaceMethodDeclaration",
              "name": "createJsxAttributes",
              "signature": "createJsxAttributes: (properties: readonly JsxAttributeLike[]) => JsxAttributes;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3513,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3513",
              },
              "type": "(properties: readonly JsxAttributeLike[]) => JsxAttributes",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.createJsxClosingElement",
              "kind": "InterfaceMethodDeclaration",
              "name": "createJsxClosingElement",
              "signature": "createJsxClosingElement: (tagName: JsxTagNameExpression) => JsxClosingElement;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3503,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3503",
              },
              "type": "(tagName: JsxTagNameExpression) => JsxClosingElement",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.createJsxElement",
              "kind": "InterfaceMethodDeclaration",
              "name": "createJsxElement",
              "signature": "createJsxElement: (
    openingElement: JsxOpeningElement,
    children: readonly JsxChild[],
    closingElement: JsxClosingElement
) => JsxElement;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3497,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3497",
              },
              "type": "(openingElement: JsxOpeningElement, children: readonly JsxChild[], closingElement: JsxClosingElement) => JsxElement",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.createJsxExpression",
              "kind": "InterfaceMethodDeclaration",
              "name": "createJsxExpression",
              "signature": "createJsxExpression: (
    dotDotDotToken: DotDotDotToken | undefined,
    expression: Expression | undefined
) => JsxExpression;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3517,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3517",
              },
              "type": "(dotDotDotToken: DotDotDotToken | undefined, expression: Expression | undefined) => JsxExpression",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.createJsxFragment",
              "kind": "InterfaceMethodDeclaration",
              "name": "createJsxFragment",
              "signature": "createJsxFragment: (
    openingFragment: JsxOpeningFragment,
    children: readonly JsxChild[],
    closingFragment: JsxClosingFragment
) => JsxFragment;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3505,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3505",
              },
              "type": "(openingFragment: JsxOpeningFragment, children: readonly JsxChild[], closingFragment: JsxClosingFragment) => JsxFragment",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.createJsxJsxClosingFragment",
              "kind": "InterfaceMethodDeclaration",
              "name": "createJsxJsxClosingFragment",
              "signature": "createJsxJsxClosingFragment: () => JsxClosingFragment;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3509,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3509",
              },
              "type": "() => JsxClosingFragment",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.createJsxOpeningElement",
              "kind": "InterfaceMethodDeclaration",
              "name": "createJsxOpeningElement",
              "signature": "createJsxOpeningElement: (
    tagName: JsxTagNameExpression,
    typeArguments: readonly TypeNode[] | undefined,
    attributes: JsxAttributes
) => JsxOpeningElement;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3501,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3501",
              },
              "type": "(tagName: JsxTagNameExpression, typeArguments: readonly TypeNode[] | undefined, attributes: JsxAttributes) => JsxOpeningElement",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.createJsxOpeningFragment",
              "kind": "InterfaceMethodDeclaration",
              "name": "createJsxOpeningFragment",
              "signature": "createJsxOpeningFragment: () => JsxOpeningFragment;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3508,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3508",
              },
              "type": "() => JsxOpeningFragment",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.createJsxSelfClosingElement",
              "kind": "InterfaceMethodDeclaration",
              "name": "createJsxSelfClosingElement",
              "signature": "createJsxSelfClosingElement: (
    tagName: JsxTagNameExpression,
    typeArguments: readonly TypeNode[] | undefined,
    attributes: JsxAttributes
) => JsxSelfClosingElement;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3499,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3499",
              },
              "type": "(tagName: JsxTagNameExpression, typeArguments: readonly TypeNode[] | undefined, attributes: JsxAttributes) => JsxSelfClosingElement",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.createJsxSpreadAttribute",
              "kind": "InterfaceMethodDeclaration",
              "name": "createJsxSpreadAttribute",
              "signature": "createJsxSpreadAttribute: (expression: Expression) => JsxSpreadAttribute;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3515,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3515",
              },
              "type": "(expression: Expression) => JsxSpreadAttribute",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.createJsxText",
              "kind": "InterfaceMethodDeclaration",
              "name": "createJsxText",
              "signature": "createJsxText: (
    text: string,
    containsOnlyTriviaWhiteSpaces?: boolean
) => JsxText;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3506,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3506",
              },
              "type": "(text: string, containsOnlyTriviaWhiteSpaces?: boolean) => JsxText",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.createKeywordTypeNode",
              "kind": "InterfaceMethodDeclaration",
              "name": "createKeywordTypeNode",
              "signature": "createKeywordTypeNode: <TKind extends KeywordTypeSyntaxKind>(
    kind: TKind
) => KeywordTypeNode<TKind>;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3224,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3224",
              },
              "type": "<TKind extends KeywordTypeSyntaxKind>(kind: TKind) => KeywordTypeNode<TKind>",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.createLabeledStatement",
              "kind": "InterfaceMethodDeclaration",
              "name": "createLabeledStatement",
              "signature": "createLabeledStatement: (
    label: string | Identifier,
    statement: Statement
) => LabeledStatement;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3380,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3380",
              },
              "type": "(label: string | Identifier, statement: Statement) => LabeledStatement",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.createLeftShift",
              "kind": "InterfaceMethodDeclaration",
              "name": "createLeftShift",
              "signature": "createLeftShift: (left: Expression, right: Expression) => BinaryExpression;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3560,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3560",
              },
              "type": "(left: Expression, right: Expression) => BinaryExpression",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.createLessThan",
              "kind": "InterfaceMethodDeclaration",
              "name": "createLessThan",
              "signature": "createLessThan: (left: Expression, right: Expression) => BinaryExpression;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3556,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3556",
              },
              "type": "(left: Expression, right: Expression) => BinaryExpression",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.createLessThanEquals",
              "kind": "InterfaceMethodDeclaration",
              "name": "createLessThanEquals",
              "signature": "createLessThanEquals: (left: Expression, right: Expression) => BinaryExpression;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3557,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3557",
              },
              "type": "(left: Expression, right: Expression) => BinaryExpression",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.createLiteralTypeNode",
              "kind": "InterfaceMethodDeclaration",
              "name": "createLiteralTypeNode",
              "signature": "createLiteralTypeNode: (literal: LiteralTypeNode['literal']) => LiteralTypeNode;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3266,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3266",
              },
              "type": "(literal: LiteralTypeNode[\\"literal\\"]) => LiteralTypeNode",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.createLogicalAnd",
              "kind": "InterfaceMethodDeclaration",
              "name": "createLogicalAnd",
              "signature": "createLogicalAnd: (left: Expression, right: Expression) => BinaryExpression;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3548,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3548",
              },
              "type": "(left: Expression, right: Expression) => BinaryExpression",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.createLogicalNot",
              "kind": "InterfaceMethodDeclaration",
              "name": "createLogicalNot",
              "signature": "createLogicalNot: (operand: Expression) => PrefixUnaryExpression;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3574,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3574",
              },
              "type": "(operand: Expression) => PrefixUnaryExpression",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.createLogicalOr",
              "kind": "InterfaceMethodDeclaration",
              "name": "createLogicalOr",
              "signature": "createLogicalOr: (left: Expression, right: Expression) => BinaryExpression;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3547,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3547",
              },
              "type": "(left: Expression, right: Expression) => BinaryExpression",
            },
            Object {
              "docs": Array [
                "/** Create a unique temporary variable for use in a loop. */",
              ],
              "id": "NodeFactory.createLoopVariable",
              "kind": "InterfaceMethodDeclaration",
              "name": "createLoopVariable",
              "signature": "createLoopVariable: () => Identifier;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3169,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3169",
              },
              "type": "() => Identifier",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.createMappedTypeNode",
              "kind": "InterfaceMethodDeclaration",
              "name": "createMappedTypeNode",
              "signature": "createMappedTypeNode: (
    readonlyToken: ReadonlyKeyword | PlusToken | MinusToken | undefined,
    typeParameter: TypeParameterDeclaration,
    nameType: TypeNode | undefined,
    questionToken: QuestionToken | PlusToken | MinusToken | undefined,
    type: TypeNode | undefined
) => MappedTypeNode;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3264,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3264",
              },
              "type": "(readonlyToken: ReadonlyKeyword | PlusToken | MinusToken | undefined, typeParameter: TypeParameterDeclaration, nameType: TypeNode | undefined, questionToken: QuestionToken | PlusToken | MinusToken | undefined, type: TypeNode | undefined) => MappedTypeNode",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.createMetaProperty",
              "kind": "InterfaceMethodDeclaration",
              "name": "createMetaProperty",
              "signature": "createMetaProperty: (
    keywordToken: MetaProperty['keywordToken'],
    name: Identifier
) => MetaProperty;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3346,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3346",
              },
              "type": "(keywordToken: MetaProperty[\\"keywordToken\\"], name: Identifier) => MetaProperty",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.createMethodDeclaration",
              "kind": "InterfaceMethodDeclaration",
              "name": "createMethodDeclaration",
              "signature": "createMethodDeclaration: (
    decorators: readonly Decorator[] | undefined,
    modifiers: readonly Modifier[] | undefined,
    asteriskToken: AsteriskToken | undefined,
    name: string | PropertyName,
    questionToken: QuestionToken | undefined,
    typeParameters: readonly TypeParameterDeclaration[] | undefined,
    parameters: readonly ParameterDeclaration[],
    type: TypeNode | undefined,
    body: Block | undefined
) => MethodDeclaration;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3208,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3208",
              },
              "type": "(decorators: readonly Decorator[] | undefined, modifiers: readonly Modifier[] | undefined, asteriskToken: AsteriskToken | undefined, name: string | PropertyName, questionToken: QuestionToken | undefined, typeParameters: readonly TypeParameterDeclaration[] | undefined, parameters: readonly ParameterDeclaration[], type: TypeNode | undefined, body: Block | undefined) => MethodDeclaration",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.createMethodSignature",
              "kind": "InterfaceMethodDeclaration",
              "name": "createMethodSignature",
              "signature": "createMethodSignature: (
    modifiers: readonly Modifier[] | undefined,
    name: string | PropertyName,
    questionToken: QuestionToken | undefined,
    typeParameters: readonly TypeParameterDeclaration[] | undefined,
    parameters: readonly ParameterDeclaration[],
    type: TypeNode | undefined
) => MethodSignature;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3206,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3206",
              },
              "type": "(modifiers: readonly Modifier[] | undefined, name: string | PropertyName, questionToken: QuestionToken | undefined, typeParameters: readonly TypeParameterDeclaration[] | undefined, parameters: readonly ParameterDeclaration[], type: TypeNode | undefined) => MethodSignature",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.createModifier",
              "kind": "InterfaceMethodDeclaration",
              "name": "createModifier",
              "signature": "createModifier: <T extends ModifierSyntaxKind>(kind: T) => ModifierToken<T>;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3190,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3190",
              },
              "type": "<T extends ModifierSyntaxKind>(kind: T) => ModifierToken<T>",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.createModifiersFromModifierFlags",
              "kind": "InterfaceMethodDeclaration",
              "name": "createModifiersFromModifierFlags",
              "signature": "createModifiersFromModifierFlags: (flags: ModifierFlags) => Modifier[];",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3191,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3191",
              },
              "type": "(flags: ModifierFlags) => Modifier[]",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.createModuleBlock",
              "kind": "InterfaceMethodDeclaration",
              "name": "createModuleBlock",
              "signature": "createModuleBlock: (statements: readonly Statement[]) => ModuleBlock;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3403,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3403",
              },
              "type": "(statements: readonly Statement[]) => ModuleBlock",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.createModuleDeclaration",
              "kind": "InterfaceMethodDeclaration",
              "name": "createModuleDeclaration",
              "signature": "createModuleDeclaration: (
    decorators: readonly Decorator[] | undefined,
    modifiers: readonly Modifier[] | undefined,
    name: ModuleName,
    body: ModuleBody | undefined,
    flags?: NodeFlags
) => ModuleDeclaration;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3401,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3401",
              },
              "type": "(decorators: readonly Decorator[] | undefined, modifiers: readonly Modifier[] | undefined, name: ModuleName, body: ModuleBody | undefined, flags?: NodeFlags) => ModuleDeclaration",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.createModulo",
              "kind": "InterfaceMethodDeclaration",
              "name": "createModulo",
              "signature": "createModulo: (left: Expression, right: Expression) => BinaryExpression;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3567,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3567",
              },
              "type": "(left: Expression, right: Expression) => BinaryExpression",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.createMultiply",
              "kind": "InterfaceMethodDeclaration",
              "name": "createMultiply",
              "signature": "createMultiply: (left: Expression, right: Expression) => BinaryExpression;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3565,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3565",
              },
              "type": "(left: Expression, right: Expression) => BinaryExpression",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.createNamedExports",
              "kind": "InterfaceMethodDeclaration",
              "name": "createNamedExports",
              "signature": "createNamedExports: (elements: readonly ExportSpecifier[]) => NamedExports;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3427,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3427",
              },
              "type": "(elements: readonly ExportSpecifier[]) => NamedExports",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.createNamedImports",
              "kind": "InterfaceMethodDeclaration",
              "name": "createNamedImports",
              "signature": "createNamedImports: (elements: readonly ImportSpecifier[]) => NamedImports;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3419,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3419",
              },
              "type": "(elements: readonly ImportSpecifier[]) => NamedImports",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.createNamedTupleMember",
              "kind": "InterfaceMethodDeclaration",
              "name": "createNamedTupleMember",
              "signature": "createNamedTupleMember: (
    dotDotDotToken: DotDotDotToken | undefined,
    name: Identifier,
    questionToken: QuestionToken | undefined,
    type: TypeNode
) => NamedTupleMember;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3241,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3241",
              },
              "type": "(dotDotDotToken: DotDotDotToken | undefined, name: Identifier, questionToken: QuestionToken | undefined, type: TypeNode) => NamedTupleMember",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.createNamespaceExport",
              "kind": "InterfaceMethodDeclaration",
              "name": "createNamespaceExport",
              "signature": "createNamespaceExport: (name: Identifier) => NamespaceExport;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3417,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3417",
              },
              "type": "(name: Identifier) => NamespaceExport",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.createNamespaceExportDeclaration",
              "kind": "InterfaceMethodDeclaration",
              "name": "createNamespaceExportDeclaration",
              "signature": "createNamespaceExportDeclaration: (
    name: string | Identifier
) => NamespaceExportDeclaration;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3407,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3407",
              },
              "type": "(name: string | Identifier) => NamespaceExportDeclaration",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.createNamespaceImport",
              "kind": "InterfaceMethodDeclaration",
              "name": "createNamespaceImport",
              "signature": "createNamespaceImport: (name: Identifier) => NamespaceImport;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3415,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3415",
              },
              "type": "(name: Identifier) => NamespaceImport",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.createNewExpression",
              "kind": "InterfaceMethodDeclaration",
              "name": "createNewExpression",
              "signature": "createNewExpression: (
    expression: Expression,
    typeArguments: readonly TypeNode[] | undefined,
    argumentsArray: readonly Expression[] | undefined
) => NewExpression;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3292,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3292",
              },
              "type": "(expression: Expression, typeArguments: readonly TypeNode[] | undefined, argumentsArray: readonly Expression[] | undefined) => NewExpression",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.createNodeArray",
              "kind": "InterfaceMethodDeclaration",
              "name": "createNodeArray",
              "signature": "createNodeArray: <T extends Node>(
    elements?: readonly T[],
    hasTrailingComma?: boolean
) => NodeArray<T>;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3159,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3159",
              },
              "type": "<T extends Node>(elements?: readonly T[], hasTrailingComma?: boolean) => NodeArray<T>",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.createNonNullChain",
              "kind": "InterfaceMethodDeclaration",
              "name": "createNonNullChain",
              "signature": "createNonNullChain: (expression: Expression) => NonNullChain;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3344,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3344",
              },
              "type": "(expression: Expression) => NonNullChain",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.createNonNullExpression",
              "kind": "InterfaceMethodDeclaration",
              "name": "createNonNullExpression",
              "signature": "createNonNullExpression: (expression: Expression) => NonNullExpression;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3342,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3342",
              },
              "type": "(expression: Expression) => NonNullExpression",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.createNoSubstitutionTemplateLiteral",
              "kind": "InterfaceMethodDeclaration",
              "name": "createNoSubstitutionTemplateLiteral",
              "signature": "createNoSubstitutionTemplateLiteral: {
    (text: string, rawText?: string): NoSubstitutionTemplateLiteral;
    (text: string, rawText: string): NoSubstitutionTemplateLiteral;
};",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3328,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3328",
              },
              "type": "{ (text: string, rawText?: string): NoSubstitutionTemplateLiteral; (text: string, rawText: string): NoSubstitutionTemplateLiteral; }",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.createNotEmittedStatement",
              "kind": "InterfaceMethodDeclaration",
              "name": "createNotEmittedStatement",
              "signature": "createNotEmittedStatement: (original: Node) => NotEmittedStatement;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3537,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3537",
              },
              "type": "(original: Node) => NotEmittedStatement",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.createNull",
              "kind": "InterfaceMethodDeclaration",
              "name": "createNull",
              "signature": "createNull: () => NullLiteral;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3187,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3187",
              },
              "type": "() => NullLiteral",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.createNumericLiteral",
              "kind": "InterfaceMethodDeclaration",
              "name": "createNumericLiteral",
              "signature": "createNumericLiteral: (
    value: string | number,
    numericLiteralFlags?: TokenFlags
) => NumericLiteral;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3160,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3160",
              },
              "type": "(value: string | number, numericLiteralFlags?: TokenFlags) => NumericLiteral",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.createObjectBindingPattern",
              "kind": "InterfaceMethodDeclaration",
              "name": "createObjectBindingPattern",
              "signature": "createObjectBindingPattern: (
    elements: readonly BindingElement[]
) => ObjectBindingPattern;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3270,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3270",
              },
              "type": "(elements: readonly BindingElement[]) => ObjectBindingPattern",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.createObjectLiteralExpression",
              "kind": "InterfaceMethodDeclaration",
              "name": "createObjectLiteralExpression",
              "signature": "createObjectLiteralExpression: (
    properties?: readonly ObjectLiteralElementLike[],
    multiLine?: boolean
) => ObjectLiteralExpression;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3278,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3278",
              },
              "type": "(properties?: readonly ObjectLiteralElementLike[], multiLine?: boolean) => ObjectLiteralExpression",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.createOmittedExpression",
              "kind": "InterfaceMethodDeclaration",
              "name": "createOmittedExpression",
              "signature": "createOmittedExpression: () => OmittedExpression;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3337,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3337",
              },
              "type": "() => OmittedExpression",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.createOptionalTypeNode",
              "kind": "InterfaceMethodDeclaration",
              "name": "createOptionalTypeNode",
              "signature": "createOptionalTypeNode: (type: TypeNode) => OptionalTypeNode;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3243,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3243",
              },
              "type": "(type: TypeNode) => OptionalTypeNode",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.createParameterDeclaration",
              "kind": "InterfaceMethodDeclaration",
              "name": "createParameterDeclaration",
              "signature": "createParameterDeclaration: (
    decorators: readonly Decorator[] | undefined,
    modifiers: readonly Modifier[] | undefined,
    dotDotDotToken: DotDotDotToken | undefined,
    name: string | BindingName,
    questionToken?: QuestionToken,
    type?: TypeNode,
    initializer?: Expression
) => ParameterDeclaration;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3198,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3198",
              },
              "type": "(decorators: readonly Decorator[] | undefined, modifiers: readonly Modifier[] | undefined, dotDotDotToken: DotDotDotToken | undefined, name: string | BindingName, questionToken?: QuestionToken, type?: TypeNode, initializer?: Expression) => ParameterDeclaration",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.createParenthesizedExpression",
              "kind": "InterfaceMethodDeclaration",
              "name": "createParenthesizedExpression",
              "signature": "createParenthesizedExpression: (
    expression: Expression
) => ParenthesizedExpression;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3298,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3298",
              },
              "type": "(expression: Expression) => ParenthesizedExpression",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.createParenthesizedType",
              "kind": "InterfaceMethodDeclaration",
              "name": "createParenthesizedType",
              "signature": "createParenthesizedType: (type: TypeNode) => ParenthesizedTypeNode;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3257,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3257",
              },
              "type": "(type: TypeNode) => ParenthesizedTypeNode",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.createPartiallyEmittedExpression",
              "kind": "InterfaceMethodDeclaration",
              "name": "createPartiallyEmittedExpression",
              "signature": "createPartiallyEmittedExpression: (
    expression: Expression,
    original?: Node
) => PartiallyEmittedExpression;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3538,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3538",
              },
              "type": "(expression: Expression, original?: Node) => PartiallyEmittedExpression",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.createPostfixDecrement",
              "kind": "InterfaceMethodDeclaration",
              "name": "createPostfixDecrement",
              "signature": "createPostfixDecrement: (operand: Expression) => PostfixUnaryExpression;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3576,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3576",
              },
              "type": "(operand: Expression) => PostfixUnaryExpression",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.createPostfixIncrement",
              "kind": "InterfaceMethodDeclaration",
              "name": "createPostfixIncrement",
              "signature": "createPostfixIncrement: (operand: Expression) => PostfixUnaryExpression;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3575,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3575",
              },
              "type": "(operand: Expression) => PostfixUnaryExpression",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.createPostfixUnaryExpression",
              "kind": "InterfaceMethodDeclaration",
              "name": "createPostfixUnaryExpression",
              "signature": "createPostfixUnaryExpression: (
    operand: Expression,
    operator: PostfixUnaryOperator
) => PostfixUnaryExpression;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3314,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3314",
              },
              "type": "(operand: Expression, operator: PostfixUnaryOperator) => PostfixUnaryExpression",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.createPrefixDecrement",
              "kind": "InterfaceMethodDeclaration",
              "name": "createPrefixDecrement",
              "signature": "createPrefixDecrement: (operand: Expression) => PrefixUnaryExpression;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3572,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3572",
              },
              "type": "(operand: Expression) => PrefixUnaryExpression",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.createPrefixIncrement",
              "kind": "InterfaceMethodDeclaration",
              "name": "createPrefixIncrement",
              "signature": "createPrefixIncrement: (operand: Expression) => PrefixUnaryExpression;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3571,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3571",
              },
              "type": "(operand: Expression) => PrefixUnaryExpression",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.createPrefixMinus",
              "kind": "InterfaceMethodDeclaration",
              "name": "createPrefixMinus",
              "signature": "createPrefixMinus: (operand: Expression) => PrefixUnaryExpression;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3570,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3570",
              },
              "type": "(operand: Expression) => PrefixUnaryExpression",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.createPrefixPlus",
              "kind": "InterfaceMethodDeclaration",
              "name": "createPrefixPlus",
              "signature": "createPrefixPlus: (operand: Expression) => PrefixUnaryExpression;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3569,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3569",
              },
              "type": "(operand: Expression) => PrefixUnaryExpression",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.createPrefixUnaryExpression",
              "kind": "InterfaceMethodDeclaration",
              "name": "createPrefixUnaryExpression",
              "signature": "createPrefixUnaryExpression: (
    operator: PrefixUnaryOperator,
    operand: Expression
) => PrefixUnaryExpression;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3312,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3312",
              },
              "type": "(operator: PrefixUnaryOperator, operand: Expression) => PrefixUnaryExpression",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.createPrivateIdentifier",
              "kind": "InterfaceMethodDeclaration",
              "name": "createPrivateIdentifier",
              "signature": "createPrivateIdentifier: (text: string) => PrivateIdentifier;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3174,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3174",
              },
              "type": "(text: string) => PrivateIdentifier",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.createPropertyAccessChain",
              "kind": "InterfaceMethodDeclaration",
              "name": "createPropertyAccessChain",
              "signature": "createPropertyAccessChain: (
    expression: Expression,
    questionDotToken: QuestionDotToken | undefined,
    name: string | Identifier | PrivateIdentifier
) => PropertyAccessChain;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3282,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3282",
              },
              "type": "(expression: Expression, questionDotToken: QuestionDotToken | undefined, name: string | Identifier | PrivateIdentifier) => PropertyAccessChain",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.createPropertyAccessExpression",
              "kind": "InterfaceMethodDeclaration",
              "name": "createPropertyAccessExpression",
              "signature": "createPropertyAccessExpression: (
    expression: Expression,
    name: string | Identifier | PrivateIdentifier
) => PropertyAccessExpression;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3280,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3280",
              },
              "type": "(expression: Expression, name: string | Identifier | PrivateIdentifier) => PropertyAccessExpression",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.createPropertyAssignment",
              "kind": "InterfaceMethodDeclaration",
              "name": "createPropertyAssignment",
              "signature": "createPropertyAssignment: (
    name: string | PropertyName,
    initializer: Expression
) => PropertyAssignment;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3527,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3527",
              },
              "type": "(name: string | PropertyName, initializer: Expression) => PropertyAssignment",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.createPropertyDeclaration",
              "kind": "InterfaceMethodDeclaration",
              "name": "createPropertyDeclaration",
              "signature": "createPropertyDeclaration: (
    decorators: readonly Decorator[] | undefined,
    modifiers: readonly Modifier[] | undefined,
    name: string | PropertyName,
    questionOrExclamationToken: QuestionToken | ExclamationToken | undefined,
    type: TypeNode | undefined,
    initializer: Expression | undefined
) => PropertyDeclaration;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3204,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3204",
              },
              "type": "(decorators: readonly Decorator[] | undefined, modifiers: readonly Modifier[] | undefined, name: string | PropertyName, questionOrExclamationToken: QuestionToken | ExclamationToken | undefined, type: TypeNode | undefined, initializer: Expression | undefined) => PropertyDeclaration",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.createPropertySignature",
              "kind": "InterfaceMethodDeclaration",
              "name": "createPropertySignature",
              "signature": "createPropertySignature: (
    modifiers: readonly Modifier[] | undefined,
    name: PropertyName | string,
    questionToken: QuestionToken | undefined,
    type: TypeNode | undefined
) => PropertySignature;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3202,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3202",
              },
              "type": "(modifiers: readonly Modifier[] | undefined, name: PropertyName | string, questionToken: QuestionToken | undefined, type: TypeNode | undefined) => PropertySignature",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.createQualifiedName",
              "kind": "InterfaceMethodDeclaration",
              "name": "createQualifiedName",
              "signature": "createQualifiedName: (
    left: EntityName,
    right: string | Identifier
) => QualifiedName;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3192,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3192",
              },
              "type": "(left: EntityName, right: string | Identifier) => QualifiedName",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.createRegularExpressionLiteral",
              "kind": "InterfaceMethodDeclaration",
              "name": "createRegularExpressionLiteral",
              "signature": "createRegularExpressionLiteral: (text: string) => RegularExpressionLiteral;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3164,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3164",
              },
              "type": "(text: string) => RegularExpressionLiteral",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.createRestTypeNode",
              "kind": "InterfaceMethodDeclaration",
              "name": "createRestTypeNode",
              "signature": "createRestTypeNode: (type: TypeNode) => RestTypeNode;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3245,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3245",
              },
              "type": "(type: TypeNode) => RestTypeNode",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.createReturnStatement",
              "kind": "InterfaceMethodDeclaration",
              "name": "createReturnStatement",
              "signature": "createReturnStatement: (expression?: Expression) => ReturnStatement;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3374,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3374",
              },
              "type": "(expression?: Expression) => ReturnStatement",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.createRightShift",
              "kind": "InterfaceMethodDeclaration",
              "name": "createRightShift",
              "signature": "createRightShift: (left: Expression, right: Expression) => BinaryExpression;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3561,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3561",
              },
              "type": "(left: Expression, right: Expression) => BinaryExpression",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.createSemicolonClassElement",
              "kind": "InterfaceMethodDeclaration",
              "name": "createSemicolonClassElement",
              "signature": "createSemicolonClassElement: () => SemicolonClassElement;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3350,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3350",
              },
              "type": "() => SemicolonClassElement",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.createSetAccessorDeclaration",
              "kind": "InterfaceMethodDeclaration",
              "name": "createSetAccessorDeclaration",
              "signature": "createSetAccessorDeclaration: (
    decorators: readonly Decorator[] | undefined,
    modifiers: readonly Modifier[] | undefined,
    name: string | PropertyName,
    parameters: readonly ParameterDeclaration[],
    body: Block | undefined
) => SetAccessorDeclaration;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3214,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3214",
              },
              "type": "(decorators: readonly Decorator[] | undefined, modifiers: readonly Modifier[] | undefined, name: string | PropertyName, parameters: readonly ParameterDeclaration[], body: Block | undefined) => SetAccessorDeclaration",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.createShorthandPropertyAssignment",
              "kind": "InterfaceMethodDeclaration",
              "name": "createShorthandPropertyAssignment",
              "signature": "createShorthandPropertyAssignment: (
    name: string | Identifier,
    objectAssignmentInitializer?: Expression
) => ShorthandPropertyAssignment;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3529,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3529",
              },
              "type": "(name: string | Identifier, objectAssignmentInitializer?: Expression) => ShorthandPropertyAssignment",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.createSourceFile",
              "kind": "InterfaceMethodDeclaration",
              "name": "createSourceFile",
              "signature": "createSourceFile: (
    statements: readonly Statement[],
    endOfFileToken: EndOfFileToken,
    flags: NodeFlags
) => SourceFile;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3535,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3535",
              },
              "type": "(statements: readonly Statement[], endOfFileToken: EndOfFileToken, flags: NodeFlags) => SourceFile",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.createSpreadAssignment",
              "kind": "InterfaceMethodDeclaration",
              "name": "createSpreadAssignment",
              "signature": "createSpreadAssignment: (expression: Expression) => SpreadAssignment;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3531,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3531",
              },
              "type": "(expression: Expression) => SpreadAssignment",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.createSpreadElement",
              "kind": "InterfaceMethodDeclaration",
              "name": "createSpreadElement",
              "signature": "createSpreadElement: (expression: Expression) => SpreadElement;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3333,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3333",
              },
              "type": "(expression: Expression) => SpreadElement",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.createStrictEquality",
              "kind": "InterfaceMethodDeclaration",
              "name": "createStrictEquality",
              "signature": "createStrictEquality: (left: Expression, right: Expression) => BinaryExpression;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3552,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3552",
              },
              "type": "(left: Expression, right: Expression) => BinaryExpression",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.createStrictInequality",
              "kind": "InterfaceMethodDeclaration",
              "name": "createStrictInequality",
              "signature": "createStrictInequality: (
    left: Expression,
    right: Expression
) => BinaryExpression;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3553,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3553",
              },
              "type": "(left: Expression, right: Expression) => BinaryExpression",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.createStringLiteral",
              "kind": "InterfaceMethodDeclaration",
              "name": "createStringLiteral",
              "signature": "createStringLiteral: (text: string, isSingleQuote?: boolean) => StringLiteral;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3162,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3162",
              },
              "type": "(text: string, isSingleQuote?: boolean) => StringLiteral",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.createStringLiteralFromNode",
              "kind": "InterfaceMethodDeclaration",
              "name": "createStringLiteralFromNode",
              "signature": "createStringLiteralFromNode: (
    sourceNode: PropertyNameLiteral,
    isSingleQuote?: boolean
) => StringLiteral;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3163,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3163",
              },
              "type": "(sourceNode: PropertyNameLiteral, isSingleQuote?: boolean) => StringLiteral",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.createSubtract",
              "kind": "InterfaceMethodDeclaration",
              "name": "createSubtract",
              "signature": "createSubtract: (left: Expression, right: Expression) => BinaryExpression;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3564,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3564",
              },
              "type": "(left: Expression, right: Expression) => BinaryExpression",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.createSuper",
              "kind": "InterfaceMethodDeclaration",
              "name": "createSuper",
              "signature": "createSuper: () => SuperExpression;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3185,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3185",
              },
              "type": "() => SuperExpression",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.createSwitchStatement",
              "kind": "InterfaceMethodDeclaration",
              "name": "createSwitchStatement",
              "signature": "createSwitchStatement: (
    expression: Expression,
    caseBlock: CaseBlock
) => SwitchStatement;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3378,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3378",
              },
              "type": "(expression: Expression, caseBlock: CaseBlock) => SwitchStatement",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.createTaggedTemplateExpression",
              "kind": "InterfaceMethodDeclaration",
              "name": "createTaggedTemplateExpression",
              "signature": "createTaggedTemplateExpression: (
    tag: Expression,
    typeArguments: readonly TypeNode[] | undefined,
    template: TemplateLiteral
) => TaggedTemplateExpression;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3294,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3294",
              },
              "type": "(tag: Expression, typeArguments: readonly TypeNode[] | undefined, template: TemplateLiteral) => TaggedTemplateExpression",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.createTemplateExpression",
              "kind": "InterfaceMethodDeclaration",
              "name": "createTemplateExpression",
              "signature": "createTemplateExpression: (
    head: TemplateHead,
    templateSpans: readonly TemplateSpan[]
) => TemplateExpression;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3320,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3320",
              },
              "type": "(head: TemplateHead, templateSpans: readonly TemplateSpan[]) => TemplateExpression",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.createTemplateHead",
              "kind": "InterfaceMethodDeclaration",
              "name": "createTemplateHead",
              "signature": "createTemplateHead: {
    (text: string, rawText?: string, templateFlags?: TokenFlags): TemplateHead;
    (text: string, rawText: string, templateFlags?: TokenFlags): TemplateHead;
};",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3322,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3322",
              },
              "type": "{ (text: string, rawText?: string, templateFlags?: TokenFlags): TemplateHead; (text: string, rawText: string, templateFlags?: TokenFlags): TemplateHead; }",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.createTemplateLiteralType",
              "kind": "InterfaceMethodDeclaration",
              "name": "createTemplateLiteralType",
              "signature": "createTemplateLiteralType: (
    head: TemplateHead,
    templateSpans: readonly TemplateLiteralTypeSpan[]
) => TemplateLiteralTypeNode;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3268,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3268",
              },
              "type": "(head: TemplateHead, templateSpans: readonly TemplateLiteralTypeSpan[]) => TemplateLiteralTypeNode",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.createTemplateLiteralTypeSpan",
              "kind": "InterfaceMethodDeclaration",
              "name": "createTemplateLiteralTypeSpan",
              "signature": "createTemplateLiteralTypeSpan: (
    type: TypeNode,
    literal: TemplateMiddle | TemplateTail
) => TemplateLiteralTypeSpan;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3222,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3222",
              },
              "type": "(type: TypeNode, literal: TemplateMiddle | TemplateTail) => TemplateLiteralTypeSpan",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.createTemplateMiddle",
              "kind": "InterfaceMethodDeclaration",
              "name": "createTemplateMiddle",
              "signature": "createTemplateMiddle: {
    (text: string, rawText?: string, templateFlags?: TokenFlags): TemplateMiddle;
    (text: string, rawText: string, templateFlags?: TokenFlags): TemplateMiddle;
};",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3324,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3324",
              },
              "type": "{ (text: string, rawText?: string, templateFlags?: TokenFlags): TemplateMiddle; (text: string, rawText: string, templateFlags?: TokenFlags): TemplateMiddle; }",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.createTemplateSpan",
              "kind": "InterfaceMethodDeclaration",
              "name": "createTemplateSpan",
              "signature": "createTemplateSpan: (
    expression: Expression,
    literal: TemplateMiddle | TemplateTail
) => TemplateSpan;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3348,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3348",
              },
              "type": "(expression: Expression, literal: TemplateMiddle | TemplateTail) => TemplateSpan",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.createTemplateTail",
              "kind": "InterfaceMethodDeclaration",
              "name": "createTemplateTail",
              "signature": "createTemplateTail: {
    (text: string, rawText?: string, templateFlags?: TokenFlags): TemplateTail;
    (text: string, rawText: string, templateFlags?: TokenFlags): TemplateTail;
};",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3326,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3326",
              },
              "type": "{ (text: string, rawText?: string, templateFlags?: TokenFlags): TemplateTail; (text: string, rawText: string, templateFlags?: TokenFlags): TemplateTail; }",
            },
            Object {
              "docs": Array [
                "/** Create a unique temporary variable. */",
              ],
              "id": "NodeFactory.createTempVariable",
              "kind": "InterfaceMethodDeclaration",
              "name": "createTempVariable",
              "signature": "createTempVariable: (
    recordTempVariable: (node: Identifier) => void
) => Identifier;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3167,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3167",
              },
              "type": "(recordTempVariable: (node: Identifier) => void) => Identifier",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.createThis",
              "kind": "InterfaceMethodDeclaration",
              "name": "createThis",
              "signature": "createThis: () => ThisExpression;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3186,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3186",
              },
              "type": "() => ThisExpression",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.createThisTypeNode",
              "kind": "InterfaceMethodDeclaration",
              "name": "createThisTypeNode",
              "signature": "createThisTypeNode: () => ThisTypeNode;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3259,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3259",
              },
              "type": "() => ThisTypeNode",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.createThrowStatement",
              "kind": "InterfaceMethodDeclaration",
              "name": "createThrowStatement",
              "signature": "createThrowStatement: (expression: Expression) => ThrowStatement;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3382,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3382",
              },
              "type": "(expression: Expression) => ThrowStatement",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.createToken",
              "kind": "InterfaceMethodDeclaration",
              "name": "createToken",
              "signature": "createToken: {
    (token: SyntaxKind.SuperKeyword): SuperExpression;
    (token: SyntaxKind.ThisKeyword): ThisExpression;
    (token: SyntaxKind.NullKeyword): NullLiteral;
    (token: SyntaxKind.TrueKeyword): TrueLiteral;
    (token: SyntaxKind.FalseKeyword): FalseLiteral;
    <TKind extends PunctuationSyntaxKind>(token: TKind): PunctuationToken<TKind>;
    <TKind extends KeywordTypeSyntaxKind>(token: TKind): KeywordTypeNode<TKind>;
    <TKind extends ModifierSyntaxKind>(token: TKind): ModifierToken<TKind>;
    <TKind extends KeywordSyntaxKind>(token: TKind): KeywordToken<TKind>;
    <TKind extends SyntaxKind.Unknown | SyntaxKind.EndOfFileToken>(
        token: TKind
    ): Token<TKind>;
};",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3175,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3175",
              },
              "type": "{ (token: SyntaxKind.SuperKeyword): SuperExpression; (token: SyntaxKind.ThisKeyword): ThisExpression; (token: SyntaxKind.NullKeyword): NullLiteral; (token: SyntaxKind.TrueKeyword): TrueLiteral; (token: SyntaxKind.FalseKeyword): FalseLiteral; <TKind extends PunctuationSyntaxKind>(token: TKind): PunctuationToken<TKind>; <TKind extends KeywordTypeSyntaxKind>(token: TKind): KeywordTypeNode<TKind>; <TKind extends ModifierSyntaxKind>(token: TKind): ModifierToken<TKind>; <TKind extends KeywordSyntaxKind>(token: TKind): KeywordToken<TKind>; <TKind extends SyntaxKind.Unknown | SyntaxKind.EndOfFileToken>(token: TKind): Token<TKind>; }",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.createTrue",
              "kind": "InterfaceMethodDeclaration",
              "name": "createTrue",
              "signature": "createTrue: () => TrueLiteral;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3188,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3188",
              },
              "type": "() => TrueLiteral",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.createTryStatement",
              "kind": "InterfaceMethodDeclaration",
              "name": "createTryStatement",
              "signature": "createTryStatement: (
    tryBlock: Block,
    catchClause: CatchClause | undefined,
    finallyBlock: Block | undefined
) => TryStatement;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3384,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3384",
              },
              "type": "(tryBlock: Block, catchClause: CatchClause | undefined, finallyBlock: Block | undefined) => TryStatement",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.createTupleTypeNode",
              "kind": "InterfaceMethodDeclaration",
              "name": "createTupleTypeNode",
              "signature": "createTupleTypeNode: (
    elements: readonly (TypeNode | NamedTupleMember)[]
) => TupleTypeNode;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3239,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3239",
              },
              "type": "(elements: readonly (TypeNode | NamedTupleMember)[]) => TupleTypeNode",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.createTypeAliasDeclaration",
              "kind": "InterfaceMethodDeclaration",
              "name": "createTypeAliasDeclaration",
              "signature": "createTypeAliasDeclaration: (
    decorators: readonly Decorator[] | undefined,
    modifiers: readonly Modifier[] | undefined,
    name: string | Identifier,
    typeParameters: readonly TypeParameterDeclaration[] | undefined,
    type: TypeNode
) => TypeAliasDeclaration;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3397,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3397",
              },
              "type": "(decorators: readonly Decorator[] | undefined, modifiers: readonly Modifier[] | undefined, name: string | Identifier, typeParameters: readonly TypeParameterDeclaration[] | undefined, type: TypeNode) => TypeAliasDeclaration",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.createTypeAssertion",
              "kind": "InterfaceMethodDeclaration",
              "name": "createTypeAssertion",
              "signature": "createTypeAssertion: (type: TypeNode, expression: Expression) => TypeAssertion;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3296,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3296",
              },
              "type": "(type: TypeNode, expression: Expression) => TypeAssertion",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.createTypeLiteralNode",
              "kind": "InterfaceMethodDeclaration",
              "name": "createTypeLiteralNode",
              "signature": "createTypeLiteralNode: (
    members: readonly TypeElement[] | undefined
) => TypeLiteralNode;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3235,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3235",
              },
              "type": "(members: readonly TypeElement[] | undefined) => TypeLiteralNode",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.createTypeOfExpression",
              "kind": "InterfaceMethodDeclaration",
              "name": "createTypeOfExpression",
              "signature": "createTypeOfExpression: (expression: Expression) => TypeOfExpression;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3306,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3306",
              },
              "type": "(expression: Expression) => TypeOfExpression",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.createTypeOperatorNode",
              "kind": "InterfaceMethodDeclaration",
              "name": "createTypeOperatorNode",
              "signature": "createTypeOperatorNode: (
    operator:
        | SyntaxKind.KeyOfKeyword
        | SyntaxKind.ReadonlyKeyword
        | SyntaxKind.UniqueKeyword,
    type: TypeNode
) => TypeOperatorNode;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3260,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3260",
              },
              "type": "(operator: SyntaxKind.KeyOfKeyword | SyntaxKind.ReadonlyKeyword | SyntaxKind.UniqueKeyword, type: TypeNode) => TypeOperatorNode",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.createTypeParameterDeclaration",
              "kind": "InterfaceMethodDeclaration",
              "name": "createTypeParameterDeclaration",
              "signature": "createTypeParameterDeclaration: (
    name: string | Identifier,
    constraint?: TypeNode,
    defaultType?: TypeNode
) => TypeParameterDeclaration;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3196,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3196",
              },
              "type": "(name: string | Identifier, constraint?: TypeNode, defaultType?: TypeNode) => TypeParameterDeclaration",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.createTypePredicateNode",
              "kind": "InterfaceMethodDeclaration",
              "name": "createTypePredicateNode",
              "signature": "createTypePredicateNode: (
    assertsModifier: AssertsKeyword | undefined,
    parameterName: Identifier | ThisTypeNode | string,
    type: TypeNode | undefined
) => TypePredicateNode;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3225,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3225",
              },
              "type": "(assertsModifier: AssertsKeyword | undefined, parameterName: Identifier | ThisTypeNode | string, type: TypeNode | undefined) => TypePredicateNode",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.createTypeQueryNode",
              "kind": "InterfaceMethodDeclaration",
              "name": "createTypeQueryNode",
              "signature": "createTypeQueryNode: (exprName: EntityName) => TypeQueryNode;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3233,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3233",
              },
              "type": "(exprName: EntityName) => TypeQueryNode",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.createTypeReferenceNode",
              "kind": "InterfaceMethodDeclaration",
              "name": "createTypeReferenceNode",
              "signature": "createTypeReferenceNode: (
    typeName: string | EntityName,
    typeArguments?: readonly TypeNode[]
) => TypeReferenceNode;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3227,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3227",
              },
              "type": "(typeName: string | EntityName, typeArguments?: readonly TypeNode[]) => TypeReferenceNode",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.createUnionTypeNode",
              "kind": "InterfaceMethodDeclaration",
              "name": "createUnionTypeNode",
              "signature": "createUnionTypeNode: (types: readonly TypeNode[]) => UnionTypeNode;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3247,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3247",
              },
              "type": "(types: readonly TypeNode[]) => UnionTypeNode",
            },
            Object {
              "docs": Array [
                "/** Create a unique name based on the supplied text. */",
              ],
              "id": "NodeFactory.createUniqueName",
              "kind": "InterfaceMethodDeclaration",
              "name": "createUniqueName",
              "signature": "createUniqueName: (text: string, flags?: GeneratedIdentifierFlags) => Identifier;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3171,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3171",
              },
              "type": "(text: string, flags?: GeneratedIdentifierFlags) => Identifier",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.createUnsignedRightShift",
              "kind": "InterfaceMethodDeclaration",
              "name": "createUnsignedRightShift",
              "signature": "createUnsignedRightShift: (
    left: Expression,
    right: Expression
) => BinaryExpression;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3562,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3562",
              },
              "type": "(left: Expression, right: Expression) => BinaryExpression",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.createVariableDeclaration",
              "kind": "InterfaceMethodDeclaration",
              "name": "createVariableDeclaration",
              "signature": "createVariableDeclaration: (
    name: string | BindingName,
    exclamationToken?: ExclamationToken,
    type?: TypeNode,
    initializer?: Expression
) => VariableDeclaration;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3387,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3387",
              },
              "type": "(name: string | BindingName, exclamationToken?: ExclamationToken, type?: TypeNode, initializer?: Expression) => VariableDeclaration",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.createVariableDeclarationList",
              "kind": "InterfaceMethodDeclaration",
              "name": "createVariableDeclarationList",
              "signature": "createVariableDeclarationList: (
    declarations: readonly VariableDeclaration[],
    flags?: NodeFlags
) => VariableDeclarationList;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3389,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3389",
              },
              "type": "(declarations: readonly VariableDeclaration[], flags?: NodeFlags) => VariableDeclarationList",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.createVariableStatement",
              "kind": "InterfaceMethodDeclaration",
              "name": "createVariableStatement",
              "signature": "createVariableStatement: (
    modifiers: readonly Modifier[] | undefined,
    declarationList: VariableDeclarationList | readonly VariableDeclaration[]
) => VariableStatement;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3353,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3353",
              },
              "type": "(modifiers: readonly Modifier[] | undefined, declarationList: VariableDeclarationList | readonly VariableDeclaration[]) => VariableStatement",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.createVoidExpression",
              "kind": "InterfaceMethodDeclaration",
              "name": "createVoidExpression",
              "signature": "createVoidExpression: (expression: Expression) => VoidExpression;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3308,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3308",
              },
              "type": "(expression: Expression) => VoidExpression",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.createVoidZero",
              "kind": "InterfaceMethodDeclaration",
              "name": "createVoidZero",
              "signature": "createVoidZero: () => VoidExpression;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3581,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3581",
              },
              "type": "() => VoidExpression",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.createWhileStatement",
              "kind": "InterfaceMethodDeclaration",
              "name": "createWhileStatement",
              "signature": "createWhileStatement: (
    expression: Expression,
    statement: Statement
) => WhileStatement;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3362,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3362",
              },
              "type": "(expression: Expression, statement: Statement) => WhileStatement",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.createWithStatement",
              "kind": "InterfaceMethodDeclaration",
              "name": "createWithStatement",
              "signature": "createWithStatement: (
    expression: Expression,
    statement: Statement
) => WithStatement;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3376,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3376",
              },
              "type": "(expression: Expression, statement: Statement) => WithStatement",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.createYieldExpression",
              "kind": "InterfaceMethodDeclaration",
              "name": "createYieldExpression",
              "signature": "createYieldExpression: {
    (asteriskToken: AsteriskToken, expression: Expression): YieldExpression;
    (asteriskToken: undefined, expression: Expression): YieldExpression;
};",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3330,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3330",
              },
              "type": "{ (asteriskToken: AsteriskToken, expression: Expression): YieldExpression; (asteriskToken: undefined, expression: Expression): YieldExpression; }",
            },
            Object {
              "docs": Array [
                "/** Create a unique name generated for a node. */",
              ],
              "id": "NodeFactory.getGeneratedNameForNode",
              "kind": "InterfaceMethodDeclaration",
              "name": "getGeneratedNameForNode",
              "signature": "getGeneratedNameForNode: (node: Node | undefined) => Identifier;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3173,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3173",
              },
              "type": "(node: Node | undefined) => Identifier",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.restoreOuterExpressions",
              "kind": "InterfaceMethodDeclaration",
              "name": "restoreOuterExpressions",
              "signature": "restoreOuterExpressions: (
    outerExpression: Expression | undefined,
    innerExpression: Expression,
    kinds?: OuterExpressionKinds
) => Expression;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3584,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3584",
              },
              "type": "(outerExpression: Expression | undefined, innerExpression: Expression, kinds?: OuterExpressionKinds) => Expression",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.updateArrayBindingPattern",
              "kind": "InterfaceMethodDeclaration",
              "name": "updateArrayBindingPattern",
              "signature": "updateArrayBindingPattern: (
    node: ArrayBindingPattern,
    elements: readonly ArrayBindingElement[]
) => ArrayBindingPattern;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3273,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3273",
              },
              "type": "(node: ArrayBindingPattern, elements: readonly ArrayBindingElement[]) => ArrayBindingPattern",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.updateArrayLiteralExpression",
              "kind": "InterfaceMethodDeclaration",
              "name": "updateArrayLiteralExpression",
              "signature": "updateArrayLiteralExpression: (
    node: ArrayLiteralExpression,
    elements: readonly Expression[]
) => ArrayLiteralExpression;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3277,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3277",
              },
              "type": "(node: ArrayLiteralExpression, elements: readonly Expression[]) => ArrayLiteralExpression",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.updateArrayTypeNode",
              "kind": "InterfaceMethodDeclaration",
              "name": "updateArrayTypeNode",
              "signature": "updateArrayTypeNode: (
    node: ArrayTypeNode,
    elementType: TypeNode
) => ArrayTypeNode;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3238,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3238",
              },
              "type": "(node: ArrayTypeNode, elementType: TypeNode) => ArrayTypeNode",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.updateArrowFunction",
              "kind": "InterfaceMethodDeclaration",
              "name": "updateArrowFunction",
              "signature": "updateArrowFunction: (
    node: ArrowFunction,
    modifiers: readonly Modifier[] | undefined,
    typeParameters: readonly TypeParameterDeclaration[] | undefined,
    parameters: readonly ParameterDeclaration[],
    type: TypeNode | undefined,
    equalsGreaterThanToken: EqualsGreaterThanToken,
    body: ConciseBody
) => ArrowFunction;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3303,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3303",
              },
              "type": "(node: ArrowFunction, modifiers: readonly Modifier[] | undefined, typeParameters: readonly TypeParameterDeclaration[] | undefined, parameters: readonly ParameterDeclaration[], type: TypeNode | undefined, equalsGreaterThanToken: EqualsGreaterThanToken, body: ConciseBody) => ArrowFunction",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.updateAsExpression",
              "kind": "InterfaceMethodDeclaration",
              "name": "updateAsExpression",
              "signature": "updateAsExpression: (
    node: AsExpression,
    expression: Expression,
    type: TypeNode
) => AsExpression;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3341,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3341",
              },
              "type": "(node: AsExpression, expression: Expression, type: TypeNode) => AsExpression",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.updateAwaitExpression",
              "kind": "InterfaceMethodDeclaration",
              "name": "updateAwaitExpression",
              "signature": "updateAwaitExpression: (
    node: AwaitExpression,
    expression: Expression
) => AwaitExpression;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3311,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3311",
              },
              "type": "(node: AwaitExpression, expression: Expression) => AwaitExpression",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.updateBinaryExpression",
              "kind": "InterfaceMethodDeclaration",
              "name": "updateBinaryExpression",
              "signature": "updateBinaryExpression: (
    node: BinaryExpression,
    left: Expression,
    operator: BinaryOperator | BinaryOperatorToken,
    right: Expression
) => BinaryExpression;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3317,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3317",
              },
              "type": "(node: BinaryExpression, left: Expression, operator: BinaryOperator | BinaryOperatorToken, right: Expression) => BinaryExpression",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.updateBindingElement",
              "kind": "InterfaceMethodDeclaration",
              "name": "updateBindingElement",
              "signature": "updateBindingElement: (
    node: BindingElement,
    dotDotDotToken: DotDotDotToken | undefined,
    propertyName: PropertyName | undefined,
    name: BindingName,
    initializer: Expression | undefined
) => BindingElement;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3275,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3275",
              },
              "type": "(node: BindingElement, dotDotDotToken: DotDotDotToken | undefined, propertyName: PropertyName | undefined, name: BindingName, initializer: Expression | undefined) => BindingElement",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.updateBlock",
              "kind": "InterfaceMethodDeclaration",
              "name": "updateBlock",
              "signature": "updateBlock: (node: Block, statements: readonly Statement[]) => Block;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3352,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3352",
              },
              "type": "(node: Block, statements: readonly Statement[]) => Block",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.updateBreakStatement",
              "kind": "InterfaceMethodDeclaration",
              "name": "updateBreakStatement",
              "signature": "updateBreakStatement: (
    node: BreakStatement,
    label: Identifier | undefined
) => BreakStatement;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3373,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3373",
              },
              "type": "(node: BreakStatement, label: Identifier | undefined) => BreakStatement",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.updateBundle",
              "kind": "InterfaceMethodDeclaration",
              "name": "updateBundle",
              "signature": "updateBundle: (
    node: Bundle,
    sourceFiles: readonly SourceFile[],
    prepends?: readonly (UnparsedSource | InputFiles)[]
) => Bundle;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3543,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3543",
              },
              "type": "(node: Bundle, sourceFiles: readonly SourceFile[], prepends?: readonly (UnparsedSource | InputFiles)[]) => Bundle",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.updateCallChain",
              "kind": "InterfaceMethodDeclaration",
              "name": "updateCallChain",
              "signature": "updateCallChain: (
    node: CallChain,
    expression: Expression,
    questionDotToken: QuestionDotToken | undefined,
    typeArguments: readonly TypeNode[] | undefined,
    argumentsArray: readonly Expression[]
) => CallChain;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3291,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3291",
              },
              "type": "(node: CallChain, expression: Expression, questionDotToken: QuestionDotToken | undefined, typeArguments: readonly TypeNode[] | undefined, argumentsArray: readonly Expression[]) => CallChain",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.updateCallExpression",
              "kind": "InterfaceMethodDeclaration",
              "name": "updateCallExpression",
              "signature": "updateCallExpression: (
    node: CallExpression,
    expression: Expression,
    typeArguments: readonly TypeNode[] | undefined,
    argumentsArray: readonly Expression[]
) => CallExpression;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3289,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3289",
              },
              "type": "(node: CallExpression, expression: Expression, typeArguments: readonly TypeNode[] | undefined, argumentsArray: readonly Expression[]) => CallExpression",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.updateCallSignature",
              "kind": "InterfaceMethodDeclaration",
              "name": "updateCallSignature",
              "signature": "updateCallSignature: (
    node: CallSignatureDeclaration,
    typeParameters: NodeArray<TypeParameterDeclaration> | undefined,
    parameters: NodeArray<ParameterDeclaration>,
    type: TypeNode | undefined
) => CallSignatureDeclaration;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3217,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3217",
              },
              "type": "(node: CallSignatureDeclaration, typeParameters: NodeArray<TypeParameterDeclaration> | undefined, parameters: NodeArray<ParameterDeclaration>, type: TypeNode | undefined) => CallSignatureDeclaration",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.updateCaseBlock",
              "kind": "InterfaceMethodDeclaration",
              "name": "updateCaseBlock",
              "signature": "updateCaseBlock: (
    node: CaseBlock,
    clauses: readonly CaseOrDefaultClause[]
) => CaseBlock;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3406,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3406",
              },
              "type": "(node: CaseBlock, clauses: readonly CaseOrDefaultClause[]) => CaseBlock",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.updateCaseClause",
              "kind": "InterfaceMethodDeclaration",
              "name": "updateCaseClause",
              "signature": "updateCaseClause: (
    node: CaseClause,
    expression: Expression,
    statements: readonly Statement[]
) => CaseClause;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3520,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3520",
              },
              "type": "(node: CaseClause, expression: Expression, statements: readonly Statement[]) => CaseClause",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.updateCatchClause",
              "kind": "InterfaceMethodDeclaration",
              "name": "updateCatchClause",
              "signature": "updateCatchClause: (
    node: CatchClause,
    variableDeclaration: VariableDeclaration | undefined,
    block: Block
) => CatchClause;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3526,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3526",
              },
              "type": "(node: CatchClause, variableDeclaration: VariableDeclaration | undefined, block: Block) => CatchClause",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.updateClassDeclaration",
              "kind": "InterfaceMethodDeclaration",
              "name": "updateClassDeclaration",
              "signature": "updateClassDeclaration: (
    node: ClassDeclaration,
    decorators: readonly Decorator[] | undefined,
    modifiers: readonly Modifier[] | undefined,
    name: Identifier | undefined,
    typeParameters: readonly TypeParameterDeclaration[] | undefined,
    heritageClauses: readonly HeritageClause[] | undefined,
    members: readonly ClassElement[]
) => ClassDeclaration;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3394,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3394",
              },
              "type": "(node: ClassDeclaration, decorators: readonly Decorator[] | undefined, modifiers: readonly Modifier[] | undefined, name: Identifier | undefined, typeParameters: readonly TypeParameterDeclaration[] | undefined, heritageClauses: readonly HeritageClause[] | undefined, members: readonly ClassElement[]) => ClassDeclaration",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.updateClassExpression",
              "kind": "InterfaceMethodDeclaration",
              "name": "updateClassExpression",
              "signature": "updateClassExpression: (
    node: ClassExpression,
    decorators: readonly Decorator[] | undefined,
    modifiers: readonly Modifier[] | undefined,
    name: Identifier | undefined,
    typeParameters: readonly TypeParameterDeclaration[] | undefined,
    heritageClauses: readonly HeritageClause[] | undefined,
    members: readonly ClassElement[]
) => ClassExpression;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3336,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3336",
              },
              "type": "(node: ClassExpression, decorators: readonly Decorator[] | undefined, modifiers: readonly Modifier[] | undefined, name: Identifier | undefined, typeParameters: readonly TypeParameterDeclaration[] | undefined, heritageClauses: readonly HeritageClause[] | undefined, members: readonly ClassElement[]) => ClassExpression",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.updateCommaListExpression",
              "kind": "InterfaceMethodDeclaration",
              "name": "updateCommaListExpression",
              "signature": "updateCommaListExpression: (
    node: CommaListExpression,
    elements: readonly Expression[]
) => CommaListExpression;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3541,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3541",
              },
              "type": "(node: CommaListExpression, elements: readonly Expression[]) => CommaListExpression",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.updateComputedPropertyName",
              "kind": "InterfaceMethodDeclaration",
              "name": "updateComputedPropertyName",
              "signature": "updateComputedPropertyName: (
    node: ComputedPropertyName,
    expression: Expression
) => ComputedPropertyName;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3195,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3195",
              },
              "type": "(node: ComputedPropertyName, expression: Expression) => ComputedPropertyName",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.updateConditionalExpression",
              "kind": "InterfaceMethodDeclaration",
              "name": "updateConditionalExpression",
              "signature": "updateConditionalExpression: (
    node: ConditionalExpression,
    condition: Expression,
    questionToken: QuestionToken,
    whenTrue: Expression,
    colonToken: ColonToken,
    whenFalse: Expression
) => ConditionalExpression;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3319,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3319",
              },
              "type": "(node: ConditionalExpression, condition: Expression, questionToken: QuestionToken, whenTrue: Expression, colonToken: ColonToken, whenFalse: Expression) => ConditionalExpression",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.updateConditionalTypeNode",
              "kind": "InterfaceMethodDeclaration",
              "name": "updateConditionalTypeNode",
              "signature": "updateConditionalTypeNode: (
    node: ConditionalTypeNode,
    checkType: TypeNode,
    extendsType: TypeNode,
    trueType: TypeNode,
    falseType: TypeNode
) => ConditionalTypeNode;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3252,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3252",
              },
              "type": "(node: ConditionalTypeNode, checkType: TypeNode, extendsType: TypeNode, trueType: TypeNode, falseType: TypeNode) => ConditionalTypeNode",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.updateConstructorDeclaration",
              "kind": "InterfaceMethodDeclaration",
              "name": "updateConstructorDeclaration",
              "signature": "updateConstructorDeclaration: (
    node: ConstructorDeclaration,
    decorators: readonly Decorator[] | undefined,
    modifiers: readonly Modifier[] | undefined,
    parameters: readonly ParameterDeclaration[],
    body: Block | undefined
) => ConstructorDeclaration;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3211,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3211",
              },
              "type": "(node: ConstructorDeclaration, decorators: readonly Decorator[] | undefined, modifiers: readonly Modifier[] | undefined, parameters: readonly ParameterDeclaration[], body: Block | undefined) => ConstructorDeclaration",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.updateConstructorTypeNode",
              "kind": "InterfaceMethodDeclaration",
              "name": "updateConstructorTypeNode",
              "signature": "updateConstructorTypeNode: (
    node: ConstructorTypeNode,
    typeParameters: NodeArray<TypeParameterDeclaration> | undefined,
    parameters: NodeArray<ParameterDeclaration>,
    type: TypeNode
) => ConstructorTypeNode;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3232,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3232",
              },
              "type": "(node: ConstructorTypeNode, typeParameters: NodeArray<TypeParameterDeclaration> | undefined, parameters: NodeArray<ParameterDeclaration>, type: TypeNode) => ConstructorTypeNode",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.updateConstructSignature",
              "kind": "InterfaceMethodDeclaration",
              "name": "updateConstructSignature",
              "signature": "updateConstructSignature: (
    node: ConstructSignatureDeclaration,
    typeParameters: NodeArray<TypeParameterDeclaration> | undefined,
    parameters: NodeArray<ParameterDeclaration>,
    type: TypeNode | undefined
) => ConstructSignatureDeclaration;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3219,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3219",
              },
              "type": "(node: ConstructSignatureDeclaration, typeParameters: NodeArray<TypeParameterDeclaration> | undefined, parameters: NodeArray<ParameterDeclaration>, type: TypeNode | undefined) => ConstructSignatureDeclaration",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.updateContinueStatement",
              "kind": "InterfaceMethodDeclaration",
              "name": "updateContinueStatement",
              "signature": "updateContinueStatement: (
    node: ContinueStatement,
    label: Identifier | undefined
) => ContinueStatement;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3371,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3371",
              },
              "type": "(node: ContinueStatement, label: Identifier | undefined) => ContinueStatement",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.updateDecorator",
              "kind": "InterfaceMethodDeclaration",
              "name": "updateDecorator",
              "signature": "updateDecorator: (node: Decorator, expression: Expression) => Decorator;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3201,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3201",
              },
              "type": "(node: Decorator, expression: Expression) => Decorator",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.updateDefaultClause",
              "kind": "InterfaceMethodDeclaration",
              "name": "updateDefaultClause",
              "signature": "updateDefaultClause: (
    node: DefaultClause,
    statements: readonly Statement[]
) => DefaultClause;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3522,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3522",
              },
              "type": "(node: DefaultClause, statements: readonly Statement[]) => DefaultClause",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.updateDeleteExpression",
              "kind": "InterfaceMethodDeclaration",
              "name": "updateDeleteExpression",
              "signature": "updateDeleteExpression: (
    node: DeleteExpression,
    expression: Expression
) => DeleteExpression;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3305,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3305",
              },
              "type": "(node: DeleteExpression, expression: Expression) => DeleteExpression",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.updateDoStatement",
              "kind": "InterfaceMethodDeclaration",
              "name": "updateDoStatement",
              "signature": "updateDoStatement: (
    node: DoStatement,
    statement: Statement,
    expression: Expression
) => DoStatement;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3361,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3361",
              },
              "type": "(node: DoStatement, statement: Statement, expression: Expression) => DoStatement",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.updateElementAccessChain",
              "kind": "InterfaceMethodDeclaration",
              "name": "updateElementAccessChain",
              "signature": "updateElementAccessChain: (
    node: ElementAccessChain,
    expression: Expression,
    questionDotToken: QuestionDotToken | undefined,
    argumentExpression: Expression
) => ElementAccessChain;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3287,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3287",
              },
              "type": "(node: ElementAccessChain, expression: Expression, questionDotToken: QuestionDotToken | undefined, argumentExpression: Expression) => ElementAccessChain",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.updateElementAccessExpression",
              "kind": "InterfaceMethodDeclaration",
              "name": "updateElementAccessExpression",
              "signature": "updateElementAccessExpression: (
    node: ElementAccessExpression,
    expression: Expression,
    argumentExpression: Expression
) => ElementAccessExpression;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3285,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3285",
              },
              "type": "(node: ElementAccessExpression, expression: Expression, argumentExpression: Expression) => ElementAccessExpression",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.updateEnumDeclaration",
              "kind": "InterfaceMethodDeclaration",
              "name": "updateEnumDeclaration",
              "signature": "updateEnumDeclaration: (
    node: EnumDeclaration,
    decorators: readonly Decorator[] | undefined,
    modifiers: readonly Modifier[] | undefined,
    name: Identifier,
    members: readonly EnumMember[]
) => EnumDeclaration;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3400,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3400",
              },
              "type": "(node: EnumDeclaration, decorators: readonly Decorator[] | undefined, modifiers: readonly Modifier[] | undefined, name: Identifier, members: readonly EnumMember[]) => EnumDeclaration",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.updateEnumMember",
              "kind": "InterfaceMethodDeclaration",
              "name": "updateEnumMember",
              "signature": "updateEnumMember: (
    node: EnumMember,
    name: PropertyName,
    initializer: Expression | undefined
) => EnumMember;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3534,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3534",
              },
              "type": "(node: EnumMember, name: PropertyName, initializer: Expression | undefined) => EnumMember",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.updateExportAssignment",
              "kind": "InterfaceMethodDeclaration",
              "name": "updateExportAssignment",
              "signature": "updateExportAssignment: (
    node: ExportAssignment,
    decorators: readonly Decorator[] | undefined,
    modifiers: readonly Modifier[] | undefined,
    expression: Expression
) => ExportAssignment;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3424,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3424",
              },
              "type": "(node: ExportAssignment, decorators: readonly Decorator[] | undefined, modifiers: readonly Modifier[] | undefined, expression: Expression) => ExportAssignment",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.updateExportDeclaration",
              "kind": "InterfaceMethodDeclaration",
              "name": "updateExportDeclaration",
              "signature": "updateExportDeclaration: (
    node: ExportDeclaration,
    decorators: readonly Decorator[] | undefined,
    modifiers: readonly Modifier[] | undefined,
    isTypeOnly: boolean,
    exportClause: NamedExportBindings | undefined,
    moduleSpecifier: Expression | undefined
) => ExportDeclaration;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3426,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3426",
              },
              "type": "(node: ExportDeclaration, decorators: readonly Decorator[] | undefined, modifiers: readonly Modifier[] | undefined, isTypeOnly: boolean, exportClause: NamedExportBindings | undefined, moduleSpecifier: Expression | undefined) => ExportDeclaration",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.updateExportSpecifier",
              "kind": "InterfaceMethodDeclaration",
              "name": "updateExportSpecifier",
              "signature": "updateExportSpecifier: (
    node: ExportSpecifier,
    propertyName: Identifier | undefined,
    name: Identifier
) => ExportSpecifier;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3430,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3430",
              },
              "type": "(node: ExportSpecifier, propertyName: Identifier | undefined, name: Identifier) => ExportSpecifier",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.updateExpressionStatement",
              "kind": "InterfaceMethodDeclaration",
              "name": "updateExpressionStatement",
              "signature": "updateExpressionStatement: (
    node: ExpressionStatement,
    expression: Expression
) => ExpressionStatement;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3357,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3357",
              },
              "type": "(node: ExpressionStatement, expression: Expression) => ExpressionStatement",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.updateExpressionWithTypeArguments",
              "kind": "InterfaceMethodDeclaration",
              "name": "updateExpressionWithTypeArguments",
              "signature": "updateExpressionWithTypeArguments: (
    node: ExpressionWithTypeArguments,
    expression: Expression,
    typeArguments: readonly TypeNode[] | undefined
) => ExpressionWithTypeArguments;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3339,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3339",
              },
              "type": "(node: ExpressionWithTypeArguments, expression: Expression, typeArguments: readonly TypeNode[] | undefined) => ExpressionWithTypeArguments",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.updateExternalModuleReference",
              "kind": "InterfaceMethodDeclaration",
              "name": "updateExternalModuleReference",
              "signature": "updateExternalModuleReference: (
    node: ExternalModuleReference,
    expression: Expression
) => ExternalModuleReference;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3432,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3432",
              },
              "type": "(node: ExternalModuleReference, expression: Expression) => ExternalModuleReference",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.updateForInStatement",
              "kind": "InterfaceMethodDeclaration",
              "name": "updateForInStatement",
              "signature": "updateForInStatement: (
    node: ForInStatement,
    initializer: ForInitializer,
    expression: Expression,
    statement: Statement
) => ForInStatement;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3367,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3367",
              },
              "type": "(node: ForInStatement, initializer: ForInitializer, expression: Expression, statement: Statement) => ForInStatement",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.updateForOfStatement",
              "kind": "InterfaceMethodDeclaration",
              "name": "updateForOfStatement",
              "signature": "updateForOfStatement: (
    node: ForOfStatement,
    awaitModifier: AwaitKeyword | undefined,
    initializer: ForInitializer,
    expression: Expression,
    statement: Statement
) => ForOfStatement;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3369,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3369",
              },
              "type": "(node: ForOfStatement, awaitModifier: AwaitKeyword | undefined, initializer: ForInitializer, expression: Expression, statement: Statement) => ForOfStatement",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.updateForStatement",
              "kind": "InterfaceMethodDeclaration",
              "name": "updateForStatement",
              "signature": "updateForStatement: (
    node: ForStatement,
    initializer: ForInitializer | undefined,
    condition: Expression | undefined,
    incrementor: Expression | undefined,
    statement: Statement
) => ForStatement;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3365,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3365",
              },
              "type": "(node: ForStatement, initializer: ForInitializer | undefined, condition: Expression | undefined, incrementor: Expression | undefined, statement: Statement) => ForStatement",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.updateFunctionDeclaration",
              "kind": "InterfaceMethodDeclaration",
              "name": "updateFunctionDeclaration",
              "signature": "updateFunctionDeclaration: (
    node: FunctionDeclaration,
    decorators: readonly Decorator[] | undefined,
    modifiers: readonly Modifier[] | undefined,
    asteriskToken: AsteriskToken | undefined,
    name: Identifier | undefined,
    typeParameters: readonly TypeParameterDeclaration[] | undefined,
    parameters: readonly ParameterDeclaration[],
    type: TypeNode | undefined,
    body: Block | undefined
) => FunctionDeclaration;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3392,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3392",
              },
              "type": "(node: FunctionDeclaration, decorators: readonly Decorator[] | undefined, modifiers: readonly Modifier[] | undefined, asteriskToken: AsteriskToken | undefined, name: Identifier | undefined, typeParameters: readonly TypeParameterDeclaration[] | undefined, parameters: readonly ParameterDeclaration[], type: TypeNode | undefined, body: Block | undefined) => FunctionDeclaration",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.updateFunctionExpression",
              "kind": "InterfaceMethodDeclaration",
              "name": "updateFunctionExpression",
              "signature": "updateFunctionExpression: (
    node: FunctionExpression,
    modifiers: readonly Modifier[] | undefined,
    asteriskToken: AsteriskToken | undefined,
    name: Identifier | undefined,
    typeParameters: readonly TypeParameterDeclaration[] | undefined,
    parameters: readonly ParameterDeclaration[],
    type: TypeNode | undefined,
    body: Block
) => FunctionExpression;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3301,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3301",
              },
              "type": "(node: FunctionExpression, modifiers: readonly Modifier[] | undefined, asteriskToken: AsteriskToken | undefined, name: Identifier | undefined, typeParameters: readonly TypeParameterDeclaration[] | undefined, parameters: readonly ParameterDeclaration[], type: TypeNode | undefined, body: Block) => FunctionExpression",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.updateFunctionTypeNode",
              "kind": "InterfaceMethodDeclaration",
              "name": "updateFunctionTypeNode",
              "signature": "updateFunctionTypeNode: (
    node: FunctionTypeNode,
    typeParameters: NodeArray<TypeParameterDeclaration> | undefined,
    parameters: NodeArray<ParameterDeclaration>,
    type: TypeNode
) => FunctionTypeNode;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3230,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3230",
              },
              "type": "(node: FunctionTypeNode, typeParameters: NodeArray<TypeParameterDeclaration> | undefined, parameters: NodeArray<ParameterDeclaration>, type: TypeNode) => FunctionTypeNode",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.updateGetAccessorDeclaration",
              "kind": "InterfaceMethodDeclaration",
              "name": "updateGetAccessorDeclaration",
              "signature": "updateGetAccessorDeclaration: (
    node: GetAccessorDeclaration,
    decorators: readonly Decorator[] | undefined,
    modifiers: readonly Modifier[] | undefined,
    name: PropertyName,
    parameters: readonly ParameterDeclaration[],
    type: TypeNode | undefined,
    body: Block | undefined
) => GetAccessorDeclaration;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3213,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3213",
              },
              "type": "(node: GetAccessorDeclaration, decorators: readonly Decorator[] | undefined, modifiers: readonly Modifier[] | undefined, name: PropertyName, parameters: readonly ParameterDeclaration[], type: TypeNode | undefined, body: Block | undefined) => GetAccessorDeclaration",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.updateHeritageClause",
              "kind": "InterfaceMethodDeclaration",
              "name": "updateHeritageClause",
              "signature": "updateHeritageClause: (
    node: HeritageClause,
    types: readonly ExpressionWithTypeArguments[]
) => HeritageClause;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3524,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3524",
              },
              "type": "(node: HeritageClause, types: readonly ExpressionWithTypeArguments[]) => HeritageClause",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.updateIfStatement",
              "kind": "InterfaceMethodDeclaration",
              "name": "updateIfStatement",
              "signature": "updateIfStatement: (
    node: IfStatement,
    expression: Expression,
    thenStatement: Statement,
    elseStatement: Statement | undefined
) => IfStatement;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3359,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3359",
              },
              "type": "(node: IfStatement, expression: Expression, thenStatement: Statement, elseStatement: Statement | undefined) => IfStatement",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.updateImportClause",
              "kind": "InterfaceMethodDeclaration",
              "name": "updateImportClause",
              "signature": "updateImportClause: (
    node: ImportClause,
    isTypeOnly: boolean,
    name: Identifier | undefined,
    namedBindings: NamedImportBindings | undefined
) => ImportClause;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3414,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3414",
              },
              "type": "(node: ImportClause, isTypeOnly: boolean, name: Identifier | undefined, namedBindings: NamedImportBindings | undefined) => ImportClause",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.updateImportDeclaration",
              "kind": "InterfaceMethodDeclaration",
              "name": "updateImportDeclaration",
              "signature": "updateImportDeclaration: (
    node: ImportDeclaration,
    decorators: readonly Decorator[] | undefined,
    modifiers: readonly Modifier[] | undefined,
    importClause: ImportClause | undefined,
    moduleSpecifier: Expression
) => ImportDeclaration;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3412,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3412",
              },
              "type": "(node: ImportDeclaration, decorators: readonly Decorator[] | undefined, modifiers: readonly Modifier[] | undefined, importClause: ImportClause | undefined, moduleSpecifier: Expression) => ImportDeclaration",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.updateImportEqualsDeclaration",
              "kind": "InterfaceMethodDeclaration",
              "name": "updateImportEqualsDeclaration",
              "signature": "updateImportEqualsDeclaration: (
    node: ImportEqualsDeclaration,
    decorators: readonly Decorator[] | undefined,
    modifiers: readonly Modifier[] | undefined,
    name: Identifier,
    moduleReference: ModuleReference
) => ImportEqualsDeclaration;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3410,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3410",
              },
              "type": "(node: ImportEqualsDeclaration, decorators: readonly Decorator[] | undefined, modifiers: readonly Modifier[] | undefined, name: Identifier, moduleReference: ModuleReference) => ImportEqualsDeclaration",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.updateImportSpecifier",
              "kind": "InterfaceMethodDeclaration",
              "name": "updateImportSpecifier",
              "signature": "updateImportSpecifier: (
    node: ImportSpecifier,
    propertyName: Identifier | undefined,
    name: Identifier
) => ImportSpecifier;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3422,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3422",
              },
              "type": "(node: ImportSpecifier, propertyName: Identifier | undefined, name: Identifier) => ImportSpecifier",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.updateImportTypeNode",
              "kind": "InterfaceMethodDeclaration",
              "name": "updateImportTypeNode",
              "signature": "updateImportTypeNode: (
    node: ImportTypeNode,
    argument: TypeNode,
    qualifier: EntityName | undefined,
    typeArguments: readonly TypeNode[] | undefined,
    isTypeOf?: boolean
) => ImportTypeNode;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3256,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3256",
              },
              "type": "(node: ImportTypeNode, argument: TypeNode, qualifier: EntityName | undefined, typeArguments: readonly TypeNode[] | undefined, isTypeOf?: boolean) => ImportTypeNode",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.updateIndexedAccessTypeNode",
              "kind": "InterfaceMethodDeclaration",
              "name": "updateIndexedAccessTypeNode",
              "signature": "updateIndexedAccessTypeNode: (
    node: IndexedAccessTypeNode,
    objectType: TypeNode,
    indexType: TypeNode
) => IndexedAccessTypeNode;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3263,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3263",
              },
              "type": "(node: IndexedAccessTypeNode, objectType: TypeNode, indexType: TypeNode) => IndexedAccessTypeNode",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.updateIndexSignature",
              "kind": "InterfaceMethodDeclaration",
              "name": "updateIndexSignature",
              "signature": "updateIndexSignature: (
    node: IndexSignatureDeclaration,
    decorators: readonly Decorator[] | undefined,
    modifiers: readonly Modifier[] | undefined,
    parameters: readonly ParameterDeclaration[],
    type: TypeNode
) => IndexSignatureDeclaration;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3221,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3221",
              },
              "type": "(node: IndexSignatureDeclaration, decorators: readonly Decorator[] | undefined, modifiers: readonly Modifier[] | undefined, parameters: readonly ParameterDeclaration[], type: TypeNode) => IndexSignatureDeclaration",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.updateInferTypeNode",
              "kind": "InterfaceMethodDeclaration",
              "name": "updateInferTypeNode",
              "signature": "updateInferTypeNode: (
    node: InferTypeNode,
    typeParameter: TypeParameterDeclaration
) => InferTypeNode;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3254,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3254",
              },
              "type": "(node: InferTypeNode, typeParameter: TypeParameterDeclaration) => InferTypeNode",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.updateInterfaceDeclaration",
              "kind": "InterfaceMethodDeclaration",
              "name": "updateInterfaceDeclaration",
              "signature": "updateInterfaceDeclaration: (
    node: InterfaceDeclaration,
    decorators: readonly Decorator[] | undefined,
    modifiers: readonly Modifier[] | undefined,
    name: Identifier,
    typeParameters: readonly TypeParameterDeclaration[] | undefined,
    heritageClauses: readonly HeritageClause[] | undefined,
    members: readonly TypeElement[]
) => InterfaceDeclaration;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3396,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3396",
              },
              "type": "(node: InterfaceDeclaration, decorators: readonly Decorator[] | undefined, modifiers: readonly Modifier[] | undefined, name: Identifier, typeParameters: readonly TypeParameterDeclaration[] | undefined, heritageClauses: readonly HeritageClause[] | undefined, members: readonly TypeElement[]) => InterfaceDeclaration",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.updateIntersectionTypeNode",
              "kind": "InterfaceMethodDeclaration",
              "name": "updateIntersectionTypeNode",
              "signature": "updateIntersectionTypeNode: (
    node: IntersectionTypeNode,
    types: NodeArray<TypeNode>
) => IntersectionTypeNode;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3250,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3250",
              },
              "type": "(node: IntersectionTypeNode, types: NodeArray<TypeNode>) => IntersectionTypeNode",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.updateJSDocAugmentsTag",
              "kind": "InterfaceMethodDeclaration",
              "name": "updateJSDocAugmentsTag",
              "signature": "updateJSDocAugmentsTag: (
    node: JSDocAugmentsTag,
    tagName: Identifier | undefined,
    className: JSDocAugmentsTag['class'],
    comment: string | undefined
) => JSDocAugmentsTag;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3476,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3476",
              },
              "type": "(node: JSDocAugmentsTag, tagName: Identifier | undefined, className: JSDocAugmentsTag[\\"class\\"], comment: string | undefined) => JSDocAugmentsTag",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.updateJSDocAuthorTag",
              "kind": "InterfaceMethodDeclaration",
              "name": "updateJSDocAuthorTag",
              "signature": "updateJSDocAuthorTag: (
    node: JSDocAuthorTag,
    tagName: Identifier | undefined,
    comment: string | undefined
) => JSDocAuthorTag;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3480,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3480",
              },
              "type": "(node: JSDocAuthorTag, tagName: Identifier | undefined, comment: string | undefined) => JSDocAuthorTag",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.updateJSDocCallbackTag",
              "kind": "InterfaceMethodDeclaration",
              "name": "updateJSDocCallbackTag",
              "signature": "updateJSDocCallbackTag: (
    node: JSDocCallbackTag,
    tagName: Identifier | undefined,
    typeExpression: JSDocSignature,
    fullName: Identifier | JSDocNamespaceDeclaration | undefined,
    comment: string | undefined
) => JSDocCallbackTag;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3474,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3474",
              },
              "type": "(node: JSDocCallbackTag, tagName: Identifier | undefined, typeExpression: JSDocSignature, fullName: Identifier | JSDocNamespaceDeclaration | undefined, comment: string | undefined) => JSDocCallbackTag",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.updateJSDocClassTag",
              "kind": "InterfaceMethodDeclaration",
              "name": "updateJSDocClassTag",
              "signature": "updateJSDocClassTag: (
    node: JSDocClassTag,
    tagName: Identifier | undefined,
    comment: string | undefined
) => JSDocClassTag;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3482,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3482",
              },
              "type": "(node: JSDocClassTag, tagName: Identifier | undefined, comment: string | undefined) => JSDocClassTag",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.updateJSDocComment",
              "kind": "InterfaceMethodDeclaration",
              "name": "updateJSDocComment",
              "signature": "updateJSDocComment: (
    node: JSDoc,
    comment: string | undefined,
    tags: readonly JSDocTag[] | undefined
) => JSDoc;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3496,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3496",
              },
              "type": "(node: JSDoc, comment: string | undefined, tags: readonly JSDocTag[] | undefined) => JSDoc",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.updateJSDocDeprecatedTag",
              "kind": "InterfaceMethodDeclaration",
              "name": "updateJSDocDeprecatedTag",
              "signature": "updateJSDocDeprecatedTag: (
    node: JSDocDeprecatedTag,
    tagName: Identifier,
    comment?: string
) => JSDocDeprecatedTag;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3494,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3494",
              },
              "type": "(node: JSDocDeprecatedTag, tagName: Identifier, comment?: string) => JSDocDeprecatedTag",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.updateJSDocEnumTag",
              "kind": "InterfaceMethodDeclaration",
              "name": "updateJSDocEnumTag",
              "signature": "updateJSDocEnumTag: (
    node: JSDocEnumTag,
    tagName: Identifier | undefined,
    typeExpression: JSDocTypeExpression,
    comment: string | undefined
) => JSDocEnumTag;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3472,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3472",
              },
              "type": "(node: JSDocEnumTag, tagName: Identifier | undefined, typeExpression: JSDocTypeExpression, comment: string | undefined) => JSDocEnumTag",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.updateJSDocFunctionType",
              "kind": "InterfaceMethodDeclaration",
              "name": "updateJSDocFunctionType",
              "signature": "updateJSDocFunctionType: (
    node: JSDocFunctionType,
    parameters: readonly ParameterDeclaration[],
    type: TypeNode | undefined
) => JSDocFunctionType;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3442,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3442",
              },
              "type": "(node: JSDocFunctionType, parameters: readonly ParameterDeclaration[], type: TypeNode | undefined) => JSDocFunctionType",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.updateJSDocImplementsTag",
              "kind": "InterfaceMethodDeclaration",
              "name": "updateJSDocImplementsTag",
              "signature": "updateJSDocImplementsTag: (
    node: JSDocImplementsTag,
    tagName: Identifier | undefined,
    className: JSDocImplementsTag['class'],
    comment: string | undefined
) => JSDocImplementsTag;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3478,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3478",
              },
              "type": "(node: JSDocImplementsTag, tagName: Identifier | undefined, className: JSDocImplementsTag[\\"class\\"], comment: string | undefined) => JSDocImplementsTag",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.updateJSDocNamepathType",
              "kind": "InterfaceMethodDeclaration",
              "name": "updateJSDocNamepathType",
              "signature": "updateJSDocNamepathType: (
    node: JSDocNamepathType,
    type: TypeNode
) => JSDocNamepathType;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3446,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3446",
              },
              "type": "(node: JSDocNamepathType, type: TypeNode) => JSDocNamepathType",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.updateJSDocNameReference",
              "kind": "InterfaceMethodDeclaration",
              "name": "updateJSDocNameReference",
              "signature": "updateJSDocNameReference: (
    node: JSDocNameReference,
    name: EntityName
) => JSDocNameReference;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3450,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3450",
              },
              "type": "(node: JSDocNameReference, name: EntityName) => JSDocNameReference",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.updateJSDocNonNullableType",
              "kind": "InterfaceMethodDeclaration",
              "name": "updateJSDocNonNullableType",
              "signature": "updateJSDocNonNullableType: (
    node: JSDocNonNullableType,
    type: TypeNode
) => JSDocNonNullableType;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3436,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3436",
              },
              "type": "(node: JSDocNonNullableType, type: TypeNode) => JSDocNonNullableType",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.updateJSDocNullableType",
              "kind": "InterfaceMethodDeclaration",
              "name": "updateJSDocNullableType",
              "signature": "updateJSDocNullableType: (
    node: JSDocNullableType,
    type: TypeNode
) => JSDocNullableType;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3438,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3438",
              },
              "type": "(node: JSDocNullableType, type: TypeNode) => JSDocNullableType",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.updateJSDocOptionalType",
              "kind": "InterfaceMethodDeclaration",
              "name": "updateJSDocOptionalType",
              "signature": "updateJSDocOptionalType: (
    node: JSDocOptionalType,
    type: TypeNode
) => JSDocOptionalType;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3440,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3440",
              },
              "type": "(node: JSDocOptionalType, type: TypeNode) => JSDocOptionalType",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.updateJSDocParameterTag",
              "kind": "InterfaceMethodDeclaration",
              "name": "updateJSDocParameterTag",
              "signature": "updateJSDocParameterTag: (
    node: JSDocParameterTag,
    tagName: Identifier | undefined,
    name: EntityName,
    isBracketed: boolean,
    typeExpression: JSDocTypeExpression | undefined,
    isNameFirst: boolean,
    comment: string | undefined
) => JSDocParameterTag;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3460,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3460",
              },
              "type": "(node: JSDocParameterTag, tagName: Identifier | undefined, name: EntityName, isBracketed: boolean, typeExpression: JSDocTypeExpression | undefined, isNameFirst: boolean, comment: string | undefined) => JSDocParameterTag",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.updateJSDocPrivateTag",
              "kind": "InterfaceMethodDeclaration",
              "name": "updateJSDocPrivateTag",
              "signature": "updateJSDocPrivateTag: (
    node: JSDocPrivateTag,
    tagName: Identifier | undefined,
    comment: string | undefined
) => JSDocPrivateTag;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3486,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3486",
              },
              "type": "(node: JSDocPrivateTag, tagName: Identifier | undefined, comment: string | undefined) => JSDocPrivateTag",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.updateJSDocPropertyTag",
              "kind": "InterfaceMethodDeclaration",
              "name": "updateJSDocPropertyTag",
              "signature": "updateJSDocPropertyTag: (
    node: JSDocPropertyTag,
    tagName: Identifier | undefined,
    name: EntityName,
    isBracketed: boolean,
    typeExpression: JSDocTypeExpression | undefined,
    isNameFirst: boolean,
    comment: string | undefined
) => JSDocPropertyTag;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3462,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3462",
              },
              "type": "(node: JSDocPropertyTag, tagName: Identifier | undefined, name: EntityName, isBracketed: boolean, typeExpression: JSDocTypeExpression | undefined, isNameFirst: boolean, comment: string | undefined) => JSDocPropertyTag",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.updateJSDocProtectedTag",
              "kind": "InterfaceMethodDeclaration",
              "name": "updateJSDocProtectedTag",
              "signature": "updateJSDocProtectedTag: (
    node: JSDocProtectedTag,
    tagName: Identifier | undefined,
    comment: string | undefined
) => JSDocProtectedTag;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3488,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3488",
              },
              "type": "(node: JSDocProtectedTag, tagName: Identifier | undefined, comment: string | undefined) => JSDocProtectedTag",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.updateJSDocPublicTag",
              "kind": "InterfaceMethodDeclaration",
              "name": "updateJSDocPublicTag",
              "signature": "updateJSDocPublicTag: (
    node: JSDocPublicTag,
    tagName: Identifier | undefined,
    comment: string | undefined
) => JSDocPublicTag;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3484,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3484",
              },
              "type": "(node: JSDocPublicTag, tagName: Identifier | undefined, comment: string | undefined) => JSDocPublicTag",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.updateJSDocReadonlyTag",
              "kind": "InterfaceMethodDeclaration",
              "name": "updateJSDocReadonlyTag",
              "signature": "updateJSDocReadonlyTag: (
    node: JSDocReadonlyTag,
    tagName: Identifier | undefined,
    comment: string | undefined
) => JSDocReadonlyTag;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3490,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3490",
              },
              "type": "(node: JSDocReadonlyTag, tagName: Identifier | undefined, comment: string | undefined) => JSDocReadonlyTag",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.updateJSDocReturnTag",
              "kind": "InterfaceMethodDeclaration",
              "name": "updateJSDocReturnTag",
              "signature": "updateJSDocReturnTag: (
    node: JSDocReturnTag,
    tagName: Identifier | undefined,
    typeExpression: JSDocTypeExpression | undefined,
    comment: string | undefined
) => JSDocReturnTag;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3468,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3468",
              },
              "type": "(node: JSDocReturnTag, tagName: Identifier | undefined, typeExpression: JSDocTypeExpression | undefined, comment: string | undefined) => JSDocReturnTag",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.updateJSDocSeeTag",
              "kind": "InterfaceMethodDeclaration",
              "name": "updateJSDocSeeTag",
              "signature": "updateJSDocSeeTag: (
    node: JSDocSeeTag,
    tagName: Identifier | undefined,
    nameExpression: JSDocNameReference | undefined,
    comment?: string
) => JSDocSeeTag;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3466,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3466",
              },
              "type": "(node: JSDocSeeTag, tagName: Identifier | undefined, nameExpression: JSDocNameReference | undefined, comment?: string) => JSDocSeeTag",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.updateJSDocSignature",
              "kind": "InterfaceMethodDeclaration",
              "name": "updateJSDocSignature",
              "signature": "updateJSDocSignature: (
    node: JSDocSignature,
    typeParameters: readonly JSDocTemplateTag[] | undefined,
    parameters: readonly JSDocParameterTag[],
    type: JSDocReturnTag | undefined
) => JSDocSignature;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3454,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3454",
              },
              "type": "(node: JSDocSignature, typeParameters: readonly JSDocTemplateTag[] | undefined, parameters: readonly JSDocParameterTag[], type: JSDocReturnTag | undefined) => JSDocSignature",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.updateJSDocTemplateTag",
              "kind": "InterfaceMethodDeclaration",
              "name": "updateJSDocTemplateTag",
              "signature": "updateJSDocTemplateTag: (
    node: JSDocTemplateTag,
    tagName: Identifier | undefined,
    constraint: JSDocTypeExpression | undefined,
    typeParameters: readonly TypeParameterDeclaration[],
    comment: string | undefined
) => JSDocTemplateTag;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3456,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3456",
              },
              "type": "(node: JSDocTemplateTag, tagName: Identifier | undefined, constraint: JSDocTypeExpression | undefined, typeParameters: readonly TypeParameterDeclaration[], comment: string | undefined) => JSDocTemplateTag",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.updateJSDocThisTag",
              "kind": "InterfaceMethodDeclaration",
              "name": "updateJSDocThisTag",
              "signature": "updateJSDocThisTag: (
    node: JSDocThisTag,
    tagName: Identifier | undefined,
    typeExpression: JSDocTypeExpression | undefined,
    comment: string | undefined
) => JSDocThisTag;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3470,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3470",
              },
              "type": "(node: JSDocThisTag, tagName: Identifier | undefined, typeExpression: JSDocTypeExpression | undefined, comment: string | undefined) => JSDocThisTag",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.updateJSDocTypedefTag",
              "kind": "InterfaceMethodDeclaration",
              "name": "updateJSDocTypedefTag",
              "signature": "updateJSDocTypedefTag: (
    node: JSDocTypedefTag,
    tagName: Identifier | undefined,
    typeExpression: JSDocTypeExpression | JSDocTypeLiteral | undefined,
    fullName: Identifier | JSDocNamespaceDeclaration | undefined,
    comment: string | undefined
) => JSDocTypedefTag;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3458,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3458",
              },
              "type": "(node: JSDocTypedefTag, tagName: Identifier | undefined, typeExpression: JSDocTypeExpression | JSDocTypeLiteral | undefined, fullName: Identifier | JSDocNamespaceDeclaration | undefined, comment: string | undefined) => JSDocTypedefTag",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.updateJSDocTypeExpression",
              "kind": "InterfaceMethodDeclaration",
              "name": "updateJSDocTypeExpression",
              "signature": "updateJSDocTypeExpression: (
    node: JSDocTypeExpression,
    type: TypeNode
) => JSDocTypeExpression;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3448,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3448",
              },
              "type": "(node: JSDocTypeExpression, type: TypeNode) => JSDocTypeExpression",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.updateJSDocTypeLiteral",
              "kind": "InterfaceMethodDeclaration",
              "name": "updateJSDocTypeLiteral",
              "signature": "updateJSDocTypeLiteral: (
    node: JSDocTypeLiteral,
    jsDocPropertyTags: readonly JSDocPropertyLikeTag[] | undefined,
    isArrayType: boolean | undefined
) => JSDocTypeLiteral;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3452,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3452",
              },
              "type": "(node: JSDocTypeLiteral, jsDocPropertyTags: readonly JSDocPropertyLikeTag[] | undefined, isArrayType: boolean | undefined) => JSDocTypeLiteral",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.updateJSDocTypeTag",
              "kind": "InterfaceMethodDeclaration",
              "name": "updateJSDocTypeTag",
              "signature": "updateJSDocTypeTag: (
    node: JSDocTypeTag,
    tagName: Identifier | undefined,
    typeExpression: JSDocTypeExpression,
    comment: string | undefined
) => JSDocTypeTag;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3464,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3464",
              },
              "type": "(node: JSDocTypeTag, tagName: Identifier | undefined, typeExpression: JSDocTypeExpression, comment: string | undefined) => JSDocTypeTag",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.updateJSDocUnknownTag",
              "kind": "InterfaceMethodDeclaration",
              "name": "updateJSDocUnknownTag",
              "signature": "updateJSDocUnknownTag: (
    node: JSDocUnknownTag,
    tagName: Identifier,
    comment: string | undefined
) => JSDocUnknownTag;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3492,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3492",
              },
              "type": "(node: JSDocUnknownTag, tagName: Identifier, comment: string | undefined) => JSDocUnknownTag",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.updateJSDocVariadicType",
              "kind": "InterfaceMethodDeclaration",
              "name": "updateJSDocVariadicType",
              "signature": "updateJSDocVariadicType: (
    node: JSDocVariadicType,
    type: TypeNode
) => JSDocVariadicType;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3444,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3444",
              },
              "type": "(node: JSDocVariadicType, type: TypeNode) => JSDocVariadicType",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.updateJsxAttribute",
              "kind": "InterfaceMethodDeclaration",
              "name": "updateJsxAttribute",
              "signature": "updateJsxAttribute: (
    node: JsxAttribute,
    name: Identifier,
    initializer: StringLiteral | JsxExpression | undefined
) => JsxAttribute;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3512,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3512",
              },
              "type": "(node: JsxAttribute, name: Identifier, initializer: StringLiteral | JsxExpression | undefined) => JsxAttribute",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.updateJsxAttributes",
              "kind": "InterfaceMethodDeclaration",
              "name": "updateJsxAttributes",
              "signature": "updateJsxAttributes: (
    node: JsxAttributes,
    properties: readonly JsxAttributeLike[]
) => JsxAttributes;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3514,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3514",
              },
              "type": "(node: JsxAttributes, properties: readonly JsxAttributeLike[]) => JsxAttributes",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.updateJsxClosingElement",
              "kind": "InterfaceMethodDeclaration",
              "name": "updateJsxClosingElement",
              "signature": "updateJsxClosingElement: (
    node: JsxClosingElement,
    tagName: JsxTagNameExpression
) => JsxClosingElement;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3504,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3504",
              },
              "type": "(node: JsxClosingElement, tagName: JsxTagNameExpression) => JsxClosingElement",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.updateJsxElement",
              "kind": "InterfaceMethodDeclaration",
              "name": "updateJsxElement",
              "signature": "updateJsxElement: (
    node: JsxElement,
    openingElement: JsxOpeningElement,
    children: readonly JsxChild[],
    closingElement: JsxClosingElement
) => JsxElement;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3498,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3498",
              },
              "type": "(node: JsxElement, openingElement: JsxOpeningElement, children: readonly JsxChild[], closingElement: JsxClosingElement) => JsxElement",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.updateJsxExpression",
              "kind": "InterfaceMethodDeclaration",
              "name": "updateJsxExpression",
              "signature": "updateJsxExpression: (
    node: JsxExpression,
    expression: Expression | undefined
) => JsxExpression;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3518,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3518",
              },
              "type": "(node: JsxExpression, expression: Expression | undefined) => JsxExpression",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.updateJsxFragment",
              "kind": "InterfaceMethodDeclaration",
              "name": "updateJsxFragment",
              "signature": "updateJsxFragment: (
    node: JsxFragment,
    openingFragment: JsxOpeningFragment,
    children: readonly JsxChild[],
    closingFragment: JsxClosingFragment
) => JsxFragment;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3510,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3510",
              },
              "type": "(node: JsxFragment, openingFragment: JsxOpeningFragment, children: readonly JsxChild[], closingFragment: JsxClosingFragment) => JsxFragment",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.updateJsxOpeningElement",
              "kind": "InterfaceMethodDeclaration",
              "name": "updateJsxOpeningElement",
              "signature": "updateJsxOpeningElement: (
    node: JsxOpeningElement,
    tagName: JsxTagNameExpression,
    typeArguments: readonly TypeNode[] | undefined,
    attributes: JsxAttributes
) => JsxOpeningElement;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3502,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3502",
              },
              "type": "(node: JsxOpeningElement, tagName: JsxTagNameExpression, typeArguments: readonly TypeNode[] | undefined, attributes: JsxAttributes) => JsxOpeningElement",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.updateJsxSelfClosingElement",
              "kind": "InterfaceMethodDeclaration",
              "name": "updateJsxSelfClosingElement",
              "signature": "updateJsxSelfClosingElement: (
    node: JsxSelfClosingElement,
    tagName: JsxTagNameExpression,
    typeArguments: readonly TypeNode[] | undefined,
    attributes: JsxAttributes
) => JsxSelfClosingElement;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3500,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3500",
              },
              "type": "(node: JsxSelfClosingElement, tagName: JsxTagNameExpression, typeArguments: readonly TypeNode[] | undefined, attributes: JsxAttributes) => JsxSelfClosingElement",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.updateJsxSpreadAttribute",
              "kind": "InterfaceMethodDeclaration",
              "name": "updateJsxSpreadAttribute",
              "signature": "updateJsxSpreadAttribute: (
    node: JsxSpreadAttribute,
    expression: Expression
) => JsxSpreadAttribute;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3516,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3516",
              },
              "type": "(node: JsxSpreadAttribute, expression: Expression) => JsxSpreadAttribute",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.updateJsxText",
              "kind": "InterfaceMethodDeclaration",
              "name": "updateJsxText",
              "signature": "updateJsxText: (
    node: JsxText,
    text: string,
    containsOnlyTriviaWhiteSpaces?: boolean
) => JsxText;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3507,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3507",
              },
              "type": "(node: JsxText, text: string, containsOnlyTriviaWhiteSpaces?: boolean) => JsxText",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.updateLabeledStatement",
              "kind": "InterfaceMethodDeclaration",
              "name": "updateLabeledStatement",
              "signature": "updateLabeledStatement: (
    node: LabeledStatement,
    label: Identifier,
    statement: Statement
) => LabeledStatement;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3381,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3381",
              },
              "type": "(node: LabeledStatement, label: Identifier, statement: Statement) => LabeledStatement",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.updateLiteralTypeNode",
              "kind": "InterfaceMethodDeclaration",
              "name": "updateLiteralTypeNode",
              "signature": "updateLiteralTypeNode: (
    node: LiteralTypeNode,
    literal: LiteralTypeNode['literal']
) => LiteralTypeNode;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3267,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3267",
              },
              "type": "(node: LiteralTypeNode, literal: LiteralTypeNode[\\"literal\\"]) => LiteralTypeNode",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.updateMappedTypeNode",
              "kind": "InterfaceMethodDeclaration",
              "name": "updateMappedTypeNode",
              "signature": "updateMappedTypeNode: (
    node: MappedTypeNode,
    readonlyToken: ReadonlyKeyword | PlusToken | MinusToken | undefined,
    typeParameter: TypeParameterDeclaration,
    nameType: TypeNode | undefined,
    questionToken: QuestionToken | PlusToken | MinusToken | undefined,
    type: TypeNode | undefined
) => MappedTypeNode;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3265,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3265",
              },
              "type": "(node: MappedTypeNode, readonlyToken: ReadonlyKeyword | PlusToken | MinusToken | undefined, typeParameter: TypeParameterDeclaration, nameType: TypeNode | undefined, questionToken: QuestionToken | PlusToken | MinusToken | undefined, type: TypeNode | undefined) => MappedTypeNode",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.updateMetaProperty",
              "kind": "InterfaceMethodDeclaration",
              "name": "updateMetaProperty",
              "signature": "updateMetaProperty: (node: MetaProperty, name: Identifier) => MetaProperty;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3347,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3347",
              },
              "type": "(node: MetaProperty, name: Identifier) => MetaProperty",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.updateMethodDeclaration",
              "kind": "InterfaceMethodDeclaration",
              "name": "updateMethodDeclaration",
              "signature": "updateMethodDeclaration: (
    node: MethodDeclaration,
    decorators: readonly Decorator[] | undefined,
    modifiers: readonly Modifier[] | undefined,
    asteriskToken: AsteriskToken | undefined,
    name: PropertyName,
    questionToken: QuestionToken | undefined,
    typeParameters: readonly TypeParameterDeclaration[] | undefined,
    parameters: readonly ParameterDeclaration[],
    type: TypeNode | undefined,
    body: Block | undefined
) => MethodDeclaration;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3209,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3209",
              },
              "type": "(node: MethodDeclaration, decorators: readonly Decorator[] | undefined, modifiers: readonly Modifier[] | undefined, asteriskToken: AsteriskToken | undefined, name: PropertyName, questionToken: QuestionToken | undefined, typeParameters: readonly TypeParameterDeclaration[] | undefined, parameters: readonly ParameterDeclaration[], type: TypeNode | undefined, body: Block | undefined) => MethodDeclaration",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.updateMethodSignature",
              "kind": "InterfaceMethodDeclaration",
              "name": "updateMethodSignature",
              "signature": "updateMethodSignature: (
    node: MethodSignature,
    modifiers: readonly Modifier[] | undefined,
    name: PropertyName,
    questionToken: QuestionToken | undefined,
    typeParameters: NodeArray<TypeParameterDeclaration> | undefined,
    parameters: NodeArray<ParameterDeclaration>,
    type: TypeNode | undefined
) => MethodSignature;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3207,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3207",
              },
              "type": "(node: MethodSignature, modifiers: readonly Modifier[] | undefined, name: PropertyName, questionToken: QuestionToken | undefined, typeParameters: NodeArray<TypeParameterDeclaration> | undefined, parameters: NodeArray<ParameterDeclaration>, type: TypeNode | undefined) => MethodSignature",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.updateModuleBlock",
              "kind": "InterfaceMethodDeclaration",
              "name": "updateModuleBlock",
              "signature": "updateModuleBlock: (
    node: ModuleBlock,
    statements: readonly Statement[]
) => ModuleBlock;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3404,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3404",
              },
              "type": "(node: ModuleBlock, statements: readonly Statement[]) => ModuleBlock",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.updateModuleDeclaration",
              "kind": "InterfaceMethodDeclaration",
              "name": "updateModuleDeclaration",
              "signature": "updateModuleDeclaration: (
    node: ModuleDeclaration,
    decorators: readonly Decorator[] | undefined,
    modifiers: readonly Modifier[] | undefined,
    name: ModuleName,
    body: ModuleBody | undefined
) => ModuleDeclaration;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3402,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3402",
              },
              "type": "(node: ModuleDeclaration, decorators: readonly Decorator[] | undefined, modifiers: readonly Modifier[] | undefined, name: ModuleName, body: ModuleBody | undefined) => ModuleDeclaration",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.updateNamedExports",
              "kind": "InterfaceMethodDeclaration",
              "name": "updateNamedExports",
              "signature": "updateNamedExports: (
    node: NamedExports,
    elements: readonly ExportSpecifier[]
) => NamedExports;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3428,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3428",
              },
              "type": "(node: NamedExports, elements: readonly ExportSpecifier[]) => NamedExports",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.updateNamedImports",
              "kind": "InterfaceMethodDeclaration",
              "name": "updateNamedImports",
              "signature": "updateNamedImports: (
    node: NamedImports,
    elements: readonly ImportSpecifier[]
) => NamedImports;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3420,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3420",
              },
              "type": "(node: NamedImports, elements: readonly ImportSpecifier[]) => NamedImports",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.updateNamedTupleMember",
              "kind": "InterfaceMethodDeclaration",
              "name": "updateNamedTupleMember",
              "signature": "updateNamedTupleMember: (
    node: NamedTupleMember,
    dotDotDotToken: DotDotDotToken | undefined,
    name: Identifier,
    questionToken: QuestionToken | undefined,
    type: TypeNode
) => NamedTupleMember;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3242,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3242",
              },
              "type": "(node: NamedTupleMember, dotDotDotToken: DotDotDotToken | undefined, name: Identifier, questionToken: QuestionToken | undefined, type: TypeNode) => NamedTupleMember",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.updateNamespaceExport",
              "kind": "InterfaceMethodDeclaration",
              "name": "updateNamespaceExport",
              "signature": "updateNamespaceExport: (
    node: NamespaceExport,
    name: Identifier
) => NamespaceExport;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3418,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3418",
              },
              "type": "(node: NamespaceExport, name: Identifier) => NamespaceExport",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.updateNamespaceExportDeclaration",
              "kind": "InterfaceMethodDeclaration",
              "name": "updateNamespaceExportDeclaration",
              "signature": "updateNamespaceExportDeclaration: (
    node: NamespaceExportDeclaration,
    name: Identifier
) => NamespaceExportDeclaration;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3408,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3408",
              },
              "type": "(node: NamespaceExportDeclaration, name: Identifier) => NamespaceExportDeclaration",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.updateNamespaceImport",
              "kind": "InterfaceMethodDeclaration",
              "name": "updateNamespaceImport",
              "signature": "updateNamespaceImport: (
    node: NamespaceImport,
    name: Identifier
) => NamespaceImport;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3416,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3416",
              },
              "type": "(node: NamespaceImport, name: Identifier) => NamespaceImport",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.updateNewExpression",
              "kind": "InterfaceMethodDeclaration",
              "name": "updateNewExpression",
              "signature": "updateNewExpression: (
    node: NewExpression,
    expression: Expression,
    typeArguments: readonly TypeNode[] | undefined,
    argumentsArray: readonly Expression[] | undefined
) => NewExpression;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3293,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3293",
              },
              "type": "(node: NewExpression, expression: Expression, typeArguments: readonly TypeNode[] | undefined, argumentsArray: readonly Expression[] | undefined) => NewExpression",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.updateNonNullChain",
              "kind": "InterfaceMethodDeclaration",
              "name": "updateNonNullChain",
              "signature": "updateNonNullChain: (node: NonNullChain, expression: Expression) => NonNullChain;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3345,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3345",
              },
              "type": "(node: NonNullChain, expression: Expression) => NonNullChain",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.updateNonNullExpression",
              "kind": "InterfaceMethodDeclaration",
              "name": "updateNonNullExpression",
              "signature": "updateNonNullExpression: (
    node: NonNullExpression,
    expression: Expression
) => NonNullExpression;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3343,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3343",
              },
              "type": "(node: NonNullExpression, expression: Expression) => NonNullExpression",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.updateObjectBindingPattern",
              "kind": "InterfaceMethodDeclaration",
              "name": "updateObjectBindingPattern",
              "signature": "updateObjectBindingPattern: (
    node: ObjectBindingPattern,
    elements: readonly BindingElement[]
) => ObjectBindingPattern;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3271,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3271",
              },
              "type": "(node: ObjectBindingPattern, elements: readonly BindingElement[]) => ObjectBindingPattern",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.updateObjectLiteralExpression",
              "kind": "InterfaceMethodDeclaration",
              "name": "updateObjectLiteralExpression",
              "signature": "updateObjectLiteralExpression: (
    node: ObjectLiteralExpression,
    properties: readonly ObjectLiteralElementLike[]
) => ObjectLiteralExpression;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3279,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3279",
              },
              "type": "(node: ObjectLiteralExpression, properties: readonly ObjectLiteralElementLike[]) => ObjectLiteralExpression",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.updateOptionalTypeNode",
              "kind": "InterfaceMethodDeclaration",
              "name": "updateOptionalTypeNode",
              "signature": "updateOptionalTypeNode: (
    node: OptionalTypeNode,
    type: TypeNode
) => OptionalTypeNode;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3244,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3244",
              },
              "type": "(node: OptionalTypeNode, type: TypeNode) => OptionalTypeNode",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.updateParameterDeclaration",
              "kind": "InterfaceMethodDeclaration",
              "name": "updateParameterDeclaration",
              "signature": "updateParameterDeclaration: (
    node: ParameterDeclaration,
    decorators: readonly Decorator[] | undefined,
    modifiers: readonly Modifier[] | undefined,
    dotDotDotToken: DotDotDotToken | undefined,
    name: string | BindingName,
    questionToken: QuestionToken | undefined,
    type: TypeNode | undefined,
    initializer: Expression | undefined
) => ParameterDeclaration;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3199,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3199",
              },
              "type": "(node: ParameterDeclaration, decorators: readonly Decorator[] | undefined, modifiers: readonly Modifier[] | undefined, dotDotDotToken: DotDotDotToken | undefined, name: string | BindingName, questionToken: QuestionToken | undefined, type: TypeNode | undefined, initializer: Expression | undefined) => ParameterDeclaration",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.updateParenthesizedExpression",
              "kind": "InterfaceMethodDeclaration",
              "name": "updateParenthesizedExpression",
              "signature": "updateParenthesizedExpression: (
    node: ParenthesizedExpression,
    expression: Expression
) => ParenthesizedExpression;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3299,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3299",
              },
              "type": "(node: ParenthesizedExpression, expression: Expression) => ParenthesizedExpression",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.updateParenthesizedType",
              "kind": "InterfaceMethodDeclaration",
              "name": "updateParenthesizedType",
              "signature": "updateParenthesizedType: (
    node: ParenthesizedTypeNode,
    type: TypeNode
) => ParenthesizedTypeNode;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3258,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3258",
              },
              "type": "(node: ParenthesizedTypeNode, type: TypeNode) => ParenthesizedTypeNode",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.updatePartiallyEmittedExpression",
              "kind": "InterfaceMethodDeclaration",
              "name": "updatePartiallyEmittedExpression",
              "signature": "updatePartiallyEmittedExpression: (
    node: PartiallyEmittedExpression,
    expression: Expression
) => PartiallyEmittedExpression;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3539,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3539",
              },
              "type": "(node: PartiallyEmittedExpression, expression: Expression) => PartiallyEmittedExpression",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.updatePostfixUnaryExpression",
              "kind": "InterfaceMethodDeclaration",
              "name": "updatePostfixUnaryExpression",
              "signature": "updatePostfixUnaryExpression: (
    node: PostfixUnaryExpression,
    operand: Expression
) => PostfixUnaryExpression;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3315,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3315",
              },
              "type": "(node: PostfixUnaryExpression, operand: Expression) => PostfixUnaryExpression",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.updatePrefixUnaryExpression",
              "kind": "InterfaceMethodDeclaration",
              "name": "updatePrefixUnaryExpression",
              "signature": "updatePrefixUnaryExpression: (
    node: PrefixUnaryExpression,
    operand: Expression
) => PrefixUnaryExpression;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3313,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3313",
              },
              "type": "(node: PrefixUnaryExpression, operand: Expression) => PrefixUnaryExpression",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.updatePropertyAccessChain",
              "kind": "InterfaceMethodDeclaration",
              "name": "updatePropertyAccessChain",
              "signature": "updatePropertyAccessChain: (
    node: PropertyAccessChain,
    expression: Expression,
    questionDotToken: QuestionDotToken | undefined,
    name: Identifier | PrivateIdentifier
) => PropertyAccessChain;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3283,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3283",
              },
              "type": "(node: PropertyAccessChain, expression: Expression, questionDotToken: QuestionDotToken | undefined, name: Identifier | PrivateIdentifier) => PropertyAccessChain",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.updatePropertyAccessExpression",
              "kind": "InterfaceMethodDeclaration",
              "name": "updatePropertyAccessExpression",
              "signature": "updatePropertyAccessExpression: (
    node: PropertyAccessExpression,
    expression: Expression,
    name: Identifier | PrivateIdentifier
) => PropertyAccessExpression;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3281,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3281",
              },
              "type": "(node: PropertyAccessExpression, expression: Expression, name: Identifier | PrivateIdentifier) => PropertyAccessExpression",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.updatePropertyAssignment",
              "kind": "InterfaceMethodDeclaration",
              "name": "updatePropertyAssignment",
              "signature": "updatePropertyAssignment: (
    node: PropertyAssignment,
    name: PropertyName,
    initializer: Expression
) => PropertyAssignment;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3528,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3528",
              },
              "type": "(node: PropertyAssignment, name: PropertyName, initializer: Expression) => PropertyAssignment",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.updatePropertyDeclaration",
              "kind": "InterfaceMethodDeclaration",
              "name": "updatePropertyDeclaration",
              "signature": "updatePropertyDeclaration: (
    node: PropertyDeclaration,
    decorators: readonly Decorator[] | undefined,
    modifiers: readonly Modifier[] | undefined,
    name: string | PropertyName,
    questionOrExclamationToken: QuestionToken | ExclamationToken | undefined,
    type: TypeNode | undefined,
    initializer: Expression | undefined
) => PropertyDeclaration;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3205,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3205",
              },
              "type": "(node: PropertyDeclaration, decorators: readonly Decorator[] | undefined, modifiers: readonly Modifier[] | undefined, name: string | PropertyName, questionOrExclamationToken: QuestionToken | ExclamationToken | undefined, type: TypeNode | undefined, initializer: Expression | undefined) => PropertyDeclaration",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.updatePropertySignature",
              "kind": "InterfaceMethodDeclaration",
              "name": "updatePropertySignature",
              "signature": "updatePropertySignature: (
    node: PropertySignature,
    modifiers: readonly Modifier[] | undefined,
    name: PropertyName,
    questionToken: QuestionToken | undefined,
    type: TypeNode | undefined
) => PropertySignature;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3203,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3203",
              },
              "type": "(node: PropertySignature, modifiers: readonly Modifier[] | undefined, name: PropertyName, questionToken: QuestionToken | undefined, type: TypeNode | undefined) => PropertySignature",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.updateQualifiedName",
              "kind": "InterfaceMethodDeclaration",
              "name": "updateQualifiedName",
              "signature": "updateQualifiedName: (
    node: QualifiedName,
    left: EntityName,
    right: Identifier
) => QualifiedName;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3193,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3193",
              },
              "type": "(node: QualifiedName, left: EntityName, right: Identifier) => QualifiedName",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.updateRestTypeNode",
              "kind": "InterfaceMethodDeclaration",
              "name": "updateRestTypeNode",
              "signature": "updateRestTypeNode: (node: RestTypeNode, type: TypeNode) => RestTypeNode;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3246,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3246",
              },
              "type": "(node: RestTypeNode, type: TypeNode) => RestTypeNode",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.updateReturnStatement",
              "kind": "InterfaceMethodDeclaration",
              "name": "updateReturnStatement",
              "signature": "updateReturnStatement: (
    node: ReturnStatement,
    expression: Expression | undefined
) => ReturnStatement;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3375,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3375",
              },
              "type": "(node: ReturnStatement, expression: Expression | undefined) => ReturnStatement",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.updateSetAccessorDeclaration",
              "kind": "InterfaceMethodDeclaration",
              "name": "updateSetAccessorDeclaration",
              "signature": "updateSetAccessorDeclaration: (
    node: SetAccessorDeclaration,
    decorators: readonly Decorator[] | undefined,
    modifiers: readonly Modifier[] | undefined,
    name: PropertyName,
    parameters: readonly ParameterDeclaration[],
    body: Block | undefined
) => SetAccessorDeclaration;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3215,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3215",
              },
              "type": "(node: SetAccessorDeclaration, decorators: readonly Decorator[] | undefined, modifiers: readonly Modifier[] | undefined, name: PropertyName, parameters: readonly ParameterDeclaration[], body: Block | undefined) => SetAccessorDeclaration",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.updateShorthandPropertyAssignment",
              "kind": "InterfaceMethodDeclaration",
              "name": "updateShorthandPropertyAssignment",
              "signature": "updateShorthandPropertyAssignment: (
    node: ShorthandPropertyAssignment,
    name: Identifier,
    objectAssignmentInitializer: Expression | undefined
) => ShorthandPropertyAssignment;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3530,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3530",
              },
              "type": "(node: ShorthandPropertyAssignment, name: Identifier, objectAssignmentInitializer: Expression | undefined) => ShorthandPropertyAssignment",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.updateSourceFile",
              "kind": "InterfaceMethodDeclaration",
              "name": "updateSourceFile",
              "signature": "updateSourceFile: (
    node: SourceFile,
    statements: readonly Statement[],
    isDeclarationFile?: boolean,
    referencedFiles?: readonly FileReference[],
    typeReferences?: readonly FileReference[],
    hasNoDefaultLib?: boolean,
    libReferences?: readonly FileReference[]
) => SourceFile;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3536,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3536",
              },
              "type": "(node: SourceFile, statements: readonly Statement[], isDeclarationFile?: boolean, referencedFiles?: readonly FileReference[], typeReferences?: readonly FileReference[], hasNoDefaultLib?: boolean, libReferences?: readonly FileReference[]) => SourceFile",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.updateSpreadAssignment",
              "kind": "InterfaceMethodDeclaration",
              "name": "updateSpreadAssignment",
              "signature": "updateSpreadAssignment: (
    node: SpreadAssignment,
    expression: Expression
) => SpreadAssignment;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3532,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3532",
              },
              "type": "(node: SpreadAssignment, expression: Expression) => SpreadAssignment",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.updateSpreadElement",
              "kind": "InterfaceMethodDeclaration",
              "name": "updateSpreadElement",
              "signature": "updateSpreadElement: (
    node: SpreadElement,
    expression: Expression
) => SpreadElement;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3334,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3334",
              },
              "type": "(node: SpreadElement, expression: Expression) => SpreadElement",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.updateSwitchStatement",
              "kind": "InterfaceMethodDeclaration",
              "name": "updateSwitchStatement",
              "signature": "updateSwitchStatement: (
    node: SwitchStatement,
    expression: Expression,
    caseBlock: CaseBlock
) => SwitchStatement;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3379,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3379",
              },
              "type": "(node: SwitchStatement, expression: Expression, caseBlock: CaseBlock) => SwitchStatement",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.updateTaggedTemplateExpression",
              "kind": "InterfaceMethodDeclaration",
              "name": "updateTaggedTemplateExpression",
              "signature": "updateTaggedTemplateExpression: (
    node: TaggedTemplateExpression,
    tag: Expression,
    typeArguments: readonly TypeNode[] | undefined,
    template: TemplateLiteral
) => TaggedTemplateExpression;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3295,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3295",
              },
              "type": "(node: TaggedTemplateExpression, tag: Expression, typeArguments: readonly TypeNode[] | undefined, template: TemplateLiteral) => TaggedTemplateExpression",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.updateTemplateExpression",
              "kind": "InterfaceMethodDeclaration",
              "name": "updateTemplateExpression",
              "signature": "updateTemplateExpression: (
    node: TemplateExpression,
    head: TemplateHead,
    templateSpans: readonly TemplateSpan[]
) => TemplateExpression;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3321,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3321",
              },
              "type": "(node: TemplateExpression, head: TemplateHead, templateSpans: readonly TemplateSpan[]) => TemplateExpression",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.updateTemplateLiteralType",
              "kind": "InterfaceMethodDeclaration",
              "name": "updateTemplateLiteralType",
              "signature": "updateTemplateLiteralType: (
    node: TemplateLiteralTypeNode,
    head: TemplateHead,
    templateSpans: readonly TemplateLiteralTypeSpan[]
) => TemplateLiteralTypeNode;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3269,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3269",
              },
              "type": "(node: TemplateLiteralTypeNode, head: TemplateHead, templateSpans: readonly TemplateLiteralTypeSpan[]) => TemplateLiteralTypeNode",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.updateTemplateLiteralTypeSpan",
              "kind": "InterfaceMethodDeclaration",
              "name": "updateTemplateLiteralTypeSpan",
              "signature": "updateTemplateLiteralTypeSpan: (
    node: TemplateLiteralTypeSpan,
    type: TypeNode,
    literal: TemplateMiddle | TemplateTail
) => TemplateLiteralTypeSpan;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3223,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3223",
              },
              "type": "(node: TemplateLiteralTypeSpan, type: TypeNode, literal: TemplateMiddle | TemplateTail) => TemplateLiteralTypeSpan",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.updateTemplateSpan",
              "kind": "InterfaceMethodDeclaration",
              "name": "updateTemplateSpan",
              "signature": "updateTemplateSpan: (
    node: TemplateSpan,
    expression: Expression,
    literal: TemplateMiddle | TemplateTail
) => TemplateSpan;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3349,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3349",
              },
              "type": "(node: TemplateSpan, expression: Expression, literal: TemplateMiddle | TemplateTail) => TemplateSpan",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.updateThrowStatement",
              "kind": "InterfaceMethodDeclaration",
              "name": "updateThrowStatement",
              "signature": "updateThrowStatement: (
    node: ThrowStatement,
    expression: Expression
) => ThrowStatement;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3383,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3383",
              },
              "type": "(node: ThrowStatement, expression: Expression) => ThrowStatement",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.updateTryStatement",
              "kind": "InterfaceMethodDeclaration",
              "name": "updateTryStatement",
              "signature": "updateTryStatement: (
    node: TryStatement,
    tryBlock: Block,
    catchClause: CatchClause | undefined,
    finallyBlock: Block | undefined
) => TryStatement;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3385,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3385",
              },
              "type": "(node: TryStatement, tryBlock: Block, catchClause: CatchClause | undefined, finallyBlock: Block | undefined) => TryStatement",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.updateTupleTypeNode",
              "kind": "InterfaceMethodDeclaration",
              "name": "updateTupleTypeNode",
              "signature": "updateTupleTypeNode: (
    node: TupleTypeNode,
    elements: readonly (TypeNode | NamedTupleMember)[]
) => TupleTypeNode;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3240,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3240",
              },
              "type": "(node: TupleTypeNode, elements: readonly (TypeNode | NamedTupleMember)[]) => TupleTypeNode",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.updateTypeAliasDeclaration",
              "kind": "InterfaceMethodDeclaration",
              "name": "updateTypeAliasDeclaration",
              "signature": "updateTypeAliasDeclaration: (
    node: TypeAliasDeclaration,
    decorators: readonly Decorator[] | undefined,
    modifiers: readonly Modifier[] | undefined,
    name: Identifier,
    typeParameters: readonly TypeParameterDeclaration[] | undefined,
    type: TypeNode
) => TypeAliasDeclaration;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3398,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3398",
              },
              "type": "(node: TypeAliasDeclaration, decorators: readonly Decorator[] | undefined, modifiers: readonly Modifier[] | undefined, name: Identifier, typeParameters: readonly TypeParameterDeclaration[] | undefined, type: TypeNode) => TypeAliasDeclaration",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.updateTypeAssertion",
              "kind": "InterfaceMethodDeclaration",
              "name": "updateTypeAssertion",
              "signature": "updateTypeAssertion: (
    node: TypeAssertion,
    type: TypeNode,
    expression: Expression
) => TypeAssertion;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3297,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3297",
              },
              "type": "(node: TypeAssertion, type: TypeNode, expression: Expression) => TypeAssertion",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.updateTypeLiteralNode",
              "kind": "InterfaceMethodDeclaration",
              "name": "updateTypeLiteralNode",
              "signature": "updateTypeLiteralNode: (
    node: TypeLiteralNode,
    members: NodeArray<TypeElement>
) => TypeLiteralNode;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3236,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3236",
              },
              "type": "(node: TypeLiteralNode, members: NodeArray<TypeElement>) => TypeLiteralNode",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.updateTypeOfExpression",
              "kind": "InterfaceMethodDeclaration",
              "name": "updateTypeOfExpression",
              "signature": "updateTypeOfExpression: (
    node: TypeOfExpression,
    expression: Expression
) => TypeOfExpression;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3307,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3307",
              },
              "type": "(node: TypeOfExpression, expression: Expression) => TypeOfExpression",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.updateTypeOperatorNode",
              "kind": "InterfaceMethodDeclaration",
              "name": "updateTypeOperatorNode",
              "signature": "updateTypeOperatorNode: (
    node: TypeOperatorNode,
    type: TypeNode
) => TypeOperatorNode;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3261,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3261",
              },
              "type": "(node: TypeOperatorNode, type: TypeNode) => TypeOperatorNode",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.updateTypeParameterDeclaration",
              "kind": "InterfaceMethodDeclaration",
              "name": "updateTypeParameterDeclaration",
              "signature": "updateTypeParameterDeclaration: (
    node: TypeParameterDeclaration,
    name: Identifier,
    constraint: TypeNode | undefined,
    defaultType: TypeNode | undefined
) => TypeParameterDeclaration;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3197,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3197",
              },
              "type": "(node: TypeParameterDeclaration, name: Identifier, constraint: TypeNode | undefined, defaultType: TypeNode | undefined) => TypeParameterDeclaration",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.updateTypePredicateNode",
              "kind": "InterfaceMethodDeclaration",
              "name": "updateTypePredicateNode",
              "signature": "updateTypePredicateNode: (
    node: TypePredicateNode,
    assertsModifier: AssertsKeyword | undefined,
    parameterName: Identifier | ThisTypeNode,
    type: TypeNode | undefined
) => TypePredicateNode;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3226,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3226",
              },
              "type": "(node: TypePredicateNode, assertsModifier: AssertsKeyword | undefined, parameterName: Identifier | ThisTypeNode, type: TypeNode | undefined) => TypePredicateNode",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.updateTypeQueryNode",
              "kind": "InterfaceMethodDeclaration",
              "name": "updateTypeQueryNode",
              "signature": "updateTypeQueryNode: (
    node: TypeQueryNode,
    exprName: EntityName
) => TypeQueryNode;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3234,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3234",
              },
              "type": "(node: TypeQueryNode, exprName: EntityName) => TypeQueryNode",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.updateTypeReferenceNode",
              "kind": "InterfaceMethodDeclaration",
              "name": "updateTypeReferenceNode",
              "signature": "updateTypeReferenceNode: (
    node: TypeReferenceNode,
    typeName: EntityName,
    typeArguments: NodeArray<TypeNode> | undefined
) => TypeReferenceNode;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3228,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3228",
              },
              "type": "(node: TypeReferenceNode, typeName: EntityName, typeArguments: NodeArray<TypeNode> | undefined) => TypeReferenceNode",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.updateUnionTypeNode",
              "kind": "InterfaceMethodDeclaration",
              "name": "updateUnionTypeNode",
              "signature": "updateUnionTypeNode: (
    node: UnionTypeNode,
    types: NodeArray<TypeNode>
) => UnionTypeNode;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3248,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3248",
              },
              "type": "(node: UnionTypeNode, types: NodeArray<TypeNode>) => UnionTypeNode",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.updateVariableDeclaration",
              "kind": "InterfaceMethodDeclaration",
              "name": "updateVariableDeclaration",
              "signature": "updateVariableDeclaration: (
    node: VariableDeclaration,
    name: BindingName,
    exclamationToken: ExclamationToken | undefined,
    type: TypeNode | undefined,
    initializer: Expression | undefined
) => VariableDeclaration;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3388,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3388",
              },
              "type": "(node: VariableDeclaration, name: BindingName, exclamationToken: ExclamationToken | undefined, type: TypeNode | undefined, initializer: Expression | undefined) => VariableDeclaration",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.updateVariableDeclarationList",
              "kind": "InterfaceMethodDeclaration",
              "name": "updateVariableDeclarationList",
              "signature": "updateVariableDeclarationList: (
    node: VariableDeclarationList,
    declarations: readonly VariableDeclaration[]
) => VariableDeclarationList;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3390,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3390",
              },
              "type": "(node: VariableDeclarationList, declarations: readonly VariableDeclaration[]) => VariableDeclarationList",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.updateVariableStatement",
              "kind": "InterfaceMethodDeclaration",
              "name": "updateVariableStatement",
              "signature": "updateVariableStatement: (
    node: VariableStatement,
    modifiers: readonly Modifier[] | undefined,
    declarationList: VariableDeclarationList
) => VariableStatement;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3354,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3354",
              },
              "type": "(node: VariableStatement, modifiers: readonly Modifier[] | undefined, declarationList: VariableDeclarationList) => VariableStatement",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.updateVoidExpression",
              "kind": "InterfaceMethodDeclaration",
              "name": "updateVoidExpression",
              "signature": "updateVoidExpression: (
    node: VoidExpression,
    expression: Expression
) => VoidExpression;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3309,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3309",
              },
              "type": "(node: VoidExpression, expression: Expression) => VoidExpression",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.updateWhileStatement",
              "kind": "InterfaceMethodDeclaration",
              "name": "updateWhileStatement",
              "signature": "updateWhileStatement: (
    node: WhileStatement,
    expression: Expression,
    statement: Statement
) => WhileStatement;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3363,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3363",
              },
              "type": "(node: WhileStatement, expression: Expression, statement: Statement) => WhileStatement",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.updateWithStatement",
              "kind": "InterfaceMethodDeclaration",
              "name": "updateWithStatement",
              "signature": "updateWithStatement: (
    node: WithStatement,
    expression: Expression,
    statement: Statement
) => WithStatement;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3377,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3377",
              },
              "type": "(node: WithStatement, expression: Expression, statement: Statement) => WithStatement",
            },
            Object {
              "docs": Array [],
              "id": "NodeFactory.updateYieldExpression",
              "kind": "InterfaceMethodDeclaration",
              "name": "updateYieldExpression",
              "signature": "updateYieldExpression: (
    node: YieldExpression,
    asteriskToken: AsteriskToken | undefined,
    expression: Expression | undefined
) => YieldExpression;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3332,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3332",
              },
              "type": "(node: YieldExpression, asteriskToken: AsteriskToken | undefined, expression: Expression | undefined) => YieldExpression",
            },
          ],
          "properties": Array [],
        },
        "name": "NodeFactory",
        "signature": "interface NodeFactory {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 3158,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3158",
        },
      },
      Object {
        "docs": Array [],
        "id": "NodesVisitor",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [
            Object {
              "docs": Array [],
              "id": "NodesVisitor.0-call-signature",
              "kind": "InterfaceCallSignatureDeclaration",
              "name": "call signature",
              "signature": "<T extends Node>(
    nodes: NodeArray<T>,
    visitor: Visitor | undefined,
    test?: (node: Node) => boolean,
    start?: number,
    count?: number
): NodeArray<T>;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3688,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3688",
              },
            },
            Object {
              "docs": Array [],
              "id": "NodesVisitor.1-call-signature",
              "kind": "InterfaceCallSignatureDeclaration",
              "name": "call signature",
              "signature": "<T extends Node>(
    nodes: NodeArray<T> | undefined,
    visitor: Visitor | undefined,
    test?: (node: Node) => boolean,
    start?: number,
    count?: number
): NodeArray<T> | undefined;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3689,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3689",
              },
            },
          ],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [],
        },
        "name": "NodesVisitor",
        "signature": "interface NodesVisitor {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 3687,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3687",
        },
      },
      Object {
        "docs": Array [],
        "id": "NodeVisitor",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [
            Object {
              "docs": Array [],
              "id": "NodeVisitor.0-call-signature",
              "kind": "InterfaceCallSignatureDeclaration",
              "name": "call signature",
              "signature": "<T extends Node>(
    nodes: T,
    visitor: Visitor | undefined,
    test?: (node: Node) => boolean,
    lift?: (node: NodeArray<Node>) => T
): T;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3684,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3684",
              },
            },
            Object {
              "docs": Array [],
              "id": "NodeVisitor.1-call-signature",
              "kind": "InterfaceCallSignatureDeclaration",
              "name": "call signature",
              "signature": "<T extends Node>(
    nodes: T | undefined,
    visitor: Visitor | undefined,
    test?: (node: Node) => boolean,
    lift?: (node: NodeArray<Node>) => T
): T | undefined;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3685,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3685",
              },
            },
          ],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [],
        },
        "name": "NodeVisitor",
        "signature": "interface NodeVisitor {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 3683,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3683",
        },
      },
      Object {
        "docs": Array [],
        "id": "NodeWithTypeArguments",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "NodeWithTypeArguments.typeArguments",
              "isOptional": true,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "typeArguments",
              "signature": "readonly typeArguments?: NodeArray<TypeNode>;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 868,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L868",
              },
              "type": "NodeArray<TypeNode>",
            },
          ],
        },
        "name": "NodeWithTypeArguments",
        "signature": "interface NodeWithTypeArguments extends TypeNode {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 867,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L867",
        },
      },
      Object {
        "docs": Array [],
        "id": "NonNullChain",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [],
        },
        "name": "NonNullChain",
        "signature": "interface NonNullChain extends NonNullExpression {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 1297,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1297",
        },
      },
      Object {
        "docs": Array [],
        "id": "NonNullExpression",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "NonNullExpression.expression",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "expression",
              "signature": "readonly expression: Expression;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1295,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1295",
              },
              "type": "Expression",
            },
            Object {
              "docs": Array [],
              "id": "NonNullExpression.kind",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "kind",
              "signature": "readonly kind: SyntaxKind.NonNullExpression;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1294,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1294",
              },
              "type": "number",
            },
          ],
        },
        "name": "NonNullExpression",
        "signature": "interface NonNullExpression extends LeftHandSideExpression {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 1293,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1293",
        },
      },
      Object {
        "docs": Array [
          "/**
     * Stored map from non-relative module name to a table: directory -> result of module lookup in this directory
     * We support only non-relative module names because resolution of relative module names is usually more deterministic and thus less expensive.
     */",
        ],
        "id": "NonRelativeModuleNameResolutionCache",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [
            Object {
              "docs": Array [],
              "id": "NonRelativeModuleNameResolutionCache.getOrCreateCacheForModuleName",
              "kind": "InterfaceMethodDeclaration",
              "name": "getOrCreateCacheForModuleName",
              "signature": "getOrCreateCacheForModuleName: (
    nonRelativeModuleName: string,
    redirectedReference?: ResolvedProjectReference
) => PerModuleNameCache;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 4665,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4665",
              },
              "type": "(nonRelativeModuleName: string, redirectedReference?: ResolvedProjectReference) => PerModuleNameCache",
            },
          ],
          "properties": Array [],
        },
        "name": "NonRelativeModuleNameResolutionCache",
        "signature": "interface NonRelativeModuleNameResolutionCache {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4664,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4664",
        },
      },
      Object {
        "docs": Array [],
        "id": "NoSubstitutionTemplateLiteral",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "NoSubstitutionTemplateLiteral.kind",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "kind",
              "signature": "readonly kind: SyntaxKind.NoSubstitutionTemplateLiteral;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1144,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1144",
              },
              "type": "number",
            },
          ],
        },
        "name": "NoSubstitutionTemplateLiteral",
        "signature": "interface NoSubstitutionTemplateLiteral
    extends LiteralExpression,
        TemplateLiteralLikeNode,
        Declaration {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 1143,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1143",
        },
      },
      Object {
        "docs": Array [],
        "id": "NotEmittedStatement",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "NotEmittedStatement.kind",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "kind",
              "signature": "readonly kind: SyntaxKind.NotEmittedStatement;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1380,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1380",
              },
              "type": "number",
            },
          ],
        },
        "name": "NotEmittedStatement",
        "signature": "interface NotEmittedStatement extends Statement {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 1379,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1379",
        },
      },
      Object {
        "docs": Array [],
        "id": "NullLiteral",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "NullLiteral.kind",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "kind",
              "signature": "readonly kind: SyntaxKind.NullKeyword;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1015,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1015",
              },
              "type": "number",
            },
          ],
        },
        "name": "NullLiteral",
        "signature": "interface NullLiteral extends PrimaryExpression {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 1014,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1014",
        },
      },
      Object {
        "docs": Array [],
        "id": "NumberLiteralType",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "NumberLiteralType.value",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "value",
              "signature": "value: number;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2524,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2524",
              },
              "type": "number",
            },
          ],
        },
        "name": "NumberLiteralType",
        "signature": "interface NumberLiteralType extends LiteralType {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 2523,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2523",
        },
      },
      Object {
        "docs": Array [],
        "id": "NumericLiteral",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "NumericLiteral.kind",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "kind",
              "signature": "readonly kind: SyntaxKind.NumericLiteral;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1155,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1155",
              },
              "type": "number",
            },
          ],
        },
        "name": "NumericLiteral",
        "signature": "interface NumericLiteral extends LiteralExpression, Declaration {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 1154,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1154",
        },
      },
      Object {
        "docs": Array [],
        "id": "ObjectBindingPattern",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "ObjectBindingPattern.elements",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "elements",
              "signature": "readonly elements: NodeArray<BindingElement>;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 770,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L770",
              },
              "type": "NodeArray<BindingElement>",
            },
            Object {
              "docs": Array [],
              "id": "ObjectBindingPattern.kind",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "kind",
              "signature": "readonly kind: SyntaxKind.ObjectBindingPattern;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 768,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L768",
              },
              "type": "number",
            },
            Object {
              "docs": Array [],
              "id": "ObjectBindingPattern.parent",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "parent",
              "signature": "readonly parent: VariableDeclaration | ParameterDeclaration | BindingElement;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 769,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L769",
              },
              "type": "ParameterDeclaration | VariableDeclaration | BindingElement",
            },
          ],
        },
        "name": "ObjectBindingPattern",
        "signature": "interface ObjectBindingPattern extends Node {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 767,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L767",
        },
      },
      Object {
        "docs": Array [],
        "id": "ObjectDestructuringAssignment",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "ObjectDestructuringAssignment.left",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "left",
              "signature": "readonly left: ObjectLiteralExpression;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1093,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1093",
              },
              "type": "ObjectLiteralExpression",
            },
          ],
        },
        "name": "ObjectDestructuringAssignment",
        "signature": "interface ObjectDestructuringAssignment extends AssignmentExpression<EqualsToken> {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 1092,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1092",
        },
      },
      Object {
        "docs": Array [],
        "id": "ObjectLiteralElement",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "ObjectLiteralElement.name",
              "isOptional": true,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "name",
              "signature": "readonly name?: PropertyName;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 737,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L737",
              },
              "type": "PropertyName",
            },
          ],
        },
        "name": "ObjectLiteralElement",
        "signature": "interface ObjectLiteralElement extends NamedDeclaration {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 735,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L735",
        },
      },
      Object {
        "docs": Array [],
        "id": "ObjectLiteralExpression",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "ObjectLiteralExpression.kind",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "kind",
              "signature": "readonly kind: SyntaxKind.ObjectLiteralExpression;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1210,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1210",
              },
              "type": "number",
            },
          ],
        },
        "name": "ObjectLiteralExpression",
        "signature": "interface ObjectLiteralExpression
    extends ObjectLiteralExpressionBase<ObjectLiteralElementLike> {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 1209,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1209",
        },
      },
      Object {
        "docs": Array [
          "/**
     * This interface is a base interface for ObjectLiteralExpression and JSXAttributes to extend from. JSXAttributes is similar to
     * ObjectLiteralExpression in that it contains array of properties; however, JSXAttributes' properties can only be
     * JSXAttribute or JSXSpreadAttribute. ObjectLiteralExpression, on the other hand, can only have properties of type
     * ObjectLiteralElement (e.g. PropertyAssignment, ShorthandPropertyAssignment etc.)
     */",
        ],
        "id": "ObjectLiteralExpressionBase",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "ObjectLiteralExpressionBase.properties",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "properties",
              "signature": "readonly properties: NodeArray<T>;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1207,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1207",
              },
              "type": "NodeArray<T>",
            },
          ],
        },
        "name": "ObjectLiteralExpressionBase",
        "signature": "interface ObjectLiteralExpressionBase<T extends ObjectLiteralElement>
    extends PrimaryExpression,
        Declaration {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 1206,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1206",
        },
      },
      Object {
        "docs": Array [],
        "id": "ObjectType",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "ObjectType.objectFlags",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "objectFlags",
              "signature": "objectFlags: ObjectFlags;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2553,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2553",
              },
              "type": "ObjectFlags",
            },
          ],
        },
        "name": "ObjectType",
        "signature": "interface ObjectType extends Type {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 2552,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2552",
        },
      },
      Object {
        "docs": Array [],
        "id": "OmittedExpression",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "OmittedExpression.kind",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "kind",
              "signature": "readonly kind: SyntaxKind.OmittedExpression;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 979,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L979",
              },
              "type": "number",
            },
          ],
        },
        "name": "OmittedExpression",
        "signature": "interface OmittedExpression extends Expression {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 978,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L978",
        },
      },
      Object {
        "docs": Array [],
        "id": "OptionalTypeNode",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "OptionalTypeNode.kind",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "kind",
              "signature": "readonly kind: SyntaxKind.OptionalType;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 906,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L906",
              },
              "type": "number",
            },
            Object {
              "docs": Array [],
              "id": "OptionalTypeNode.type",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "type",
              "signature": "readonly type: TypeNode;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 907,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L907",
              },
              "type": "TypeNode",
            },
          ],
        },
        "name": "OptionalTypeNode",
        "signature": "interface OptionalTypeNode extends TypeNode {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 905,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L905",
        },
      },
      Object {
        "docs": Array [],
        "id": "OutliningSpan",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [
                "/**
         * Whether or not this region should be automatically collapsed when
         * the 'Collapse to Definitions' command is invoked.
         */",
              ],
              "id": "OutliningSpan.autoCollapse",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "autoCollapse",
              "signature": "autoCollapse: boolean;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 6100,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6100",
              },
              "type": "boolean",
            },
            Object {
              "docs": Array [
                "/** The text to display in the editor for the collapsed region. */",
              ],
              "id": "OutliningSpan.bannerText",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "bannerText",
              "signature": "bannerText: string;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 6095,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6095",
              },
              "type": "string",
            },
            Object {
              "docs": Array [
                "/** The span of the document to display when the user hovers over the collapsed span. */",
              ],
              "id": "OutliningSpan.hintSpan",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "hintSpan",
              "signature": "hintSpan: TextSpan;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 6093,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6093",
              },
              "type": "TextSpan",
            },
            Object {
              "docs": Array [
                "/**
         * Classification of the contents of the span
         */",
              ],
              "id": "OutliningSpan.kind",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "kind",
              "signature": "kind: OutliningSpanKind;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 6104,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6104",
              },
              "type": "OutliningSpanKind",
            },
            Object {
              "docs": Array [
                "/** The span of the document to actually collapse. */",
              ],
              "id": "OutliningSpan.textSpan",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "textSpan",
              "signature": "textSpan: TextSpan;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 6091,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6091",
              },
              "type": "TextSpan",
            },
          ],
        },
        "name": "OutliningSpan",
        "signature": "interface OutliningSpan {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 6089,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6089",
        },
      },
      Object {
        "docs": Array [],
        "id": "OutputFile",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "OutputFile.name",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "name",
              "signature": "name: string;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 4822,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4822",
              },
              "type": "string",
            },
            Object {
              "docs": Array [],
              "id": "OutputFile.text",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "text",
              "signature": "text: string;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 4824,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4824",
              },
              "type": "string",
            },
            Object {
              "docs": Array [],
              "id": "OutputFile.writeByteOrderMark",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "writeByteOrderMark",
              "signature": "writeByteOrderMark: boolean;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 4823,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4823",
              },
              "type": "boolean",
            },
          ],
        },
        "name": "OutputFile",
        "signature": "interface OutputFile {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4821,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4821",
        },
      },
      Object {
        "docs": Array [
          "/**
     * Unique identifier with a package name and version.
     * If changing this, remember to change \`packageIdIsEqual\`.
     */",
        ],
        "id": "PackageId",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [
                "/**
         * Name of the package.
         * Should not include \`@types\`.
         * If accessing a non-index file, this should include its name e.g. \\"foo/bar\\".
         */",
              ],
              "id": "PackageId.name",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "name",
              "signature": "name: string;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3036,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3036",
              },
              "type": "string",
            },
            Object {
              "docs": Array [
                "/**
         * Name of a submodule within this package.
         * May be \\"\\".
         */",
              ],
              "id": "PackageId.subModuleName",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "subModuleName",
              "signature": "subModuleName: string;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3041,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3041",
              },
              "type": "string",
            },
            Object {
              "docs": Array [
                "/** Version of the package, e.g. \\"1.2.3\\" */",
              ],
              "id": "PackageId.version",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "version",
              "signature": "version: string;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3043,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3043",
              },
              "type": "string",
            },
          ],
        },
        "name": "PackageId",
        "signature": "interface PackageId {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 3030,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3030",
        },
      },
      Object {
        "docs": Array [],
        "id": "ParameterDeclaration",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "ParameterDeclaration.dotDotDotToken",
              "isOptional": true,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "dotDotDotToken",
              "signature": "readonly dotDotDotToken?: DotDotDotToken;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 705,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L705",
              },
              "type": "DotDotDotToken",
            },
            Object {
              "docs": Array [],
              "id": "ParameterDeclaration.initializer",
              "isOptional": true,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "initializer",
              "signature": "readonly initializer?: Expression;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 709,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L709",
              },
              "type": "Expression",
            },
            Object {
              "docs": Array [],
              "id": "ParameterDeclaration.kind",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "kind",
              "signature": "readonly kind: SyntaxKind.Parameter;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 703,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L703",
              },
              "type": "number",
            },
            Object {
              "docs": Array [],
              "id": "ParameterDeclaration.name",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "name",
              "signature": "readonly name: BindingName;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 706,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L706",
              },
              "type": "BindingName",
            },
            Object {
              "docs": Array [],
              "id": "ParameterDeclaration.parent",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "parent",
              "signature": "readonly parent: SignatureDeclaration;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 704,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L704",
              },
              "type": "SignatureDeclaration",
            },
            Object {
              "docs": Array [],
              "id": "ParameterDeclaration.questionToken",
              "isOptional": true,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "questionToken",
              "signature": "readonly questionToken?: QuestionToken;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 707,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L707",
              },
              "type": "QuestionToken",
            },
            Object {
              "docs": Array [],
              "id": "ParameterDeclaration.type",
              "isOptional": true,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "type",
              "signature": "readonly type?: TypeNode;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 708,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L708",
              },
              "type": "TypeNode",
            },
          ],
        },
        "name": "ParameterDeclaration",
        "signature": "interface ParameterDeclaration extends NamedDeclaration, JSDocContainer {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 702,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L702",
        },
      },
      Object {
        "docs": Array [],
        "id": "ParenthesizedExpression",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "ParenthesizedExpression.expression",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "expression",
              "signature": "readonly expression: Expression;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1189,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1189",
              },
              "type": "Expression",
            },
            Object {
              "docs": Array [],
              "id": "ParenthesizedExpression.kind",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "kind",
              "signature": "readonly kind: SyntaxKind.ParenthesizedExpression;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1188,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1188",
              },
              "type": "number",
            },
          ],
        },
        "name": "ParenthesizedExpression",
        "signature": "interface ParenthesizedExpression extends PrimaryExpression, JSDocContainer {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 1187,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1187",
        },
      },
      Object {
        "docs": Array [],
        "id": "ParenthesizedTypeNode",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "ParenthesizedTypeNode.kind",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "kind",
              "signature": "readonly kind: SyntaxKind.ParenthesizedType;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 934,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L934",
              },
              "type": "number",
            },
            Object {
              "docs": Array [],
              "id": "ParenthesizedTypeNode.type",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "type",
              "signature": "readonly type: TypeNode;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 935,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L935",
              },
              "type": "TypeNode",
            },
          ],
        },
        "name": "ParenthesizedTypeNode",
        "signature": "interface ParenthesizedTypeNode extends TypeNode {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 933,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L933",
        },
      },
      Object {
        "docs": Array [
          "/**
     * Interface extending ParseConfigHost to support ParseConfigFile that reads config file and reports errors
     */",
        ],
        "id": "ParseConfigFileHost",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [
            Object {
              "docs": Array [],
              "id": "ParseConfigFileHost.getCurrentDirectory",
              "kind": "InterfaceMethodDeclaration",
              "name": "getCurrentDirectory",
              "signature": "getCurrentDirectory: () => string;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 4564,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4564",
              },
              "type": "() => string",
            },
          ],
          "properties": Array [],
        },
        "name": "ParseConfigFileHost",
        "signature": "interface ParseConfigFileHost
    extends ParseConfigHost,
        ConfigFileDiagnosticsReporter {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4563,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4563",
        },
      },
      Object {
        "docs": Array [],
        "id": "ParseConfigHost",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [
            Object {
              "docs": Array [
                "/**
         * Gets a value indicating whether the specified path exists and is a file.
         * @param path The path to test.
         */",
              ],
              "id": "ParseConfigHost.fileExists",
              "kind": "InterfaceMethodDeclaration",
              "name": "fileExists",
              "signature": "fileExists: (path: string) => boolean;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2030,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2030",
              },
              "type": "(path: string) => boolean",
            },
            Object {
              "docs": Array [],
              "id": "ParseConfigHost.readDirectory",
              "kind": "InterfaceMethodDeclaration",
              "name": "readDirectory",
              "signature": "readDirectory: (
    rootDir: string,
    extensions: readonly string[],
    excludes: readonly string[] | undefined,
    includes: readonly string[],
    depth?: number
) => readonly string[];",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2025,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2025",
              },
              "type": "(rootDir: string, extensions: readonly string[], excludes: readonly string[] | undefined, includes: readonly string[], depth?: number) => readonly string[]",
            },
            Object {
              "docs": Array [],
              "id": "ParseConfigHost.readFile",
              "kind": "InterfaceMethodDeclaration",
              "name": "readFile",
              "signature": "readFile: (path: string) => string | undefined;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2031,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2031",
              },
              "type": "(path: string) => string | undefined",
            },
            Object {
              "docs": Array [],
              "id": "ParseConfigHost.trace",
              "kind": "InterfaceMethodDeclaration",
              "name": "trace",
              "signature": "trace: (s: string) => void;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2032,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2032",
              },
              "type": "(s: string) => void",
            },
          ],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "ParseConfigHost.useCaseSensitiveFileNames",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "useCaseSensitiveFileNames",
              "signature": "useCaseSensitiveFileNames: boolean;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2024,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2024",
              },
              "type": "boolean",
            },
          ],
        },
        "name": "ParseConfigHost",
        "signature": "interface ParseConfigHost {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 2023,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2023",
        },
      },
      Object {
        "docs": Array [
          "/** Either a parsed command line or a parsed tsconfig.json */",
        ],
        "id": "ParsedCommandLine",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "ParsedCommandLine.compileOnSave",
              "isOptional": true,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "compileOnSave",
              "signature": "compileOnSave?: boolean;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2969,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2969",
              },
              "type": "boolean",
            },
            Object {
              "docs": Array [],
              "id": "ParsedCommandLine.errors",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "errors",
              "signature": "errors: Diagnostic[];",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2967,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2967",
              },
              "type": "Diagnostic[]",
            },
            Object {
              "docs": Array [],
              "id": "ParsedCommandLine.fileNames",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "fileNames",
              "signature": "fileNames: string[];",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2963,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2963",
              },
              "type": "string[]",
            },
            Object {
              "docs": Array [],
              "id": "ParsedCommandLine.options",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "options",
              "signature": "options: CompilerOptions;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2961,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2961",
              },
              "type": "CompilerOptions",
            },
            Object {
              "docs": Array [],
              "id": "ParsedCommandLine.projectReferences",
              "isOptional": true,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "projectReferences",
              "signature": "projectReferences?: readonly ProjectReference[];",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2964,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2964",
              },
              "type": "readonly ProjectReference[]",
            },
            Object {
              "docs": Array [],
              "id": "ParsedCommandLine.raw",
              "isOptional": true,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "raw",
              "signature": "raw?: any;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2966,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2966",
              },
              "type": "any",
            },
            Object {
              "docs": Array [],
              "id": "ParsedCommandLine.typeAcquisition",
              "isOptional": true,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "typeAcquisition",
              "signature": "typeAcquisition?: TypeAcquisition;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2962,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2962",
              },
              "type": "TypeAcquisition",
            },
            Object {
              "docs": Array [],
              "id": "ParsedCommandLine.watchOptions",
              "isOptional": true,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "watchOptions",
              "signature": "watchOptions?: WatchOptions;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2965,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2965",
              },
              "type": "WatchOptions",
            },
            Object {
              "docs": Array [],
              "id": "ParsedCommandLine.wildcardDirectories",
              "isOptional": true,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "wildcardDirectories",
              "signature": "wildcardDirectories?: MapLike<WatchDirectoryFlags>;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2968,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2968",
              },
              "type": "MapLike<WatchDirectoryFlags>",
            },
          ],
        },
        "name": "ParsedCommandLine",
        "signature": "interface ParsedCommandLine {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 2960,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2960",
        },
      },
      Object {
        "docs": Array [],
        "id": "ParsedTsconfig",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [
                "/**
         * Note that the case of the config path has not yet been normalized, as no files have been imported into the project yet
         */",
              ],
              "id": "ParsedTsconfig.extendedConfigPath",
              "isOptional": true,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "extendedConfigPath",
              "signature": "extendedConfigPath?: string;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 4620,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4620",
              },
              "type": "string",
            },
            Object {
              "docs": Array [],
              "id": "ParsedTsconfig.options",
              "isOptional": true,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "options",
              "signature": "options?: CompilerOptions;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 4614,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4614",
              },
              "type": "CompilerOptions",
            },
            Object {
              "docs": Array [],
              "id": "ParsedTsconfig.raw",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "raw",
              "signature": "raw: any;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 4613,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4613",
              },
              "type": "any",
            },
            Object {
              "docs": Array [],
              "id": "ParsedTsconfig.typeAcquisition",
              "isOptional": true,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "typeAcquisition",
              "signature": "typeAcquisition?: TypeAcquisition;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 4616,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4616",
              },
              "type": "TypeAcquisition",
            },
            Object {
              "docs": Array [],
              "id": "ParsedTsconfig.watchOptions",
              "isOptional": true,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "watchOptions",
              "signature": "watchOptions?: WatchOptions;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 4615,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4615",
              },
              "type": "WatchOptions",
            },
          ],
        },
        "name": "ParsedTsconfig",
        "signature": "interface ParsedTsconfig {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4612,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4612",
        },
      },
      Object {
        "docs": Array [],
        "id": "PartiallyEmittedExpression",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "PartiallyEmittedExpression.expression",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "expression",
              "signature": "readonly expression: Expression;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 983,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L983",
              },
              "type": "Expression",
            },
            Object {
              "docs": Array [],
              "id": "PartiallyEmittedExpression.kind",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "kind",
              "signature": "readonly kind: SyntaxKind.PartiallyEmittedExpression;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 982,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L982",
              },
              "type": "number",
            },
          ],
        },
        "name": "PartiallyEmittedExpression",
        "signature": "interface PartiallyEmittedExpression extends LeftHandSideExpression {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 981,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L981",
        },
      },
      Object {
        "docs": Array [],
        "id": "PerformanceEvent",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "PerformanceEvent.durationMs",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "durationMs",
              "signature": "durationMs: number;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5376,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5376",
              },
              "type": "number",
            },
            Object {
              "docs": Array [],
              "id": "PerformanceEvent.kind",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "kind",
              "signature": "kind: 'UpdateGraph' | 'CreatePackageJsonAutoImportProvider';",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5375,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5375",
              },
              "type": "\\"UpdateGraph\\" | \\"CreatePackageJsonAutoImportProvider\\"",
            },
          ],
        },
        "name": "PerformanceEvent",
        "signature": "interface PerformanceEvent {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 5374,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5374",
        },
      },
      Object {
        "docs": Array [],
        "id": "PerModuleNameCache",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [
            Object {
              "docs": Array [],
              "id": "PerModuleNameCache.get",
              "kind": "InterfaceMethodDeclaration",
              "name": "get",
              "signature": "get: (directory: string) => ResolvedModuleWithFailedLookupLocations | undefined;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 4668,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4668",
              },
              "type": "(directory: string) => ResolvedModuleWithFailedLookupLocations | undefined",
            },
            Object {
              "docs": Array [],
              "id": "PerModuleNameCache.set",
              "kind": "InterfaceMethodDeclaration",
              "name": "set",
              "signature": "set: (
    directory: string,
    result: ResolvedModuleWithFailedLookupLocations
) => void;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 4669,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4669",
              },
              "type": "(directory: string, result: ResolvedModuleWithFailedLookupLocations) => void",
            },
          ],
          "properties": Array [],
        },
        "name": "PerModuleNameCache",
        "signature": "interface PerModuleNameCache {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4667,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4667",
        },
      },
      Object {
        "docs": Array [],
        "id": "PluginImport",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "PluginImport.name",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "name",
              "signature": "name: string;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2755,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2755",
              },
              "type": "string",
            },
          ],
        },
        "name": "PluginImport",
        "signature": "interface PluginImport {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 2754,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2754",
        },
      },
      Object {
        "docs": Array [],
        "id": "PostfixUnaryExpression",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "PostfixUnaryExpression.kind",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "kind",
              "signature": "readonly kind: SyntaxKind.PostfixUnaryExpression;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1001,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1001",
              },
              "type": "number",
            },
            Object {
              "docs": Array [],
              "id": "PostfixUnaryExpression.operand",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "operand",
              "signature": "readonly operand: LeftHandSideExpression;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1002,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1002",
              },
              "type": "LeftHandSideExpression",
            },
            Object {
              "docs": Array [],
              "id": "PostfixUnaryExpression.operator",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "operator",
              "signature": "readonly operator: PostfixUnaryOperator;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1003,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1003",
              },
              "type": "PostfixUnaryOperator",
            },
          ],
        },
        "name": "PostfixUnaryExpression",
        "signature": "interface PostfixUnaryExpression extends UpdateExpression {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 1000,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1000",
        },
      },
      Object {
        "docs": Array [],
        "id": "PrefixUnaryExpression",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "PrefixUnaryExpression.kind",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "kind",
              "signature": "readonly kind: SyntaxKind.PrefixUnaryExpression;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 995,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L995",
              },
              "type": "number",
            },
            Object {
              "docs": Array [],
              "id": "PrefixUnaryExpression.operand",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "operand",
              "signature": "readonly operand: UnaryExpression;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 997,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L997",
              },
              "type": "UnaryExpression",
            },
            Object {
              "docs": Array [],
              "id": "PrefixUnaryExpression.operator",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "operator",
              "signature": "readonly operator: PrefixUnaryOperator;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 996,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L996",
              },
              "type": "PrefixUnaryOperator",
            },
          ],
        },
        "name": "PrefixUnaryExpression",
        "signature": "interface PrefixUnaryExpression extends UpdateExpression {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 994,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L994",
        },
      },
      Object {
        "docs": Array [],
        "id": "PreProcessedFileInfo",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "PreProcessedFileInfo.ambientExternalModules",
              "isOptional": true,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "ambientExternalModules",
              "signature": "ambientExternalModules?: string[];",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5364,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5364",
              },
              "type": "string[]",
            },
            Object {
              "docs": Array [],
              "id": "PreProcessedFileInfo.importedFiles",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "importedFiles",
              "signature": "importedFiles: FileReference[];",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5363,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5363",
              },
              "type": "FileReference[]",
            },
            Object {
              "docs": Array [],
              "id": "PreProcessedFileInfo.isLibFile",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "isLibFile",
              "signature": "isLibFile: boolean;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5365,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5365",
              },
              "type": "boolean",
            },
            Object {
              "docs": Array [],
              "id": "PreProcessedFileInfo.libReferenceDirectives",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "libReferenceDirectives",
              "signature": "libReferenceDirectives: FileReference[];",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5362,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5362",
              },
              "type": "FileReference[]",
            },
            Object {
              "docs": Array [],
              "id": "PreProcessedFileInfo.referencedFiles",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "referencedFiles",
              "signature": "referencedFiles: FileReference[];",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5360,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5360",
              },
              "type": "FileReference[]",
            },
            Object {
              "docs": Array [],
              "id": "PreProcessedFileInfo.typeReferenceDirectives",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "typeReferenceDirectives",
              "signature": "typeReferenceDirectives: FileReference[];",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5361,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5361",
              },
              "type": "FileReference[]",
            },
          ],
        },
        "name": "PreProcessedFileInfo",
        "signature": "interface PreProcessedFileInfo {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 5359,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5359",
        },
      },
      Object {
        "docs": Array [],
        "id": "PrimaryExpression",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [],
        },
        "name": "PrimaryExpression",
        "signature": "interface PrimaryExpression extends MemberExpression {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 1011,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1011",
        },
      },
      Object {
        "docs": Array [],
        "id": "Printer",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [
            Object {
              "docs": Array [
                "/**
         * Prints a bundle of source files as-is, without any emit transformations.
         */",
              ],
              "id": "Printer.printBundle",
              "kind": "InterfaceMethodDeclaration",
              "name": "printBundle",
              "signature": "printBundle: (bundle: Bundle) => string;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3718,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3718",
              },
              "type": "(bundle: Bundle) => string",
            },
            Object {
              "docs": Array [
                "/**
         * Prints a source file as-is, without any emit transformations.
         */",
              ],
              "id": "Printer.printFile",
              "kind": "InterfaceMethodDeclaration",
              "name": "printFile",
              "signature": "printFile: (sourceFile: SourceFile) => string;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3714,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3714",
              },
              "type": "(sourceFile: SourceFile) => string",
            },
            Object {
              "docs": Array [
                "/**
         * Prints a list of nodes using the given format flags
         */",
              ],
              "id": "Printer.printList",
              "kind": "InterfaceMethodDeclaration",
              "name": "printList",
              "signature": "printList: <T extends Node>(
    format: ListFormat,
    list: NodeArray<T>,
    sourceFile: SourceFile
) => string;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3710,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3710",
              },
              "type": "<T extends Node>(format: ListFormat, list: NodeArray<T>, sourceFile: SourceFile) => string",
            },
            Object {
              "docs": Array [
                "/**
         * Print a node and its subtree as-is, without any emit transformations.
         * @param hint A value indicating the purpose of a node. This is primarily used to
         * distinguish between an \`Identifier\` used in an expression position, versus an
         * \`Identifier\` used as an \`IdentifierName\` as part of a declaration. For most nodes you
         * should just pass \`Unspecified\`.
         * @param node The node to print. The node and its subtree are printed as-is, without any
         * emit transformations.
         * @param sourceFile A source file that provides context for the node. The source text of
         * the file is used to emit the original source content for literals and identifiers, while
         * the identifiers of the source file are used when generating unique names to avoid
         * collisions.
         */",
              ],
              "id": "Printer.printNode",
              "kind": "InterfaceMethodDeclaration",
              "name": "printNode",
              "signature": "printNode: (hint: EmitHint, node: Node, sourceFile: SourceFile) => string;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3706,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3706",
              },
              "type": "(hint: EmitHint, node: Node, sourceFile: SourceFile) => string",
            },
          ],
          "properties": Array [],
        },
        "name": "Printer",
        "signature": "interface Printer {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 3692,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3692",
        },
      },
      Object {
        "docs": Array [],
        "id": "PrinterOptions",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "PrinterOptions.newLine",
              "isOptional": true,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "newLine",
              "signature": "newLine?: NewLineKind;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3770,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3770",
              },
              "type": "NewLineKind",
            },
            Object {
              "docs": Array [],
              "id": "PrinterOptions.noEmitHelpers",
              "isOptional": true,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "noEmitHelpers",
              "signature": "noEmitHelpers?: boolean;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3772,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3772",
              },
              "type": "boolean",
            },
            Object {
              "docs": Array [],
              "id": "PrinterOptions.omitTrailingSemicolon",
              "isOptional": true,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "omitTrailingSemicolon",
              "signature": "omitTrailingSemicolon?: boolean;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3771,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3771",
              },
              "type": "boolean",
            },
            Object {
              "docs": Array [],
              "id": "PrinterOptions.removeComments",
              "isOptional": true,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "removeComments",
              "signature": "removeComments?: boolean;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3769,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3769",
              },
              "type": "boolean",
            },
          ],
        },
        "name": "PrinterOptions",
        "signature": "interface PrinterOptions {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 3768,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3768",
        },
      },
      Object {
        "docs": Array [],
        "id": "PrintHandlers",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [
            Object {
              "docs": Array [
                "/**
         * A hook used by the Printer when generating unique names to avoid collisions with
         * globally defined names that exist outside of the current source file.
         */",
              ],
              "id": "PrintHandlers.hasGlobalName",
              "kind": "InterfaceMethodDeclaration",
              "name": "hasGlobalName",
              "signature": "hasGlobalName: (name: string) => boolean;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3725,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3725",
              },
              "type": "(name: string) => boolean",
            },
            Object {
              "docs": Array [
                "/**
         * A hook used to check if an emit notification is required for a node.
         * @param node The node to emit.
         */",
              ],
              "id": "PrintHandlers.isEmitNotificationEnabled",
              "kind": "InterfaceMethodDeclaration",
              "name": "isEmitNotificationEnabled",
              "signature": "isEmitNotificationEnabled: (node: Node | undefined) => boolean;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3749,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3749",
              },
              "type": "(node: Node | undefined) => boolean",
            },
            Object {
              "docs": Array [
                "/**
         * A hook used by the Printer to provide notifications prior to emitting a node. A
         * compatible implementation **must** invoke \`emitCallback\` with the provided \`hint\` and
         * \`node\` values.
         * @param hint A hint indicating the intended purpose of the node.
         * @param node The node to emit.
         * @param emitCallback A callback that, when invoked, will emit the node.
         * @example
         * \`\`\`ts
         * var printer = createPrinter(printerOptions, {
         *   onEmitNode(hint, node, emitCallback) {
         *     // set up or track state prior to emitting the node...
         *     emitCallback(hint, node);
         *     // restore state after emitting the node...
         *   }
         * });
         * \`\`\`
         */",
              ],
              "id": "PrintHandlers.onEmitNode",
              "kind": "InterfaceMethodDeclaration",
              "name": "onEmitNode",
              "signature": "onEmitNode: (
    hint: EmitHint,
    node: Node | undefined,
    emitCallback: (hint: EmitHint, node: Node | undefined) => void
) => void;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3744,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3744",
              },
              "type": "(hint: EmitHint, node: Node | undefined, emitCallback: (hint: EmitHint, node: Node | undefined) => void) => void",
            },
            Object {
              "docs": Array [
                "/**
         * A hook used by the Printer to perform just-in-time substitution of a node. This is
         * primarily used by node transformations that need to substitute one node for another,
         * such as replacing \`myExportedVar\` with \`exports.myExportedVar\`.
         * @param hint A hint indicating the intended purpose of the node.
         * @param node The node to emit.
         * @example
         * \`\`\`ts
         * var printer = createPrinter(printerOptions, {
         *   substituteNode(hint, node) {
         *     // perform substitution if necessary...
         *     return node;
         *   }
         * });
         * \`\`\`
         */",
              ],
              "id": "PrintHandlers.substituteNode",
              "kind": "InterfaceMethodDeclaration",
              "name": "substituteNode",
              "signature": "substituteNode: (hint: EmitHint, node: Node) => Node;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3766,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3766",
              },
              "type": "(hint: EmitHint, node: Node) => Node",
            },
          ],
          "properties": Array [],
        },
        "name": "PrintHandlers",
        "signature": "interface PrintHandlers {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 3720,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3720",
        },
      },
      Object {
        "docs": Array [],
        "id": "PrivateIdentifier",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "PrivateIdentifier.escapedText",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "escapedText",
              "signature": "readonly escapedText: __String;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 658,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L658",
              },
              "type": "__String",
            },
            Object {
              "docs": Array [],
              "id": "PrivateIdentifier.kind",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "kind",
              "signature": "readonly kind: SyntaxKind.PrivateIdentifier;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 657,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L657",
              },
              "type": "number",
            },
          ],
        },
        "name": "PrivateIdentifier",
        "signature": "interface PrivateIdentifier extends Node {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 656,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L656",
        },
      },
      Object {
        "docs": Array [],
        "id": "PrivateIdentifier",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "PrivateIdentifier.text",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "text",
              "signature": "readonly text: string;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5276,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5276",
              },
              "type": "string",
            },
          ],
        },
        "name": "PrivateIdentifier",
        "signature": "interface PrivateIdentifier {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 5275,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5275",
        },
      },
      Object {
        "docs": Array [],
        "id": "Program",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [
            Object {
              "docs": Array [
                "/**
         * Emits the JavaScript and declaration files.  If targetSourceFile is not specified, then
         * the JavaScript and declaration files will be produced for all the files in this program.
         * If targetSourceFile is specified, then only the JavaScript and declaration for that
         * specific file will be generated.
         *
         * If writeFile is not specified then the writeFile callback from the compiler host will be
         * used for writing the JavaScript and declaration files.  Otherwise, the writeFile parameter
         * will be invoked when writing the JavaScript and declaration files.
         */",
              ],
              "id": "Program.emit",
              "kind": "InterfaceMethodDeclaration",
              "name": "emit",
              "signature": "emit: (
    targetSourceFile?: SourceFile,
    writeFile?: WriteFileCallback,
    cancellationToken?: CancellationToken,
    emitOnlyDtsFiles?: boolean,
    customTransformers?: CustomTransformers
) => EmitResult;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2070,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2070",
              },
              "type": "(targetSourceFile?: SourceFile, writeFile?: WriteFileCallback, cancellationToken?: CancellationToken, emitOnlyDtsFiles?: boolean, customTransformers?: CustomTransformers) => EmitResult",
            },
            Object {
              "docs": Array [],
              "id": "Program.getConfigFileParsingDiagnostics",
              "kind": "InterfaceMethodDeclaration",
              "name": "getConfigFileParsingDiagnostics",
              "signature": "getConfigFileParsingDiagnostics: () => readonly Diagnostic[];",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2077,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2077",
              },
              "type": "() => readonly Diagnostic[]",
            },
            Object {
              "docs": Array [],
              "id": "Program.getCurrentDirectory",
              "kind": "InterfaceMethodDeclaration",
              "name": "getCurrentDirectory",
              "signature": "getCurrentDirectory: () => string;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2051,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2051",
              },
              "type": "() => string",
            },
            Object {
              "docs": Array [],
              "id": "Program.getDeclarationDiagnostics",
              "kind": "InterfaceMethodDeclaration",
              "name": "getDeclarationDiagnostics",
              "signature": "getDeclarationDiagnostics: (
    sourceFile?: SourceFile,
    cancellationToken?: CancellationToken
) => readonly DiagnosticWithLocation[];",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2076,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2076",
              },
              "type": "(sourceFile?: SourceFile, cancellationToken?: CancellationToken) => readonly DiagnosticWithLocation[]",
            },
            Object {
              "docs": Array [],
              "id": "Program.getGlobalDiagnostics",
              "kind": "InterfaceMethodDeclaration",
              "name": "getGlobalDiagnostics",
              "signature": "getGlobalDiagnostics: (
    cancellationToken?: CancellationToken
) => readonly Diagnostic[];",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2072,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2072",
              },
              "type": "(cancellationToken?: CancellationToken) => readonly Diagnostic[]",
            },
            Object {
              "docs": Array [],
              "id": "Program.getIdentifierCount",
              "kind": "InterfaceMethodDeclaration",
              "name": "getIdentifierCount",
              "signature": "getIdentifierCount: () => number;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2084,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2084",
              },
              "type": "() => number",
            },
            Object {
              "docs": Array [],
              "id": "Program.getInstantiationCount",
              "kind": "InterfaceMethodDeclaration",
              "name": "getInstantiationCount",
              "signature": "getInstantiationCount: () => number;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2087,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2087",
              },
              "type": "() => number",
            },
            Object {
              "docs": Array [],
              "id": "Program.getNodeCount",
              "kind": "InterfaceMethodDeclaration",
              "name": "getNodeCount",
              "signature": "getNodeCount: () => number;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2083,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2083",
              },
              "type": "() => number",
            },
            Object {
              "docs": Array [],
              "id": "Program.getOptionsDiagnostics",
              "kind": "InterfaceMethodDeclaration",
              "name": "getOptionsDiagnostics",
              "signature": "getOptionsDiagnostics: (
    cancellationToken?: CancellationToken
) => readonly Diagnostic[];",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2071,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2071",
              },
              "type": "(cancellationToken?: CancellationToken) => readonly Diagnostic[]",
            },
            Object {
              "docs": Array [],
              "id": "Program.getProjectReferences",
              "kind": "InterfaceMethodDeclaration",
              "name": "getProjectReferences",
              "signature": "getProjectReferences: () => readonly ProjectReference[] | undefined;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2096,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2096",
              },
              "type": "() => readonly ProjectReference[] | undefined",
            },
            Object {
              "docs": Array [],
              "id": "Program.getRelationCacheSizes",
              "kind": "InterfaceMethodDeclaration",
              "name": "getRelationCacheSizes",
              "signature": "getRelationCacheSizes: () => {
    assignable: number;
    identity: number;
    subtype: number;
    strictSubtype: number;
};",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2088,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2088",
              },
              "type": "() => {    assignable: number;    identity: number;    subtype: number;    strictSubtype: number;}",
            },
            Object {
              "docs": Array [],
              "id": "Program.getResolvedProjectReferences",
              "kind": "InterfaceMethodDeclaration",
              "name": "getResolvedProjectReferences",
              "signature": "getResolvedProjectReferences: () =>
    | readonly (ResolvedProjectReference | undefined)[]
    | undefined;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2097,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2097",
              },
              "type": "() => readonly (ResolvedProjectReference | undefined)[] | undefined",
            },
            Object {
              "docs": Array [
                "/**
         * Get a list of root file names that were passed to a 'createProgram'
         */",
              ],
              "id": "Program.getRootFileNames",
              "kind": "InterfaceMethodDeclaration",
              "name": "getRootFileNames",
              "signature": "getRootFileNames: () => readonly string[];",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2055,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2055",
              },
              "type": "() => readonly string[]",
            },
            Object {
              "docs": Array [
                "/** The first time this is called, it will return global diagnostics (no location). */",
              ],
              "id": "Program.getSemanticDiagnostics",
              "kind": "InterfaceMethodDeclaration",
              "name": "getSemanticDiagnostics",
              "signature": "getSemanticDiagnostics: (
    sourceFile?: SourceFile,
    cancellationToken?: CancellationToken
) => readonly Diagnostic[];",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2075,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2075",
              },
              "type": "(sourceFile?: SourceFile, cancellationToken?: CancellationToken) => readonly Diagnostic[]",
            },
            Object {
              "docs": Array [
                "/**
         * Get a list of files in the program
         */",
              ],
              "id": "Program.getSourceFiles",
              "kind": "InterfaceMethodDeclaration",
              "name": "getSourceFiles",
              "signature": "getSourceFiles: () => readonly SourceFile[];",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2059,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2059",
              },
              "type": "() => readonly SourceFile[]",
            },
            Object {
              "docs": Array [],
              "id": "Program.getSymbolCount",
              "kind": "InterfaceMethodDeclaration",
              "name": "getSymbolCount",
              "signature": "getSymbolCount: () => number;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2085,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2085",
              },
              "type": "() => number",
            },
            Object {
              "docs": Array [],
              "id": "Program.getSyntacticDiagnostics",
              "kind": "InterfaceMethodDeclaration",
              "name": "getSyntacticDiagnostics",
              "signature": "getSyntacticDiagnostics: (
    sourceFile?: SourceFile,
    cancellationToken?: CancellationToken
) => readonly DiagnosticWithLocation[];",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2073,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2073",
              },
              "type": "(sourceFile?: SourceFile, cancellationToken?: CancellationToken) => readonly DiagnosticWithLocation[]",
            },
            Object {
              "docs": Array [],
              "id": "Program.getTypeCatalog",
              "kind": "InterfaceMethodDeclaration",
              "name": "getTypeCatalog",
              "signature": "getTypeCatalog: () => readonly Type[];",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2082,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2082",
              },
              "type": "() => readonly Type[]",
            },
            Object {
              "docs": Array [
                "/**
         * Gets a type checker that can be used to semantically analyze source files in the program.
         */",
              ],
              "id": "Program.getTypeChecker",
              "kind": "InterfaceMethodDeclaration",
              "name": "getTypeChecker",
              "signature": "getTypeChecker: () => TypeChecker;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2081,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2081",
              },
              "type": "() => TypeChecker",
            },
            Object {
              "docs": Array [],
              "id": "Program.getTypeCount",
              "kind": "InterfaceMethodDeclaration",
              "name": "getTypeCount",
              "signature": "getTypeCount: () => number;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2086,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2086",
              },
              "type": "() => number",
            },
            Object {
              "docs": Array [],
              "id": "Program.isSourceFileDefaultLibrary",
              "kind": "InterfaceMethodDeclaration",
              "name": "isSourceFileDefaultLibrary",
              "signature": "isSourceFileDefaultLibrary: (file: SourceFile) => boolean;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2095,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2095",
              },
              "type": "(file: SourceFile) => boolean",
            },
            Object {
              "docs": Array [],
              "id": "Program.isSourceFileFromExternalLibrary",
              "kind": "InterfaceMethodDeclaration",
              "name": "isSourceFileFromExternalLibrary",
              "signature": "isSourceFileFromExternalLibrary: (file: SourceFile) => boolean;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2094,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2094",
              },
              "type": "(file: SourceFile) => boolean",
            },
          ],
          "properties": Array [],
        },
        "name": "Program",
        "signature": "interface Program extends ScriptReferenceHost {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 2050,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2050",
        },
      },
      Object {
        "docs": Array [],
        "id": "ProgramHost",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [
            Object {
              "docs": Array [],
              "id": "ProgramHost.createHash",
              "kind": "InterfaceMethodDeclaration",
              "name": "createHash",
              "signature": "createHash: (data: string) => string;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 4999,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4999",
              },
              "type": "(data: string) => string",
            },
            Object {
              "docs": Array [
                "/** If provided, used for module resolution as well as to handle directory structure */",
              ],
              "id": "ProgramHost.directoryExists",
              "kind": "InterfaceMethodDeclaration",
              "name": "directoryExists",
              "signature": "directoryExists: (path: string) => boolean;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5011,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5011",
              },
              "type": "(path: string) => boolean",
            },
            Object {
              "docs": Array [
                "/**
         * Use to check file presence for source files and
         * if resolveModuleNames is not provided (complier is in charge of module resolution) then module files as well
         */",
              ],
              "id": "ProgramHost.fileExists",
              "kind": "InterfaceMethodDeclaration",
              "name": "fileExists",
              "signature": "fileExists: (path: string) => boolean;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5004,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5004",
              },
              "type": "(path: string) => boolean",
            },
            Object {
              "docs": Array [],
              "id": "ProgramHost.getCurrentDirectory",
              "kind": "InterfaceMethodDeclaration",
              "name": "getCurrentDirectory",
              "signature": "getCurrentDirectory: () => string;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 4996,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4996",
              },
              "type": "() => string",
            },
            Object {
              "docs": Array [],
              "id": "ProgramHost.getDefaultLibFileName",
              "kind": "InterfaceMethodDeclaration",
              "name": "getDefaultLibFileName",
              "signature": "getDefaultLibFileName: (options: CompilerOptions) => string;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 4997,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4997",
              },
              "type": "(options: CompilerOptions) => string",
            },
            Object {
              "docs": Array [],
              "id": "ProgramHost.getDefaultLibLocation",
              "kind": "InterfaceMethodDeclaration",
              "name": "getDefaultLibLocation",
              "signature": "getDefaultLibLocation: () => string;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 4998,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4998",
              },
              "type": "() => string",
            },
            Object {
              "docs": Array [
                "/** If provided, used in resolutions as well as handling directory structure */",
              ],
              "id": "ProgramHost.getDirectories",
              "kind": "InterfaceMethodDeclaration",
              "name": "getDirectories",
              "signature": "getDirectories: (path: string) => string[];",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5013,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5013",
              },
              "type": "(path: string) => string[]",
            },
            Object {
              "docs": Array [
                "/** If provided is used to get the environment variable */",
              ],
              "id": "ProgramHost.getEnvironmentVariable",
              "kind": "InterfaceMethodDeclaration",
              "name": "getEnvironmentVariable",
              "signature": "getEnvironmentVariable: (name: string) => string | undefined;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5021,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5021",
              },
              "type": "(name: string) => string | undefined",
            },
            Object {
              "docs": Array [],
              "id": "ProgramHost.getNewLine",
              "kind": "InterfaceMethodDeclaration",
              "name": "getNewLine",
              "signature": "getNewLine: () => string;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 4995,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4995",
              },
              "type": "() => string",
            },
            Object {
              "docs": Array [
                "/** If provided, used to cache and handle directory structure modifications */",
              ],
              "id": "ProgramHost.readDirectory",
              "kind": "InterfaceMethodDeclaration",
              "name": "readDirectory",
              "signature": "readDirectory: (
    path: string,
    extensions?: readonly string[],
    exclude?: readonly string[],
    include?: readonly string[],
    depth?: number
) => string[];",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5015,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5015",
              },
              "type": "(path: string, extensions?: readonly string[], exclude?: readonly string[], include?: readonly string[], depth?: number) => string[]",
            },
            Object {
              "docs": Array [
                "/**
         * Use to read file text for source files and
         * if resolveModuleNames is not provided (complier is in charge of module resolution) then module files as well
         */",
              ],
              "id": "ProgramHost.readFile",
              "kind": "InterfaceMethodDeclaration",
              "name": "readFile",
              "signature": "readFile: (path: string, encoding?: string) => string | undefined;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5009,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5009",
              },
              "type": "(path: string, encoding?: string) => string | undefined",
            },
            Object {
              "docs": Array [
                "/** Symbol links resolution */",
              ],
              "id": "ProgramHost.realpath",
              "kind": "InterfaceMethodDeclaration",
              "name": "realpath",
              "signature": "realpath: (path: string) => string;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5017,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5017",
              },
              "type": "(path: string) => string",
            },
            Object {
              "docs": Array [
                "/** If provided, used to resolve the module names, otherwise typescript's default module resolution */",
              ],
              "id": "ProgramHost.resolveModuleNames",
              "kind": "InterfaceMethodDeclaration",
              "name": "resolveModuleNames",
              "signature": "resolveModuleNames: (
    moduleNames: string[],
    containingFile: string,
    reusedNames: string[] | undefined,
    redirectedReference: ResolvedProjectReference | undefined,
    options: CompilerOptions
) => (ResolvedModule | undefined)[];",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5023,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5023",
              },
              "type": "(moduleNames: string[], containingFile: string, reusedNames: string[] | undefined, redirectedReference: ResolvedProjectReference | undefined, options: CompilerOptions) => (ResolvedModule | undefined)[]",
            },
            Object {
              "docs": Array [
                "/** If provided, used to resolve type reference directives, otherwise typescript's default resolution */",
              ],
              "id": "ProgramHost.resolveTypeReferenceDirectives",
              "kind": "InterfaceMethodDeclaration",
              "name": "resolveTypeReferenceDirectives",
              "signature": "resolveTypeReferenceDirectives: (
    typeReferenceDirectiveNames: string[],
    containingFile: string,
    redirectedReference: ResolvedProjectReference | undefined,
    options: CompilerOptions
) => (ResolvedTypeReferenceDirective | undefined)[];",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5025,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5025",
              },
              "type": "(typeReferenceDirectiveNames: string[], containingFile: string, redirectedReference: ResolvedProjectReference | undefined, options: CompilerOptions) => (ResolvedTypeReferenceDirective | undefined)[]",
            },
            Object {
              "docs": Array [
                "/** If provided would be used to write log about compilation */",
              ],
              "id": "ProgramHost.trace",
              "kind": "InterfaceMethodDeclaration",
              "name": "trace",
              "signature": "trace: (s: string) => void;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5019,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5019",
              },
              "type": "(s: string) => void",
            },
            Object {
              "docs": Array [],
              "id": "ProgramHost.useCaseSensitiveFileNames",
              "kind": "InterfaceMethodDeclaration",
              "name": "useCaseSensitiveFileNames",
              "signature": "useCaseSensitiveFileNames: () => boolean;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 4994,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4994",
              },
              "type": "() => boolean",
            },
          ],
          "properties": Array [
            Object {
              "docs": Array [
                "/**
         * Used to create the program when need for program creation or recreation detected
         */",
              ],
              "id": "ProgramHost.createProgram",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "createProgram",
              "signature": "createProgram: CreateProgram<T>;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 4993,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4993",
              },
              "type": "CreateProgram<T>",
            },
          ],
        },
        "name": "ProgramHost",
        "signature": "interface ProgramHost<T extends BuilderProgram> {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4989,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4989",
        },
      },
      Object {
        "docs": Array [],
        "id": "ProjectReference",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [
                "/** True if it is intended that this reference form a circularity */",
              ],
              "id": "ProjectReference.circular",
              "isOptional": true,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "circular",
              "signature": "circular?: boolean;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2765,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2765",
              },
              "type": "boolean",
            },
            Object {
              "docs": Array [
                "/** The path as the user originally wrote it */",
              ],
              "id": "ProjectReference.originalPath",
              "isOptional": true,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "originalPath",
              "signature": "originalPath?: string;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2761,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2761",
              },
              "type": "string",
            },
            Object {
              "docs": Array [
                "/** A normalized path on disk */",
              ],
              "id": "ProjectReference.path",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "path",
              "signature": "path: string;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2759,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2759",
              },
              "type": "string",
            },
            Object {
              "docs": Array [
                "/** True if the output of this reference should be prepended to the output of this project. Only valid for --outFile compilations */",
              ],
              "id": "ProjectReference.prepend",
              "isOptional": true,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "prepend",
              "signature": "prepend?: boolean;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2763,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2763",
              },
              "type": "boolean",
            },
          ],
        },
        "name": "ProjectReference",
        "signature": "interface ProjectReference {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 2757,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2757",
        },
      },
      Object {
        "docs": Array [],
        "id": "PropertyAccessChain",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "PropertyAccessChain.name",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "name",
              "signature": "readonly name: Identifier | PrivateIdentifier;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1223,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1223",
              },
              "type": "Identifier | PrivateIdentifier",
            },
          ],
        },
        "name": "PropertyAccessChain",
        "signature": "interface PropertyAccessChain extends PropertyAccessExpression {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 1221,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1221",
        },
      },
      Object {
        "docs": Array [
          "/** Brand for a PropertyAccessExpression which, like a QualifiedName, consists of a sequence of identifiers separated by dots. */",
        ],
        "id": "PropertyAccessEntityNameExpression",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "PropertyAccessEntityNameExpression.expression",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "expression",
              "signature": "readonly expression: EntityNameExpression;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1231,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1231",
              },
              "type": "EntityNameExpression",
            },
            Object {
              "docs": Array [],
              "id": "PropertyAccessEntityNameExpression.name",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "name",
              "signature": "readonly name: Identifier;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1232,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1232",
              },
              "type": "Identifier",
            },
          ],
        },
        "name": "PropertyAccessEntityNameExpression",
        "signature": "interface PropertyAccessEntityNameExpression extends PropertyAccessExpression {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 1229,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1229",
        },
      },
      Object {
        "docs": Array [],
        "id": "PropertyAccessExpression",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "PropertyAccessExpression.expression",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "expression",
              "signature": "readonly expression: LeftHandSideExpression;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1217,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1217",
              },
              "type": "LeftHandSideExpression",
            },
            Object {
              "docs": Array [],
              "id": "PropertyAccessExpression.kind",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "kind",
              "signature": "readonly kind: SyntaxKind.PropertyAccessExpression;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1216,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1216",
              },
              "type": "number",
            },
            Object {
              "docs": Array [],
              "id": "PropertyAccessExpression.name",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "name",
              "signature": "readonly name: Identifier | PrivateIdentifier;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1219,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1219",
              },
              "type": "Identifier | PrivateIdentifier",
            },
            Object {
              "docs": Array [],
              "id": "PropertyAccessExpression.questionDotToken",
              "isOptional": true,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "questionDotToken",
              "signature": "readonly questionDotToken?: QuestionDotToken;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1218,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1218",
              },
              "type": "QuestionDotToken",
            },
          ],
        },
        "name": "PropertyAccessExpression",
        "signature": "interface PropertyAccessExpression extends MemberExpression, NamedDeclaration {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 1215,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1215",
        },
      },
      Object {
        "docs": Array [],
        "id": "PropertyAssignment",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "PropertyAssignment.exclamationToken",
              "isOptional": true,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "exclamationToken",
              "signature": "readonly exclamationToken?: ExclamationToken;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 746,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L746",
              },
              "type": "ExclamationToken",
            },
            Object {
              "docs": Array [],
              "id": "PropertyAssignment.initializer",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "initializer",
              "signature": "readonly initializer: Expression;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 747,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L747",
              },
              "type": "Expression",
            },
            Object {
              "docs": Array [],
              "id": "PropertyAssignment.kind",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "kind",
              "signature": "readonly kind: SyntaxKind.PropertyAssignment;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 742,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L742",
              },
              "type": "number",
            },
            Object {
              "docs": Array [],
              "id": "PropertyAssignment.name",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "name",
              "signature": "readonly name: PropertyName;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 744,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L744",
              },
              "type": "PropertyName",
            },
            Object {
              "docs": Array [],
              "id": "PropertyAssignment.parent",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "parent",
              "signature": "readonly parent: ObjectLiteralExpression;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 743,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L743",
              },
              "type": "ObjectLiteralExpression",
            },
            Object {
              "docs": Array [],
              "id": "PropertyAssignment.questionToken",
              "isOptional": true,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "questionToken",
              "signature": "readonly questionToken?: QuestionToken;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 745,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L745",
              },
              "type": "QuestionToken",
            },
          ],
        },
        "name": "PropertyAssignment",
        "signature": "interface PropertyAssignment extends ObjectLiteralElement, JSDocContainer {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 741,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L741",
        },
      },
      Object {
        "docs": Array [],
        "id": "PropertyDeclaration",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "PropertyDeclaration.exclamationToken",
              "isOptional": true,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "exclamationToken",
              "signature": "readonly exclamationToken?: ExclamationToken;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 731,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L731",
              },
              "type": "ExclamationToken",
            },
            Object {
              "docs": Array [],
              "id": "PropertyDeclaration.initializer",
              "isOptional": true,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "initializer",
              "signature": "readonly initializer?: Expression;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 733,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L733",
              },
              "type": "Expression",
            },
            Object {
              "docs": Array [],
              "id": "PropertyDeclaration.kind",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "kind",
              "signature": "readonly kind: SyntaxKind.PropertyDeclaration;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 727,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L727",
              },
              "type": "number",
            },
            Object {
              "docs": Array [],
              "id": "PropertyDeclaration.name",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "name",
              "signature": "readonly name: PropertyName;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 729,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L729",
              },
              "type": "PropertyName",
            },
            Object {
              "docs": Array [],
              "id": "PropertyDeclaration.parent",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "parent",
              "signature": "readonly parent: ClassLikeDeclaration;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 728,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L728",
              },
              "type": "ClassLikeDeclaration",
            },
            Object {
              "docs": Array [],
              "id": "PropertyDeclaration.questionToken",
              "isOptional": true,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "questionToken",
              "signature": "readonly questionToken?: QuestionToken;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 730,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L730",
              },
              "type": "QuestionToken",
            },
            Object {
              "docs": Array [],
              "id": "PropertyDeclaration.type",
              "isOptional": true,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "type",
              "signature": "readonly type?: TypeNode;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 732,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L732",
              },
              "type": "TypeNode",
            },
          ],
        },
        "name": "PropertyDeclaration",
        "signature": "interface PropertyDeclaration extends ClassElement, JSDocContainer {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 726,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L726",
        },
      },
      Object {
        "docs": Array [],
        "id": "PropertyLikeDeclaration",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "PropertyLikeDeclaration.name",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "name",
              "signature": "readonly name: PropertyName;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 765,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L765",
              },
              "type": "PropertyName",
            },
          ],
        },
        "name": "PropertyLikeDeclaration",
        "signature": "interface PropertyLikeDeclaration extends NamedDeclaration {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 764,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L764",
        },
      },
      Object {
        "docs": Array [],
        "id": "PropertySignature",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "PropertySignature.initializer",
              "isOptional": true,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "initializer",
              "signature": "initializer?: Expression;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 724,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L724",
              },
              "type": "Expression",
            },
            Object {
              "docs": Array [],
              "id": "PropertySignature.kind",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "kind",
              "signature": "readonly kind: SyntaxKind.PropertySignature;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 720,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L720",
              },
              "type": "number",
            },
            Object {
              "docs": Array [],
              "id": "PropertySignature.name",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "name",
              "signature": "readonly name: PropertyName;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 721,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L721",
              },
              "type": "PropertyName",
            },
            Object {
              "docs": Array [],
              "id": "PropertySignature.questionToken",
              "isOptional": true,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "questionToken",
              "signature": "readonly questionToken?: QuestionToken;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 722,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L722",
              },
              "type": "QuestionToken",
            },
            Object {
              "docs": Array [],
              "id": "PropertySignature.type",
              "isOptional": true,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "type",
              "signature": "readonly type?: TypeNode;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 723,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L723",
              },
              "type": "TypeNode",
            },
          ],
        },
        "name": "PropertySignature",
        "signature": "interface PropertySignature extends TypeElement, JSDocContainer {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 719,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L719",
        },
      },
      Object {
        "docs": Array [
          "/** Represents a bigint literal value without requiring bigint support */",
        ],
        "id": "PseudoBigInt",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "PseudoBigInt.base10Value",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "base10Value",
              "signature": "base10Value: string;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3876,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3876",
              },
              "type": "string",
            },
            Object {
              "docs": Array [],
              "id": "PseudoBigInt.negative",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "negative",
              "signature": "negative: boolean;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3875,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3875",
              },
              "type": "boolean",
            },
          ],
        },
        "name": "PseudoBigInt",
        "signature": "interface PseudoBigInt {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 3874,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3874",
        },
      },
      Object {
        "docs": Array [],
        "id": "PunctuationToken",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [],
        },
        "name": "PunctuationToken",
        "signature": "interface PunctuationToken<TKind extends PunctuationSyntaxKind>
    extends Token<TKind> {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 573,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L573",
        },
      },
      Object {
        "docs": Array [
          "/** Array that is only intended to be pushed to, never read. */",
        ],
        "id": "Push",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [
            Object {
              "docs": Array [],
              "id": "Push.push",
              "kind": "InterfaceMethodDeclaration",
              "name": "push",
              "signature": "push: (...values: T[]) => void;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 90,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L90",
              },
              "type": "(...values: T[]) => void",
            },
          ],
          "properties": Array [],
        },
        "name": "Push",
        "signature": "interface Push<T> {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 89,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L89",
        },
      },
      Object {
        "docs": Array [],
        "id": "QualifiedName",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "QualifiedName.kind",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "kind",
              "signature": "readonly kind: SyntaxKind.QualifiedName;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 635,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L635",
              },
              "type": "number",
            },
            Object {
              "docs": Array [],
              "id": "QualifiedName.left",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "left",
              "signature": "readonly left: EntityName;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 636,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L636",
              },
              "type": "EntityName",
            },
            Object {
              "docs": Array [],
              "id": "QualifiedName.right",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "right",
              "signature": "readonly right: Identifier;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 637,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L637",
              },
              "type": "Identifier",
            },
          ],
        },
        "name": "QualifiedName",
        "signature": "interface QualifiedName extends Node {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 634,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L634",
        },
      },
      Object {
        "docs": Array [],
        "id": "QuickInfo",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "QuickInfo.displayParts",
              "isOptional": true,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "displayParts",
              "signature": "displayParts?: SymbolDisplayPart[];",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5984,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5984",
              },
              "type": "SymbolDisplayPart[]",
            },
            Object {
              "docs": Array [],
              "id": "QuickInfo.documentation",
              "isOptional": true,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "documentation",
              "signature": "documentation?: SymbolDisplayPart[];",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5985,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5985",
              },
              "type": "SymbolDisplayPart[]",
            },
            Object {
              "docs": Array [],
              "id": "QuickInfo.kind",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "kind",
              "signature": "kind: ScriptElementKind;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5981,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5981",
              },
              "type": "ScriptElementKind",
            },
            Object {
              "docs": Array [],
              "id": "QuickInfo.kindModifiers",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "kindModifiers",
              "signature": "kindModifiers: string;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5982,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5982",
              },
              "type": "string",
            },
            Object {
              "docs": Array [],
              "id": "QuickInfo.tags",
              "isOptional": true,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "tags",
              "signature": "tags?: JSDocTagInfo[];",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5986,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5986",
              },
              "type": "JSDocTagInfo[]",
            },
            Object {
              "docs": Array [],
              "id": "QuickInfo.textSpan",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "textSpan",
              "signature": "textSpan: TextSpan;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5983,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5983",
              },
              "type": "TextSpan",
            },
          ],
        },
        "name": "QuickInfo",
        "signature": "interface QuickInfo {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 5980,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5980",
        },
      },
      Object {
        "docs": Array [],
        "id": "ReadBuildProgramHost",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [
            Object {
              "docs": Array [],
              "id": "ReadBuildProgramHost.getCurrentDirectory",
              "kind": "InterfaceMethodDeclaration",
              "name": "getCurrentDirectory",
              "signature": "getCurrentDirectory: () => string;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 4959,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4959",
              },
              "type": "() => string",
            },
            Object {
              "docs": Array [],
              "id": "ReadBuildProgramHost.readFile",
              "kind": "InterfaceMethodDeclaration",
              "name": "readFile",
              "signature": "readFile: (fileName: string) => string | undefined;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 4960,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4960",
              },
              "type": "(fileName: string) => string | undefined",
            },
            Object {
              "docs": Array [],
              "id": "ReadBuildProgramHost.useCaseSensitiveFileNames",
              "kind": "InterfaceMethodDeclaration",
              "name": "useCaseSensitiveFileNames",
              "signature": "useCaseSensitiveFileNames: () => boolean;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 4958,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4958",
              },
              "type": "() => boolean",
            },
          ],
          "properties": Array [],
        },
        "name": "ReadBuildProgramHost",
        "signature": "interface ReadBuildProgramHost {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4957,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4957",
        },
      },
      Object {
        "docs": Array [
          "/** Common read methods for ES6 Map/Set. */",
        ],
        "id": "ReadonlyCollection",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [
            Object {
              "docs": Array [],
              "id": "ReadonlyCollection.has",
              "kind": "InterfaceMethodDeclaration",
              "name": "has",
              "signature": "has: (key: K) => boolean;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 37,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L37",
              },
              "type": "(key: K) => boolean",
            },
            Object {
              "docs": Array [],
              "id": "ReadonlyCollection.keys",
              "kind": "InterfaceMethodDeclaration",
              "name": "keys",
              "signature": "keys: () => Iterator<K>;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 38,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L38",
              },
              "type": "() => Iterator<K>",
            },
          ],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "ReadonlyCollection.size",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "size",
              "signature": "readonly size: number;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 36,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L36",
              },
              "type": "number",
            },
          ],
        },
        "name": "ReadonlyCollection",
        "signature": "interface ReadonlyCollection<K> {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 35,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L35",
        },
      },
      Object {
        "docs": Array [
          "/** ES6 Map interface, only read methods included. */",
        ],
        "id": "ReadonlyESMap",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [
            Object {
              "docs": Array [],
              "id": "ReadonlyESMap.entries",
              "kind": "InterfaceMethodDeclaration",
              "name": "entries",
              "signature": "entries: () => Iterator<[K, V]>;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 49,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L49",
              },
              "type": "() => Iterator<[K, V]>",
            },
            Object {
              "docs": Array [],
              "id": "ReadonlyESMap.forEach",
              "kind": "InterfaceMethodDeclaration",
              "name": "forEach",
              "signature": "forEach: (action: (value: V, key: K) => void) => void;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 50,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L50",
              },
              "type": "(action: (value: V, key: K) => void) => void",
            },
            Object {
              "docs": Array [],
              "id": "ReadonlyESMap.get",
              "kind": "InterfaceMethodDeclaration",
              "name": "get",
              "signature": "get: (key: K) => V | undefined;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 47,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L47",
              },
              "type": "(key: K) => V | undefined",
            },
            Object {
              "docs": Array [],
              "id": "ReadonlyESMap.values",
              "kind": "InterfaceMethodDeclaration",
              "name": "values",
              "signature": "values: () => Iterator<V>;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 48,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L48",
              },
              "type": "() => Iterator<V>",
            },
          ],
          "properties": Array [],
        },
        "name": "ReadonlyESMap",
        "signature": "interface ReadonlyESMap<K, V> extends ReadonlyCollection<K> {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 46,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L46",
        },
      },
      Object {
        "docs": Array [
          "/**
     * ES6 Map interface, only read methods included.
     */",
        ],
        "id": "ReadonlyMap",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [],
        },
        "name": "ReadonlyMap",
        "signature": "interface ReadonlyMap<T> extends ReadonlyESMap<string, T> {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 55,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L55",
        },
      },
      Object {
        "docs": Array [
          "/**
     * @deprecated Use \`ts.ReadonlyESMap<K, V>\` instead.
     */",
        ],
        "id": "ReadonlyMap",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [],
        },
        "name": "ReadonlyMap",
        "signature": "interface ReadonlyMap<T> extends ReadonlyESMap<string, T> {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 7195,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L7195",
        },
      },
      Object {
        "docs": Array [
          "/** ES6 Set interface, only read methods included. */",
        ],
        "id": "ReadonlySet",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [
            Object {
              "docs": Array [],
              "id": "ReadonlySet.entries",
              "kind": "InterfaceMethodDeclaration",
              "name": "entries",
              "signature": "entries: () => Iterator<[T, T]>;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 70,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L70",
              },
              "type": "() => Iterator<[T, T]>",
            },
            Object {
              "docs": Array [],
              "id": "ReadonlySet.forEach",
              "kind": "InterfaceMethodDeclaration",
              "name": "forEach",
              "signature": "forEach: (action: (value: T, key: T) => void) => void;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 71,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L71",
              },
              "type": "(action: (value: T, key: T) => void) => void",
            },
            Object {
              "docs": Array [],
              "id": "ReadonlySet.has",
              "kind": "InterfaceMethodDeclaration",
              "name": "has",
              "signature": "has: (value: T) => boolean;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 68,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L68",
              },
              "type": "(value: T) => boolean",
            },
            Object {
              "docs": Array [],
              "id": "ReadonlySet.values",
              "kind": "InterfaceMethodDeclaration",
              "name": "values",
              "signature": "values: () => Iterator<T>;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 69,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L69",
              },
              "type": "() => Iterator<T>",
            },
          ],
          "properties": Array [],
        },
        "name": "ReadonlySet",
        "signature": "interface ReadonlySet<T> extends ReadonlyCollection<T> {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 67,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L67",
        },
      },
      Object {
        "docs": Array [],
        "id": "ReadonlyTextRange",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "ReadonlyTextRange.end",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "end",
              "signature": "readonly end: number;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 103,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L103",
              },
              "type": "number",
            },
            Object {
              "docs": Array [],
              "id": "ReadonlyTextRange.pos",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "pos",
              "signature": "readonly pos: number;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 102,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L102",
              },
              "type": "number",
            },
          ],
        },
        "name": "ReadonlyTextRange",
        "signature": "interface ReadonlyTextRange {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 101,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L101",
        },
      },
      Object {
        "docs": Array [
          "/** ReadonlyMap where keys are \`__String\`s. */",
        ],
        "id": "ReadonlyUnderscoreEscapedMap",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [],
        },
        "name": "ReadonlyUnderscoreEscapedMap",
        "signature": "interface ReadonlyUnderscoreEscapedMap<T> extends ReadonlyESMap<__String, T> {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 2446,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2446",
        },
      },
      Object {
        "docs": Array [
          "/**
     * Represents a single refactoring action - for example, the \\"Extract Method...\\" refactor might
     * offer several actions, each corresponding to a surround class or closure to extract into.
     */",
        ],
        "id": "RefactorActionInfo",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [
                "/**
         * A description of this refactoring action to show to the user.
         * If the parent refactoring is inlined away, this will be the only text shown,
         * so this description should make sense by itself if the parent is inlineable=true
         */",
              ],
              "id": "RefactorActionInfo.description",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "description",
              "signature": "description: string;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5788,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5788",
              },
              "type": "string",
            },
            Object {
              "docs": Array [
                "/**
         * The programmatic name of the refactoring action
         */",
              ],
              "id": "RefactorActionInfo.name",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "name",
              "signature": "name: string;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5782,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5782",
              },
              "type": "string",
            },
            Object {
              "docs": Array [
                "/**
         * A message to show to the user if the refactoring cannot be applied in
         * the current context.
         */",
              ],
              "id": "RefactorActionInfo.notApplicableReason",
              "isOptional": true,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "notApplicableReason",
              "signature": "notApplicableReason?: string;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5793,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5793",
              },
              "type": "string",
            },
          ],
        },
        "name": "RefactorActionInfo",
        "signature": "interface RefactorActionInfo {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 5778,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5778",
        },
      },
      Object {
        "docs": Array [
          "/**
     * A set of edits to make in response to a refactor action, plus an optional
     * location where renaming should be invoked from
     */",
        ],
        "id": "RefactorEditInfo",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "RefactorEditInfo.commands",
              "isOptional": true,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "commands",
              "signature": "commands?: CodeActionCommand[];",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5803,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5803",
              },
              "type": "InstallPackageAction[]",
            },
            Object {
              "docs": Array [],
              "id": "RefactorEditInfo.edits",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "edits",
              "signature": "edits: FileTextChanges[];",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5800,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5800",
              },
              "type": "FileTextChanges[]",
            },
            Object {
              "docs": Array [],
              "id": "RefactorEditInfo.renameFilename",
              "isOptional": true,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "renameFilename",
              "signature": "renameFilename?: string;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5801,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5801",
              },
              "type": "string",
            },
            Object {
              "docs": Array [],
              "id": "RefactorEditInfo.renameLocation",
              "isOptional": true,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "renameLocation",
              "signature": "renameLocation?: number;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5802,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5802",
              },
              "type": "number",
            },
          ],
        },
        "name": "RefactorEditInfo",
        "signature": "interface RefactorEditInfo {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 5799,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5799",
        },
      },
      Object {
        "docs": Array [],
        "id": "ReferencedSymbol",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "ReferencedSymbol.definition",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "definition",
              "signature": "definition: ReferencedSymbolDefinitionInfo;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5945,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5945",
              },
              "type": "ReferencedSymbolDefinitionInfo",
            },
            Object {
              "docs": Array [],
              "id": "ReferencedSymbol.references",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "references",
              "signature": "references: ReferenceEntry[];",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5946,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5946",
              },
              "type": "ReferenceEntry[]",
            },
          ],
        },
        "name": "ReferencedSymbol",
        "signature": "interface ReferencedSymbol {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 5944,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5944",
        },
      },
      Object {
        "docs": Array [],
        "id": "ReferencedSymbolDefinitionInfo",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "ReferencedSymbolDefinitionInfo.displayParts",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "displayParts",
              "signature": "displayParts: SymbolDisplayPart[];",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5942,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5942",
              },
              "type": "SymbolDisplayPart[]",
            },
          ],
        },
        "name": "ReferencedSymbolDefinitionInfo",
        "signature": "interface ReferencedSymbolDefinitionInfo extends DefinitionInfo {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 5941,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5941",
        },
      },
      Object {
        "docs": Array [],
        "id": "ReferenceEntry",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "ReferenceEntry.isDefinition",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "isDefinition",
              "signature": "isDefinition: boolean;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5833,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5833",
              },
              "type": "boolean",
            },
            Object {
              "docs": Array [],
              "id": "ReferenceEntry.isInString",
              "isOptional": true,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "isInString",
              "signature": "isInString?: true;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5834,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5834",
              },
              "type": "boolean",
            },
            Object {
              "docs": Array [],
              "id": "ReferenceEntry.isWriteAccess",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "isWriteAccess",
              "signature": "isWriteAccess: boolean;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5832,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5832",
              },
              "type": "boolean",
            },
          ],
        },
        "name": "ReferenceEntry",
        "signature": "interface ReferenceEntry extends DocumentSpan {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 5831,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5831",
        },
      },
      Object {
        "docs": Array [],
        "id": "RegularExpressionLiteral",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "RegularExpressionLiteral.kind",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "kind",
              "signature": "readonly kind: SyntaxKind.RegularExpressionLiteral;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1141,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1141",
              },
              "type": "number",
            },
          ],
        },
        "name": "RegularExpressionLiteral",
        "signature": "interface RegularExpressionLiteral extends LiteralExpression {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 1140,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1140",
        },
      },
      Object {
        "docs": Array [],
        "id": "RenameInfoFailure",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "RenameInfoFailure.canRename",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "canRename",
              "signature": "canRename: false;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 6003,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6003",
              },
              "type": "boolean",
            },
            Object {
              "docs": Array [],
              "id": "RenameInfoFailure.localizedErrorMessage",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "localizedErrorMessage",
              "signature": "localizedErrorMessage: string;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 6004,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6004",
              },
              "type": "string",
            },
          ],
        },
        "name": "RenameInfoFailure",
        "signature": "interface RenameInfoFailure {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 6002,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6002",
        },
      },
      Object {
        "docs": Array [],
        "id": "RenameInfoOptions",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "RenameInfoOptions.allowRenameOfImportPath",
              "isOptional": true,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "allowRenameOfImportPath",
              "signature": "readonly allowRenameOfImportPath?: boolean;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 6007,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6007",
              },
              "type": "boolean",
            },
          ],
        },
        "name": "RenameInfoOptions",
        "signature": "interface RenameInfoOptions {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 6006,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6006",
        },
      },
      Object {
        "docs": Array [],
        "id": "RenameInfoSuccess",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "RenameInfoSuccess.canRename",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "canRename",
              "signature": "canRename: true;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5990,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5990",
              },
              "type": "boolean",
            },
            Object {
              "docs": Array [],
              "id": "RenameInfoSuccess.displayName",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "displayName",
              "signature": "displayName: string;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5996,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5996",
              },
              "type": "string",
            },
            Object {
              "docs": Array [
                "/**
         * File or directory to rename.
         * If set, \`getEditsForFileRename\` should be called instead of \`findRenameLocations\`.
         */",
              ],
              "id": "RenameInfoSuccess.fileToRename",
              "isOptional": true,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "fileToRename",
              "signature": "fileToRename?: string;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5995,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5995",
              },
              "type": "string",
            },
            Object {
              "docs": Array [],
              "id": "RenameInfoSuccess.fullDisplayName",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "fullDisplayName",
              "signature": "fullDisplayName: string;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5997,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5997",
              },
              "type": "string",
            },
            Object {
              "docs": Array [],
              "id": "RenameInfoSuccess.kind",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "kind",
              "signature": "kind: ScriptElementKind;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5998,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5998",
              },
              "type": "ScriptElementKind",
            },
            Object {
              "docs": Array [],
              "id": "RenameInfoSuccess.kindModifiers",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "kindModifiers",
              "signature": "kindModifiers: string;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5999,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5999",
              },
              "type": "string",
            },
            Object {
              "docs": Array [],
              "id": "RenameInfoSuccess.triggerSpan",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "triggerSpan",
              "signature": "triggerSpan: TextSpan;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 6000,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6000",
              },
              "type": "TextSpan",
            },
          ],
        },
        "name": "RenameInfoSuccess",
        "signature": "interface RenameInfoSuccess {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 5989,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5989",
        },
      },
      Object {
        "docs": Array [],
        "id": "RenameLocation",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "RenameLocation.prefixText",
              "isOptional": true,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "prefixText",
              "signature": "readonly prefixText?: string;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5828,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5828",
              },
              "type": "string",
            },
            Object {
              "docs": Array [],
              "id": "RenameLocation.suffixText",
              "isOptional": true,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "suffixText",
              "signature": "readonly suffixText?: string;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5829,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5829",
              },
              "type": "string",
            },
          ],
        },
        "name": "RenameLocation",
        "signature": "interface RenameLocation extends DocumentSpan {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 5827,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5827",
        },
      },
      Object {
        "docs": Array [
          "/**
     * Represents the result of module resolution.
     * Module resolution will pick up tsx/jsx/js files even if '--jsx' and '--allowJs' are turned off.
     * The Program will then filter results based on these flags.
     *
     * Prefer to return a \`ResolvedModuleFull\` so that the file type does not have to be inferred.
     */",
        ],
        "id": "ResolvedModule",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [
                "/** True if \`resolvedFileName\` comes from \`node_modules\`. */",
              ],
              "id": "ResolvedModule.isExternalLibraryImport",
              "isOptional": true,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "isExternalLibraryImport",
              "signature": "isExternalLibraryImport?: boolean;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3011,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3011",
              },
              "type": "boolean",
            },
            Object {
              "docs": Array [
                "/** Path of the file the module was resolved to. */",
              ],
              "id": "ResolvedModule.resolvedFileName",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "resolvedFileName",
              "signature": "resolvedFileName: string;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3009,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3009",
              },
              "type": "string",
            },
          ],
        },
        "name": "ResolvedModule",
        "signature": "interface ResolvedModule {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 3007,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3007",
        },
      },
      Object {
        "docs": Array [
          "/**
     * ResolvedModule with an explicitly provided \`extension\` property.
     * Prefer this over \`ResolvedModule\`.
     * If changing this, remember to change \`moduleResolutionIsEqualTo\`.
     */",
        ],
        "id": "ResolvedModuleFull",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [
                "/**
         * Extension of resolvedFileName. This must match what's at the end of resolvedFileName.
         * This is optional for backwards-compatibility, but will be added if not provided.
         */",
              ],
              "id": "ResolvedModuleFull.extension",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "extension",
              "signature": "extension: Extension;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3023,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3023",
              },
              "type": "Extension",
            },
            Object {
              "docs": Array [],
              "id": "ResolvedModuleFull.packageId",
              "isOptional": true,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "packageId",
              "signature": "packageId?: PackageId;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3024,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3024",
              },
              "type": "PackageId",
            },
          ],
        },
        "name": "ResolvedModuleFull",
        "signature": "interface ResolvedModuleFull extends ResolvedModule {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 3018,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3018",
        },
      },
      Object {
        "docs": Array [],
        "id": "ResolvedModuleWithFailedLookupLocations",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "ResolvedModuleWithFailedLookupLocations.resolvedModule",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "resolvedModule",
              "signature": "readonly resolvedModule: ResolvedModuleFull | undefined;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3055,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3055",
              },
              "type": "ResolvedModuleFull",
            },
          ],
        },
        "name": "ResolvedModuleWithFailedLookupLocations",
        "signature": "interface ResolvedModuleWithFailedLookupLocations {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 3054,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3054",
        },
      },
      Object {
        "docs": Array [],
        "id": "ResolvedProjectReference",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "ResolvedProjectReference.commandLine",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "commandLine",
              "signature": "commandLine: ParsedCommandLine;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2100,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2100",
              },
              "type": "ParsedCommandLine",
            },
            Object {
              "docs": Array [],
              "id": "ResolvedProjectReference.references",
              "isOptional": true,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "references",
              "signature": "references?: readonly (ResolvedProjectReference | undefined)[];",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2102,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2102",
              },
              "type": "readonly ResolvedProjectReference[]",
            },
            Object {
              "docs": Array [],
              "id": "ResolvedProjectReference.sourceFile",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "sourceFile",
              "signature": "sourceFile: SourceFile;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2101,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2101",
              },
              "type": "SourceFile",
            },
          ],
        },
        "name": "ResolvedProjectReference",
        "signature": "interface ResolvedProjectReference {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 2099,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2099",
        },
      },
      Object {
        "docs": Array [],
        "id": "ResolvedTypeReferenceDirective",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [
                "/** True if \`resolvedFileName\` comes from \`node_modules\`. */",
              ],
              "id": "ResolvedTypeReferenceDirective.isExternalLibraryImport",
              "isOptional": true,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "isExternalLibraryImport",
              "signature": "isExternalLibraryImport?: boolean;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3062,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3062",
              },
              "type": "boolean",
            },
            Object {
              "docs": Array [],
              "id": "ResolvedTypeReferenceDirective.packageId",
              "isOptional": true,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "packageId",
              "signature": "packageId?: PackageId;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3060,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3060",
              },
              "type": "PackageId",
            },
            Object {
              "docs": Array [],
              "id": "ResolvedTypeReferenceDirective.primary",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "primary",
              "signature": "primary: boolean;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3058,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3058",
              },
              "type": "boolean",
            },
            Object {
              "docs": Array [],
              "id": "ResolvedTypeReferenceDirective.resolvedFileName",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "resolvedFileName",
              "signature": "resolvedFileName: string | undefined;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3059,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3059",
              },
              "type": "string",
            },
          ],
        },
        "name": "ResolvedTypeReferenceDirective",
        "signature": "interface ResolvedTypeReferenceDirective {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 3057,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3057",
        },
      },
      Object {
        "docs": Array [],
        "id": "ResolvedTypeReferenceDirectiveWithFailedLookupLocations",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "ResolvedTypeReferenceDirectiveWithFailedLookupLocations.failedLookupLocations",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "failedLookupLocations",
              "signature": "readonly failedLookupLocations: string[];",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3066,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3066",
              },
              "type": "string[]",
            },
            Object {
              "docs": Array [],
              "id": "ResolvedTypeReferenceDirectiveWithFailedLookupLocations.resolvedTypeReferenceDirective",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "resolvedTypeReferenceDirective",
              "signature": "readonly resolvedTypeReferenceDirective:
    | ResolvedTypeReferenceDirective
    | undefined;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3065,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3065",
              },
              "type": "ResolvedTypeReferenceDirective",
            },
          ],
        },
        "name": "ResolvedTypeReferenceDirectiveWithFailedLookupLocations",
        "signature": "interface ResolvedTypeReferenceDirectiveWithFailedLookupLocations {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 3064,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3064",
        },
      },
      Object {
        "docs": Array [
          "/** @deprecated */",
        ],
        "id": "ResolveProjectReferencePathHost",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [
            Object {
              "docs": Array [],
              "id": "ResolveProjectReferencePathHost.fileExists",
              "kind": "InterfaceMethodDeclaration",
              "name": "fileExists",
              "signature": "fileExists: (fileName: string) => boolean;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 4806,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4806",
              },
              "type": "(fileName: string) => boolean",
            },
          ],
          "properties": Array [],
        },
        "name": "ResolveProjectReferencePathHost",
        "signature": "interface ResolveProjectReferencePathHost {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4805,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4805",
        },
      },
      Object {
        "docs": Array [],
        "id": "RestTypeNode",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "RestTypeNode.kind",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "kind",
              "signature": "readonly kind: SyntaxKind.RestType;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 910,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L910",
              },
              "type": "number",
            },
            Object {
              "docs": Array [],
              "id": "RestTypeNode.type",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "type",
              "signature": "readonly type: TypeNode;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 911,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L911",
              },
              "type": "TypeNode",
            },
          ],
        },
        "name": "RestTypeNode",
        "signature": "interface RestTypeNode extends TypeNode {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 909,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L909",
        },
      },
      Object {
        "docs": Array [],
        "id": "ReturnStatement",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "ReturnStatement.expression",
              "isOptional": true,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "expression",
              "signature": "readonly expression?: Expression;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1459,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1459",
              },
              "type": "Expression",
            },
            Object {
              "docs": Array [],
              "id": "ReturnStatement.kind",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "kind",
              "signature": "readonly kind: SyntaxKind.ReturnStatement;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1458,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1458",
              },
              "type": "number",
            },
          ],
        },
        "name": "ReturnStatement",
        "signature": "interface ReturnStatement extends Statement {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 1457,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1457",
        },
      },
      Object {
        "docs": Array [],
        "id": "Scanner",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [
            Object {
              "docs": Array [],
              "id": "Scanner.getStartPos",
              "kind": "InterfaceMethodDeclaration",
              "name": "getStartPos",
              "signature": "getStartPos: () => number;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3941,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3941",
              },
              "type": "() => number",
            },
            Object {
              "docs": Array [],
              "id": "Scanner.getText",
              "kind": "InterfaceMethodDeclaration",
              "name": "getText",
              "signature": "getText: () => string;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3967,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3967",
              },
              "type": "() => string",
            },
            Object {
              "docs": Array [],
              "id": "Scanner.getTextPos",
              "kind": "InterfaceMethodDeclaration",
              "name": "getTextPos",
              "signature": "getTextPos: () => number;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3943,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3943",
              },
              "type": "() => number",
            },
            Object {
              "docs": Array [],
              "id": "Scanner.getToken",
              "kind": "InterfaceMethodDeclaration",
              "name": "getToken",
              "signature": "getToken: () => SyntaxKind;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3942,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3942",
              },
              "type": "() => SyntaxKind",
            },
            Object {
              "docs": Array [],
              "id": "Scanner.getTokenPos",
              "kind": "InterfaceMethodDeclaration",
              "name": "getTokenPos",
              "signature": "getTokenPos: () => number;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3944,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3944",
              },
              "type": "() => number",
            },
            Object {
              "docs": Array [],
              "id": "Scanner.getTokenText",
              "kind": "InterfaceMethodDeclaration",
              "name": "getTokenText",
              "signature": "getTokenText: () => string;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3945,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3945",
              },
              "type": "() => string",
            },
            Object {
              "docs": Array [],
              "id": "Scanner.getTokenValue",
              "kind": "InterfaceMethodDeclaration",
              "name": "getTokenValue",
              "signature": "getTokenValue: () => string;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3946,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3946",
              },
              "type": "() => string",
            },
            Object {
              "docs": Array [],
              "id": "Scanner.hasExtendedUnicodeEscape",
              "kind": "InterfaceMethodDeclaration",
              "name": "hasExtendedUnicodeEscape",
              "signature": "hasExtendedUnicodeEscape: () => boolean;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3948,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3948",
              },
              "type": "() => boolean",
            },
            Object {
              "docs": Array [],
              "id": "Scanner.hasPrecedingLineBreak",
              "kind": "InterfaceMethodDeclaration",
              "name": "hasPrecedingLineBreak",
              "signature": "hasPrecedingLineBreak: () => boolean;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3949,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3949",
              },
              "type": "() => boolean",
            },
            Object {
              "docs": Array [],
              "id": "Scanner.hasUnicodeEscape",
              "kind": "InterfaceMethodDeclaration",
              "name": "hasUnicodeEscape",
              "signature": "hasUnicodeEscape: () => boolean;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3947,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3947",
              },
              "type": "() => boolean",
            },
            Object {
              "docs": Array [],
              "id": "Scanner.isIdentifier",
              "kind": "InterfaceMethodDeclaration",
              "name": "isIdentifier",
              "signature": "isIdentifier: () => boolean;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3950,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3950",
              },
              "type": "() => boolean",
            },
            Object {
              "docs": Array [],
              "id": "Scanner.isReservedWord",
              "kind": "InterfaceMethodDeclaration",
              "name": "isReservedWord",
              "signature": "isReservedWord: () => boolean;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3951,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3951",
              },
              "type": "() => boolean",
            },
            Object {
              "docs": Array [],
              "id": "Scanner.isUnterminated",
              "kind": "InterfaceMethodDeclaration",
              "name": "isUnterminated",
              "signature": "isUnterminated: () => boolean;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3952,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3952",
              },
              "type": "() => boolean",
            },
            Object {
              "docs": Array [],
              "id": "Scanner.lookAhead",
              "kind": "InterfaceMethodDeclaration",
              "name": "lookAhead",
              "signature": "lookAhead: <T>(callback: () => T) => T;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3973,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3973",
              },
              "type": "<T>(callback: () => T) => T",
            },
            Object {
              "docs": Array [],
              "id": "Scanner.reScanAsteriskEqualsToken",
              "kind": "InterfaceMethodDeclaration",
              "name": "reScanAsteriskEqualsToken",
              "signature": "reScanAsteriskEqualsToken: () => SyntaxKind;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3955,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3955",
              },
              "type": "() => SyntaxKind",
            },
            Object {
              "docs": Array [],
              "id": "Scanner.reScanGreaterToken",
              "kind": "InterfaceMethodDeclaration",
              "name": "reScanGreaterToken",
              "signature": "reScanGreaterToken: () => SyntaxKind;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3953,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3953",
              },
              "type": "() => SyntaxKind",
            },
            Object {
              "docs": Array [],
              "id": "Scanner.reScanJsxAttributeValue",
              "kind": "InterfaceMethodDeclaration",
              "name": "reScanJsxAttributeValue",
              "signature": "reScanJsxAttributeValue: () => SyntaxKind;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3960,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3960",
              },
              "type": "() => SyntaxKind",
            },
            Object {
              "docs": Array [],
              "id": "Scanner.reScanJsxToken",
              "kind": "InterfaceMethodDeclaration",
              "name": "reScanJsxToken",
              "signature": "reScanJsxToken: () => JsxTokenSyntaxKind;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3961,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3961",
              },
              "type": "() => JsxTokenSyntaxKind",
            },
            Object {
              "docs": Array [],
              "id": "Scanner.reScanLessThanToken",
              "kind": "InterfaceMethodDeclaration",
              "name": "reScanLessThanToken",
              "signature": "reScanLessThanToken: () => SyntaxKind;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3962,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3962",
              },
              "type": "() => SyntaxKind",
            },
            Object {
              "docs": Array [],
              "id": "Scanner.reScanQuestionToken",
              "kind": "InterfaceMethodDeclaration",
              "name": "reScanQuestionToken",
              "signature": "reScanQuestionToken: () => SyntaxKind;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3963,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3963",
              },
              "type": "() => SyntaxKind",
            },
            Object {
              "docs": Array [],
              "id": "Scanner.reScanSlashToken",
              "kind": "InterfaceMethodDeclaration",
              "name": "reScanSlashToken",
              "signature": "reScanSlashToken: () => SyntaxKind;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3954,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3954",
              },
              "type": "() => SyntaxKind",
            },
            Object {
              "docs": Array [],
              "id": "Scanner.reScanTemplateHeadOrNoSubstitutionTemplate",
              "kind": "InterfaceMethodDeclaration",
              "name": "reScanTemplateHeadOrNoSubstitutionTemplate",
              "signature": "reScanTemplateHeadOrNoSubstitutionTemplate: () => SyntaxKind;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3957,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3957",
              },
              "type": "() => SyntaxKind",
            },
            Object {
              "docs": Array [],
              "id": "Scanner.reScanTemplateToken",
              "kind": "InterfaceMethodDeclaration",
              "name": "reScanTemplateToken",
              "signature": "reScanTemplateToken: (isTaggedTemplate: boolean) => SyntaxKind;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3956,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3956",
              },
              "type": "(isTaggedTemplate: boolean) => SyntaxKind",
            },
            Object {
              "docs": Array [],
              "id": "Scanner.scan",
              "kind": "InterfaceMethodDeclaration",
              "name": "scan",
              "signature": "scan: () => SyntaxKind;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3966,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3966",
              },
              "type": "() => SyntaxKind",
            },
            Object {
              "docs": Array [],
              "id": "Scanner.scanJsDocToken",
              "kind": "InterfaceMethodDeclaration",
              "name": "scanJsDocToken",
              "signature": "scanJsDocToken: () => JSDocSyntaxKind;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3965,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3965",
              },
              "type": "() => JSDocSyntaxKind",
            },
            Object {
              "docs": Array [],
              "id": "Scanner.scanJsxAttributeValue",
              "kind": "InterfaceMethodDeclaration",
              "name": "scanJsxAttributeValue",
              "signature": "scanJsxAttributeValue: () => SyntaxKind;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3959,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3959",
              },
              "type": "() => SyntaxKind",
            },
            Object {
              "docs": Array [],
              "id": "Scanner.scanJsxIdentifier",
              "kind": "InterfaceMethodDeclaration",
              "name": "scanJsxIdentifier",
              "signature": "scanJsxIdentifier: () => SyntaxKind;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3958,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3958",
              },
              "type": "() => SyntaxKind",
            },
            Object {
              "docs": Array [],
              "id": "Scanner.scanJsxToken",
              "kind": "InterfaceMethodDeclaration",
              "name": "scanJsxToken",
              "signature": "scanJsxToken: () => JsxTokenSyntaxKind;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3964,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3964",
              },
              "type": "() => JsxTokenSyntaxKind",
            },
            Object {
              "docs": Array [],
              "id": "Scanner.scanRange",
              "kind": "InterfaceMethodDeclaration",
              "name": "scanRange",
              "signature": "scanRange: <T>(start: number, length: number, callback: () => T) => T;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3974,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3974",
              },
              "type": "<T>(start: number, length: number, callback: () => T) => T",
            },
            Object {
              "docs": Array [],
              "id": "Scanner.setLanguageVariant",
              "kind": "InterfaceMethodDeclaration",
              "name": "setLanguageVariant",
              "signature": "setLanguageVariant: (variant: LanguageVariant) => void;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3971,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3971",
              },
              "type": "(variant: LanguageVariant) => void",
            },
            Object {
              "docs": Array [],
              "id": "Scanner.setOnError",
              "kind": "InterfaceMethodDeclaration",
              "name": "setOnError",
              "signature": "setOnError: (onError: ErrorCallback | undefined) => void;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3969,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3969",
              },
              "type": "(onError: ErrorCallback | undefined) => void",
            },
            Object {
              "docs": Array [],
              "id": "Scanner.setScriptTarget",
              "kind": "InterfaceMethodDeclaration",
              "name": "setScriptTarget",
              "signature": "setScriptTarget: (scriptTarget: ScriptTarget) => void;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3970,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3970",
              },
              "type": "(scriptTarget: ScriptTarget) => void",
            },
            Object {
              "docs": Array [],
              "id": "Scanner.setText",
              "kind": "InterfaceMethodDeclaration",
              "name": "setText",
              "signature": "setText: (text: string | undefined, start?: number, length?: number) => void;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3968,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3968",
              },
              "type": "(text: string | undefined, start?: number, length?: number) => void",
            },
            Object {
              "docs": Array [],
              "id": "Scanner.setTextPos",
              "kind": "InterfaceMethodDeclaration",
              "name": "setTextPos",
              "signature": "setTextPos: (textPos: number) => void;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3972,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3972",
              },
              "type": "(textPos: number) => void",
            },
            Object {
              "docs": Array [],
              "id": "Scanner.tryScan",
              "kind": "InterfaceMethodDeclaration",
              "name": "tryScan",
              "signature": "tryScan: <T>(callback: () => T) => T;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3975,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3975",
              },
              "type": "<T>(callback: () => T) => T",
            },
          ],
          "properties": Array [],
        },
        "name": "Scanner",
        "signature": "interface Scanner {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 3940,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3940",
        },
      },
      Object {
        "docs": Array [],
        "id": "ScriptReferenceHost",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [
            Object {
              "docs": Array [],
              "id": "ScriptReferenceHost.getCompilerOptions",
              "kind": "InterfaceMethodDeclaration",
              "name": "getCompilerOptions",
              "signature": "getCompilerOptions: () => CompilerOptions;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2018,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2018",
              },
              "type": "() => CompilerOptions",
            },
            Object {
              "docs": Array [],
              "id": "ScriptReferenceHost.getCurrentDirectory",
              "kind": "InterfaceMethodDeclaration",
              "name": "getCurrentDirectory",
              "signature": "getCurrentDirectory: () => string;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2021,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2021",
              },
              "type": "() => string",
            },
            Object {
              "docs": Array [],
              "id": "ScriptReferenceHost.getSourceFile",
              "kind": "InterfaceMethodDeclaration",
              "name": "getSourceFile",
              "signature": "getSourceFile: (fileName: string) => SourceFile | undefined;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2019,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2019",
              },
              "type": "(fileName: string) => SourceFile | undefined",
            },
            Object {
              "docs": Array [],
              "id": "ScriptReferenceHost.getSourceFileByPath",
              "kind": "InterfaceMethodDeclaration",
              "name": "getSourceFileByPath",
              "signature": "getSourceFileByPath: (path: Path) => SourceFile | undefined;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2020,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2020",
              },
              "type": "(path: Path) => SourceFile | undefined",
            },
          ],
          "properties": Array [],
        },
        "name": "ScriptReferenceHost",
        "signature": "interface ScriptReferenceHost {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 2017,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2017",
        },
      },
      Object {
        "docs": Array [],
        "id": "SelectionRange",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "SelectionRange.parent",
              "isOptional": true,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "parent",
              "signature": "parent?: SelectionRange;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 6017,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6017",
              },
              "type": "SelectionRange",
            },
            Object {
              "docs": Array [],
              "id": "SelectionRange.textSpan",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "textSpan",
              "signature": "textSpan: TextSpan;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 6016,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6016",
              },
              "type": "TextSpan",
            },
          ],
        },
        "name": "SelectionRange",
        "signature": "interface SelectionRange {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 6015,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6015",
        },
      },
      Object {
        "docs": Array [
          "/**
     * The builder that caches the semantic diagnostics for the program and handles the changed files and affected files
     */",
        ],
        "id": "SemanticDiagnosticsBuilderProgram",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [
            Object {
              "docs": Array [
                "/**
         * Gets the semantic diagnostics from the program for the next affected file and caches it
         * Returns undefined if the iteration is complete
         */",
              ],
              "id": "SemanticDiagnosticsBuilderProgram.getSemanticDiagnosticsOfNextAffectedFile",
              "kind": "InterfaceMethodDeclaration",
              "name": "getSemanticDiagnosticsOfNextAffectedFile",
              "signature": "getSemanticDiagnosticsOfNextAffectedFile: (
    cancellationToken?: CancellationToken,
    ignoreSourceFile?: (sourceFile: SourceFile) => boolean
) => AffectedFileResult<readonly Diagnostic[]>;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 4925,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4925",
              },
              "type": "(cancellationToken?: CancellationToken, ignoreSourceFile?: (sourceFile: SourceFile) => boolean) => AffectedFileResult<readonly Diagnostic[]>",
            },
          ],
          "properties": Array [],
        },
        "name": "SemanticDiagnosticsBuilderProgram",
        "signature": "interface SemanticDiagnosticsBuilderProgram extends BuilderProgram {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4920,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4920",
        },
      },
      Object {
        "docs": Array [
          "/** For when we encounter a semicolon in a class declaration. ES6 allows these as class elements. */",
        ],
        "id": "SemicolonClassElement",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "SemicolonClassElement.kind",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "kind",
              "signature": "readonly kind: SyntaxKind.SemicolonClassElement;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 820,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L820",
              },
              "type": "number",
            },
            Object {
              "docs": Array [],
              "id": "SemicolonClassElement.parent",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "parent",
              "signature": "readonly parent: ClassLikeDeclaration;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 821,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L821",
              },
              "type": "ClassLikeDeclaration",
            },
          ],
        },
        "name": "SemicolonClassElement",
        "signature": "interface SemicolonClassElement extends ClassElement {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 819,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L819",
        },
      },
      Object {
        "docs": Array [
          "/** ES6 Set interface. */",
        ],
        "id": "Set",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [
            Object {
              "docs": Array [],
              "id": "Set.add",
              "kind": "InterfaceMethodDeclaration",
              "name": "add",
              "signature": "add: (value: T) => this;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 75,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L75",
              },
              "type": "(value: T) => this",
            },
            Object {
              "docs": Array [],
              "id": "Set.delete",
              "kind": "InterfaceMethodDeclaration",
              "name": "delete",
              "signature": "delete: (value: T) => boolean;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 76,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L76",
              },
              "type": "(value: T) => boolean",
            },
          ],
          "properties": Array [],
        },
        "name": "Set",
        "signature": "interface Set<T> extends ReadonlySet<T>, Collection<T> {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 74,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L74",
        },
      },
      Object {
        "docs": Array [],
        "id": "SetAccessorDeclaration",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "SetAccessorDeclaration.body",
              "isOptional": true,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "body",
              "signature": "readonly body?: FunctionBody;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 833,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L833",
              },
              "type": "Block",
            },
            Object {
              "docs": Array [],
              "id": "SetAccessorDeclaration.kind",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "kind",
              "signature": "readonly kind: SyntaxKind.SetAccessor;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 830,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L830",
              },
              "type": "number",
            },
            Object {
              "docs": Array [],
              "id": "SetAccessorDeclaration.name",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "name",
              "signature": "readonly name: PropertyName;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 832,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L832",
              },
              "type": "PropertyName",
            },
            Object {
              "docs": Array [],
              "id": "SetAccessorDeclaration.parent",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "parent",
              "signature": "readonly parent: ClassLikeDeclaration | ObjectLiteralExpression;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 831,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L831",
              },
              "type": "ClassLikeDeclaration | ObjectLiteralExpression",
            },
          ],
        },
        "name": "SetAccessorDeclaration",
        "signature": "interface SetAccessorDeclaration
    extends FunctionLikeDeclarationBase,
        ClassElement,
        ObjectLiteralElement,
        JSDocContainer {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 829,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L829",
        },
      },
      Object {
        "docs": Array [],
        "id": "ShorthandPropertyAssignment",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "ShorthandPropertyAssignment.equalsToken",
              "isOptional": true,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "equalsToken",
              "signature": "readonly equalsToken?: EqualsToken;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 755,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L755",
              },
              "type": "EqualsToken",
            },
            Object {
              "docs": Array [],
              "id": "ShorthandPropertyAssignment.exclamationToken",
              "isOptional": true,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "exclamationToken",
              "signature": "readonly exclamationToken?: ExclamationToken;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 754,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L754",
              },
              "type": "ExclamationToken",
            },
            Object {
              "docs": Array [],
              "id": "ShorthandPropertyAssignment.kind",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "kind",
              "signature": "readonly kind: SyntaxKind.ShorthandPropertyAssignment;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 750,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L750",
              },
              "type": "number",
            },
            Object {
              "docs": Array [],
              "id": "ShorthandPropertyAssignment.name",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "name",
              "signature": "readonly name: Identifier;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 752,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L752",
              },
              "type": "Identifier",
            },
            Object {
              "docs": Array [],
              "id": "ShorthandPropertyAssignment.objectAssignmentInitializer",
              "isOptional": true,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "objectAssignmentInitializer",
              "signature": "readonly objectAssignmentInitializer?: Expression;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 756,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L756",
              },
              "type": "Expression",
            },
            Object {
              "docs": Array [],
              "id": "ShorthandPropertyAssignment.parent",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "parent",
              "signature": "readonly parent: ObjectLiteralExpression;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 751,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L751",
              },
              "type": "ObjectLiteralExpression",
            },
            Object {
              "docs": Array [],
              "id": "ShorthandPropertyAssignment.questionToken",
              "isOptional": true,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "questionToken",
              "signature": "readonly questionToken?: QuestionToken;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 753,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L753",
              },
              "type": "QuestionToken",
            },
          ],
        },
        "name": "ShorthandPropertyAssignment",
        "signature": "interface ShorthandPropertyAssignment extends ObjectLiteralElement, JSDocContainer {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 749,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L749",
        },
      },
      Object {
        "docs": Array [],
        "id": "Signature",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "Signature.declaration",
              "isOptional": true,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "declaration",
              "signature": "declaration?: SignatureDeclaration | JSDocSignature;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2669,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2669",
              },
              "type": "SignatureDeclaration | JSDocSignature",
            },
            Object {
              "docs": Array [],
              "id": "Signature.parameters",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "parameters",
              "signature": "parameters: readonly Symbol[];",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2671,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2671",
              },
              "type": "readonly Symbol[]",
            },
            Object {
              "docs": Array [],
              "id": "Signature.typeParameters",
              "isOptional": true,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "typeParameters",
              "signature": "typeParameters?: readonly TypeParameter[];",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2670,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2670",
              },
              "type": "readonly TypeParameter[]",
            },
          ],
        },
        "name": "Signature",
        "signature": "interface Signature {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 2668,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2668",
        },
      },
      Object {
        "docs": Array [],
        "id": "Signature",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [
            Object {
              "docs": Array [],
              "id": "Signature.getDeclaration",
              "kind": "InterfaceMethodDeclaration",
              "name": "getDeclaration",
              "signature": "getDeclaration: () => SignatureDeclaration;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5315,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5315",
              },
              "type": "() => SignatureDeclaration",
            },
            Object {
              "docs": Array [],
              "id": "Signature.getDocumentationComment",
              "kind": "InterfaceMethodDeclaration",
              "name": "getDocumentationComment",
              "signature": "getDocumentationComment: (
    typeChecker: TypeChecker | undefined
) => SymbolDisplayPart[];",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5319,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5319",
              },
              "type": "(typeChecker: TypeChecker | undefined) => SymbolDisplayPart[]",
            },
            Object {
              "docs": Array [],
              "id": "Signature.getJsDocTags",
              "kind": "InterfaceMethodDeclaration",
              "name": "getJsDocTags",
              "signature": "getJsDocTags: () => JSDocTagInfo[];",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5320,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5320",
              },
              "type": "() => JSDocTagInfo[]",
            },
            Object {
              "docs": Array [],
              "id": "Signature.getParameters",
              "kind": "InterfaceMethodDeclaration",
              "name": "getParameters",
              "signature": "getParameters: () => Symbol[];",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5317,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5317",
              },
              "type": "() => Symbol[]",
            },
            Object {
              "docs": Array [],
              "id": "Signature.getReturnType",
              "kind": "InterfaceMethodDeclaration",
              "name": "getReturnType",
              "signature": "getReturnType: () => Type;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5318,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5318",
              },
              "type": "() => Type",
            },
            Object {
              "docs": Array [],
              "id": "Signature.getTypeParameters",
              "kind": "InterfaceMethodDeclaration",
              "name": "getTypeParameters",
              "signature": "getTypeParameters: () => TypeParameter[] | undefined;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5316,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5316",
              },
              "type": "() => TypeParameter[] | undefined",
            },
          ],
          "properties": Array [],
        },
        "name": "Signature",
        "signature": "interface Signature {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 5314,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5314",
        },
      },
      Object {
        "docs": Array [],
        "id": "SignatureDeclarationBase",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "SignatureDeclarationBase.kind",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "kind",
              "signature": "readonly kind: SignatureDeclaration['kind'];",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 675,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L675",
              },
              "type": "SyntaxKind.MethodSignature | SyntaxKind.MethodDeclaration | SyntaxKind.Constructor | SyntaxKind.GetAccessor | SyntaxKind.SetAccessor | SyntaxKind.CallSignature | SyntaxKind.ConstructSignature | SyntaxKind.IndexSignature | SyntaxKind.FunctionType | SyntaxKind.ConstructorType | SyntaxKind.FunctionExpression | SyntaxKind.ArrowFunction | SyntaxKind.FunctionDeclaration | SyntaxKind.JSDocFunctionType",
            },
            Object {
              "docs": Array [],
              "id": "SignatureDeclarationBase.name",
              "isOptional": true,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "name",
              "signature": "readonly name?: PropertyName;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 676,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L676",
              },
              "type": "PropertyName",
            },
            Object {
              "docs": Array [],
              "id": "SignatureDeclarationBase.parameters",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "parameters",
              "signature": "readonly parameters: NodeArray<ParameterDeclaration>;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 678,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L678",
              },
              "type": "NodeArray<ParameterDeclaration>",
            },
            Object {
              "docs": Array [],
              "id": "SignatureDeclarationBase.type",
              "isOptional": true,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "type",
              "signature": "readonly type?: TypeNode;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 679,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L679",
              },
              "type": "TypeNode",
            },
            Object {
              "docs": Array [],
              "id": "SignatureDeclarationBase.typeParameters",
              "isOptional": true,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "typeParameters",
              "signature": "readonly typeParameters?: NodeArray<TypeParameterDeclaration>;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 677,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L677",
              },
              "type": "NodeArray<TypeParameterDeclaration>",
            },
          ],
        },
        "name": "SignatureDeclarationBase",
        "signature": "interface SignatureDeclarationBase extends NamedDeclaration, JSDocContainer {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 674,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L674",
        },
      },
      Object {
        "docs": Array [
          "/**
     * Signals that the signature help request came from a user typing a character.
     * Depending on the character and the syntactic context, the request may or may not be served a result.
     */",
        ],
        "id": "SignatureHelpCharacterTypedReason",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "SignatureHelpCharacterTypedReason.kind",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "kind",
              "signature": "kind: 'characterTyped';",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5619,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5619",
              },
              "type": "string",
            },
            Object {
              "docs": Array [
                "/**
         * Character that was responsible for triggering signature help.
         */",
              ],
              "id": "SignatureHelpCharacterTypedReason.triggerCharacter",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "triggerCharacter",
              "signature": "triggerCharacter: SignatureHelpTriggerCharacter;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5623,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5623",
              },
              "type": "SignatureHelpTriggerCharacter",
            },
          ],
        },
        "name": "SignatureHelpCharacterTypedReason",
        "signature": "interface SignatureHelpCharacterTypedReason {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 5618,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5618",
        },
      },
      Object {
        "docs": Array [
          "/**
     * Signals that the user manually requested signature help.
     * The language service will unconditionally attempt to provide a result.
     */",
        ],
        "id": "SignatureHelpInvokedReason",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "SignatureHelpInvokedReason.kind",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "kind",
              "signature": "kind: 'invoked';",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5611,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5611",
              },
              "type": "string",
            },
            Object {
              "docs": Array [],
              "id": "SignatureHelpInvokedReason.triggerCharacter",
              "isOptional": true,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "triggerCharacter",
              "signature": "triggerCharacter?: undefined;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5612,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5612",
              },
              "type": "undefined",
            },
          ],
        },
        "name": "SignatureHelpInvokedReason",
        "signature": "interface SignatureHelpInvokedReason {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 5610,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5610",
        },
      },
      Object {
        "docs": Array [
          "/**
     * Represents a single signature to show in signature help.
     * The id is used for subsequent calls into the language service to ask questions about the
     * signature help item in the context of any documents that have been updated.  i.e. after
     * an edit has happened, while signature help is still active, the host can ask important
     * questions like 'what parameter is the user currently contained within?'.
     */",
        ],
        "id": "SignatureHelpItem",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "SignatureHelpItem.documentation",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "documentation",
              "signature": "documentation: SymbolDisplayPart[];",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 6032,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6032",
              },
              "type": "SymbolDisplayPart[]",
            },
            Object {
              "docs": Array [],
              "id": "SignatureHelpItem.isVariadic",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "isVariadic",
              "signature": "isVariadic: boolean;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 6027,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6027",
              },
              "type": "boolean",
            },
            Object {
              "docs": Array [],
              "id": "SignatureHelpItem.parameters",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "parameters",
              "signature": "parameters: SignatureHelpParameter[];",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 6031,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6031",
              },
              "type": "SignatureHelpParameter[]",
            },
            Object {
              "docs": Array [],
              "id": "SignatureHelpItem.prefixDisplayParts",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "prefixDisplayParts",
              "signature": "prefixDisplayParts: SymbolDisplayPart[];",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 6028,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6028",
              },
              "type": "SymbolDisplayPart[]",
            },
            Object {
              "docs": Array [],
              "id": "SignatureHelpItem.separatorDisplayParts",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "separatorDisplayParts",
              "signature": "separatorDisplayParts: SymbolDisplayPart[];",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 6030,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6030",
              },
              "type": "SymbolDisplayPart[]",
            },
            Object {
              "docs": Array [],
              "id": "SignatureHelpItem.suffixDisplayParts",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "suffixDisplayParts",
              "signature": "suffixDisplayParts: SymbolDisplayPart[];",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 6029,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6029",
              },
              "type": "SymbolDisplayPart[]",
            },
            Object {
              "docs": Array [],
              "id": "SignatureHelpItem.tags",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "tags",
              "signature": "tags: JSDocTagInfo[];",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 6033,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6033",
              },
              "type": "JSDocTagInfo[]",
            },
          ],
        },
        "name": "SignatureHelpItem",
        "signature": "interface SignatureHelpItem {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 6026,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6026",
        },
      },
      Object {
        "docs": Array [
          "/**
     * Represents a set of signature help items, and the preferred item that should be selected.
     */",
        ],
        "id": "SignatureHelpItems",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "SignatureHelpItems.applicableSpan",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "applicableSpan",
              "signature": "applicableSpan: TextSpan;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 6040,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6040",
              },
              "type": "TextSpan",
            },
            Object {
              "docs": Array [],
              "id": "SignatureHelpItems.argumentCount",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "argumentCount",
              "signature": "argumentCount: number;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 6043,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6043",
              },
              "type": "number",
            },
            Object {
              "docs": Array [],
              "id": "SignatureHelpItems.argumentIndex",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "argumentIndex",
              "signature": "argumentIndex: number;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 6042,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6042",
              },
              "type": "number",
            },
            Object {
              "docs": Array [],
              "id": "SignatureHelpItems.items",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "items",
              "signature": "items: SignatureHelpItem[];",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 6039,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6039",
              },
              "type": "SignatureHelpItem[]",
            },
            Object {
              "docs": Array [],
              "id": "SignatureHelpItems.selectedItemIndex",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "selectedItemIndex",
              "signature": "selectedItemIndex: number;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 6041,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6041",
              },
              "type": "number",
            },
          ],
        },
        "name": "SignatureHelpItems",
        "signature": "interface SignatureHelpItems {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 6038,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6038",
        },
      },
      Object {
        "docs": Array [],
        "id": "SignatureHelpItemsOptions",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "SignatureHelpItemsOptions.triggerReason",
              "isOptional": true,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "triggerReason",
              "signature": "triggerReason?: SignatureHelpTriggerReason;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5603,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5603",
              },
              "type": "SignatureHelpTriggerReason",
            },
          ],
        },
        "name": "SignatureHelpItemsOptions",
        "signature": "interface SignatureHelpItemsOptions {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 5602,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5602",
        },
      },
      Object {
        "docs": Array [],
        "id": "SignatureHelpParameter",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "SignatureHelpParameter.displayParts",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "displayParts",
              "signature": "displayParts: SymbolDisplayPart[];",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 6012,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6012",
              },
              "type": "SymbolDisplayPart[]",
            },
            Object {
              "docs": Array [],
              "id": "SignatureHelpParameter.documentation",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "documentation",
              "signature": "documentation: SymbolDisplayPart[];",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 6011,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6011",
              },
              "type": "SymbolDisplayPart[]",
            },
            Object {
              "docs": Array [],
              "id": "SignatureHelpParameter.isOptional",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "isOptional",
              "signature": "isOptional: boolean;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 6013,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6013",
              },
              "type": "boolean",
            },
            Object {
              "docs": Array [],
              "id": "SignatureHelpParameter.name",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "name",
              "signature": "name: string;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 6010,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6010",
              },
              "type": "string",
            },
          ],
        },
        "name": "SignatureHelpParameter",
        "signature": "interface SignatureHelpParameter {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 6009,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6009",
        },
      },
      Object {
        "docs": Array [
          "/**
     * Signals that this signature help request came from typing a character or moving the cursor.
     * This should only occur if a signature help session was already active and the editor needs to see if it should adjust.
     * The language service will unconditionally attempt to provide a result.
     * \`triggerCharacter\` can be \`undefined\` for a retrigger caused by a cursor move.
     */",
        ],
        "id": "SignatureHelpRetriggeredReason",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "SignatureHelpRetriggeredReason.kind",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "kind",
              "signature": "kind: 'retrigger';",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5632,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5632",
              },
              "type": "string",
            },
            Object {
              "docs": Array [
                "/**
         * Character that was responsible for triggering signature help.
         */",
              ],
              "id": "SignatureHelpRetriggeredReason.triggerCharacter",
              "isOptional": true,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "triggerCharacter",
              "signature": "triggerCharacter?: SignatureHelpRetriggerCharacter;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5636,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5636",
              },
              "type": "SignatureHelpRetriggerCharacter",
            },
          ],
        },
        "name": "SignatureHelpRetriggeredReason",
        "signature": "interface SignatureHelpRetriggeredReason {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 5631,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5631",
        },
      },
      Object {
        "docs": Array [],
        "id": "SolutionBuilder",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [
            Object {
              "docs": Array [],
              "id": "SolutionBuilder.build",
              "kind": "InterfaceMethodDeclaration",
              "name": "build",
              "signature": "build: (project?: string, cancellationToken?: CancellationToken) => ExitStatus;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5125,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5125",
              },
              "type": "(project?: string, cancellationToken?: CancellationToken) => ExitStatus",
            },
            Object {
              "docs": Array [],
              "id": "SolutionBuilder.buildReferences",
              "kind": "InterfaceMethodDeclaration",
              "name": "buildReferences",
              "signature": "buildReferences: (
    project: string,
    cancellationToken?: CancellationToken
) => ExitStatus;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5127,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5127",
              },
              "type": "(project: string, cancellationToken?: CancellationToken) => ExitStatus",
            },
            Object {
              "docs": Array [],
              "id": "SolutionBuilder.clean",
              "kind": "InterfaceMethodDeclaration",
              "name": "clean",
              "signature": "clean: (project?: string) => ExitStatus;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5126,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5126",
              },
              "type": "(project?: string) => ExitStatus",
            },
            Object {
              "docs": Array [],
              "id": "SolutionBuilder.cleanReferences",
              "kind": "InterfaceMethodDeclaration",
              "name": "cleanReferences",
              "signature": "cleanReferences: (project?: string) => ExitStatus;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5128,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5128",
              },
              "type": "(project?: string) => ExitStatus",
            },
            Object {
              "docs": Array [],
              "id": "SolutionBuilder.getNextInvalidatedProject",
              "kind": "InterfaceMethodDeclaration",
              "name": "getNextInvalidatedProject",
              "signature": "getNextInvalidatedProject: (
    cancellationToken?: CancellationToken
) => InvalidatedProject<T> | undefined;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5129,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5129",
              },
              "type": "(cancellationToken?: CancellationToken) => InvalidatedProject<T> | undefined",
            },
          ],
          "properties": Array [],
        },
        "name": "SolutionBuilder",
        "signature": "interface SolutionBuilder<T extends BuilderProgram> {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 5124,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5124",
        },
      },
      Object {
        "docs": Array [],
        "id": "SolutionBuilderHost",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "SolutionBuilderHost.reportErrorSummary",
              "isOptional": true,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "reportErrorSummary",
              "signature": "reportErrorSummary?: ReportEmitErrorSummary;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5120,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5120",
              },
              "type": "ReportEmitErrorSummary",
            },
          ],
        },
        "name": "SolutionBuilderHost",
        "signature": "interface SolutionBuilderHost<T extends BuilderProgram>
    extends SolutionBuilderHostBase<T> {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 5119,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5119",
        },
      },
      Object {
        "docs": Array [],
        "id": "SolutionBuilderHostBase",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [
            Object {
              "docs": Array [],
              "id": "SolutionBuilderHostBase.afterProgramEmitAndDiagnostics",
              "kind": "InterfaceMethodDeclaration",
              "name": "afterProgramEmitAndDiagnostics",
              "signature": "afterProgramEmitAndDiagnostics: (program: T) => void;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5117,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5117",
              },
              "type": "(program: T) => void",
            },
            Object {
              "docs": Array [],
              "id": "SolutionBuilderHostBase.createDirectory",
              "kind": "InterfaceMethodDeclaration",
              "name": "createDirectory",
              "signature": "createDirectory: (path: string) => void;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5105,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5105",
              },
              "type": "(path: string) => void",
            },
            Object {
              "docs": Array [],
              "id": "SolutionBuilderHostBase.deleteFile",
              "kind": "InterfaceMethodDeclaration",
              "name": "deleteFile",
              "signature": "deleteFile: (fileName: string) => void;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5113,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5113",
              },
              "type": "(fileName: string) => void",
            },
            Object {
              "docs": Array [],
              "id": "SolutionBuilderHostBase.getModifiedTime",
              "kind": "InterfaceMethodDeclaration",
              "name": "getModifiedTime",
              "signature": "getModifiedTime: (fileName: string) => Date | undefined;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5111,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5111",
              },
              "type": "(fileName: string) => Date | undefined",
            },
            Object {
              "docs": Array [],
              "id": "SolutionBuilderHostBase.getParsedCommandLine",
              "kind": "InterfaceMethodDeclaration",
              "name": "getParsedCommandLine",
              "signature": "getParsedCommandLine: (fileName: string) => ParsedCommandLine | undefined;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5114,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5114",
              },
              "type": "(fileName: string) => ParsedCommandLine | undefined",
            },
            Object {
              "docs": Array [],
              "id": "SolutionBuilderHostBase.setModifiedTime",
              "kind": "InterfaceMethodDeclaration",
              "name": "setModifiedTime",
              "signature": "setModifiedTime: (fileName: string, date: Date) => void;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5112,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5112",
              },
              "type": "(fileName: string, date: Date) => void",
            },
            Object {
              "docs": Array [
                "/**
         * Should provide create directory and writeFile if done of invalidatedProjects is not invoked with
         * writeFileCallback
         */",
              ],
              "id": "SolutionBuilderHostBase.writeFile",
              "kind": "InterfaceMethodDeclaration",
              "name": "writeFile",
              "signature": "writeFile: (path: string, data: string, writeByteOrderMark?: boolean) => void;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5110,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5110",
              },
              "type": "(path: string, data: string, writeByteOrderMark?: boolean) => void",
            },
          ],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "SolutionBuilderHostBase.reportDiagnostic",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "reportDiagnostic",
              "signature": "reportDiagnostic: DiagnosticReporter;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5115,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5115",
              },
              "type": "DiagnosticReporter",
            },
            Object {
              "docs": Array [],
              "id": "SolutionBuilderHostBase.reportSolutionBuilderStatus",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "reportSolutionBuilderStatus",
              "signature": "reportSolutionBuilderStatus: DiagnosticReporter;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5116,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5116",
              },
              "type": "DiagnosticReporter",
            },
          ],
        },
        "name": "SolutionBuilderHostBase",
        "signature": "interface SolutionBuilderHostBase<T extends BuilderProgram> extends ProgramHost<T> {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 5104,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5104",
        },
      },
      Object {
        "docs": Array [],
        "id": "SolutionBuilderWithWatchHost",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [],
        },
        "name": "SolutionBuilderWithWatchHost",
        "signature": "interface SolutionBuilderWithWatchHost<T extends BuilderProgram>
    extends SolutionBuilderHostBase<T>,
        WatchHost {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 5122,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5122",
        },
      },
      Object {
        "docs": Array [],
        "id": "SortedArray",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "SortedArray.\\" __sortedArrayBrand\\"",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "\\" __sortedArrayBrand\\"",
              "signature": "' __sortedArrayBrand': any;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 32,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L32",
              },
              "type": "any",
            },
          ],
        },
        "name": "SortedArray",
        "signature": "interface SortedArray<T> extends Array<T> {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 31,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L31",
        },
      },
      Object {
        "docs": Array [],
        "id": "SortedReadonlyArray",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "SortedReadonlyArray.\\" __sortedArrayBrand\\"",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "\\" __sortedArrayBrand\\"",
              "signature": "' __sortedArrayBrand': any;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 29,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L29",
              },
              "type": "any",
            },
          ],
        },
        "name": "SortedReadonlyArray",
        "signature": "interface SortedReadonlyArray<T> extends ReadonlyArray<T> {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 28,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L28",
        },
      },
      Object {
        "docs": Array [],
        "id": "SourceFile",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "SourceFile.amdDependencies",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "amdDependencies",
              "signature": "amdDependencies: readonly AmdDependency[];",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1927,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1927",
              },
              "type": "readonly AmdDependency[]",
            },
            Object {
              "docs": Array [],
              "id": "SourceFile.endOfFileToken",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "endOfFileToken",
              "signature": "readonly endOfFileToken: Token<SyntaxKind.EndOfFileToken>;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1924,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1924",
              },
              "type": "Token<SyntaxKind.EndOfFileToken>",
            },
            Object {
              "docs": Array [],
              "id": "SourceFile.fileName",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "fileName",
              "signature": "fileName: string;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1925,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1925",
              },
              "type": "string",
            },
            Object {
              "docs": Array [
                "/**
         * lib.d.ts should have a reference comment like
         *
         *  /// <reference no-default-lib=\\"true\\"/>
         *
         * If any other file has this comment, it signals not to include lib.d.ts
         * because this containing file is intended to act as a default library.
         */",
              ],
              "id": "SourceFile.hasNoDefaultLib",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "hasNoDefaultLib",
              "signature": "hasNoDefaultLib: boolean;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1942,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1942",
              },
              "type": "boolean",
            },
            Object {
              "docs": Array [],
              "id": "SourceFile.isDeclarationFile",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "isDeclarationFile",
              "signature": "isDeclarationFile: boolean;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1933,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1933",
              },
              "type": "boolean",
            },
            Object {
              "docs": Array [],
              "id": "SourceFile.kind",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "kind",
              "signature": "readonly kind: SyntaxKind.SourceFile;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1922,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1922",
              },
              "type": "number",
            },
            Object {
              "docs": Array [],
              "id": "SourceFile.languageVariant",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "languageVariant",
              "signature": "languageVariant: LanguageVariant;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1932,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1932",
              },
              "type": "LanguageVariant",
            },
            Object {
              "docs": Array [],
              "id": "SourceFile.languageVersion",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "languageVersion",
              "signature": "languageVersion: ScriptTarget;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1943,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1943",
              },
              "type": "ScriptTarget",
            },
            Object {
              "docs": Array [],
              "id": "SourceFile.libReferenceDirectives",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "libReferenceDirectives",
              "signature": "libReferenceDirectives: readonly FileReference[];",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1931,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1931",
              },
              "type": "readonly FileReference[]",
            },
            Object {
              "docs": Array [],
              "id": "SourceFile.moduleName",
              "isOptional": true,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "moduleName",
              "signature": "moduleName?: string;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1928,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1928",
              },
              "type": "string",
            },
            Object {
              "docs": Array [],
              "id": "SourceFile.referencedFiles",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "referencedFiles",
              "signature": "referencedFiles: readonly FileReference[];",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1929,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1929",
              },
              "type": "readonly FileReference[]",
            },
            Object {
              "docs": Array [],
              "id": "SourceFile.statements",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "statements",
              "signature": "readonly statements: NodeArray<Statement>;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1923,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1923",
              },
              "type": "NodeArray<Statement>",
            },
            Object {
              "docs": Array [],
              "id": "SourceFile.text",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "text",
              "signature": "text: string;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1926,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1926",
              },
              "type": "string",
            },
            Object {
              "docs": Array [],
              "id": "SourceFile.typeReferenceDirectives",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "typeReferenceDirectives",
              "signature": "typeReferenceDirectives: readonly FileReference[];",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1930,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1930",
              },
              "type": "readonly FileReference[]",
            },
          ],
        },
        "name": "SourceFile",
        "signature": "interface SourceFile extends Declaration {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 1921,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1921",
        },
      },
      Object {
        "docs": Array [],
        "id": "SourceFile",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [
            Object {
              "docs": Array [],
              "id": "SourceFile.getLineAndCharacterOfPosition",
              "kind": "InterfaceMethodDeclaration",
              "name": "getLineAndCharacterOfPosition",
              "signature": "getLineAndCharacterOfPosition: (pos: number) => LineAndCharacter;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5323,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5323",
              },
              "type": "(pos: number) => LineAndCharacter",
            },
            Object {
              "docs": Array [],
              "id": "SourceFile.getLineEndOfPosition",
              "kind": "InterfaceMethodDeclaration",
              "name": "getLineEndOfPosition",
              "signature": "getLineEndOfPosition: (pos: number) => number;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5324,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5324",
              },
              "type": "(pos: number) => number",
            },
            Object {
              "docs": Array [],
              "id": "SourceFile.getLineStarts",
              "kind": "InterfaceMethodDeclaration",
              "name": "getLineStarts",
              "signature": "getLineStarts: () => readonly number[];",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5325,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5325",
              },
              "type": "() => readonly number[]",
            },
            Object {
              "docs": Array [],
              "id": "SourceFile.getPositionOfLineAndCharacter",
              "kind": "InterfaceMethodDeclaration",
              "name": "getPositionOfLineAndCharacter",
              "signature": "getPositionOfLineAndCharacter: (line: number, character: number) => number;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5326,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5326",
              },
              "type": "(line: number, character: number) => number",
            },
            Object {
              "docs": Array [],
              "id": "SourceFile.update",
              "kind": "InterfaceMethodDeclaration",
              "name": "update",
              "signature": "update: (newText: string, textChangeRange: TextChangeRange) => SourceFile;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5327,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5327",
              },
              "type": "(newText: string, textChangeRange: TextChangeRange) => SourceFile",
            },
          ],
          "properties": Array [],
        },
        "name": "SourceFile",
        "signature": "interface SourceFile {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 5322,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5322",
        },
      },
      Object {
        "docs": Array [],
        "id": "SourceFileLike",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [
            Object {
              "docs": Array [],
              "id": "SourceFileLike.getLineAndCharacterOfPosition",
              "kind": "InterfaceMethodDeclaration",
              "name": "getLineAndCharacterOfPosition",
              "signature": "getLineAndCharacterOfPosition: (pos: number) => LineAndCharacter;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5330,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5330",
              },
              "type": "(pos: number) => LineAndCharacter",
            },
          ],
          "properties": Array [],
        },
        "name": "SourceFileLike",
        "signature": "interface SourceFileLike {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 5329,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5329",
        },
      },
      Object {
        "docs": Array [],
        "id": "SourceMapRange",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "SourceMapRange.source",
              "isOptional": true,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "source",
              "signature": "source?: SourceMapSource;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3090,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3090",
              },
              "type": "SourceMapSource",
            },
          ],
        },
        "name": "SourceMapRange",
        "signature": "interface SourceMapRange extends TextRange {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 3089,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3089",
        },
      },
      Object {
        "docs": Array [],
        "id": "SourceMapSource",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "SourceMapSource.fileName",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "fileName",
              "signature": "fileName: string;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3093,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3093",
              },
              "type": "string",
            },
            Object {
              "docs": Array [],
              "id": "SourceMapSource.skipTrivia",
              "isOptional": true,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "skipTrivia",
              "signature": "skipTrivia?: (pos: number) => number;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3095,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3095",
              },
              "type": "(pos: number) => number",
            },
            Object {
              "docs": Array [],
              "id": "SourceMapSource.text",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "text",
              "signature": "text: string;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3094,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3094",
              },
              "type": "string",
            },
          ],
        },
        "name": "SourceMapSource",
        "signature": "interface SourceMapSource {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 3092,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3092",
        },
      },
      Object {
        "docs": Array [],
        "id": "SourceMapSource",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [
            Object {
              "docs": Array [],
              "id": "SourceMapSource.getLineAndCharacterOfPosition",
              "kind": "InterfaceMethodDeclaration",
              "name": "getLineAndCharacterOfPosition",
              "signature": "getLineAndCharacterOfPosition: (pos: number) => LineAndCharacter;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5333,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5333",
              },
              "type": "(pos: number) => LineAndCharacter",
            },
          ],
          "properties": Array [],
        },
        "name": "SourceMapSource",
        "signature": "interface SourceMapSource {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 5332,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5332",
        },
      },
      Object {
        "docs": Array [],
        "id": "SourceMapSpan",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [
                "/** Column number in the .js file. */",
              ],
              "id": "SourceMapSpan.emittedColumn",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "emittedColumn",
              "signature": "emittedColumn: number;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2121,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2121",
              },
              "type": "number",
            },
            Object {
              "docs": Array [
                "/** Line number in the .js file. */",
              ],
              "id": "SourceMapSpan.emittedLine",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "emittedLine",
              "signature": "emittedLine: number;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2119,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2119",
              },
              "type": "number",
            },
            Object {
              "docs": Array [
                "/** Optional name (index into names array) associated with this span. */",
              ],
              "id": "SourceMapSpan.nameIndex",
              "isOptional": true,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "nameIndex",
              "signature": "nameIndex?: number;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2127,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2127",
              },
              "type": "number",
            },
            Object {
              "docs": Array [
                "/** Column number in the .ts file. */",
              ],
              "id": "SourceMapSpan.sourceColumn",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "sourceColumn",
              "signature": "sourceColumn: number;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2125,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2125",
              },
              "type": "number",
            },
            Object {
              "docs": Array [
                "/** .ts file (index into sources array) associated with this span */",
              ],
              "id": "SourceMapSpan.sourceIndex",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "sourceIndex",
              "signature": "sourceIndex: number;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2129,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2129",
              },
              "type": "number",
            },
            Object {
              "docs": Array [
                "/** Line number in the .ts file. */",
              ],
              "id": "SourceMapSpan.sourceLine",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "sourceLine",
              "signature": "sourceLine: number;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2123,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2123",
              },
              "type": "number",
            },
          ],
        },
        "name": "SourceMapSpan",
        "signature": "interface SourceMapSpan {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 2117,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2117",
        },
      },
      Object {
        "docs": Array [],
        "id": "SpreadAssignment",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "SpreadAssignment.expression",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "expression",
              "signature": "readonly expression: Expression;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 761,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L761",
              },
              "type": "Expression",
            },
            Object {
              "docs": Array [],
              "id": "SpreadAssignment.kind",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "kind",
              "signature": "readonly kind: SyntaxKind.SpreadAssignment;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 759,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L759",
              },
              "type": "number",
            },
            Object {
              "docs": Array [],
              "id": "SpreadAssignment.parent",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "parent",
              "signature": "readonly parent: ObjectLiteralExpression;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 760,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L760",
              },
              "type": "ObjectLiteralExpression",
            },
          ],
        },
        "name": "SpreadAssignment",
        "signature": "interface SpreadAssignment extends ObjectLiteralElement, JSDocContainer {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 758,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L758",
        },
      },
      Object {
        "docs": Array [],
        "id": "SpreadElement",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "SpreadElement.expression",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "expression",
              "signature": "readonly expression: Expression;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1198,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1198",
              },
              "type": "Expression",
            },
            Object {
              "docs": Array [],
              "id": "SpreadElement.kind",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "kind",
              "signature": "readonly kind: SyntaxKind.SpreadElement;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1196,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1196",
              },
              "type": "number",
            },
            Object {
              "docs": Array [],
              "id": "SpreadElement.parent",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "parent",
              "signature": "readonly parent: ArrayLiteralExpression | CallExpression | NewExpression;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1197,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1197",
              },
              "type": "ArrayLiteralExpression | CallExpression | NewExpression",
            },
          ],
        },
        "name": "SpreadElement",
        "signature": "interface SpreadElement extends Expression {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 1195,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1195",
        },
      },
      Object {
        "docs": Array [],
        "id": "Statement",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [],
        },
        "name": "Statement",
        "signature": "interface Statement extends Node {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 1376,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1376",
        },
      },
      Object {
        "docs": Array [],
        "id": "StringLiteral",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "StringLiteral.kind",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "kind",
              "signature": "readonly kind: SyntaxKind.StringLiteral;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 960,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L960",
              },
              "type": "number",
            },
          ],
        },
        "name": "StringLiteral",
        "signature": "interface StringLiteral extends LiteralExpression, Declaration {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 959,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L959",
        },
      },
      Object {
        "docs": Array [],
        "id": "StringLiteralType",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "StringLiteralType.value",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "value",
              "signature": "value: string;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2521,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2521",
              },
              "type": "string",
            },
          ],
        },
        "name": "StringLiteralType",
        "signature": "interface StringLiteralType extends LiteralType {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 2520,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2520",
        },
      },
      Object {
        "docs": Array [],
        "id": "StringMappingType",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "StringMappingType.symbol",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "symbol",
              "signature": "symbol: Symbol;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2657,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2657",
              },
              "type": "Symbol",
            },
            Object {
              "docs": Array [],
              "id": "StringMappingType.type",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "type",
              "signature": "type: Type;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2658,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2658",
              },
              "type": "Type",
            },
          ],
        },
        "name": "StringMappingType",
        "signature": "interface StringMappingType extends InstantiableType {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 2656,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2656",
        },
      },
      Object {
        "docs": Array [],
        "id": "SubstitutionType",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "SubstitutionType.baseType",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "baseType",
              "signature": "baseType: Type;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2661,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2661",
              },
              "type": "Type",
            },
            Object {
              "docs": Array [],
              "id": "SubstitutionType.substitute",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "substitute",
              "signature": "substitute: Type;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2662,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2662",
              },
              "type": "Type",
            },
          ],
        },
        "name": "SubstitutionType",
        "signature": "interface SubstitutionType extends InstantiableType {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 2660,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2660",
        },
      },
      Object {
        "docs": Array [],
        "id": "SuperCall",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "SuperCall.expression",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "expression",
              "signature": "readonly expression: SuperExpression;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1259,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1259",
              },
              "type": "SuperExpression",
            },
          ],
        },
        "name": "SuperCall",
        "signature": "interface SuperCall extends CallExpression {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 1258,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1258",
        },
      },
      Object {
        "docs": Array [],
        "id": "SuperElementAccessExpression",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "SuperElementAccessExpression.expression",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "expression",
              "signature": "readonly expression: SuperExpression;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1244,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1244",
              },
              "type": "SuperExpression",
            },
          ],
        },
        "name": "SuperElementAccessExpression",
        "signature": "interface SuperElementAccessExpression extends ElementAccessExpression {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 1243,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1243",
        },
      },
      Object {
        "docs": Array [],
        "id": "SuperExpression",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "SuperExpression.kind",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "kind",
              "signature": "readonly kind: SyntaxKind.SuperKeyword;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1028,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1028",
              },
              "type": "number",
            },
          ],
        },
        "name": "SuperExpression",
        "signature": "interface SuperExpression extends PrimaryExpression {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 1027,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1027",
        },
      },
      Object {
        "docs": Array [],
        "id": "SuperPropertyAccessExpression",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "SuperPropertyAccessExpression.expression",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "expression",
              "signature": "readonly expression: SuperExpression;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1226,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1226",
              },
              "type": "SuperExpression",
            },
          ],
        },
        "name": "SuperPropertyAccessExpression",
        "signature": "interface SuperPropertyAccessExpression extends PropertyAccessExpression {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 1225,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1225",
        },
      },
      Object {
        "docs": Array [],
        "id": "SwitchStatement",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "SwitchStatement.caseBlock",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "caseBlock",
              "signature": "readonly caseBlock: CaseBlock;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1469,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1469",
              },
              "type": "CaseBlock",
            },
            Object {
              "docs": Array [],
              "id": "SwitchStatement.expression",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "expression",
              "signature": "readonly expression: Expression;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1468,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1468",
              },
              "type": "Expression",
            },
            Object {
              "docs": Array [],
              "id": "SwitchStatement.kind",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "kind",
              "signature": "readonly kind: SyntaxKind.SwitchStatement;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1467,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1467",
              },
              "type": "number",
            },
            Object {
              "docs": Array [],
              "id": "SwitchStatement.possiblyExhaustive",
              "isOptional": true,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "possiblyExhaustive",
              "signature": "possiblyExhaustive?: boolean;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1470,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1470",
              },
              "type": "boolean",
            },
          ],
        },
        "name": "SwitchStatement",
        "signature": "interface SwitchStatement extends Statement {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 1466,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1466",
        },
      },
      Object {
        "docs": Array [],
        "id": "Symbol",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "Symbol.declarations",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "declarations",
              "signature": "declarations: Declaration[];",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2407,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2407",
              },
              "type": "Declaration[]",
            },
            Object {
              "docs": Array [],
              "id": "Symbol.escapedName",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "escapedName",
              "signature": "escapedName: __String;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2406,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2406",
              },
              "type": "__String",
            },
            Object {
              "docs": Array [],
              "id": "Symbol.exports",
              "isOptional": true,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "exports",
              "signature": "exports?: SymbolTable;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2410,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2410",
              },
              "type": "SymbolTable",
            },
            Object {
              "docs": Array [],
              "id": "Symbol.flags",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "flags",
              "signature": "flags: SymbolFlags;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2405,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2405",
              },
              "type": "SymbolFlags",
            },
            Object {
              "docs": Array [],
              "id": "Symbol.globalExports",
              "isOptional": true,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "globalExports",
              "signature": "globalExports?: SymbolTable;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2411,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2411",
              },
              "type": "SymbolTable",
            },
            Object {
              "docs": Array [],
              "id": "Symbol.members",
              "isOptional": true,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "members",
              "signature": "members?: SymbolTable;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2409,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2409",
              },
              "type": "SymbolTable",
            },
            Object {
              "docs": Array [],
              "id": "Symbol.valueDeclaration",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "valueDeclaration",
              "signature": "valueDeclaration: Declaration;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2408,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2408",
              },
              "type": "Declaration",
            },
          ],
        },
        "name": "Symbol",
        "signature": "interface Symbol {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 2404,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2404",
        },
      },
      Object {
        "docs": Array [],
        "id": "Symbol",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [
            Object {
              "docs": Array [],
              "id": "Symbol.getDeclarations",
              "kind": "InterfaceMethodDeclaration",
              "name": "getDeclarations",
              "signature": "getDeclarations: () => Declaration[] | undefined;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5283,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5283",
              },
              "type": "() => Declaration[] | undefined",
            },
            Object {
              "docs": Array [],
              "id": "Symbol.getDocumentationComment",
              "kind": "InterfaceMethodDeclaration",
              "name": "getDocumentationComment",
              "signature": "getDocumentationComment: (
    typeChecker: TypeChecker | undefined
) => SymbolDisplayPart[];",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5284,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5284",
              },
              "type": "(typeChecker: TypeChecker | undefined) => SymbolDisplayPart[]",
            },
            Object {
              "docs": Array [],
              "id": "Symbol.getEscapedName",
              "kind": "InterfaceMethodDeclaration",
              "name": "getEscapedName",
              "signature": "getEscapedName: () => __String;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5281,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5281",
              },
              "type": "() => __String",
            },
            Object {
              "docs": Array [],
              "id": "Symbol.getFlags",
              "kind": "InterfaceMethodDeclaration",
              "name": "getFlags",
              "signature": "getFlags: () => SymbolFlags;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5280,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5280",
              },
              "type": "() => SymbolFlags",
            },
            Object {
              "docs": Array [],
              "id": "Symbol.getJsDocTags",
              "kind": "InterfaceMethodDeclaration",
              "name": "getJsDocTags",
              "signature": "getJsDocTags: () => JSDocTagInfo[];",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5285,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5285",
              },
              "type": "() => JSDocTagInfo[]",
            },
            Object {
              "docs": Array [],
              "id": "Symbol.getName",
              "kind": "InterfaceMethodDeclaration",
              "name": "getName",
              "signature": "getName: () => string;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5282,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5282",
              },
              "type": "() => string",
            },
          ],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "Symbol.name",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "name",
              "signature": "readonly name: string;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5279,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5279",
              },
              "type": "string",
            },
          ],
        },
        "name": "Symbol",
        "signature": "interface Symbol {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 5278,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5278",
        },
      },
      Object {
        "docs": Array [],
        "id": "SymbolDisplayPart",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "SymbolDisplayPart.kind",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "kind",
              "signature": "kind: string;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5974,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5974",
              },
              "type": "string",
            },
            Object {
              "docs": Array [],
              "id": "SymbolDisplayPart.text",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "text",
              "signature": "text: string;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5973,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5973",
              },
              "type": "string",
            },
          ],
        },
        "name": "SymbolDisplayPart",
        "signature": "interface SymbolDisplayPart {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 5972,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5972",
        },
      },
      Object {
        "docs": Array [],
        "id": "SyntaxList",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "SyntaxList.kind",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "kind",
              "signature": "kind: SyntaxKind.SyntaxList;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3787,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3787",
              },
              "type": "number",
            },
          ],
        },
        "name": "SyntaxList",
        "signature": "interface SyntaxList extends Node {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 3786,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3786",
        },
      },
      Object {
        "docs": Array [],
        "id": "SynthesizedComment",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "SynthesizedComment.end",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "end",
              "signature": "end: -1;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1696,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1696",
              },
              "type": "number",
            },
            Object {
              "docs": Array [],
              "id": "SynthesizedComment.hasLeadingNewline",
              "isOptional": true,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "hasLeadingNewline",
              "signature": "hasLeadingNewline?: boolean;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1697,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1697",
              },
              "type": "boolean",
            },
            Object {
              "docs": Array [],
              "id": "SynthesizedComment.pos",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "pos",
              "signature": "pos: -1;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1695,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1695",
              },
              "type": "number",
            },
            Object {
              "docs": Array [],
              "id": "SynthesizedComment.text",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "text",
              "signature": "text: string;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1694,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1694",
              },
              "type": "string",
            },
          ],
        },
        "name": "SynthesizedComment",
        "signature": "interface SynthesizedComment extends CommentRange {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 1693,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1693",
        },
      },
      Object {
        "docs": Array [],
        "id": "SyntheticExpression",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "SyntheticExpression.isSpread",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "isSpread",
              "signature": "readonly isSpread: boolean;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1056,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1056",
              },
              "type": "boolean",
            },
            Object {
              "docs": Array [],
              "id": "SyntheticExpression.kind",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "kind",
              "signature": "readonly kind: SyntaxKind.SyntheticExpression;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1055,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1055",
              },
              "type": "number",
            },
            Object {
              "docs": Array [],
              "id": "SyntheticExpression.tupleNameSource",
              "isOptional": true,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "tupleNameSource",
              "signature": "readonly tupleNameSource?: ParameterDeclaration | NamedTupleMember;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1058,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1058",
              },
              "type": "ParameterDeclaration | NamedTupleMember",
            },
            Object {
              "docs": Array [],
              "id": "SyntheticExpression.type",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "type",
              "signature": "readonly type: Type;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1057,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1057",
              },
              "type": "Type",
            },
          ],
        },
        "name": "SyntheticExpression",
        "signature": "interface SyntheticExpression extends Expression {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 1054,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1054",
        },
      },
      Object {
        "docs": Array [],
        "id": "System",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [
            Object {
              "docs": Array [],
              "id": "System.base64decode",
              "kind": "InterfaceMethodDeclaration",
              "name": "base64decode",
              "signature": "base64decode: (input: string) => string;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3928,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3928",
              },
              "type": "(input: string) => string",
            },
            Object {
              "docs": Array [],
              "id": "System.base64encode",
              "kind": "InterfaceMethodDeclaration",
              "name": "base64encode",
              "signature": "base64encode: (input: string) => string;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3929,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3929",
              },
              "type": "(input: string) => string",
            },
            Object {
              "docs": Array [],
              "id": "System.clearScreen",
              "kind": "InterfaceMethodDeclaration",
              "name": "clearScreen",
              "signature": "clearScreen: () => void;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3927,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3927",
              },
              "type": "() => void",
            },
            Object {
              "docs": Array [],
              "id": "System.clearTimeout",
              "kind": "InterfaceMethodDeclaration",
              "name": "clearTimeout",
              "signature": "clearTimeout: (timeoutId: any) => void;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3926,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3926",
              },
              "type": "(timeoutId: any) => void",
            },
            Object {
              "docs": Array [],
              "id": "System.createDirectory",
              "kind": "InterfaceMethodDeclaration",
              "name": "createDirectory",
              "signature": "createDirectory: (path: string) => void;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3908,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3908",
              },
              "type": "(path: string) => void",
            },
            Object {
              "docs": Array [
                "/**
         * A good implementation is node.js' \`crypto.createHash\`. (https://nodejs.org/api/crypto.html#crypto_crypto_createhash_algorithm)
         */",
              ],
              "id": "System.createHash",
              "kind": "InterfaceMethodDeclaration",
              "name": "createHash",
              "signature": "createHash: (data: string) => string;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3919,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3919",
              },
              "type": "(data: string) => string",
            },
            Object {
              "docs": Array [
                "/** This must be cryptographically secure. Only implement this method using \`crypto.createHash(\\"sha256\\")\`. */",
              ],
              "id": "System.createSHA256Hash",
              "kind": "InterfaceMethodDeclaration",
              "name": "createSHA256Hash",
              "signature": "createSHA256Hash: (data: string) => string;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3921,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3921",
              },
              "type": "(data: string) => string",
            },
            Object {
              "docs": Array [],
              "id": "System.deleteFile",
              "kind": "InterfaceMethodDeclaration",
              "name": "deleteFile",
              "signature": "deleteFile: (path: string) => void;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3915,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3915",
              },
              "type": "(path: string) => void",
            },
            Object {
              "docs": Array [],
              "id": "System.directoryExists",
              "kind": "InterfaceMethodDeclaration",
              "name": "directoryExists",
              "signature": "directoryExists: (path: string) => boolean;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3907,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3907",
              },
              "type": "(path: string) => boolean",
            },
            Object {
              "docs": Array [],
              "id": "System.exit",
              "kind": "InterfaceMethodDeclaration",
              "name": "exit",
              "signature": "exit: (exitCode?: number) => void;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3923,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3923",
              },
              "type": "(exitCode?: number) => void",
            },
            Object {
              "docs": Array [],
              "id": "System.fileExists",
              "kind": "InterfaceMethodDeclaration",
              "name": "fileExists",
              "signature": "fileExists: (path: string) => boolean;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3906,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3906",
              },
              "type": "(path: string) => boolean",
            },
            Object {
              "docs": Array [],
              "id": "System.getCurrentDirectory",
              "kind": "InterfaceMethodDeclaration",
              "name": "getCurrentDirectory",
              "signature": "getCurrentDirectory: () => string;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3910,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3910",
              },
              "type": "() => string",
            },
            Object {
              "docs": Array [],
              "id": "System.getDirectories",
              "kind": "InterfaceMethodDeclaration",
              "name": "getDirectories",
              "signature": "getDirectories: (path: string) => string[];",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3911,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3911",
              },
              "type": "(path: string) => string[]",
            },
            Object {
              "docs": Array [],
              "id": "System.getExecutingFilePath",
              "kind": "InterfaceMethodDeclaration",
              "name": "getExecutingFilePath",
              "signature": "getExecutingFilePath: () => string;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3909,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3909",
              },
              "type": "() => string",
            },
            Object {
              "docs": Array [],
              "id": "System.getFileSize",
              "kind": "InterfaceMethodDeclaration",
              "name": "getFileSize",
              "signature": "getFileSize: (path: string) => number;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3897,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3897",
              },
              "type": "(path: string) => number",
            },
            Object {
              "docs": Array [],
              "id": "System.getMemoryUsage",
              "kind": "InterfaceMethodDeclaration",
              "name": "getMemoryUsage",
              "signature": "getMemoryUsage: () => number;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3922,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3922",
              },
              "type": "() => number",
            },
            Object {
              "docs": Array [],
              "id": "System.getModifiedTime",
              "kind": "InterfaceMethodDeclaration",
              "name": "getModifiedTime",
              "signature": "getModifiedTime: (path: string) => Date | undefined;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3913,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3913",
              },
              "type": "(path: string) => Date | undefined",
            },
            Object {
              "docs": Array [],
              "id": "System.readDirectory",
              "kind": "InterfaceMethodDeclaration",
              "name": "readDirectory",
              "signature": "readDirectory: (
    path: string,
    extensions?: readonly string[],
    exclude?: readonly string[],
    include?: readonly string[],
    depth?: number
) => string[];",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3912,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3912",
              },
              "type": "(path: string, extensions?: readonly string[], exclude?: readonly string[], include?: readonly string[], depth?: number) => string[]",
            },
            Object {
              "docs": Array [],
              "id": "System.readFile",
              "kind": "InterfaceMethodDeclaration",
              "name": "readFile",
              "signature": "readFile: (path: string, encoding?: string) => string | undefined;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3896,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3896",
              },
              "type": "(path: string, encoding?: string) => string | undefined",
            },
            Object {
              "docs": Array [],
              "id": "System.realpath",
              "kind": "InterfaceMethodDeclaration",
              "name": "realpath",
              "signature": "realpath: (path: string) => string;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3924,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3924",
              },
              "type": "(path: string) => string",
            },
            Object {
              "docs": Array [],
              "id": "System.resolvePath",
              "kind": "InterfaceMethodDeclaration",
              "name": "resolvePath",
              "signature": "resolvePath: (path: string) => string;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3905,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3905",
              },
              "type": "(path: string) => string",
            },
            Object {
              "docs": Array [],
              "id": "System.setModifiedTime",
              "kind": "InterfaceMethodDeclaration",
              "name": "setModifiedTime",
              "signature": "setModifiedTime: (path: string, time: Date) => void;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3914,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3914",
              },
              "type": "(path: string, time: Date) => void",
            },
            Object {
              "docs": Array [],
              "id": "System.setTimeout",
              "kind": "InterfaceMethodDeclaration",
              "name": "setTimeout",
              "signature": "setTimeout: (
    callback: (...args: any[]) => void,
    ms: number,
    ...args: any[]
) => any;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3925,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3925",
              },
              "type": "(callback: (...args: any[]) => void, ms: number, ...args: any[]) => any",
            },
            Object {
              "docs": Array [],
              "id": "System.watchDirectory",
              "kind": "InterfaceMethodDeclaration",
              "name": "watchDirectory",
              "signature": "watchDirectory: (
    path: string,
    callback: DirectoryWatcherCallback,
    recursive?: boolean,
    options?: WatchOptions
) => FileWatcher;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3904,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3904",
              },
              "type": "(path: string, callback: DirectoryWatcherCallback, recursive?: boolean, options?: WatchOptions) => FileWatcher",
            },
            Object {
              "docs": Array [
                "/**
         * @pollingInterval - this parameter is used in polling-based watchers and ignored in watchers that
         * use native OS file watching
         */",
              ],
              "id": "System.watchFile",
              "kind": "InterfaceMethodDeclaration",
              "name": "watchFile",
              "signature": "watchFile: (
    path: string,
    callback: FileWatcherCallback,
    pollingInterval?: number,
    options?: WatchOptions
) => FileWatcher;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3903,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3903",
              },
              "type": "(path: string, callback: FileWatcherCallback, pollingInterval?: number, options?: WatchOptions) => FileWatcher",
            },
            Object {
              "docs": Array [],
              "id": "System.write",
              "kind": "InterfaceMethodDeclaration",
              "name": "write",
              "signature": "write: (s: string) => void;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3894,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3894",
              },
              "type": "(s: string) => void",
            },
            Object {
              "docs": Array [],
              "id": "System.writeFile",
              "kind": "InterfaceMethodDeclaration",
              "name": "writeFile",
              "signature": "writeFile: (path: string, data: string, writeByteOrderMark?: boolean) => void;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3898,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3898",
              },
              "type": "(path: string, data: string, writeByteOrderMark?: boolean) => void",
            },
            Object {
              "docs": Array [],
              "id": "System.writeOutputIsTTY",
              "kind": "InterfaceMethodDeclaration",
              "name": "writeOutputIsTTY",
              "signature": "writeOutputIsTTY: () => boolean;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3895,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3895",
              },
              "type": "() => boolean",
            },
          ],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "System.args",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "args",
              "signature": "args: string[];",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3891,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3891",
              },
              "type": "string[]",
            },
            Object {
              "docs": Array [],
              "id": "System.newLine",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "newLine",
              "signature": "newLine: string;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3892,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3892",
              },
              "type": "string",
            },
            Object {
              "docs": Array [],
              "id": "System.useCaseSensitiveFileNames",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "useCaseSensitiveFileNames",
              "signature": "useCaseSensitiveFileNames: boolean;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3893,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3893",
              },
              "type": "boolean",
            },
          ],
        },
        "name": "System",
        "signature": "interface System {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 3890,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3890",
        },
      },
      Object {
        "docs": Array [],
        "id": "TaggedTemplateExpression",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "TaggedTemplateExpression.kind",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "kind",
              "signature": "readonly kind: SyntaxKind.TaggedTemplateExpression;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1276,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1276",
              },
              "type": "number",
            },
            Object {
              "docs": Array [],
              "id": "TaggedTemplateExpression.tag",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "tag",
              "signature": "readonly tag: LeftHandSideExpression;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1277,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1277",
              },
              "type": "LeftHandSideExpression",
            },
            Object {
              "docs": Array [],
              "id": "TaggedTemplateExpression.template",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "template",
              "signature": "readonly template: TemplateLiteral;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1279,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1279",
              },
              "type": "TemplateLiteral",
            },
            Object {
              "docs": Array [],
              "id": "TaggedTemplateExpression.typeArguments",
              "isOptional": true,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "typeArguments",
              "signature": "readonly typeArguments?: NodeArray<TypeNode>;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1278,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1278",
              },
              "type": "NodeArray<TypeNode>",
            },
          ],
        },
        "name": "TaggedTemplateExpression",
        "signature": "interface TaggedTemplateExpression extends MemberExpression {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 1275,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1275",
        },
      },
      Object {
        "docs": Array [],
        "id": "TemplateExpression",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "TemplateExpression.head",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "head",
              "signature": "readonly head: TemplateHead;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1177,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1177",
              },
              "type": "TemplateHead",
            },
            Object {
              "docs": Array [],
              "id": "TemplateExpression.kind",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "kind",
              "signature": "readonly kind: SyntaxKind.TemplateExpression;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1176,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1176",
              },
              "type": "number",
            },
            Object {
              "docs": Array [],
              "id": "TemplateExpression.templateSpans",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "templateSpans",
              "signature": "readonly templateSpans: NodeArray<TemplateSpan>;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1178,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1178",
              },
              "type": "NodeArray<TemplateSpan>",
            },
          ],
        },
        "name": "TemplateExpression",
        "signature": "interface TemplateExpression extends PrimaryExpression {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 1175,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1175",
        },
      },
      Object {
        "docs": Array [],
        "id": "TemplateHead",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "TemplateHead.kind",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "kind",
              "signature": "readonly kind: SyntaxKind.TemplateHead;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1162,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1162",
              },
              "type": "number",
            },
            Object {
              "docs": Array [],
              "id": "TemplateHead.parent",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "parent",
              "signature": "readonly parent: TemplateExpression | TemplateLiteralTypeNode;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1163,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1163",
              },
              "type": "TemplateLiteralTypeNode | TemplateExpression",
            },
          ],
        },
        "name": "TemplateHead",
        "signature": "interface TemplateHead extends TemplateLiteralLikeNode {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 1161,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1161",
        },
      },
      Object {
        "docs": Array [],
        "id": "TemplateLiteralLikeNode",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "TemplateLiteralLikeNode.rawText",
              "isOptional": true,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "rawText",
              "signature": "rawText?: string;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1135,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1135",
              },
              "type": "string",
            },
          ],
        },
        "name": "TemplateLiteralLikeNode",
        "signature": "interface TemplateLiteralLikeNode extends LiteralLikeNode {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 1134,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1134",
        },
      },
      Object {
        "docs": Array [],
        "id": "TemplateLiteralType",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "TemplateLiteralType.texts",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "texts",
              "signature": "texts: readonly string[];",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2653,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2653",
              },
              "type": "readonly string[]",
            },
            Object {
              "docs": Array [],
              "id": "TemplateLiteralType.types",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "types",
              "signature": "types: readonly Type[];",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2654,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2654",
              },
              "type": "readonly Type[]",
            },
          ],
        },
        "name": "TemplateLiteralType",
        "signature": "interface TemplateLiteralType extends InstantiableType {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 2652,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2652",
        },
      },
      Object {
        "docs": Array [],
        "id": "TemplateLiteralTypeNode",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "TemplateLiteralTypeNode.head",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "head",
              "signature": "readonly head: TemplateHead;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 966,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L966",
              },
              "type": "TemplateHead",
            },
            Object {
              "docs": Array [],
              "id": "TemplateLiteralTypeNode.kind",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "kind",
              "signature": "kind: SyntaxKind.TemplateLiteralType;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 965,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L965",
              },
              "type": "number",
            },
            Object {
              "docs": Array [],
              "id": "TemplateLiteralTypeNode.templateSpans",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "templateSpans",
              "signature": "readonly templateSpans: NodeArray<TemplateLiteralTypeSpan>;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 967,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L967",
              },
              "type": "NodeArray<TemplateLiteralTypeSpan>",
            },
          ],
        },
        "name": "TemplateLiteralTypeNode",
        "signature": "interface TemplateLiteralTypeNode extends TypeNode {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 964,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L964",
        },
      },
      Object {
        "docs": Array [],
        "id": "TemplateLiteralTypeSpan",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "TemplateLiteralTypeSpan.kind",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "kind",
              "signature": "readonly kind: SyntaxKind.TemplateLiteralTypeSpan;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 970,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L970",
              },
              "type": "number",
            },
            Object {
              "docs": Array [],
              "id": "TemplateLiteralTypeSpan.literal",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "literal",
              "signature": "readonly literal: TemplateMiddle | TemplateTail;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 973,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L973",
              },
              "type": "TemplateMiddle | TemplateTail",
            },
            Object {
              "docs": Array [],
              "id": "TemplateLiteralTypeSpan.parent",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "parent",
              "signature": "readonly parent: TemplateLiteralTypeNode;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 971,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L971",
              },
              "type": "TemplateLiteralTypeNode",
            },
            Object {
              "docs": Array [],
              "id": "TemplateLiteralTypeSpan.type",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "type",
              "signature": "readonly type: TypeNode;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 972,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L972",
              },
              "type": "TypeNode",
            },
          ],
        },
        "name": "TemplateLiteralTypeSpan",
        "signature": "interface TemplateLiteralTypeSpan extends TypeNode {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 969,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L969",
        },
      },
      Object {
        "docs": Array [],
        "id": "TemplateMiddle",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "TemplateMiddle.kind",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "kind",
              "signature": "readonly kind: SyntaxKind.TemplateMiddle;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1166,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1166",
              },
              "type": "number",
            },
            Object {
              "docs": Array [],
              "id": "TemplateMiddle.parent",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "parent",
              "signature": "readonly parent: TemplateSpan | TemplateLiteralTypeSpan;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1167,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1167",
              },
              "type": "TemplateLiteralTypeSpan | TemplateSpan",
            },
          ],
        },
        "name": "TemplateMiddle",
        "signature": "interface TemplateMiddle extends TemplateLiteralLikeNode {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 1165,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1165",
        },
      },
      Object {
        "docs": Array [],
        "id": "TemplateSpan",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "TemplateSpan.expression",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "expression",
              "signature": "readonly expression: Expression;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1184,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1184",
              },
              "type": "Expression",
            },
            Object {
              "docs": Array [],
              "id": "TemplateSpan.kind",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "kind",
              "signature": "readonly kind: SyntaxKind.TemplateSpan;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1182,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1182",
              },
              "type": "number",
            },
            Object {
              "docs": Array [],
              "id": "TemplateSpan.literal",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "literal",
              "signature": "readonly literal: TemplateMiddle | TemplateTail;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1185,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1185",
              },
              "type": "TemplateMiddle | TemplateTail",
            },
            Object {
              "docs": Array [],
              "id": "TemplateSpan.parent",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "parent",
              "signature": "readonly parent: TemplateExpression;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1183,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1183",
              },
              "type": "TemplateExpression",
            },
          ],
        },
        "name": "TemplateSpan",
        "signature": "interface TemplateSpan extends Node {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 1181,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1181",
        },
      },
      Object {
        "docs": Array [],
        "id": "TemplateTail",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "TemplateTail.kind",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "kind",
              "signature": "readonly kind: SyntaxKind.TemplateTail;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1170,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1170",
              },
              "type": "number",
            },
            Object {
              "docs": Array [],
              "id": "TemplateTail.parent",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "parent",
              "signature": "readonly parent: TemplateSpan | TemplateLiteralTypeSpan;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1171,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1171",
              },
              "type": "TemplateLiteralTypeSpan | TemplateSpan",
            },
          ],
        },
        "name": "TemplateTail",
        "signature": "interface TemplateTail extends TemplateLiteralLikeNode {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 1169,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1169",
        },
      },
      Object {
        "docs": Array [],
        "id": "TextChange",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "TextChange.newText",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "newText",
              "signature": "newText: string;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5716,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5716",
              },
              "type": "string",
            },
            Object {
              "docs": Array [],
              "id": "TextChange.span",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "span",
              "signature": "span: TextSpan;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5715,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5715",
              },
              "type": "TextSpan",
            },
          ],
        },
        "name": "TextChange",
        "signature": "interface TextChange {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 5714,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5714",
        },
      },
      Object {
        "docs": Array [],
        "id": "TextChangeRange",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "TextChangeRange.newLength",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "newLength",
              "signature": "newLength: number;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3784,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3784",
              },
              "type": "number",
            },
            Object {
              "docs": Array [],
              "id": "TextChangeRange.span",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "span",
              "signature": "span: TextSpan;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3783,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3783",
              },
              "type": "TextSpan",
            },
          ],
        },
        "name": "TextChangeRange",
        "signature": "interface TextChangeRange {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 3782,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3782",
        },
      },
      Object {
        "docs": Array [],
        "id": "TextInsertion",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [
                "/** The position in newText the caret should point to after the insertion. */",
              ],
              "id": "TextInsertion.caretOffset",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "caretOffset",
              "signature": "caretOffset: number;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5809,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5809",
              },
              "type": "number",
            },
            Object {
              "docs": Array [],
              "id": "TextInsertion.newText",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "newText",
              "signature": "newText: string;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5807,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5807",
              },
              "type": "string",
            },
          ],
        },
        "name": "TextInsertion",
        "signature": "interface TextInsertion {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 5806,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5806",
        },
      },
      Object {
        "docs": Array [],
        "id": "TextRange",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "TextRange.end",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "end",
              "signature": "end: number;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 99,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L99",
              },
              "type": "number",
            },
            Object {
              "docs": Array [],
              "id": "TextRange.pos",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "pos",
              "signature": "pos: number;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 98,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L98",
              },
              "type": "number",
            },
          ],
        },
        "name": "TextRange",
        "signature": "interface TextRange {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 97,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L97",
        },
      },
      Object {
        "docs": Array [],
        "id": "TextSpan",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "TextSpan.length",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "length",
              "signature": "length: number;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3780,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3780",
              },
              "type": "number",
            },
            Object {
              "docs": Array [],
              "id": "TextSpan.start",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "start",
              "signature": "start: number;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3779,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3779",
              },
              "type": "number",
            },
          ],
        },
        "name": "TextSpan",
        "signature": "interface TextSpan {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 3778,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3778",
        },
      },
      Object {
        "docs": Array [],
        "id": "ThisExpression",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "ThisExpression.kind",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "kind",
              "signature": "readonly kind: SyntaxKind.ThisKeyword;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1025,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1025",
              },
              "type": "number",
            },
          ],
        },
        "name": "ThisExpression",
        "signature": "interface ThisExpression extends PrimaryExpression {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 1024,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1024",
        },
      },
      Object {
        "docs": Array [],
        "id": "ThisTypeNode",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "ThisTypeNode.kind",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "kind",
              "signature": "readonly kind: SyntaxKind.ThisType;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 854,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L854",
              },
              "type": "number",
            },
          ],
        },
        "name": "ThisTypeNode",
        "signature": "interface ThisTypeNode extends TypeNode {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 853,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L853",
        },
      },
      Object {
        "docs": Array [],
        "id": "ThisTypePredicate",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "ThisTypePredicate.kind",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "kind",
              "signature": "kind: TypePredicateKind.This;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2319,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2319",
              },
              "type": "number",
            },
            Object {
              "docs": Array [],
              "id": "ThisTypePredicate.parameterIndex",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "parameterIndex",
              "signature": "parameterIndex: undefined;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2321,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2321",
              },
              "type": "undefined",
            },
            Object {
              "docs": Array [],
              "id": "ThisTypePredicate.parameterName",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "parameterName",
              "signature": "parameterName: undefined;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2320,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2320",
              },
              "type": "undefined",
            },
            Object {
              "docs": Array [],
              "id": "ThisTypePredicate.type",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "type",
              "signature": "type: Type;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2322,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2322",
              },
              "type": "Type",
            },
          ],
        },
        "name": "ThisTypePredicate",
        "signature": "interface ThisTypePredicate extends TypePredicateBase {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 2318,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2318",
        },
      },
      Object {
        "docs": Array [],
        "id": "ThrowStatement",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "ThrowStatement.expression",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "expression",
              "signature": "readonly expression: Expression;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1496,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1496",
              },
              "type": "Expression",
            },
            Object {
              "docs": Array [],
              "id": "ThrowStatement.kind",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "kind",
              "signature": "readonly kind: SyntaxKind.ThrowStatement;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1495,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1495",
              },
              "type": "number",
            },
          ],
        },
        "name": "ThrowStatement",
        "signature": "interface ThrowStatement extends Statement {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 1494,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1494",
        },
      },
      Object {
        "docs": Array [],
        "id": "TodoComment",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "TodoComment.descriptor",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "descriptor",
              "signature": "descriptor: TodoCommentDescriptor;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5710,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5710",
              },
              "type": "TodoCommentDescriptor",
            },
            Object {
              "docs": Array [],
              "id": "TodoComment.message",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "message",
              "signature": "message: string;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5711,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5711",
              },
              "type": "string",
            },
            Object {
              "docs": Array [],
              "id": "TodoComment.position",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "position",
              "signature": "position: number;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5712,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5712",
              },
              "type": "number",
            },
          ],
        },
        "name": "TodoComment",
        "signature": "interface TodoComment {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 5709,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5709",
        },
      },
      Object {
        "docs": Array [],
        "id": "TodoCommentDescriptor",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "TodoCommentDescriptor.priority",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "priority",
              "signature": "priority: number;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5707,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5707",
              },
              "type": "number",
            },
            Object {
              "docs": Array [],
              "id": "TodoCommentDescriptor.text",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "text",
              "signature": "text: string;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5706,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5706",
              },
              "type": "string",
            },
          ],
        },
        "name": "TodoCommentDescriptor",
        "signature": "interface TodoCommentDescriptor {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 5705,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5705",
        },
      },
      Object {
        "docs": Array [],
        "id": "Token",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "Token.kind",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "kind",
              "signature": "readonly kind: TKind;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 570,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L570",
              },
              "type": "SyntaxKind",
            },
          ],
        },
        "name": "Token",
        "signature": "interface Token<TKind extends SyntaxKind> extends Node {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 569,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L569",
        },
      },
      Object {
        "docs": Array [],
        "id": "TransformationContext",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [
            Object {
              "docs": Array [
                "/**
         * Enables before/after emit notifications in the pretty printer for the provided
         * SyntaxKind.
         */",
              ],
              "id": "TransformationContext.enableEmitNotification",
              "kind": "InterfaceMethodDeclaration",
              "name": "enableEmitNotification",
              "signature": "enableEmitNotification: (kind: SyntaxKind) => void;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3624,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3624",
              },
              "type": "(kind: SyntaxKind) => void",
            },
            Object {
              "docs": Array [
                "/** Enables expression substitutions in the pretty printer for the provided SyntaxKind. */",
              ],
              "id": "TransformationContext.enableSubstitution",
              "kind": "InterfaceMethodDeclaration",
              "name": "enableSubstitution",
              "signature": "enableSubstitution: (kind: SyntaxKind) => void;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3609,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3609",
              },
              "type": "(kind: SyntaxKind) => void",
            },
            Object {
              "docs": Array [
                "/**
         * Determines whether before/after emit notifications should be raised in the pretty
         * printer when it emits a node.
         */",
              ],
              "id": "TransformationContext.isEmitNotificationEnabled",
              "kind": "InterfaceMethodDeclaration",
              "name": "isEmitNotificationEnabled",
              "signature": "isEmitNotificationEnabled: (node: Node) => boolean;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3629,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3629",
              },
              "type": "(node: Node) => boolean",
            },
            Object {
              "docs": Array [
                "/** Determines whether expression substitutions are enabled for the provided node. */",
              ],
              "id": "TransformationContext.isSubstitutionEnabled",
              "kind": "InterfaceMethodDeclaration",
              "name": "isSubstitutionEnabled",
              "signature": "isSubstitutionEnabled: (node: Node) => boolean;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3611,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3611",
              },
              "type": "(node: Node) => boolean",
            },
            Object {
              "docs": Array [
                "/** Gets and resets the requested non-scoped emit helpers. */",
              ],
              "id": "TransformationContext.readEmitHelpers",
              "kind": "InterfaceMethodDeclaration",
              "name": "readEmitHelpers",
              "signature": "readEmitHelpers: () => EmitHelper[] | undefined;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3607,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3607",
              },
              "type": "() => EmitHelper[] | undefined",
            },
            Object {
              "docs": Array [
                "/** Records a request for a non-scoped emit helper in the current context. */",
              ],
              "id": "TransformationContext.requestEmitHelper",
              "kind": "InterfaceMethodDeclaration",
              "name": "requestEmitHelper",
              "signature": "requestEmitHelper: (helper: EmitHelper) => void;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3605,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3605",
              },
              "type": "(helper: EmitHelper) => void",
            },
          ],
          "properties": Array [
            Object {
              "docs": Array [
                "/**
         * Hook used to allow transformers to capture state before or after
         * the printer emits a node.
         *
         * NOTE: Transformation hooks should only be modified during \`Transformer\` initialization,
         * before returning the \`NodeTransformer\` callback.
         */",
              ],
              "id": "TransformationContext.onEmitNode",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "onEmitNode",
              "signature": "onEmitNode: (
    hint: EmitHint,
    node: Node,
    emitCallback: (hint: EmitHint, node: Node) => void
) => void;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3637,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3637",
              },
              "type": "(hint: EmitHint, node: Node, emitCallback: (hint: EmitHint, node: Node) => void) => void",
            },
            Object {
              "docs": Array [
                "/**
         * Hook used by transformers to substitute expressions just before they
         * are emitted by the pretty printer.
         *
         * NOTE: Transformation hooks should only be modified during \`Transformer\` initialization,
         * before returning the \`NodeTransformer\` callback.
         */",
              ],
              "id": "TransformationContext.onSubstituteNode",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "onSubstituteNode",
              "signature": "onSubstituteNode: (hint: EmitHint, node: Node) => Node;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3619,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3619",
              },
              "type": "(hint: EmitHint, node: Node) => Node",
            },
          ],
        },
        "name": "TransformationContext",
        "signature": "interface TransformationContext extends CoreTransformationContext {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 3603,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3603",
        },
      },
      Object {
        "docs": Array [],
        "id": "TransformationResult",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [
            Object {
              "docs": Array [
                "/**
         * Clean up EmitNode entries on any parse-tree nodes.
         */",
              ],
              "id": "TransformationResult.dispose",
              "kind": "InterfaceMethodDeclaration",
              "name": "dispose",
              "signature": "dispose: () => void;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3668,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3668",
              },
              "type": "() => void",
            },
            Object {
              "docs": Array [
                "/**
         * Emits a node with possible notification.
         *
         * @param hint A hint as to the intended usage of the node.
         * @param node The node to emit.
         * @param emitCallback A callback used to emit the node.
         */",
              ],
              "id": "TransformationResult.emitNodeWithNotification",
              "kind": "InterfaceMethodDeclaration",
              "name": "emitNodeWithNotification",
              "signature": "emitNodeWithNotification: (
    hint: EmitHint,
    node: Node,
    emitCallback: (hint: EmitHint, node: Node) => void
) => void;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3658,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3658",
              },
              "type": "(hint: EmitHint, node: Node, emitCallback: (hint: EmitHint, node: Node) => void) => void",
            },
            Object {
              "docs": Array [
                "/**
         * Indicates if a given node needs an emit notification
         *
         * @param node The node to emit.
         */",
              ],
              "id": "TransformationResult.isEmitNotificationEnabled",
              "kind": "InterfaceMethodDeclaration",
              "name": "isEmitNotificationEnabled",
              "signature": "isEmitNotificationEnabled: (node: Node) => boolean;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3664,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3664",
              },
              "type": "(node: Node) => boolean",
            },
            Object {
              "docs": Array [
                "/**
         * Gets a substitute for a node, if one is available; otherwise, returns the original node.
         *
         * @param hint A hint as to the intended usage of the node.
         * @param node The node to substitute.
         */",
              ],
              "id": "TransformationResult.substituteNode",
              "kind": "InterfaceMethodDeclaration",
              "name": "substituteNode",
              "signature": "substituteNode: (hint: EmitHint, node: Node) => Node;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3650,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3650",
              },
              "type": "(hint: EmitHint, node: Node) => Node",
            },
          ],
          "properties": Array [
            Object {
              "docs": Array [
                "/** Gets diagnostics for the transformation. */",
              ],
              "id": "TransformationResult.diagnostics",
              "isOptional": true,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "diagnostics",
              "signature": "diagnostics?: DiagnosticWithLocation[];",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3643,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3643",
              },
              "type": "DiagnosticWithLocation[]",
            },
            Object {
              "docs": Array [
                "/** Gets the transformed source files. */",
              ],
              "id": "TransformationResult.transformed",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "transformed",
              "signature": "transformed: T[];",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3641,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3641",
              },
              "type": "T[]",
            },
          ],
        },
        "name": "TransformationResult",
        "signature": "interface TransformationResult<T extends Node> {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 3639,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3639",
        },
      },
      Object {
        "docs": Array [],
        "id": "TransientIdentifier",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "TransientIdentifier.resolvedSymbol",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "resolvedSymbol",
              "signature": "resolvedSymbol: Symbol;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 632,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L632",
              },
              "type": "Symbol",
            },
          ],
        },
        "name": "TransientIdentifier",
        "signature": "interface TransientIdentifier extends Identifier {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 631,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L631",
        },
      },
      Object {
        "docs": Array [],
        "id": "TranspileOptions",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "TranspileOptions.compilerOptions",
              "isOptional": true,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "compilerOptions",
              "signature": "compilerOptions?: CompilerOptions;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 6396,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6396",
              },
              "type": "CompilerOptions",
            },
            Object {
              "docs": Array [],
              "id": "TranspileOptions.fileName",
              "isOptional": true,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "fileName",
              "signature": "fileName?: string;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 6397,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6397",
              },
              "type": "string",
            },
            Object {
              "docs": Array [],
              "id": "TranspileOptions.moduleName",
              "isOptional": true,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "moduleName",
              "signature": "moduleName?: string;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 6399,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6399",
              },
              "type": "string",
            },
            Object {
              "docs": Array [],
              "id": "TranspileOptions.renamedDependencies",
              "isOptional": true,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "renamedDependencies",
              "signature": "renamedDependencies?: MapLike<string>;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 6400,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6400",
              },
              "type": "MapLike<string>",
            },
            Object {
              "docs": Array [],
              "id": "TranspileOptions.reportDiagnostics",
              "isOptional": true,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "reportDiagnostics",
              "signature": "reportDiagnostics?: boolean;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 6398,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6398",
              },
              "type": "boolean",
            },
            Object {
              "docs": Array [],
              "id": "TranspileOptions.transformers",
              "isOptional": true,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "transformers",
              "signature": "transformers?: CustomTransformers;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 6401,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6401",
              },
              "type": "CustomTransformers",
            },
          ],
        },
        "name": "TranspileOptions",
        "signature": "interface TranspileOptions {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 6395,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6395",
        },
      },
      Object {
        "docs": Array [],
        "id": "TranspileOutput",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "TranspileOutput.diagnostics",
              "isOptional": true,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "diagnostics",
              "signature": "diagnostics?: Diagnostic[];",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 6405,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6405",
              },
              "type": "Diagnostic[]",
            },
            Object {
              "docs": Array [],
              "id": "TranspileOutput.outputText",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "outputText",
              "signature": "outputText: string;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 6404,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6404",
              },
              "type": "string",
            },
            Object {
              "docs": Array [],
              "id": "TranspileOutput.sourceMapText",
              "isOptional": true,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "sourceMapText",
              "signature": "sourceMapText?: string;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 6406,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6406",
              },
              "type": "string",
            },
          ],
        },
        "name": "TranspileOutput",
        "signature": "interface TranspileOutput {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 6403,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6403",
        },
      },
      Object {
        "docs": Array [],
        "id": "TrueLiteral",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "TrueLiteral.kind",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "kind",
              "signature": "readonly kind: SyntaxKind.TrueKeyword;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1018,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1018",
              },
              "type": "number",
            },
          ],
        },
        "name": "TrueLiteral",
        "signature": "interface TrueLiteral extends PrimaryExpression {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 1017,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1017",
        },
      },
      Object {
        "docs": Array [],
        "id": "TryStatement",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "TryStatement.catchClause",
              "isOptional": true,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "catchClause",
              "signature": "readonly catchClause?: CatchClause;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1501,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1501",
              },
              "type": "CatchClause",
            },
            Object {
              "docs": Array [],
              "id": "TryStatement.finallyBlock",
              "isOptional": true,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "finallyBlock",
              "signature": "readonly finallyBlock?: Block;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1502,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1502",
              },
              "type": "Block",
            },
            Object {
              "docs": Array [],
              "id": "TryStatement.kind",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "kind",
              "signature": "readonly kind: SyntaxKind.TryStatement;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1499,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1499",
              },
              "type": "number",
            },
            Object {
              "docs": Array [],
              "id": "TryStatement.tryBlock",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "tryBlock",
              "signature": "readonly tryBlock: Block;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1500,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1500",
              },
              "type": "Block",
            },
          ],
        },
        "name": "TryStatement",
        "signature": "interface TryStatement extends Statement {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 1498,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1498",
        },
      },
      Object {
        "docs": Array [],
        "id": "TsConfigSourceFile",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "TsConfigSourceFile.extendedSourceFiles",
              "isOptional": true,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "extendedSourceFiles",
              "signature": "extendedSourceFiles?: string[];",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2006,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2006",
              },
              "type": "string[]",
            },
          ],
        },
        "name": "TsConfigSourceFile",
        "signature": "interface TsConfigSourceFile extends JsonSourceFile {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 2005,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2005",
        },
      },
      Object {
        "docs": Array [],
        "id": "TupleType",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "TupleType.combinedFlags",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "combinedFlags",
              "signature": "combinedFlags: ElementFlags;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2600,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2600",
              },
              "type": "ElementFlags",
            },
            Object {
              "docs": Array [],
              "id": "TupleType.elementFlags",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "elementFlags",
              "signature": "elementFlags: readonly ElementFlags[];",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2596,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2596",
              },
              "type": "readonly ElementFlags[]",
            },
            Object {
              "docs": Array [],
              "id": "TupleType.fixedLength",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "fixedLength",
              "signature": "fixedLength: number;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2598,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2598",
              },
              "type": "number",
            },
            Object {
              "docs": Array [],
              "id": "TupleType.hasRestElement",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "hasRestElement",
              "signature": "hasRestElement: boolean;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2599,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2599",
              },
              "type": "boolean",
            },
            Object {
              "docs": Array [],
              "id": "TupleType.labeledElementDeclarations",
              "isOptional": true,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "labeledElementDeclarations",
              "signature": "labeledElementDeclarations?: readonly (
    | NamedTupleMember
    | ParameterDeclaration
)[];",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2602,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2602",
              },
              "type": "readonly (ParameterDeclaration | NamedTupleMember)[]",
            },
            Object {
              "docs": Array [],
              "id": "TupleType.minLength",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "minLength",
              "signature": "minLength: number;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2597,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2597",
              },
              "type": "number",
            },
            Object {
              "docs": Array [],
              "id": "TupleType.readonly",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "readonly",
              "signature": "readonly: boolean;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2601,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2601",
              },
              "type": "boolean",
            },
          ],
        },
        "name": "TupleType",
        "signature": "interface TupleType extends GenericType {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 2595,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2595",
        },
      },
      Object {
        "docs": Array [],
        "id": "TupleTypeNode",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "TupleTypeNode.elements",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "elements",
              "signature": "readonly elements: NodeArray<TypeNode | NamedTupleMember>;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 896,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L896",
              },
              "type": "NodeArray<TypeNode | NamedTupleMember>",
            },
            Object {
              "docs": Array [],
              "id": "TupleTypeNode.kind",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "kind",
              "signature": "readonly kind: SyntaxKind.TupleType;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 895,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L895",
              },
              "type": "number",
            },
          ],
        },
        "name": "TupleTypeNode",
        "signature": "interface TupleTypeNode extends TypeNode {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 894,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L894",
        },
      },
      Object {
        "docs": Array [],
        "id": "TupleTypeReference",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "TupleTypeReference.target",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "target",
              "signature": "target: TupleType;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2605,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2605",
              },
              "type": "TupleType",
            },
          ],
        },
        "name": "TupleTypeReference",
        "signature": "interface TupleTypeReference extends TypeReference {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 2604,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2604",
        },
      },
      Object {
        "docs": Array [],
        "id": "Type",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "Type.aliasSymbol",
              "isOptional": true,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "aliasSymbol",
              "signature": "aliasSymbol?: Symbol;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2508,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2508",
              },
              "type": "Symbol",
            },
            Object {
              "docs": Array [],
              "id": "Type.aliasTypeArguments",
              "isOptional": true,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "aliasTypeArguments",
              "signature": "aliasTypeArguments?: readonly Type[];",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2509,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2509",
              },
              "type": "readonly Type[]",
            },
            Object {
              "docs": Array [],
              "id": "Type.flags",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "flags",
              "signature": "flags: TypeFlags;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2505,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2505",
              },
              "type": "TypeFlags",
            },
            Object {
              "docs": Array [],
              "id": "Type.pattern",
              "isOptional": true,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "pattern",
              "signature": "pattern?: DestructuringPattern;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2507,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2507",
              },
              "type": "DestructuringPattern",
            },
            Object {
              "docs": Array [],
              "id": "Type.symbol",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "symbol",
              "signature": "symbol: Symbol;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2506,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2506",
              },
              "type": "Symbol",
            },
          ],
        },
        "name": "Type",
        "signature": "interface Type {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 2504,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2504",
        },
      },
      Object {
        "docs": Array [],
        "id": "Type",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [
            Object {
              "docs": Array [],
              "id": "Type.getApparentProperties",
              "kind": "InterfaceMethodDeclaration",
              "name": "getApparentProperties",
              "signature": "getApparentProperties: () => Symbol[];",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5292,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5292",
              },
              "type": "() => Symbol[]",
            },
            Object {
              "docs": Array [],
              "id": "Type.getBaseTypes",
              "kind": "InterfaceMethodDeclaration",
              "name": "getBaseTypes",
              "signature": "getBaseTypes: () => BaseType[] | undefined;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5297,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5297",
              },
              "type": "() => BaseType[] | undefined",
            },
            Object {
              "docs": Array [],
              "id": "Type.getCallSignatures",
              "kind": "InterfaceMethodDeclaration",
              "name": "getCallSignatures",
              "signature": "getCallSignatures: () => readonly Signature[];",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5293,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5293",
              },
              "type": "() => readonly Signature[]",
            },
            Object {
              "docs": Array [],
              "id": "Type.getConstraint",
              "kind": "InterfaceMethodDeclaration",
              "name": "getConstraint",
              "signature": "getConstraint: () => Type | undefined;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5299,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5299",
              },
              "type": "() => Type | undefined",
            },
            Object {
              "docs": Array [],
              "id": "Type.getConstructSignatures",
              "kind": "InterfaceMethodDeclaration",
              "name": "getConstructSignatures",
              "signature": "getConstructSignatures: () => readonly Signature[];",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5294,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5294",
              },
              "type": "() => readonly Signature[]",
            },
            Object {
              "docs": Array [],
              "id": "Type.getDefault",
              "kind": "InterfaceMethodDeclaration",
              "name": "getDefault",
              "signature": "getDefault: () => Type | undefined;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5300,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5300",
              },
              "type": "() => Type | undefined",
            },
            Object {
              "docs": Array [],
              "id": "Type.getFlags",
              "kind": "InterfaceMethodDeclaration",
              "name": "getFlags",
              "signature": "getFlags: () => TypeFlags;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5288,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5288",
              },
              "type": "() => TypeFlags",
            },
            Object {
              "docs": Array [],
              "id": "Type.getNonNullableType",
              "kind": "InterfaceMethodDeclaration",
              "name": "getNonNullableType",
              "signature": "getNonNullableType: () => Type;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5298,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5298",
              },
              "type": "() => Type",
            },
            Object {
              "docs": Array [],
              "id": "Type.getNumberIndexType",
              "kind": "InterfaceMethodDeclaration",
              "name": "getNumberIndexType",
              "signature": "getNumberIndexType: () => Type | undefined;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5296,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5296",
              },
              "type": "() => Type | undefined",
            },
            Object {
              "docs": Array [],
              "id": "Type.getProperties",
              "kind": "InterfaceMethodDeclaration",
              "name": "getProperties",
              "signature": "getProperties: () => Symbol[];",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5290,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5290",
              },
              "type": "() => Symbol[]",
            },
            Object {
              "docs": Array [],
              "id": "Type.getProperty",
              "kind": "InterfaceMethodDeclaration",
              "name": "getProperty",
              "signature": "getProperty: (propertyName: string) => Symbol | undefined;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5291,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5291",
              },
              "type": "(propertyName: string) => Symbol | undefined",
            },
            Object {
              "docs": Array [],
              "id": "Type.getStringIndexType",
              "kind": "InterfaceMethodDeclaration",
              "name": "getStringIndexType",
              "signature": "getStringIndexType: () => Type | undefined;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5295,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5295",
              },
              "type": "() => Type | undefined",
            },
            Object {
              "docs": Array [],
              "id": "Type.getSymbol",
              "kind": "InterfaceMethodDeclaration",
              "name": "getSymbol",
              "signature": "getSymbol: () => Symbol | undefined;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5289,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5289",
              },
              "type": "() => Symbol | undefined",
            },
            Object {
              "docs": Array [],
              "id": "Type.isClass",
              "kind": "InterfaceMethodDeclaration",
              "name": "isClass",
              "signature": "isClass: () => this is InterfaceType;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5309,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5309",
              },
              "type": "() => this is InterfaceType",
            },
            Object {
              "docs": Array [],
              "id": "Type.isClassOrInterface",
              "kind": "InterfaceMethodDeclaration",
              "name": "isClassOrInterface",
              "signature": "isClassOrInterface: () => this is InterfaceType;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5308,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5308",
              },
              "type": "() => this is InterfaceType",
            },
            Object {
              "docs": Array [],
              "id": "Type.isIntersection",
              "kind": "InterfaceMethodDeclaration",
              "name": "isIntersection",
              "signature": "isIntersection: () => this is IntersectionType;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5302,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5302",
              },
              "type": "() => this is IntersectionType",
            },
            Object {
              "docs": Array [],
              "id": "Type.isLiteral",
              "kind": "InterfaceMethodDeclaration",
              "name": "isLiteral",
              "signature": "isLiteral: () => this is LiteralType;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5304,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5304",
              },
              "type": "() => this is LiteralType",
            },
            Object {
              "docs": Array [],
              "id": "Type.isNumberLiteral",
              "kind": "InterfaceMethodDeclaration",
              "name": "isNumberLiteral",
              "signature": "isNumberLiteral: () => this is NumberLiteralType;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5306,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5306",
              },
              "type": "() => this is NumberLiteralType",
            },
            Object {
              "docs": Array [],
              "id": "Type.isStringLiteral",
              "kind": "InterfaceMethodDeclaration",
              "name": "isStringLiteral",
              "signature": "isStringLiteral: () => this is StringLiteralType;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5305,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5305",
              },
              "type": "() => this is StringLiteralType",
            },
            Object {
              "docs": Array [],
              "id": "Type.isTypeParameter",
              "kind": "InterfaceMethodDeclaration",
              "name": "isTypeParameter",
              "signature": "isTypeParameter: () => this is TypeParameter;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5307,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5307",
              },
              "type": "() => this is TypeParameter",
            },
            Object {
              "docs": Array [],
              "id": "Type.isUnion",
              "kind": "InterfaceMethodDeclaration",
              "name": "isUnion",
              "signature": "isUnion: () => this is UnionType;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5301,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5301",
              },
              "type": "() => this is UnionType",
            },
            Object {
              "docs": Array [],
              "id": "Type.isUnionOrIntersection",
              "kind": "InterfaceMethodDeclaration",
              "name": "isUnionOrIntersection",
              "signature": "isUnionOrIntersection: () => this is UnionOrIntersectionType;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5303,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5303",
              },
              "type": "() => this is UnionOrIntersectionType",
            },
          ],
          "properties": Array [],
        },
        "name": "Type",
        "signature": "interface Type {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 5287,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5287",
        },
      },
      Object {
        "docs": Array [],
        "id": "TypeAcquisition",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [
            Object {
              "docs": Array [],
              "id": "TypeAcquisition.5-index-signature",
              "kind": "InterfaceIndexSignatureDeclaration",
              "name": "index signature",
              "signature": "[option: string]: CompilerOptionsValue | undefined;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2894,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2894",
              },
            },
          ],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "TypeAcquisition.disableFilenameBasedTypeAcquisition",
              "isOptional": true,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "disableFilenameBasedTypeAcquisition",
              "signature": "disableFilenameBasedTypeAcquisition?: boolean;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2893,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2893",
              },
              "type": "boolean",
            },
            Object {
              "docs": Array [],
              "id": "TypeAcquisition.enable",
              "isOptional": true,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "enable",
              "signature": "enable?: boolean;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2890,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2890",
              },
              "type": "boolean",
            },
            Object {
              "docs": Array [
                "/**
         * @deprecated typingOptions.enableAutoDiscovery
         * Use typeAcquisition.enable instead.
         */",
              ],
              "id": "TypeAcquisition.enableAutoDiscovery",
              "isOptional": true,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "enableAutoDiscovery",
              "signature": "enableAutoDiscovery?: boolean;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2889,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2889",
              },
              "type": "boolean",
            },
            Object {
              "docs": Array [],
              "id": "TypeAcquisition.exclude",
              "isOptional": true,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "exclude",
              "signature": "exclude?: string[];",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2892,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2892",
              },
              "type": "string[]",
            },
            Object {
              "docs": Array [],
              "id": "TypeAcquisition.include",
              "isOptional": true,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "include",
              "signature": "include?: string[];",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2891,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2891",
              },
              "type": "string[]",
            },
          ],
        },
        "name": "TypeAcquisition",
        "signature": "interface TypeAcquisition {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 2884,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2884",
        },
      },
      Object {
        "docs": Array [],
        "id": "TypeAliasDeclaration",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "TypeAliasDeclaration.kind",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "kind",
              "signature": "readonly kind: SyntaxKind.TypeAliasDeclaration;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1552,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1552",
              },
              "type": "number",
            },
            Object {
              "docs": Array [],
              "id": "TypeAliasDeclaration.name",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "name",
              "signature": "readonly name: Identifier;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1553,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1553",
              },
              "type": "Identifier",
            },
            Object {
              "docs": Array [],
              "id": "TypeAliasDeclaration.type",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "type",
              "signature": "readonly type: TypeNode;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1555,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1555",
              },
              "type": "TypeNode",
            },
            Object {
              "docs": Array [],
              "id": "TypeAliasDeclaration.typeParameters",
              "isOptional": true,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "typeParameters",
              "signature": "readonly typeParameters?: NodeArray<TypeParameterDeclaration>;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1554,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1554",
              },
              "type": "NodeArray<TypeParameterDeclaration>",
            },
          ],
        },
        "name": "TypeAliasDeclaration",
        "signature": "interface TypeAliasDeclaration extends DeclarationStatement, JSDocContainer {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 1551,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1551",
        },
      },
      Object {
        "docs": Array [],
        "id": "TypeAssertion",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "TypeAssertion.expression",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "expression",
              "signature": "readonly expression: UnaryExpression;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1290,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1290",
              },
              "type": "UnaryExpression",
            },
            Object {
              "docs": Array [],
              "id": "TypeAssertion.kind",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "kind",
              "signature": "readonly kind: SyntaxKind.TypeAssertionExpression;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1288,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1288",
              },
              "type": "number",
            },
            Object {
              "docs": Array [],
              "id": "TypeAssertion.type",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "type",
              "signature": "readonly type: TypeNode;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1289,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1289",
              },
              "type": "TypeNode",
            },
          ],
        },
        "name": "TypeAssertion",
        "signature": "interface TypeAssertion extends UnaryExpression {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 1287,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1287",
        },
      },
      Object {
        "docs": Array [],
        "id": "TypeChecker",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [
            Object {
              "docs": Array [
                "/** Follow all aliases to get the original symbol. */",
              ],
              "id": "TypeChecker.getAliasedSymbol",
              "kind": "InterfaceMethodDeclaration",
              "name": "getAliasedSymbol",
              "signature": "getAliasedSymbol: (symbol: Symbol) => Symbol;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2226,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2226",
              },
              "type": "(symbol: Symbol) => Symbol",
            },
            Object {
              "docs": Array [],
              "id": "TypeChecker.getAmbientModules",
              "kind": "InterfaceMethodDeclaration",
              "name": "getAmbientModules",
              "signature": "getAmbientModules: () => Symbol[];",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2230,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2230",
              },
              "type": "() => Symbol[]",
            },
            Object {
              "docs": Array [],
              "id": "TypeChecker.getApparentType",
              "kind": "InterfaceMethodDeclaration",
              "name": "getApparentType",
              "signature": "getApparentType: (type: Type) => Type;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2232,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2232",
              },
              "type": "(type: Type) => Type",
            },
            Object {
              "docs": Array [],
              "id": "TypeChecker.getAugmentedPropertiesOfType",
              "kind": "InterfaceMethodDeclaration",
              "name": "getAugmentedPropertiesOfType",
              "signature": "getAugmentedPropertiesOfType: (type: Type) => Symbol[];",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2208,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2208",
              },
              "type": "(type: Type) => Symbol[]",
            },
            Object {
              "docs": Array [],
              "id": "TypeChecker.getBaseConstraintOfType",
              "kind": "InterfaceMethodDeclaration",
              "name": "getBaseConstraintOfType",
              "signature": "getBaseConstraintOfType: (type: Type) => Type | undefined;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2233,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2233",
              },
              "type": "(type: Type) => Type | undefined",
            },
            Object {
              "docs": Array [],
              "id": "TypeChecker.getBaseTypeOfLiteralType",
              "kind": "InterfaceMethodDeclaration",
              "name": "getBaseTypeOfLiteralType",
              "signature": "getBaseTypeOfLiteralType: (type: Type) => Type;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2157,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2157",
              },
              "type": "(type: Type) => Type",
            },
            Object {
              "docs": Array [],
              "id": "TypeChecker.getBaseTypes",
              "kind": "InterfaceMethodDeclaration",
              "name": "getBaseTypes",
              "signature": "getBaseTypes: (type: InterfaceType) => BaseType[];",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2156,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2156",
              },
              "type": "(type: InterfaceType) => BaseType[]",
            },
            Object {
              "docs": Array [],
              "id": "TypeChecker.getConstantValue",
              "kind": "InterfaceMethodDeclaration",
              "name": "getConstantValue",
              "signature": "getConstantValue: (
    node: EnumMember | PropertyAccessExpression | ElementAccessExpression
) => string | number | undefined;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2223,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2223",
              },
              "type": "(node: EnumMember | PropertyAccessExpression | ElementAccessExpression) => string | number | undefined",
            },
            Object {
              "docs": Array [],
              "id": "TypeChecker.getContextualType",
              "kind": "InterfaceMethodDeclaration",
              "name": "getContextualType",
              "signature": "getContextualType: (node: Expression) => Type | undefined;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2211,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2211",
              },
              "type": "(node: Expression) => Type | undefined",
            },
            Object {
              "docs": Array [],
              "id": "TypeChecker.getDeclaredTypeOfSymbol",
              "kind": "InterfaceMethodDeclaration",
              "name": "getDeclaredTypeOfSymbol",
              "signature": "getDeclaredTypeOfSymbol: (symbol: Symbol) => Type;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2149,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2149",
              },
              "type": "(symbol: Symbol) => Type",
            },
            Object {
              "docs": Array [],
              "id": "TypeChecker.getDefaultFromTypeParameter",
              "kind": "InterfaceMethodDeclaration",
              "name": "getDefaultFromTypeParameter",
              "signature": "getDefaultFromTypeParameter: (type: Type) => Type | undefined;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2234,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2234",
              },
              "type": "(type: Type) => Type | undefined",
            },
            Object {
              "docs": Array [],
              "id": "TypeChecker.getExportsOfModule",
              "kind": "InterfaceMethodDeclaration",
              "name": "getExportsOfModule",
              "signature": "getExportsOfModule: (moduleSymbol: Symbol) => Symbol[];",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2227,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2227",
              },
              "type": "(moduleSymbol: Symbol) => Symbol[]",
            },
            Object {
              "docs": Array [],
              "id": "TypeChecker.getExportSpecifierLocalTargetSymbol",
              "kind": "InterfaceMethodDeclaration",
              "name": "getExportSpecifierLocalTargetSymbol",
              "signature": "getExportSpecifierLocalTargetSymbol: (
    location: ExportSpecifier | Identifier
) => Symbol | undefined;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2189,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2189",
              },
              "type": "(location: ExportSpecifier | Identifier) => Symbol | undefined",
            },
            Object {
              "docs": Array [
                "/**
         * If a symbol is a local symbol with an associated exported symbol, returns the exported symbol.
         * Otherwise returns its input.
         * For example, at \`export type T = number;\`:
         *     - \`getSymbolAtLocation\` at the location \`T\` will return the exported symbol for \`T\`.
         *     - But the result of \`getSymbolsInScope\` will contain the *local* symbol for \`T\`, not the exported symbol.
         *     - Calling \`getExportSymbolOfSymbol\` on that local symbol will return the exported symbol.
         */",
              ],
              "id": "TypeChecker.getExportSymbolOfSymbol",
              "kind": "InterfaceMethodDeclaration",
              "name": "getExportSymbolOfSymbol",
              "signature": "getExportSymbolOfSymbol: (symbol: Symbol) => Symbol;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2198,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2198",
              },
              "type": "(symbol: Symbol) => Symbol",
            },
            Object {
              "docs": Array [],
              "id": "TypeChecker.getFullyQualifiedName",
              "kind": "InterfaceMethodDeclaration",
              "name": "getFullyQualifiedName",
              "signature": "getFullyQualifiedName: (symbol: Symbol) => string;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2207,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2207",
              },
              "type": "(symbol: Symbol) => string",
            },
            Object {
              "docs": Array [],
              "id": "TypeChecker.getIndexInfoOfType",
              "kind": "InterfaceMethodDeclaration",
              "name": "getIndexInfoOfType",
              "signature": "getIndexInfoOfType: (type: Type, kind: IndexKind) => IndexInfo | undefined;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2153,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2153",
              },
              "type": "(type: Type, kind: IndexKind) => IndexInfo | undefined",
            },
            Object {
              "docs": Array [],
              "id": "TypeChecker.getIndexTypeOfType",
              "kind": "InterfaceMethodDeclaration",
              "name": "getIndexTypeOfType",
              "signature": "getIndexTypeOfType: (type: Type, kind: IndexKind) => Type | undefined;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2155,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2155",
              },
              "type": "(type: Type, kind: IndexKind) => Type | undefined",
            },
            Object {
              "docs": Array [],
              "id": "TypeChecker.getJsxIntrinsicTagNamesAt",
              "kind": "InterfaceMethodDeclaration",
              "name": "getJsxIntrinsicTagNamesAt",
              "signature": "getJsxIntrinsicTagNamesAt: (location: Node) => Symbol[];",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2228,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2228",
              },
              "type": "(location: Node) => Symbol[]",
            },
            Object {
              "docs": Array [],
              "id": "TypeChecker.getNonNullableType",
              "kind": "InterfaceMethodDeclaration",
              "name": "getNonNullableType",
              "signature": "getNonNullableType: (type: Type) => Type;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2161,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2161",
              },
              "type": "(type: Type) => Type",
            },
            Object {
              "docs": Array [],
              "id": "TypeChecker.getNullableType",
              "kind": "InterfaceMethodDeclaration",
              "name": "getNullableType",
              "signature": "getNullableType: (type: Type, flags: TypeFlags) => Type;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2160,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2160",
              },
              "type": "(type: Type, flags: TypeFlags) => Type",
            },
            Object {
              "docs": Array [],
              "id": "TypeChecker.getPrivateIdentifierPropertyOfType",
              "kind": "InterfaceMethodDeclaration",
              "name": "getPrivateIdentifierPropertyOfType",
              "signature": "getPrivateIdentifierPropertyOfType: (
    leftType: Type,
    name: string,
    location: Node
) => Symbol | undefined;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2152,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2152",
              },
              "type": "(leftType: Type, name: string, location: Node) => Symbol | undefined",
            },
            Object {
              "docs": Array [],
              "id": "TypeChecker.getPropertiesOfType",
              "kind": "InterfaceMethodDeclaration",
              "name": "getPropertiesOfType",
              "signature": "getPropertiesOfType: (type: Type) => Symbol[];",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2150,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2150",
              },
              "type": "(type: Type) => Symbol[]",
            },
            Object {
              "docs": Array [],
              "id": "TypeChecker.getPropertyOfType",
              "kind": "InterfaceMethodDeclaration",
              "name": "getPropertyOfType",
              "signature": "getPropertyOfType: (type: Type, propertyName: string) => Symbol | undefined;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2151,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2151",
              },
              "type": "(type: Type, propertyName: string) => Symbol | undefined",
            },
            Object {
              "docs": Array [],
              "id": "TypeChecker.getPropertySymbolOfDestructuringAssignment",
              "kind": "InterfaceMethodDeclaration",
              "name": "getPropertySymbolOfDestructuringAssignment",
              "signature": "getPropertySymbolOfDestructuringAssignment: (
    location: Identifier
) => Symbol | undefined;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2199,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2199",
              },
              "type": "(location: Identifier) => Symbol | undefined",
            },
            Object {
              "docs": Array [
                "/**
         * returns unknownSignature in the case of an error.
         * returns undefined if the node is not valid.
         * @param argumentCount Apparent number of arguments, passed in case of a possibly incomplete call. This should come from an ArgumentListInfo. See \`signatureHelp.ts\`.
         */",
              ],
              "id": "TypeChecker.getResolvedSignature",
              "kind": "InterfaceMethodDeclaration",
              "name": "getResolvedSignature",
              "signature": "getResolvedSignature: (
    node: CallLikeExpression,
    candidatesOutArray?: Signature[],
    argumentCount?: number
) => Signature | undefined;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2217,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2217",
              },
              "type": "(node: CallLikeExpression, candidatesOutArray?: Signature[], argumentCount?: number) => Signature | undefined",
            },
            Object {
              "docs": Array [],
              "id": "TypeChecker.getReturnTypeOfSignature",
              "kind": "InterfaceMethodDeclaration",
              "name": "getReturnTypeOfSignature",
              "signature": "getReturnTypeOfSignature: (signature: Signature) => Type;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2159,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2159",
              },
              "type": "(signature: Signature) => Type",
            },
            Object {
              "docs": Array [],
              "id": "TypeChecker.getRootSymbols",
              "kind": "InterfaceMethodDeclaration",
              "name": "getRootSymbols",
              "signature": "getRootSymbols: (symbol: Symbol) => readonly Symbol[];",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2209,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2209",
              },
              "type": "(symbol: Symbol) => readonly Symbol[]",
            },
            Object {
              "docs": Array [
                "/**
         * The function returns the value (local variable) symbol of an identifier in the short-hand property assignment.
         * This is necessary as an identifier in short-hand property assignment can contains two meaning: property name and property value.
         */",
              ],
              "id": "TypeChecker.getShorthandAssignmentValueSymbol",
              "kind": "InterfaceMethodDeclaration",
              "name": "getShorthandAssignmentValueSymbol",
              "signature": "getShorthandAssignmentValueSymbol: (location: Node) => Symbol | undefined;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2188,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2188",
              },
              "type": "(location: Node) => Symbol | undefined",
            },
            Object {
              "docs": Array [],
              "id": "TypeChecker.getSignatureFromDeclaration",
              "kind": "InterfaceMethodDeclaration",
              "name": "getSignatureFromDeclaration",
              "signature": "getSignatureFromDeclaration: (
    declaration: SignatureDeclaration
) => Signature | undefined;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2218,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2218",
              },
              "type": "(declaration: SignatureDeclaration) => Signature | undefined",
            },
            Object {
              "docs": Array [],
              "id": "TypeChecker.getSignaturesOfType",
              "kind": "InterfaceMethodDeclaration",
              "name": "getSignaturesOfType",
              "signature": "getSignaturesOfType: (type: Type, kind: SignatureKind) => readonly Signature[];",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2154,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2154",
              },
              "type": "(type: Type, kind: SignatureKind) => readonly Signature[]",
            },
            Object {
              "docs": Array [],
              "id": "TypeChecker.getSymbolAtLocation",
              "kind": "InterfaceMethodDeclaration",
              "name": "getSymbolAtLocation",
              "signature": "getSymbolAtLocation: (node: Node) => Symbol | undefined;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2182,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2182",
              },
              "type": "(node: Node) => Symbol | undefined",
            },
            Object {
              "docs": Array [],
              "id": "TypeChecker.getSymbolOfExpando",
              "kind": "InterfaceMethodDeclaration",
              "name": "getSymbolOfExpando",
              "signature": "getSymbolOfExpando: (
    node: Node,
    allowDeclaration: boolean
) => Symbol | undefined;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2210,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2210",
              },
              "type": "(node: Node, allowDeclaration: boolean) => Symbol | undefined",
            },
            Object {
              "docs": Array [],
              "id": "TypeChecker.getSymbolsInScope",
              "kind": "InterfaceMethodDeclaration",
              "name": "getSymbolsInScope",
              "signature": "getSymbolsInScope: (location: Node, meaning: SymbolFlags) => Symbol[];",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2181,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2181",
              },
              "type": "(location: Node, meaning: SymbolFlags) => Symbol[]",
            },
            Object {
              "docs": Array [],
              "id": "TypeChecker.getSymbolsOfParameterPropertyDeclaration",
              "kind": "InterfaceMethodDeclaration",
              "name": "getSymbolsOfParameterPropertyDeclaration",
              "signature": "getSymbolsOfParameterPropertyDeclaration: (
    parameter: ParameterDeclaration,
    parameterName: string
) => Symbol[];",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2183,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2183",
              },
              "type": "(parameter: ParameterDeclaration, parameterName: string) => Symbol[]",
            },
            Object {
              "docs": Array [],
              "id": "TypeChecker.getTypeArguments",
              "kind": "InterfaceMethodDeclaration",
              "name": "getTypeArguments",
              "signature": "getTypeArguments: (type: TypeReference) => readonly Type[];",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2162,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2162",
              },
              "type": "(type: TypeReference) => readonly Type[]",
            },
            Object {
              "docs": Array [],
              "id": "TypeChecker.getTypeAtLocation",
              "kind": "InterfaceMethodDeclaration",
              "name": "getTypeAtLocation",
              "signature": "getTypeAtLocation: (node: Node) => Type;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2201,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2201",
              },
              "type": "(node: Node) => Type",
            },
            Object {
              "docs": Array [],
              "id": "TypeChecker.getTypeFromTypeNode",
              "kind": "InterfaceMethodDeclaration",
              "name": "getTypeFromTypeNode",
              "signature": "getTypeFromTypeNode: (node: TypeNode) => Type;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2202,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2202",
              },
              "type": "(node: TypeNode) => Type",
            },
            Object {
              "docs": Array [],
              "id": "TypeChecker.getTypeOfAssignmentPattern",
              "kind": "InterfaceMethodDeclaration",
              "name": "getTypeOfAssignmentPattern",
              "signature": "getTypeOfAssignmentPattern: (pattern: AssignmentPattern) => Type;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2200,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2200",
              },
              "type": "(pattern: AssignmentPattern) => Type",
            },
            Object {
              "docs": Array [],
              "id": "TypeChecker.getTypeOfSymbolAtLocation",
              "kind": "InterfaceMethodDeclaration",
              "name": "getTypeOfSymbolAtLocation",
              "signature": "getTypeOfSymbolAtLocation: (symbol: Symbol, node: Node) => Type;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2148,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2148",
              },
              "type": "(symbol: Symbol, node: Node) => Type",
            },
            Object {
              "docs": Array [],
              "id": "TypeChecker.getWidenedType",
              "kind": "InterfaceMethodDeclaration",
              "name": "getWidenedType",
              "signature": "getWidenedType: (type: Type) => Type;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2158,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2158",
              },
              "type": "(type: Type) => Type",
            },
            Object {
              "docs": Array [
                "/** Note that the resulting nodes cannot be checked. */",
              ],
              "id": "TypeChecker.indexInfoToIndexSignatureDeclaration",
              "kind": "InterfaceMethodDeclaration",
              "name": "indexInfoToIndexSignatureDeclaration",
              "signature": "indexInfoToIndexSignatureDeclaration: (
    indexInfo: IndexInfo,
    kind: IndexKind,
    enclosingDeclaration: Node | undefined,
    flags: NodeBuilderFlags
) => IndexSignatureDeclaration | undefined;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2170,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2170",
              },
              "type": "(indexInfo: IndexInfo, kind: IndexKind, enclosingDeclaration: Node | undefined, flags: NodeBuilderFlags) => IndexSignatureDeclaration | undefined",
            },
            Object {
              "docs": Array [],
              "id": "TypeChecker.isArgumentsSymbol",
              "kind": "InterfaceMethodDeclaration",
              "name": "isArgumentsSymbol",
              "signature": "isArgumentsSymbol: (symbol: Symbol) => boolean;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2221,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2221",
              },
              "type": "(symbol: Symbol) => boolean",
            },
            Object {
              "docs": Array [],
              "id": "TypeChecker.isImplementationOfOverload",
              "kind": "InterfaceMethodDeclaration",
              "name": "isImplementationOfOverload",
              "signature": "isImplementationOfOverload: (node: SignatureDeclaration) => boolean | undefined;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2219,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2219",
              },
              "type": "(node: SignatureDeclaration) => boolean | undefined",
            },
            Object {
              "docs": Array [],
              "id": "TypeChecker.isOptionalParameter",
              "kind": "InterfaceMethodDeclaration",
              "name": "isOptionalParameter",
              "signature": "isOptionalParameter: (node: ParameterDeclaration) => boolean;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2229,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2229",
              },
              "type": "(node: ParameterDeclaration) => boolean",
            },
            Object {
              "docs": Array [],
              "id": "TypeChecker.isUndefinedSymbol",
              "kind": "InterfaceMethodDeclaration",
              "name": "isUndefinedSymbol",
              "signature": "isUndefinedSymbol: (symbol: Symbol) => boolean;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2220,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2220",
              },
              "type": "(symbol: Symbol) => boolean",
            },
            Object {
              "docs": Array [],
              "id": "TypeChecker.isUnknownSymbol",
              "kind": "InterfaceMethodDeclaration",
              "name": "isUnknownSymbol",
              "signature": "isUnknownSymbol: (symbol: Symbol) => boolean;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2222,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2222",
              },
              "type": "(symbol: Symbol) => boolean",
            },
            Object {
              "docs": Array [],
              "id": "TypeChecker.isValidPropertyAccess",
              "kind": "InterfaceMethodDeclaration",
              "name": "isValidPropertyAccess",
              "signature": "isValidPropertyAccess: (
    node: PropertyAccessExpression | QualifiedName | ImportTypeNode,
    propertyName: string
) => boolean;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2224,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2224",
              },
              "type": "(node: PropertyAccessExpression | QualifiedName | ImportTypeNode, propertyName: string) => boolean",
            },
            Object {
              "docs": Array [
                "/**
         * Depending on the operation performed, it may be appropriate to throw away the checker
         * if the cancellation token is triggered. Typically, if it is used for error checking
         * and the operation is cancelled, then it should be discarded, otherwise it is safe to keep.
         */",
              ],
              "id": "TypeChecker.runWithCancellationToken",
              "kind": "InterfaceMethodDeclaration",
              "name": "runWithCancellationToken",
              "signature": "runWithCancellationToken: <T>(
    token: CancellationToken,
    cb: (checker: TypeChecker) => T
) => T;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2240,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2240",
              },
              "type": "<T>(token: CancellationToken, cb: (checker: TypeChecker) => T) => T",
            },
            Object {
              "docs": Array [
                "/** Note that the resulting nodes cannot be checked. */",
              ],
              "id": "TypeChecker.signatureToSignatureDeclaration",
              "kind": "InterfaceMethodDeclaration",
              "name": "signatureToSignatureDeclaration",
              "signature": "signatureToSignatureDeclaration: (
    signature: Signature,
    kind: SyntaxKind,
    enclosingDeclaration: Node | undefined,
    flags: NodeBuilderFlags
) =>
    | (SignatureDeclaration & { typeArguments?: NodeArray<TypeNode> })
    | undefined;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2166,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2166",
              },
              "type": "(signature: Signature, kind: SyntaxKind, enclosingDeclaration: Node | undefined, flags: NodeBuilderFlags) => (SignatureDeclaration & {    typeArguments?: NodeArray<TypeNode>;}) | undefined",
            },
            Object {
              "docs": Array [],
              "id": "TypeChecker.signatureToString",
              "kind": "InterfaceMethodDeclaration",
              "name": "signatureToString",
              "signature": "signatureToString: (
    signature: Signature,
    enclosingDeclaration?: Node,
    flags?: TypeFormatFlags,
    kind?: SignatureKind
) => string;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2203,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2203",
              },
              "type": "(signature: Signature, enclosingDeclaration?: Node, flags?: TypeFormatFlags, kind?: SignatureKind) => string",
            },
            Object {
              "docs": Array [
                "/** Note that the resulting nodes cannot be checked. */",
              ],
              "id": "TypeChecker.symbolToEntityName",
              "kind": "InterfaceMethodDeclaration",
              "name": "symbolToEntityName",
              "signature": "symbolToEntityName: (
    symbol: Symbol,
    meaning: SymbolFlags,
    enclosingDeclaration: Node | undefined,
    flags: NodeBuilderFlags
) => EntityName | undefined;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2172,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2172",
              },
              "type": "(symbol: Symbol, meaning: SymbolFlags, enclosingDeclaration: Node | undefined, flags: NodeBuilderFlags) => EntityName | undefined",
            },
            Object {
              "docs": Array [
                "/** Note that the resulting nodes cannot be checked. */",
              ],
              "id": "TypeChecker.symbolToExpression",
              "kind": "InterfaceMethodDeclaration",
              "name": "symbolToExpression",
              "signature": "symbolToExpression: (
    symbol: Symbol,
    meaning: SymbolFlags,
    enclosingDeclaration: Node | undefined,
    flags: NodeBuilderFlags
) => Expression | undefined;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2174,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2174",
              },
              "type": "(symbol: Symbol, meaning: SymbolFlags, enclosingDeclaration: Node | undefined, flags: NodeBuilderFlags) => Expression | undefined",
            },
            Object {
              "docs": Array [
                "/** Note that the resulting nodes cannot be checked. */",
              ],
              "id": "TypeChecker.symbolToParameterDeclaration",
              "kind": "InterfaceMethodDeclaration",
              "name": "symbolToParameterDeclaration",
              "signature": "symbolToParameterDeclaration: (
    symbol: Symbol,
    enclosingDeclaration: Node | undefined,
    flags: NodeBuilderFlags
) => ParameterDeclaration | undefined;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2178,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2178",
              },
              "type": "(symbol: Symbol, enclosingDeclaration: Node | undefined, flags: NodeBuilderFlags) => ParameterDeclaration | undefined",
            },
            Object {
              "docs": Array [],
              "id": "TypeChecker.symbolToString",
              "kind": "InterfaceMethodDeclaration",
              "name": "symbolToString",
              "signature": "symbolToString: (
    symbol: Symbol,
    enclosingDeclaration?: Node,
    meaning?: SymbolFlags,
    flags?: SymbolFormatFlags
) => string;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2205,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2205",
              },
              "type": "(symbol: Symbol, enclosingDeclaration?: Node, meaning?: SymbolFlags, flags?: SymbolFormatFlags) => string",
            },
            Object {
              "docs": Array [
                "/** Note that the resulting nodes cannot be checked. */",
              ],
              "id": "TypeChecker.symbolToTypeParameterDeclarations",
              "kind": "InterfaceMethodDeclaration",
              "name": "symbolToTypeParameterDeclarations",
              "signature": "symbolToTypeParameterDeclarations: (
    symbol: Symbol,
    enclosingDeclaration: Node | undefined,
    flags: NodeBuilderFlags
) => NodeArray<TypeParameterDeclaration> | undefined;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2176,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2176",
              },
              "type": "(symbol: Symbol, enclosingDeclaration: Node | undefined, flags: NodeBuilderFlags) => NodeArray<TypeParameterDeclaration> | undefined",
            },
            Object {
              "docs": Array [],
              "id": "TypeChecker.tryGetMemberInModuleExports",
              "kind": "InterfaceMethodDeclaration",
              "name": "tryGetMemberInModuleExports",
              "signature": "tryGetMemberInModuleExports: (
    memberName: string,
    moduleSymbol: Symbol
) => Symbol | undefined;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2231,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2231",
              },
              "type": "(memberName: string, moduleSymbol: Symbol) => Symbol | undefined",
            },
            Object {
              "docs": Array [
                "/** Note that the resulting nodes cannot be checked. */",
              ],
              "id": "TypeChecker.typeParameterToDeclaration",
              "kind": "InterfaceMethodDeclaration",
              "name": "typeParameterToDeclaration",
              "signature": "typeParameterToDeclaration: (
    parameter: TypeParameter,
    enclosingDeclaration: Node | undefined,
    flags: NodeBuilderFlags
) => TypeParameterDeclaration | undefined;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2180,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2180",
              },
              "type": "(parameter: TypeParameter, enclosingDeclaration: Node | undefined, flags: NodeBuilderFlags) => TypeParameterDeclaration | undefined",
            },
            Object {
              "docs": Array [],
              "id": "TypeChecker.typePredicateToString",
              "kind": "InterfaceMethodDeclaration",
              "name": "typePredicateToString",
              "signature": "typePredicateToString: (
    predicate: TypePredicate,
    enclosingDeclaration?: Node,
    flags?: TypeFormatFlags
) => string;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2206,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2206",
              },
              "type": "(predicate: TypePredicate, enclosingDeclaration?: Node, flags?: TypeFormatFlags) => string",
            },
            Object {
              "docs": Array [],
              "id": "TypeChecker.typeToString",
              "kind": "InterfaceMethodDeclaration",
              "name": "typeToString",
              "signature": "typeToString: (
    type: Type,
    enclosingDeclaration?: Node,
    flags?: TypeFormatFlags
) => string;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2204,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2204",
              },
              "type": "(type: Type, enclosingDeclaration?: Node, flags?: TypeFormatFlags) => string",
            },
            Object {
              "docs": Array [
                "/** Note that the resulting nodes cannot be checked. */",
              ],
              "id": "TypeChecker.typeToTypeNode",
              "kind": "InterfaceMethodDeclaration",
              "name": "typeToTypeNode",
              "signature": "typeToTypeNode: (
    type: Type,
    enclosingDeclaration: Node | undefined,
    flags: NodeBuilderFlags
) => TypeNode | undefined;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2164,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2164",
              },
              "type": "(type: Type, enclosingDeclaration: Node | undefined, flags: NodeBuilderFlags) => TypeNode | undefined",
            },
          ],
          "properties": Array [],
        },
        "name": "TypeChecker",
        "signature": "interface TypeChecker {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 2147,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2147",
        },
      },
      Object {
        "docs": Array [],
        "id": "TypeElement",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "TypeElement.name",
              "isOptional": true,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "name",
              "signature": "readonly name?: PropertyName;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1535,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1535",
              },
              "type": "PropertyName",
            },
            Object {
              "docs": Array [],
              "id": "TypeElement.questionToken",
              "isOptional": true,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "questionToken",
              "signature": "readonly questionToken?: QuestionToken;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1536,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1536",
              },
              "type": "QuestionToken",
            },
          ],
        },
        "name": "TypeElement",
        "signature": "interface TypeElement extends NamedDeclaration {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 1533,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1533",
        },
      },
      Object {
        "docs": Array [],
        "id": "TypeLiteralNode",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "TypeLiteralNode.kind",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "kind",
              "signature": "readonly kind: SyntaxKind.TypeLiteral;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 887,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L887",
              },
              "type": "number",
            },
            Object {
              "docs": Array [],
              "id": "TypeLiteralNode.members",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "members",
              "signature": "readonly members: NodeArray<TypeElement>;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 888,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L888",
              },
              "type": "NodeArray<TypeElement>",
            },
          ],
        },
        "name": "TypeLiteralNode",
        "signature": "interface TypeLiteralNode extends TypeNode, Declaration {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 886,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L886",
        },
      },
      Object {
        "docs": Array [],
        "id": "TypeNode",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [],
        },
        "name": "TypeNode",
        "signature": "interface TypeNode extends Node {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 841,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L841",
        },
      },
      Object {
        "docs": Array [],
        "id": "TypeOfExpression",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "TypeOfExpression.expression",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "expression",
              "signature": "readonly expression: UnaryExpression;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1039,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1039",
              },
              "type": "UnaryExpression",
            },
            Object {
              "docs": Array [],
              "id": "TypeOfExpression.kind",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "kind",
              "signature": "readonly kind: SyntaxKind.TypeOfExpression;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1038,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1038",
              },
              "type": "number",
            },
          ],
        },
        "name": "TypeOfExpression",
        "signature": "interface TypeOfExpression extends UnaryExpression {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 1037,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1037",
        },
      },
      Object {
        "docs": Array [],
        "id": "TypeOperatorNode",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "TypeOperatorNode.kind",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "kind",
              "signature": "readonly kind: SyntaxKind.TypeOperator;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 938,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L938",
              },
              "type": "number",
            },
            Object {
              "docs": Array [],
              "id": "TypeOperatorNode.operator",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "operator",
              "signature": "readonly operator:
    | SyntaxKind.KeyOfKeyword
    | SyntaxKind.UniqueKeyword
    | SyntaxKind.ReadonlyKeyword;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 939,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L939",
              },
              "type": "SyntaxKind.KeyOfKeyword | SyntaxKind.ReadonlyKeyword | SyntaxKind.UniqueKeyword",
            },
            Object {
              "docs": Array [],
              "id": "TypeOperatorNode.type",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "type",
              "signature": "readonly type: TypeNode;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 940,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L940",
              },
              "type": "TypeNode",
            },
          ],
        },
        "name": "TypeOperatorNode",
        "signature": "interface TypeOperatorNode extends TypeNode {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 937,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L937",
        },
      },
      Object {
        "docs": Array [],
        "id": "TypeParameter",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [],
        },
        "name": "TypeParameter",
        "signature": "interface TypeParameter extends InstantiableType {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 2621,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2621",
        },
      },
      Object {
        "docs": Array [],
        "id": "TypeParameterDeclaration",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [
                "/** Note: Consider calling \`getEffectiveConstraintOfTypeParameter\` */",
              ],
              "id": "TypeParameterDeclaration.constraint",
              "isOptional": true,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "constraint",
              "signature": "readonly constraint?: TypeNode;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 670,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L670",
              },
              "type": "TypeNode",
            },
            Object {
              "docs": Array [],
              "id": "TypeParameterDeclaration.default",
              "isOptional": true,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "default",
              "signature": "readonly default?: TypeNode;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 671,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L671",
              },
              "type": "TypeNode",
            },
            Object {
              "docs": Array [],
              "id": "TypeParameterDeclaration.expression",
              "isOptional": true,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "expression",
              "signature": "expression?: Expression;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 672,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L672",
              },
              "type": "Expression",
            },
            Object {
              "docs": Array [],
              "id": "TypeParameterDeclaration.kind",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "kind",
              "signature": "readonly kind: SyntaxKind.TypeParameter;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 666,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L666",
              },
              "type": "number",
            },
            Object {
              "docs": Array [],
              "id": "TypeParameterDeclaration.name",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "name",
              "signature": "readonly name: Identifier;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 668,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L668",
              },
              "type": "Identifier",
            },
            Object {
              "docs": Array [],
              "id": "TypeParameterDeclaration.parent",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "parent",
              "signature": "readonly parent: DeclarationWithTypeParameterChildren | InferTypeNode;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 667,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L667",
              },
              "type": "DeclarationWithTypeParameterChildren | InferTypeNode",
            },
          ],
        },
        "name": "TypeParameterDeclaration",
        "signature": "interface TypeParameterDeclaration extends NamedDeclaration {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 665,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L665",
        },
      },
      Object {
        "docs": Array [],
        "id": "TypePredicateBase",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "TypePredicateBase.kind",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "kind",
              "signature": "kind: TypePredicateKind;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2315,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2315",
              },
              "type": "TypePredicateKind",
            },
            Object {
              "docs": Array [],
              "id": "TypePredicateBase.type",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "type",
              "signature": "type: Type | undefined;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2316,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2316",
              },
              "type": "Type",
            },
          ],
        },
        "name": "TypePredicateBase",
        "signature": "interface TypePredicateBase {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 2314,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2314",
        },
      },
      Object {
        "docs": Array [],
        "id": "TypePredicateNode",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "TypePredicateNode.assertsModifier",
              "isOptional": true,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "assertsModifier",
              "signature": "readonly assertsModifier?: AssertsToken;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 878,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L878",
              },
              "type": "AssertsKeyword",
            },
            Object {
              "docs": Array [],
              "id": "TypePredicateNode.kind",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "kind",
              "signature": "readonly kind: SyntaxKind.TypePredicate;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 876,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L876",
              },
              "type": "number",
            },
            Object {
              "docs": Array [],
              "id": "TypePredicateNode.parameterName",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "parameterName",
              "signature": "readonly parameterName: Identifier | ThisTypeNode;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 879,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L879",
              },
              "type": "Identifier | ThisTypeNode",
            },
            Object {
              "docs": Array [],
              "id": "TypePredicateNode.parent",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "parent",
              "signature": "readonly parent: SignatureDeclaration | JSDocTypeExpression;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 877,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L877",
              },
              "type": "SignatureDeclaration | JSDocTypeExpression",
            },
            Object {
              "docs": Array [],
              "id": "TypePredicateNode.type",
              "isOptional": true,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "type",
              "signature": "readonly type?: TypeNode;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 880,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L880",
              },
              "type": "TypeNode",
            },
          ],
        },
        "name": "TypePredicateNode",
        "signature": "interface TypePredicateNode extends TypeNode {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 875,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L875",
        },
      },
      Object {
        "docs": Array [],
        "id": "TypeQueryNode",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "TypeQueryNode.exprName",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "exprName",
              "signature": "readonly exprName: EntityName;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 884,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L884",
              },
              "type": "EntityName",
            },
            Object {
              "docs": Array [],
              "id": "TypeQueryNode.kind",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "kind",
              "signature": "readonly kind: SyntaxKind.TypeQuery;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 883,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L883",
              },
              "type": "number",
            },
          ],
        },
        "name": "TypeQueryNode",
        "signature": "interface TypeQueryNode extends TypeNode {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 882,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L882",
        },
      },
      Object {
        "docs": Array [
          "/**
     * Type references (ObjectFlags.Reference). When a class or interface has type parameters or
     * a \\"this\\" type, references to the class or interface are made using type references. The
     * typeArguments property specifies the types to substitute for the type parameters of the
     * class or interface and optionally includes an extra element that specifies the type to
     * substitute for \\"this\\" in the resulting instantiation. When no extra argument is present,
     * the type reference itself is substituted for \\"this\\". The typeArguments property is undefined
     * if the class or interface has no type parameters and the reference isn't specifying an
     * explicit \\"this\\" argument.
     */",
        ],
        "id": "TypeReference",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "TypeReference.node",
              "isOptional": true,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "node",
              "signature": "node?: TypeReferenceNode | ArrayTypeNode | TupleTypeNode;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2582,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2582",
              },
              "type": "TypeReferenceNode | ArrayTypeNode | TupleTypeNode",
            },
            Object {
              "docs": Array [],
              "id": "TypeReference.target",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "target",
              "signature": "target: GenericType;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2581,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2581",
              },
              "type": "GenericType",
            },
          ],
        },
        "name": "TypeReference",
        "signature": "interface TypeReference extends ObjectType {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 2580,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2580",
        },
      },
      Object {
        "docs": Array [],
        "id": "TypeReference",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "TypeReference.typeArguments",
              "isOptional": true,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "typeArguments",
              "signature": "typeArguments?: readonly Type[];",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5312,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5312",
              },
              "type": "readonly Type[]",
            },
          ],
        },
        "name": "TypeReference",
        "signature": "interface TypeReference {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 5311,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5311",
        },
      },
      Object {
        "docs": Array [],
        "id": "TypeReferenceNode",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "TypeReferenceNode.kind",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "kind",
              "signature": "readonly kind: SyntaxKind.TypeReference;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 872,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L872",
              },
              "type": "number",
            },
            Object {
              "docs": Array [],
              "id": "TypeReferenceNode.typeName",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "typeName",
              "signature": "readonly typeName: EntityName;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 873,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L873",
              },
              "type": "EntityName",
            },
          ],
        },
        "name": "TypeReferenceNode",
        "signature": "interface TypeReferenceNode extends NodeWithTypeArguments {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 871,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L871",
        },
      },
      Object {
        "docs": Array [],
        "id": "UnaryExpression",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [],
        },
        "name": "UnaryExpression",
        "signature": "interface UnaryExpression extends Expression {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 985,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L985",
        },
      },
      Object {
        "docs": Array [
          "/** Map where keys are \`__String\`s. */",
        ],
        "id": "UnderscoreEscapedMap",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [],
        },
        "name": "UnderscoreEscapedMap",
        "signature": "interface UnderscoreEscapedMap<T>
    extends ESMap<__String, T>,
        ReadonlyUnderscoreEscapedMap<T> {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 2449,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2449",
        },
      },
      Object {
        "docs": Array [],
        "id": "UnionOrIntersectionType",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "UnionOrIntersectionType.types",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "types",
              "signature": "types: Type[];",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2608,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2608",
              },
              "type": "Type[]",
            },
          ],
        },
        "name": "UnionOrIntersectionType",
        "signature": "interface UnionOrIntersectionType extends Type {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 2607,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2607",
        },
      },
      Object {
        "docs": Array [],
        "id": "UnionType",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [],
        },
        "name": "UnionType",
        "signature": "interface UnionType extends UnionOrIntersectionType {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 2610,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2610",
        },
      },
      Object {
        "docs": Array [],
        "id": "UnionTypeNode",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "UnionTypeNode.kind",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "kind",
              "signature": "readonly kind: SyntaxKind.UnionType;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 915,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L915",
              },
              "type": "number",
            },
            Object {
              "docs": Array [],
              "id": "UnionTypeNode.types",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "types",
              "signature": "readonly types: NodeArray<TypeNode>;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 916,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L916",
              },
              "type": "NodeArray<TypeNode>",
            },
          ],
        },
        "name": "UnionTypeNode",
        "signature": "interface UnionTypeNode extends TypeNode {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 914,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L914",
        },
      },
      Object {
        "docs": Array [],
        "id": "UniqueESSymbolType",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "UniqueESSymbolType.escapedName",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "escapedName",
              "signature": "escapedName: __String;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2518,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2518",
              },
              "type": "__String",
            },
            Object {
              "docs": Array [],
              "id": "UniqueESSymbolType.symbol",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "symbol",
              "signature": "symbol: Symbol;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2517,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2517",
              },
              "type": "Symbol",
            },
          ],
        },
        "name": "UniqueESSymbolType",
        "signature": "interface UniqueESSymbolType extends Type {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 2516,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2516",
        },
      },
      Object {
        "docs": Array [],
        "id": "UnparsedPrepend",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "UnparsedPrepend.data",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "data",
              "signature": "readonly data: string;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1991,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1991",
              },
              "type": "string",
            },
            Object {
              "docs": Array [],
              "id": "UnparsedPrepend.kind",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "kind",
              "signature": "readonly kind: SyntaxKind.UnparsedPrepend;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1989,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1989",
              },
              "type": "number",
            },
            Object {
              "docs": Array [],
              "id": "UnparsedPrepend.parent",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "parent",
              "signature": "readonly parent: UnparsedSource;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1990,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1990",
              },
              "type": "UnparsedSource",
            },
            Object {
              "docs": Array [],
              "id": "UnparsedPrepend.texts",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "texts",
              "signature": "readonly texts: readonly UnparsedTextLike[];",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1992,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1992",
              },
              "type": "readonly UnparsedTextLike[]",
            },
          ],
        },
        "name": "UnparsedPrepend",
        "signature": "interface UnparsedPrepend extends UnparsedSection {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 1988,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1988",
        },
      },
      Object {
        "docs": Array [],
        "id": "UnparsedPrologue",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "UnparsedPrologue.data",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "data",
              "signature": "readonly data: string;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1986,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1986",
              },
              "type": "string",
            },
            Object {
              "docs": Array [],
              "id": "UnparsedPrologue.kind",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "kind",
              "signature": "readonly kind: SyntaxKind.UnparsedPrologue;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1984,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1984",
              },
              "type": "number",
            },
            Object {
              "docs": Array [],
              "id": "UnparsedPrologue.parent",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "parent",
              "signature": "readonly parent: UnparsedSource;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1985,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1985",
              },
              "type": "UnparsedSource",
            },
          ],
        },
        "name": "UnparsedPrologue",
        "signature": "interface UnparsedPrologue extends UnparsedSection {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 1983,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1983",
        },
      },
      Object {
        "docs": Array [],
        "id": "UnparsedSection",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "UnparsedSection.data",
              "isOptional": true,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "data",
              "signature": "readonly data?: string;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1981,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1981",
              },
              "type": "string",
            },
            Object {
              "docs": Array [],
              "id": "UnparsedSection.kind",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "kind",
              "signature": "readonly kind: SyntaxKind;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1979,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1979",
              },
              "type": "SyntaxKind",
            },
            Object {
              "docs": Array [],
              "id": "UnparsedSection.parent",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "parent",
              "signature": "readonly parent: UnparsedSource;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1980,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1980",
              },
              "type": "UnparsedSource",
            },
          ],
        },
        "name": "UnparsedSection",
        "signature": "interface UnparsedSection extends Node {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 1978,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1978",
        },
      },
      Object {
        "docs": Array [],
        "id": "UnparsedSource",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "UnparsedSource.fileName",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "fileName",
              "signature": "fileName: string;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1963,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1963",
              },
              "type": "string",
            },
            Object {
              "docs": Array [],
              "id": "UnparsedSource.hasNoDefaultLib",
              "isOptional": true,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "hasNoDefaultLib",
              "signature": "hasNoDefaultLib?: boolean;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1970,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1970",
              },
              "type": "boolean",
            },
            Object {
              "docs": Array [],
              "id": "UnparsedSource.helpers",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "helpers",
              "signature": "helpers: readonly UnscopedEmitHelper[] | undefined;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1966,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1966",
              },
              "type": "readonly UnscopedEmitHelper[]",
            },
            Object {
              "docs": Array [],
              "id": "UnparsedSource.kind",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "kind",
              "signature": "readonly kind: SyntaxKind.UnparsedSource;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1962,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1962",
              },
              "type": "number",
            },
            Object {
              "docs": Array [],
              "id": "UnparsedSource.libReferenceDirectives",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "libReferenceDirectives",
              "signature": "libReferenceDirectives: readonly FileReference[];",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1969,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1969",
              },
              "type": "readonly FileReference[]",
            },
            Object {
              "docs": Array [],
              "id": "UnparsedSource.prologues",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "prologues",
              "signature": "readonly prologues: readonly UnparsedPrologue[];",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1965,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1965",
              },
              "type": "readonly UnparsedPrologue[]",
            },
            Object {
              "docs": Array [],
              "id": "UnparsedSource.referencedFiles",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "referencedFiles",
              "signature": "referencedFiles: readonly FileReference[];",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1967,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1967",
              },
              "type": "readonly FileReference[]",
            },
            Object {
              "docs": Array [],
              "id": "UnparsedSource.sourceMapPath",
              "isOptional": true,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "sourceMapPath",
              "signature": "sourceMapPath?: string;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1971,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1971",
              },
              "type": "string",
            },
            Object {
              "docs": Array [],
              "id": "UnparsedSource.sourceMapText",
              "isOptional": true,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "sourceMapText",
              "signature": "sourceMapText?: string;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1972,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1972",
              },
              "type": "string",
            },
            Object {
              "docs": Array [],
              "id": "UnparsedSource.syntheticReferences",
              "isOptional": true,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "syntheticReferences",
              "signature": "readonly syntheticReferences?: readonly UnparsedSyntheticReference[];",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1973,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1973",
              },
              "type": "readonly UnparsedSyntheticReference[]",
            },
            Object {
              "docs": Array [],
              "id": "UnparsedSource.text",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "text",
              "signature": "text: string;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1964,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1964",
              },
              "type": "string",
            },
            Object {
              "docs": Array [],
              "id": "UnparsedSource.texts",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "texts",
              "signature": "readonly texts: readonly UnparsedSourceText[];",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1974,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1974",
              },
              "type": "readonly UnparsedSourceText[]",
            },
            Object {
              "docs": Array [],
              "id": "UnparsedSource.typeReferenceDirectives",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "typeReferenceDirectives",
              "signature": "typeReferenceDirectives: readonly string[] | undefined;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1968,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1968",
              },
              "type": "readonly string[]",
            },
          ],
        },
        "name": "UnparsedSource",
        "signature": "interface UnparsedSource extends Node {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 1961,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1961",
        },
      },
      Object {
        "docs": Array [],
        "id": "UnparsedSyntheticReference",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "UnparsedSyntheticReference.kind",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "kind",
              "signature": "readonly kind: SyntaxKind.UnparsedSyntheticReference;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1999,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1999",
              },
              "type": "number",
            },
            Object {
              "docs": Array [],
              "id": "UnparsedSyntheticReference.parent",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "parent",
              "signature": "readonly parent: UnparsedSource;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2000,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2000",
              },
              "type": "UnparsedSource",
            },
          ],
        },
        "name": "UnparsedSyntheticReference",
        "signature": "interface UnparsedSyntheticReference extends UnparsedSection {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 1998,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1998",
        },
      },
      Object {
        "docs": Array [],
        "id": "UnparsedTextLike",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "UnparsedTextLike.kind",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "kind",
              "signature": "readonly kind: SyntaxKind.UnparsedText | SyntaxKind.UnparsedInternalText;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1995,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1995",
              },
              "type": "SyntaxKind.UnparsedText | SyntaxKind.UnparsedInternalText",
            },
            Object {
              "docs": Array [],
              "id": "UnparsedTextLike.parent",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "parent",
              "signature": "readonly parent: UnparsedSource;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1996,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1996",
              },
              "type": "UnparsedSource",
            },
          ],
        },
        "name": "UnparsedTextLike",
        "signature": "interface UnparsedTextLike extends UnparsedSection {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 1994,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1994",
        },
      },
      Object {
        "docs": Array [],
        "id": "UnscopedEmitHelper",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "UnscopedEmitHelper.scoped",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "scoped",
              "signature": "readonly scoped: false;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3136,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3136",
              },
              "type": "boolean",
            },
            Object {
              "docs": Array [],
              "id": "UnscopedEmitHelper.text",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "text",
              "signature": "readonly text: string;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3137,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3137",
              },
              "type": "string",
            },
          ],
        },
        "name": "UnscopedEmitHelper",
        "signature": "interface UnscopedEmitHelper extends EmitHelper {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 3135,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3135",
        },
      },
      Object {
        "docs": Array [],
        "id": "UpdateBundleProject",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [
            Object {
              "docs": Array [],
              "id": "UpdateBundleProject.emit",
              "kind": "InterfaceMethodDeclaration",
              "name": "emit",
              "signature": "emit: (
    writeFile?: WriteFileCallback,
    customTransformers?: CustomTransformers
) => EmitResult | BuildInvalidedProject<T> | undefined;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5175,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5175",
              },
              "type": "(writeFile?: WriteFileCallback, customTransformers?: CustomTransformers) => EmitResult | BuildInvalidedProject<T> | undefined",
            },
          ],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "UpdateBundleProject.kind",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "kind",
              "signature": "readonly kind: InvalidatedProjectKind.UpdateBundle;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5174,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5174",
              },
              "type": "number",
            },
          ],
        },
        "name": "UpdateBundleProject",
        "signature": "interface UpdateBundleProject<T extends BuilderProgram>
    extends InvalidatedProjectBase {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 5173,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5173",
        },
      },
      Object {
        "docs": Array [],
        "id": "UpdateExpression",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [],
        },
        "name": "UpdateExpression",
        "signature": "interface UpdateExpression extends UnaryExpression {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 990,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L990",
        },
      },
      Object {
        "docs": Array [],
        "id": "UpdateOutputFileStampsProject",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [
            Object {
              "docs": Array [],
              "id": "UpdateOutputFileStampsProject.updateOutputFileStatmps",
              "kind": "InterfaceMethodDeclaration",
              "name": "updateOutputFileStatmps",
              "signature": "updateOutputFileStatmps: () => void;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5156,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5156",
              },
              "type": "() => void",
            },
          ],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "UpdateOutputFileStampsProject.kind",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "kind",
              "signature": "readonly kind: InvalidatedProjectKind.UpdateOutputFileStamps;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5155,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5155",
              },
              "type": "number",
            },
          ],
        },
        "name": "UpdateOutputFileStampsProject",
        "signature": "interface UpdateOutputFileStampsProject extends InvalidatedProjectBase {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 5154,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5154",
        },
      },
      Object {
        "docs": Array [],
        "id": "UserPreferences",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "UserPreferences.allowTextChangesInNewFiles",
              "isOptional": true,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "allowTextChangesInNewFiles",
              "signature": "readonly allowTextChangesInNewFiles?: boolean;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3868,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3868",
              },
              "type": "boolean",
            },
            Object {
              "docs": Array [],
              "id": "UserPreferences.disableSuggestions",
              "isOptional": true,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "disableSuggestions",
              "signature": "readonly disableSuggestions?: boolean;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3860,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3860",
              },
              "type": "boolean",
            },
            Object {
              "docs": Array [
                "/** Determines whether we import \`foo/index.ts\` as \\"foo\\", \\"foo/index\\", or \\"foo/index.js\\" */",
              ],
              "id": "UserPreferences.importModuleSpecifierEnding",
              "isOptional": true,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "importModuleSpecifierEnding",
              "signature": "readonly importModuleSpecifierEnding?: 'auto' | 'minimal' | 'index' | 'js';",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3867,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3867",
              },
              "type": "\\"auto\\" | \\"minimal\\" | \\"index\\" | \\"js\\"",
            },
            Object {
              "docs": Array [],
              "id": "UserPreferences.importModuleSpecifierPreference",
              "isOptional": true,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "importModuleSpecifierPreference",
              "signature": "readonly importModuleSpecifierPreference?: 'auto' | 'relative' | 'non-relative';",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3865,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3865",
              },
              "type": "\\"auto\\" | \\"relative\\" | \\"non-relative\\"",
            },
            Object {
              "docs": Array [],
              "id": "UserPreferences.includeAutomaticOptionalChainCompletions",
              "isOptional": true,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "includeAutomaticOptionalChainCompletions",
              "signature": "readonly includeAutomaticOptionalChainCompletions?: boolean;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3863,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3863",
              },
              "type": "boolean",
            },
            Object {
              "docs": Array [],
              "id": "UserPreferences.includeCompletionsForModuleExports",
              "isOptional": true,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "includeCompletionsForModuleExports",
              "signature": "readonly includeCompletionsForModuleExports?: boolean;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3862,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3862",
              },
              "type": "boolean",
            },
            Object {
              "docs": Array [],
              "id": "UserPreferences.includeCompletionsWithInsertText",
              "isOptional": true,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "includeCompletionsWithInsertText",
              "signature": "readonly includeCompletionsWithInsertText?: boolean;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3864,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3864",
              },
              "type": "boolean",
            },
            Object {
              "docs": Array [],
              "id": "UserPreferences.includePackageJsonAutoImports",
              "isOptional": true,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "includePackageJsonAutoImports",
              "signature": "readonly includePackageJsonAutoImports?: 'auto' | 'on' | 'off';",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3870,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3870",
              },
              "type": "\\"auto\\" | \\"on\\" | \\"off\\"",
            },
            Object {
              "docs": Array [],
              "id": "UserPreferences.providePrefixAndSuffixTextForRename",
              "isOptional": true,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "providePrefixAndSuffixTextForRename",
              "signature": "readonly providePrefixAndSuffixTextForRename?: boolean;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3869,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3869",
              },
              "type": "boolean",
            },
            Object {
              "docs": Array [],
              "id": "UserPreferences.provideRefactorNotApplicableReason",
              "isOptional": true,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "provideRefactorNotApplicableReason",
              "signature": "readonly provideRefactorNotApplicableReason?: boolean;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3871,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3871",
              },
              "type": "boolean",
            },
            Object {
              "docs": Array [],
              "id": "UserPreferences.quotePreference",
              "isOptional": true,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "quotePreference",
              "signature": "readonly quotePreference?: 'auto' | 'double' | 'single';",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 3861,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3861",
              },
              "type": "\\"auto\\" | \\"double\\" | \\"single\\"",
            },
          ],
        },
        "name": "UserPreferences",
        "signature": "interface UserPreferences {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 3859,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3859",
        },
      },
      Object {
        "docs": Array [],
        "id": "VariableDeclaration",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "VariableDeclaration.exclamationToken",
              "isOptional": true,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "exclamationToken",
              "signature": "readonly exclamationToken?: ExclamationToken;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 693,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L693",
              },
              "type": "ExclamationToken",
            },
            Object {
              "docs": Array [],
              "id": "VariableDeclaration.initializer",
              "isOptional": true,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "initializer",
              "signature": "readonly initializer?: Expression;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 695,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L695",
              },
              "type": "Expression",
            },
            Object {
              "docs": Array [],
              "id": "VariableDeclaration.kind",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "kind",
              "signature": "readonly kind: SyntaxKind.VariableDeclaration;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 690,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L690",
              },
              "type": "number",
            },
            Object {
              "docs": Array [],
              "id": "VariableDeclaration.name",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "name",
              "signature": "readonly name: BindingName;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 692,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L692",
              },
              "type": "BindingName",
            },
            Object {
              "docs": Array [],
              "id": "VariableDeclaration.parent",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "parent",
              "signature": "readonly parent: VariableDeclarationList | CatchClause;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 691,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L691",
              },
              "type": "VariableDeclarationList | CatchClause",
            },
            Object {
              "docs": Array [],
              "id": "VariableDeclaration.type",
              "isOptional": true,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "type",
              "signature": "readonly type?: TypeNode;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 694,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L694",
              },
              "type": "TypeNode",
            },
          ],
        },
        "name": "VariableDeclaration",
        "signature": "interface VariableDeclaration extends NamedDeclaration {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 689,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L689",
        },
      },
      Object {
        "docs": Array [],
        "id": "VariableDeclarationList",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "VariableDeclarationList.declarations",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "declarations",
              "signature": "readonly declarations: NodeArray<VariableDeclaration>;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 700,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L700",
              },
              "type": "NodeArray<VariableDeclaration>",
            },
            Object {
              "docs": Array [],
              "id": "VariableDeclarationList.kind",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "kind",
              "signature": "readonly kind: SyntaxKind.VariableDeclarationList;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 698,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L698",
              },
              "type": "number",
            },
            Object {
              "docs": Array [],
              "id": "VariableDeclarationList.parent",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "parent",
              "signature": "readonly parent:
    | VariableStatement
    | ForStatement
    | ForOfStatement
    | ForInStatement;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 699,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L699",
              },
              "type": "VariableStatement | ForStatement | ForOfStatement | ForInStatement",
            },
          ],
        },
        "name": "VariableDeclarationList",
        "signature": "interface VariableDeclarationList extends Node {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 697,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L697",
        },
      },
      Object {
        "docs": Array [],
        "id": "VariableStatement",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "VariableStatement.declarationList",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "declarationList",
              "signature": "readonly declarationList: VariableDeclarationList;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1406,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1406",
              },
              "type": "VariableDeclarationList",
            },
            Object {
              "docs": Array [],
              "id": "VariableStatement.kind",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "kind",
              "signature": "readonly kind: SyntaxKind.VariableStatement;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1405,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1405",
              },
              "type": "number",
            },
          ],
        },
        "name": "VariableStatement",
        "signature": "interface VariableStatement extends Statement, JSDocContainer {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 1404,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1404",
        },
      },
      Object {
        "docs": Array [],
        "id": "VoidExpression",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "VoidExpression.expression",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "expression",
              "signature": "readonly expression: UnaryExpression;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1043,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1043",
              },
              "type": "UnaryExpression",
            },
            Object {
              "docs": Array [],
              "id": "VoidExpression.kind",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "kind",
              "signature": "readonly kind: SyntaxKind.VoidExpression;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1042,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1042",
              },
              "type": "number",
            },
          ],
        },
        "name": "VoidExpression",
        "signature": "interface VoidExpression extends UnaryExpression {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 1041,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1041",
        },
      },
      Object {
        "docs": Array [],
        "id": "Watch",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [
            Object {
              "docs": Array [
                "/** Closes the watch */",
              ],
              "id": "Watch.close",
              "kind": "InterfaceMethodDeclaration",
              "name": "close",
              "signature": "close: () => void;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5065,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5065",
              },
              "type": "() => void",
            },
            Object {
              "docs": Array [
                "/** Synchronize with host and get updated program */",
              ],
              "id": "Watch.getProgram",
              "kind": "InterfaceMethodDeclaration",
              "name": "getProgram",
              "signature": "getProgram: () => T;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5063,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5063",
              },
              "type": "() => T",
            },
          ],
          "properties": Array [],
        },
        "name": "Watch",
        "signature": "interface Watch<T> {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 5061,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5061",
        },
      },
      Object {
        "docs": Array [],
        "id": "WatchCompilerHost",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [
            Object {
              "docs": Array [
                "/** If provided, callback to invoke after every new program creation */",
              ],
              "id": "WatchCompilerHost.afterProgramCreate",
              "kind": "InterfaceMethodDeclaration",
              "name": "afterProgramCreate",
              "signature": "afterProgramCreate: (program: T) => void;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5031,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5031",
              },
              "type": "(program: T) => void",
            },
            Object {
              "docs": Array [
                "/** Instead of using output d.ts file from project reference, use its source file */",
              ],
              "id": "WatchCompilerHost.useSourceOfProjectReferenceRedirect",
              "kind": "InterfaceMethodDeclaration",
              "name": "useSourceOfProjectReferenceRedirect",
              "signature": "useSourceOfProjectReferenceRedirect: () => boolean;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5029,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5029",
              },
              "type": "() => boolean",
            },
          ],
          "properties": Array [],
        },
        "name": "WatchCompilerHost",
        "signature": "interface WatchCompilerHost<T extends BuilderProgram>
    extends ProgramHost<T>,
        WatchHost {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 5027,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5027",
        },
      },
      Object {
        "docs": Array [
          "/**
     * Host to create watch with config file
     */",
        ],
        "id": "WatchCompilerHostOfConfigFile",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [
            Object {
              "docs": Array [
                "/**
         * Used to generate source file names from the config file and its include, exclude, files rules
         * and also to cache the directory stucture
         */",
              ],
              "id": "WatchCompilerHostOfConfigFile.readDirectory",
              "kind": "InterfaceMethodDeclaration",
              "name": "readDirectory",
              "signature": "readDirectory: (
    path: string,
    extensions?: readonly string[],
    exclude?: readonly string[],
    include?: readonly string[],
    depth?: number
) => string[];",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5059,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5059",
              },
              "type": "(path: string, extensions?: readonly string[], exclude?: readonly string[], include?: readonly string[], depth?: number) => string[]",
            },
          ],
          "properties": Array [
            Object {
              "docs": Array [
                "/** Name of the config file to compile */",
              ],
              "id": "WatchCompilerHostOfConfigFile.configFileName",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "configFileName",
              "signature": "configFileName: string;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5050,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5050",
              },
              "type": "string",
            },
            Object {
              "docs": Array [],
              "id": "WatchCompilerHostOfConfigFile.extraFileExtensions",
              "isOptional": true,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "extraFileExtensions",
              "signature": "extraFileExtensions?: readonly FileExtensionInfo[];",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5054,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5054",
              },
              "type": "readonly FileExtensionInfo[]",
            },
            Object {
              "docs": Array [
                "/** Options to extend */",
              ],
              "id": "WatchCompilerHostOfConfigFile.optionsToExtend",
              "isOptional": true,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "optionsToExtend",
              "signature": "optionsToExtend?: CompilerOptions;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5052,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5052",
              },
              "type": "CompilerOptions",
            },
            Object {
              "docs": Array [],
              "id": "WatchCompilerHostOfConfigFile.watchOptionsToExtend",
              "isOptional": true,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "watchOptionsToExtend",
              "signature": "watchOptionsToExtend?: WatchOptions;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5053,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5053",
              },
              "type": "WatchOptions",
            },
          ],
        },
        "name": "WatchCompilerHostOfConfigFile",
        "signature": "interface WatchCompilerHostOfConfigFile<T extends BuilderProgram>
    extends WatchCompilerHost<T>,
        ConfigFileDiagnosticsReporter {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 5048,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5048",
        },
      },
      Object {
        "docs": Array [
          "/**
     * Host to create watch with root files and options
     */",
        ],
        "id": "WatchCompilerHostOfFilesAndCompilerOptions",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [
                "/** Compiler options */",
              ],
              "id": "WatchCompilerHostOfFilesAndCompilerOptions.options",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "options",
              "signature": "options: CompilerOptions;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5040,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5040",
              },
              "type": "CompilerOptions",
            },
            Object {
              "docs": Array [
                "/** Project References */",
              ],
              "id": "WatchCompilerHostOfFilesAndCompilerOptions.projectReferences",
              "isOptional": true,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "projectReferences",
              "signature": "projectReferences?: readonly ProjectReference[];",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5043,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5043",
              },
              "type": "readonly ProjectReference[]",
            },
            Object {
              "docs": Array [
                "/** root files to use to generate program */",
              ],
              "id": "WatchCompilerHostOfFilesAndCompilerOptions.rootFiles",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "rootFiles",
              "signature": "rootFiles: string[];",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5038,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5038",
              },
              "type": "string[]",
            },
            Object {
              "docs": Array [],
              "id": "WatchCompilerHostOfFilesAndCompilerOptions.watchOptions",
              "isOptional": true,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "watchOptions",
              "signature": "watchOptions?: WatchOptions;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5041,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5041",
              },
              "type": "WatchOptions",
            },
          ],
        },
        "name": "WatchCompilerHostOfFilesAndCompilerOptions",
        "signature": "interface WatchCompilerHostOfFilesAndCompilerOptions<T extends BuilderProgram>
    extends WatchCompilerHost<T> {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 5036,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5036",
        },
      },
      Object {
        "docs": Array [
          "/** Host that has watch functionality used in --watch mode */",
        ],
        "id": "WatchHost",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [
            Object {
              "docs": Array [
                "/** If provided, will be used to reset existing delayed compilation */",
              ],
              "id": "WatchHost.clearTimeout",
              "kind": "InterfaceMethodDeclaration",
              "name": "clearTimeout",
              "signature": "clearTimeout: (timeoutId: any) => void;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 4987,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4987",
              },
              "type": "(timeoutId: any) => void",
            },
            Object {
              "docs": Array [
                "/** If provided, called with Diagnostic message that informs about change in watch status */",
              ],
              "id": "WatchHost.onWatchStatusChange",
              "kind": "InterfaceMethodDeclaration",
              "name": "onWatchStatusChange",
              "signature": "onWatchStatusChange: (
    diagnostic: Diagnostic,
    newLine: string,
    options: CompilerOptions,
    errorCount?: number
) => void;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 4979,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4979",
              },
              "type": "(diagnostic: Diagnostic, newLine: string, options: CompilerOptions, errorCount?: number) => void",
            },
            Object {
              "docs": Array [
                "/** If provided, will be used to set delayed compilation, so that multiple changes in short span are compiled together */",
              ],
              "id": "WatchHost.setTimeout",
              "kind": "InterfaceMethodDeclaration",
              "name": "setTimeout",
              "signature": "setTimeout: (
    callback: (...args: any[]) => void,
    ms: number,
    ...args: any[]
) => any;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 4985,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4985",
              },
              "type": "(callback: (...args: any[]) => void, ms: number, ...args: any[]) => any",
            },
            Object {
              "docs": Array [
                "/** Used to watch resolved module's failed lookup locations, config file specs, type roots where auto type reference directives are added */",
              ],
              "id": "WatchHost.watchDirectory",
              "kind": "InterfaceMethodDeclaration",
              "name": "watchDirectory",
              "signature": "watchDirectory: (
    path: string,
    callback: DirectoryWatcherCallback,
    recursive?: boolean,
    options?: CompilerOptions
) => FileWatcher;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 4983,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4983",
              },
              "type": "(path: string, callback: DirectoryWatcherCallback, recursive?: boolean, options?: CompilerOptions) => FileWatcher",
            },
            Object {
              "docs": Array [
                "/** Used to watch changes in source files, missing files needed to update the program or config file */",
              ],
              "id": "WatchHost.watchFile",
              "kind": "InterfaceMethodDeclaration",
              "name": "watchFile",
              "signature": "watchFile: (
    path: string,
    callback: FileWatcherCallback,
    pollingInterval?: number,
    options?: CompilerOptions
) => FileWatcher;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 4981,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4981",
              },
              "type": "(path: string, callback: FileWatcherCallback, pollingInterval?: number, options?: CompilerOptions) => FileWatcher",
            },
          ],
          "properties": Array [],
        },
        "name": "WatchHost",
        "signature": "interface WatchHost {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4977,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4977",
        },
      },
      Object {
        "docs": Array [
          "/**
     * Creates the watch what generates program using the config file
     */",
        ],
        "id": "WatchOfConfigFile",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [],
        },
        "name": "WatchOfConfigFile",
        "signature": "interface WatchOfConfigFile<T> extends Watch<T> {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 5070,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5070",
        },
      },
      Object {
        "docs": Array [
          "/**
     * Creates the watch that generates program using the root files and compiler options
     */",
        ],
        "id": "WatchOfFilesAndCompilerOptions",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [
            Object {
              "docs": Array [
                "/** Updates the root files in the program, only if this is not config file compilation */",
              ],
              "id": "WatchOfFilesAndCompilerOptions.updateRootFileNames",
              "kind": "InterfaceMethodDeclaration",
              "name": "updateRootFileNames",
              "signature": "updateRootFileNames: (fileNames: string[]) => void;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5077,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5077",
              },
              "type": "(fileNames: string[]) => void",
            },
          ],
          "properties": Array [],
        },
        "name": "WatchOfFilesAndCompilerOptions",
        "signature": "interface WatchOfFilesAndCompilerOptions<T> extends Watch<T> {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 5075,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5075",
        },
      },
      Object {
        "docs": Array [],
        "id": "WatchOptions",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [
            Object {
              "docs": Array [],
              "id": "WatchOptions.4-index-signature",
              "kind": "InterfaceIndexSignatureDeclaration",
              "name": "index signature",
              "signature": "[option: string]: CompilerOptionsValue | undefined;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2882,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2882",
              },
            },
          ],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "WatchOptions.fallbackPolling",
              "isOptional": true,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "fallbackPolling",
              "signature": "fallbackPolling?: PollingWatchKind;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2880,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2880",
              },
              "type": "PollingWatchKind",
            },
            Object {
              "docs": Array [],
              "id": "WatchOptions.synchronousWatchDirectory",
              "isOptional": true,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "synchronousWatchDirectory",
              "signature": "synchronousWatchDirectory?: boolean;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2881,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2881",
              },
              "type": "boolean",
            },
            Object {
              "docs": Array [],
              "id": "WatchOptions.watchDirectory",
              "isOptional": true,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "watchDirectory",
              "signature": "watchDirectory?: WatchDirectoryKind;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2879,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2879",
              },
              "type": "WatchDirectoryKind",
            },
            Object {
              "docs": Array [],
              "id": "WatchOptions.watchFile",
              "isOptional": true,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "watchFile",
              "signature": "watchFile?: WatchFileKind;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 2878,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2878",
              },
              "type": "WatchFileKind",
            },
          ],
        },
        "name": "WatchOptions",
        "signature": "interface WatchOptions {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 2877,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2877",
        },
      },
      Object {
        "docs": Array [],
        "id": "WhileStatement",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "WhileStatement.expression",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "expression",
              "signature": "readonly expression: Expression;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1427,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1427",
              },
              "type": "Expression",
            },
            Object {
              "docs": Array [],
              "id": "WhileStatement.kind",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "kind",
              "signature": "readonly kind: SyntaxKind.WhileStatement;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1426,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1426",
              },
              "type": "number",
            },
          ],
        },
        "name": "WhileStatement",
        "signature": "interface WhileStatement extends IterationStatement {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 1425,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1425",
        },
      },
      Object {
        "docs": Array [],
        "id": "WithStatement",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "WithStatement.expression",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "expression",
              "signature": "readonly expression: Expression;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1463,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1463",
              },
              "type": "Expression",
            },
            Object {
              "docs": Array [],
              "id": "WithStatement.kind",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "kind",
              "signature": "readonly kind: SyntaxKind.WithStatement;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1462,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1462",
              },
              "type": "number",
            },
            Object {
              "docs": Array [],
              "id": "WithStatement.statement",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "statement",
              "signature": "readonly statement: Statement;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1464,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1464",
              },
              "type": "Statement",
            },
          ],
        },
        "name": "WithStatement",
        "signature": "interface WithStatement extends Statement {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 1461,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1461",
        },
      },
      Object {
        "docs": Array [],
        "id": "YieldExpression",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "YieldExpression.asteriskToken",
              "isOptional": true,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "asteriskToken",
              "signature": "readonly asteriskToken?: AsteriskToken;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1051,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1051",
              },
              "type": "AsteriskToken",
            },
            Object {
              "docs": Array [],
              "id": "YieldExpression.expression",
              "isOptional": true,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "expression",
              "signature": "readonly expression?: Expression;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1052,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1052",
              },
              "type": "Expression",
            },
            Object {
              "docs": Array [],
              "id": "YieldExpression.kind",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "kind",
              "signature": "readonly kind: SyntaxKind.YieldExpression;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 1050,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1050",
              },
              "type": "number",
            },
          ],
        },
        "name": "YieldExpression",
        "signature": "interface YieldExpression extends Expression {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 1049,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1049",
        },
      },
    ],
    "namespaces": Array [
      Object {
        "declarations": Object {
          "classes": Array [],
          "enums": Array [],
          "functions": Array [
            Object {
              "docs": Array [],
              "id": "ScriptSnapshot.fromString",
              "kind": "FunctionDeclaration",
              "name": "fromString",
              "signature": "fromString: (text: string) => IScriptSnapshot;",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5357,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5357",
              },
              "type": "(text: string) => IScriptSnapshot",
            },
          ],
          "interfaces": Array [],
          "namespaces": Array [],
          "typeAliases": Array [],
          "variables": Array [],
        },
        "docs": Array [],
        "id": "ScriptSnapshot",
        "kind": "NamespaceDeclaration",
        "name": "ScriptSnapshot",
        "signature": "namespace ScriptSnapshot {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 5356,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5356",
        },
      },
      Object {
        "declarations": Object {
          "classes": Array [],
          "enums": Array [],
          "functions": Array [],
          "interfaces": Array [
            Object {
              "docs": Array [],
              "id": "server.BeginInstallTypes",
              "kind": "InterfaceDeclaration",
              "members": Object {
                "callSignatures": Array [],
                "constructSignatures": Array [],
                "indexSignatures": Array [],
                "methods": Array [],
                "properties": Array [
                  Object {
                    "docs": Array [],
                    "id": "server.BeginInstallTypes.kind",
                    "isOptional": false,
                    "isReadonly": true,
                    "kind": "InterfacePropertyDeclaration",
                    "name": "kind",
                    "signature": "readonly kind: EventBeginInstallTypes;",
                    "source": Object {
                      "filename": "lib/typescript.d.ts",
                      "line": 5240,
                      "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5240",
                    },
                    "type": "string",
                  },
                ],
              },
              "name": "BeginInstallTypes",
              "signature": "interface BeginInstallTypes extends InstallTypes {}",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5239,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5239",
              },
            },
            Object {
              "docs": Array [],
              "id": "server.CloseProject",
              "kind": "InterfaceDeclaration",
              "members": Object {
                "callSignatures": Array [],
                "constructSignatures": Array [],
                "indexSignatures": Array [],
                "methods": Array [],
                "properties": Array [
                  Object {
                    "docs": Array [],
                    "id": "server.CloseProject.kind",
                    "isOptional": false,
                    "isReadonly": true,
                    "kind": "InterfacePropertyDeclaration",
                    "name": "kind",
                    "signature": "readonly kind: 'closeProject';",
                    "source": Object {
                      "filename": "lib/typescript.d.ts",
                      "line": 5206,
                      "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5206",
                    },
                    "type": "string",
                  },
                ],
              },
              "name": "CloseProject",
              "signature": "interface CloseProject extends TypingInstallerRequestWithProjectName {}",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5205,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5205",
              },
            },
            Object {
              "docs": Array [],
              "id": "server.DiscoverTypings",
              "kind": "InterfaceDeclaration",
              "members": Object {
                "callSignatures": Array [],
                "constructSignatures": Array [],
                "indexSignatures": Array [],
                "methods": Array [],
                "properties": Array [
                  Object {
                    "docs": Array [],
                    "id": "server.DiscoverTypings.cachePath",
                    "isOptional": true,
                    "isReadonly": true,
                    "kind": "InterfacePropertyDeclaration",
                    "name": "cachePath",
                    "signature": "readonly cachePath?: string;",
                    "source": Object {
                      "filename": "lib/typescript.d.ts",
                      "line": 5202,
                      "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5202",
                    },
                    "type": "string",
                  },
                  Object {
                    "docs": Array [],
                    "id": "server.DiscoverTypings.compilerOptions",
                    "isOptional": false,
                    "isReadonly": true,
                    "kind": "InterfacePropertyDeclaration",
                    "name": "compilerOptions",
                    "signature": "readonly compilerOptions: CompilerOptions;",
                    "source": Object {
                      "filename": "lib/typescript.d.ts",
                      "line": 5198,
                      "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5198",
                    },
                    "type": "CompilerOptions",
                  },
                  Object {
                    "docs": Array [],
                    "id": "server.DiscoverTypings.fileNames",
                    "isOptional": false,
                    "isReadonly": true,
                    "kind": "InterfacePropertyDeclaration",
                    "name": "fileNames",
                    "signature": "readonly fileNames: string[];",
                    "source": Object {
                      "filename": "lib/typescript.d.ts",
                      "line": 5196,
                      "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5196",
                    },
                    "type": "string[]",
                  },
                  Object {
                    "docs": Array [],
                    "id": "server.DiscoverTypings.kind",
                    "isOptional": false,
                    "isReadonly": true,
                    "kind": "InterfacePropertyDeclaration",
                    "name": "kind",
                    "signature": "readonly kind: 'discover';",
                    "source": Object {
                      "filename": "lib/typescript.d.ts",
                      "line": 5203,
                      "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5203",
                    },
                    "type": "string",
                  },
                  Object {
                    "docs": Array [],
                    "id": "server.DiscoverTypings.projectRootPath",
                    "isOptional": false,
                    "isReadonly": true,
                    "kind": "InterfacePropertyDeclaration",
                    "name": "projectRootPath",
                    "signature": "readonly projectRootPath: Path;",
                    "source": Object {
                      "filename": "lib/typescript.d.ts",
                      "line": 5197,
                      "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5197",
                    },
                    "type": "String & { __pathBrand: any; }",
                  },
                  Object {
                    "docs": Array [],
                    "id": "server.DiscoverTypings.typeAcquisition",
                    "isOptional": false,
                    "isReadonly": true,
                    "kind": "InterfacePropertyDeclaration",
                    "name": "typeAcquisition",
                    "signature": "readonly typeAcquisition: TypeAcquisition;",
                    "source": Object {
                      "filename": "lib/typescript.d.ts",
                      "line": 5200,
                      "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5200",
                    },
                    "type": "TypeAcquisition",
                  },
                  Object {
                    "docs": Array [],
                    "id": "server.DiscoverTypings.unresolvedImports",
                    "isOptional": false,
                    "isReadonly": true,
                    "kind": "InterfacePropertyDeclaration",
                    "name": "unresolvedImports",
                    "signature": "readonly unresolvedImports: SortedReadonlyArray<string>;",
                    "source": Object {
                      "filename": "lib/typescript.d.ts",
                      "line": 5201,
                      "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5201",
                    },
                    "type": "SortedReadonlyArray<string>",
                  },
                  Object {
                    "docs": Array [],
                    "id": "server.DiscoverTypings.watchOptions",
                    "isOptional": true,
                    "isReadonly": true,
                    "kind": "InterfacePropertyDeclaration",
                    "name": "watchOptions",
                    "signature": "readonly watchOptions?: WatchOptions;",
                    "source": Object {
                      "filename": "lib/typescript.d.ts",
                      "line": 5199,
                      "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5199",
                    },
                    "type": "WatchOptions",
                  },
                ],
              },
              "name": "DiscoverTypings",
              "signature": "interface DiscoverTypings extends TypingInstallerRequestWithProjectName {}",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5195,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5195",
              },
            },
            Object {
              "docs": Array [],
              "id": "server.EndInstallTypes",
              "kind": "InterfaceDeclaration",
              "members": Object {
                "callSignatures": Array [],
                "constructSignatures": Array [],
                "indexSignatures": Array [],
                "methods": Array [],
                "properties": Array [
                  Object {
                    "docs": Array [],
                    "id": "server.EndInstallTypes.installSuccess",
                    "isOptional": false,
                    "isReadonly": true,
                    "kind": "InterfacePropertyDeclaration",
                    "name": "installSuccess",
                    "signature": "readonly installSuccess: boolean;",
                    "source": Object {
                      "filename": "lib/typescript.d.ts",
                      "line": 5244,
                      "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5244",
                    },
                    "type": "boolean",
                  },
                  Object {
                    "docs": Array [],
                    "id": "server.EndInstallTypes.kind",
                    "isOptional": false,
                    "isReadonly": true,
                    "kind": "InterfacePropertyDeclaration",
                    "name": "kind",
                    "signature": "readonly kind: EventEndInstallTypes;",
                    "source": Object {
                      "filename": "lib/typescript.d.ts",
                      "line": 5243,
                      "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5243",
                    },
                    "type": "string",
                  },
                ],
              },
              "name": "EndInstallTypes",
              "signature": "interface EndInstallTypes extends InstallTypes {}",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5242,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5242",
              },
            },
            Object {
              "docs": Array [],
              "id": "server.InitializationFailedResponse",
              "kind": "InterfaceDeclaration",
              "members": Object {
                "callSignatures": Array [],
                "constructSignatures": Array [],
                "indexSignatures": Array [],
                "methods": Array [],
                "properties": Array [
                  Object {
                    "docs": Array [],
                    "id": "server.InitializationFailedResponse.kind",
                    "isOptional": false,
                    "isReadonly": true,
                    "kind": "InterfacePropertyDeclaration",
                    "name": "kind",
                    "signature": "readonly kind: EventInitializationFailed;",
                    "source": Object {
                      "filename": "lib/typescript.d.ts",
                      "line": 5223,
                      "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5223",
                    },
                    "type": "string",
                  },
                  Object {
                    "docs": Array [],
                    "id": "server.InitializationFailedResponse.message",
                    "isOptional": false,
                    "isReadonly": true,
                    "kind": "InterfacePropertyDeclaration",
                    "name": "message",
                    "signature": "readonly message: string;",
                    "source": Object {
                      "filename": "lib/typescript.d.ts",
                      "line": 5224,
                      "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5224",
                    },
                    "type": "string",
                  },
                  Object {
                    "docs": Array [],
                    "id": "server.InitializationFailedResponse.stack",
                    "isOptional": true,
                    "isReadonly": true,
                    "kind": "InterfacePropertyDeclaration",
                    "name": "stack",
                    "signature": "readonly stack?: string;",
                    "source": Object {
                      "filename": "lib/typescript.d.ts",
                      "line": 5225,
                      "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5225",
                    },
                    "type": "string",
                  },
                ],
              },
              "name": "InitializationFailedResponse",
              "signature": "interface InitializationFailedResponse extends TypingInstallerResponse {}",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5222,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5222",
              },
            },
            Object {
              "docs": Array [],
              "id": "server.InstallPackageRequest",
              "kind": "InterfaceDeclaration",
              "members": Object {
                "callSignatures": Array [],
                "constructSignatures": Array [],
                "indexSignatures": Array [],
                "methods": Array [],
                "properties": Array [
                  Object {
                    "docs": Array [],
                    "id": "server.InstallPackageRequest.fileName",
                    "isOptional": false,
                    "isReadonly": true,
                    "kind": "InterfacePropertyDeclaration",
                    "name": "fileName",
                    "signature": "readonly fileName: Path;",
                    "source": Object {
                      "filename": "lib/typescript.d.ts",
                      "line": 5213,
                      "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5213",
                    },
                    "type": "String & { __pathBrand: any; }",
                  },
                  Object {
                    "docs": Array [],
                    "id": "server.InstallPackageRequest.kind",
                    "isOptional": false,
                    "isReadonly": true,
                    "kind": "InterfacePropertyDeclaration",
                    "name": "kind",
                    "signature": "readonly kind: 'installPackage';",
                    "source": Object {
                      "filename": "lib/typescript.d.ts",
                      "line": 5212,
                      "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5212",
                    },
                    "type": "string",
                  },
                  Object {
                    "docs": Array [],
                    "id": "server.InstallPackageRequest.packageName",
                    "isOptional": false,
                    "isReadonly": true,
                    "kind": "InterfacePropertyDeclaration",
                    "name": "packageName",
                    "signature": "readonly packageName: string;",
                    "source": Object {
                      "filename": "lib/typescript.d.ts",
                      "line": 5214,
                      "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5214",
                    },
                    "type": "string",
                  },
                  Object {
                    "docs": Array [],
                    "id": "server.InstallPackageRequest.projectRootPath",
                    "isOptional": false,
                    "isReadonly": true,
                    "kind": "InterfacePropertyDeclaration",
                    "name": "projectRootPath",
                    "signature": "readonly projectRootPath: Path;",
                    "source": Object {
                      "filename": "lib/typescript.d.ts",
                      "line": 5215,
                      "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5215",
                    },
                    "type": "String & { __pathBrand: any; }",
                  },
                ],
              },
              "name": "InstallPackageRequest",
              "signature": "interface InstallPackageRequest extends TypingInstallerRequestWithProjectName {}",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5211,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5211",
              },
            },
            Object {
              "docs": Array [],
              "id": "server.InstallTypes",
              "kind": "InterfaceDeclaration",
              "members": Object {
                "callSignatures": Array [],
                "constructSignatures": Array [],
                "indexSignatures": Array [],
                "methods": Array [],
                "properties": Array [
                  Object {
                    "docs": Array [],
                    "id": "server.InstallTypes.eventId",
                    "isOptional": false,
                    "isReadonly": true,
                    "kind": "InterfacePropertyDeclaration",
                    "name": "eventId",
                    "signature": "readonly eventId: number;",
                    "source": Object {
                      "filename": "lib/typescript.d.ts",
                      "line": 5235,
                      "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5235",
                    },
                    "type": "number",
                  },
                  Object {
                    "docs": Array [],
                    "id": "server.InstallTypes.kind",
                    "isOptional": false,
                    "isReadonly": true,
                    "kind": "InterfacePropertyDeclaration",
                    "name": "kind",
                    "signature": "readonly kind: EventBeginInstallTypes | EventEndInstallTypes;",
                    "source": Object {
                      "filename": "lib/typescript.d.ts",
                      "line": 5234,
                      "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5234",
                    },
                    "type": "\\"event::beginInstallTypes\\" | \\"event::endInstallTypes\\"",
                  },
                  Object {
                    "docs": Array [],
                    "id": "server.InstallTypes.packagesToInstall",
                    "isOptional": false,
                    "isReadonly": true,
                    "kind": "InterfacePropertyDeclaration",
                    "name": "packagesToInstall",
                    "signature": "readonly packagesToInstall: readonly string[];",
                    "source": Object {
                      "filename": "lib/typescript.d.ts",
                      "line": 5237,
                      "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5237",
                    },
                    "type": "readonly string[]",
                  },
                  Object {
                    "docs": Array [],
                    "id": "server.InstallTypes.typingsInstallerVersion",
                    "isOptional": false,
                    "isReadonly": true,
                    "kind": "InterfacePropertyDeclaration",
                    "name": "typingsInstallerVersion",
                    "signature": "readonly typingsInstallerVersion: string;",
                    "source": Object {
                      "filename": "lib/typescript.d.ts",
                      "line": 5236,
                      "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5236",
                    },
                    "type": "string",
                  },
                ],
              },
              "name": "InstallTypes",
              "signature": "interface InstallTypes extends ProjectResponse {}",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5233,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5233",
              },
            },
            Object {
              "docs": Array [],
              "id": "server.InvalidateCachedTypings",
              "kind": "InterfaceDeclaration",
              "members": Object {
                "callSignatures": Array [],
                "constructSignatures": Array [],
                "indexSignatures": Array [],
                "methods": Array [],
                "properties": Array [
                  Object {
                    "docs": Array [],
                    "id": "server.InvalidateCachedTypings.kind",
                    "isOptional": false,
                    "isReadonly": true,
                    "kind": "InterfacePropertyDeclaration",
                    "name": "kind",
                    "signature": "readonly kind: ActionInvalidate;",
                    "source": Object {
                      "filename": "lib/typescript.d.ts",
                      "line": 5231,
                      "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5231",
                    },
                    "type": "string",
                  },
                ],
              },
              "name": "InvalidateCachedTypings",
              "signature": "interface InvalidateCachedTypings extends ProjectResponse {}",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5230,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5230",
              },
            },
            Object {
              "docs": Array [],
              "id": "server.PackageInstalledResponse",
              "kind": "InterfaceDeclaration",
              "members": Object {
                "callSignatures": Array [],
                "constructSignatures": Array [],
                "indexSignatures": Array [],
                "methods": Array [],
                "properties": Array [
                  Object {
                    "docs": Array [],
                    "id": "server.PackageInstalledResponse.kind",
                    "isOptional": false,
                    "isReadonly": true,
                    "kind": "InterfacePropertyDeclaration",
                    "name": "kind",
                    "signature": "readonly kind: ActionPackageInstalled;",
                    "source": Object {
                      "filename": "lib/typescript.d.ts",
                      "line": 5218,
                      "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5218",
                    },
                    "type": "string",
                  },
                  Object {
                    "docs": Array [],
                    "id": "server.PackageInstalledResponse.message",
                    "isOptional": false,
                    "isReadonly": true,
                    "kind": "InterfacePropertyDeclaration",
                    "name": "message",
                    "signature": "readonly message: string;",
                    "source": Object {
                      "filename": "lib/typescript.d.ts",
                      "line": 5220,
                      "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5220",
                    },
                    "type": "string",
                  },
                  Object {
                    "docs": Array [],
                    "id": "server.PackageInstalledResponse.success",
                    "isOptional": false,
                    "isReadonly": true,
                    "kind": "InterfacePropertyDeclaration",
                    "name": "success",
                    "signature": "readonly success: boolean;",
                    "source": Object {
                      "filename": "lib/typescript.d.ts",
                      "line": 5219,
                      "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5219",
                    },
                    "type": "boolean",
                  },
                ],
              },
              "name": "PackageInstalledResponse",
              "signature": "interface PackageInstalledResponse extends ProjectResponse {}",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5217,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5217",
              },
            },
            Object {
              "docs": Array [],
              "id": "server.ProjectResponse",
              "kind": "InterfaceDeclaration",
              "members": Object {
                "callSignatures": Array [],
                "constructSignatures": Array [],
                "indexSignatures": Array [],
                "methods": Array [],
                "properties": Array [
                  Object {
                    "docs": Array [],
                    "id": "server.ProjectResponse.projectName",
                    "isOptional": false,
                    "isReadonly": true,
                    "kind": "InterfacePropertyDeclaration",
                    "name": "projectName",
                    "signature": "readonly projectName: string;",
                    "source": Object {
                      "filename": "lib/typescript.d.ts",
                      "line": 5228,
                      "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5228",
                    },
                    "type": "string",
                  },
                ],
              },
              "name": "ProjectResponse",
              "signature": "interface ProjectResponse extends TypingInstallerResponse {}",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5227,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5227",
              },
            },
            Object {
              "docs": Array [],
              "id": "server.SetTypings",
              "kind": "InterfaceDeclaration",
              "members": Object {
                "callSignatures": Array [],
                "constructSignatures": Array [],
                "indexSignatures": Array [],
                "methods": Array [],
                "properties": Array [
                  Object {
                    "docs": Array [],
                    "id": "server.SetTypings.compilerOptions",
                    "isOptional": false,
                    "isReadonly": true,
                    "kind": "InterfacePropertyDeclaration",
                    "name": "compilerOptions",
                    "signature": "readonly compilerOptions: CompilerOptions;",
                    "source": Object {
                      "filename": "lib/typescript.d.ts",
                      "line": 5248,
                      "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5248",
                    },
                    "type": "CompilerOptions",
                  },
                  Object {
                    "docs": Array [],
                    "id": "server.SetTypings.kind",
                    "isOptional": false,
                    "isReadonly": true,
                    "kind": "InterfacePropertyDeclaration",
                    "name": "kind",
                    "signature": "readonly kind: ActionSet;",
                    "source": Object {
                      "filename": "lib/typescript.d.ts",
                      "line": 5251,
                      "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5251",
                    },
                    "type": "string",
                  },
                  Object {
                    "docs": Array [],
                    "id": "server.SetTypings.typeAcquisition",
                    "isOptional": false,
                    "isReadonly": true,
                    "kind": "InterfacePropertyDeclaration",
                    "name": "typeAcquisition",
                    "signature": "readonly typeAcquisition: TypeAcquisition;",
                    "source": Object {
                      "filename": "lib/typescript.d.ts",
                      "line": 5247,
                      "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5247",
                    },
                    "type": "TypeAcquisition",
                  },
                  Object {
                    "docs": Array [],
                    "id": "server.SetTypings.typings",
                    "isOptional": false,
                    "isReadonly": true,
                    "kind": "InterfacePropertyDeclaration",
                    "name": "typings",
                    "signature": "readonly typings: string[];",
                    "source": Object {
                      "filename": "lib/typescript.d.ts",
                      "line": 5249,
                      "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5249",
                    },
                    "type": "string[]",
                  },
                  Object {
                    "docs": Array [],
                    "id": "server.SetTypings.unresolvedImports",
                    "isOptional": false,
                    "isReadonly": true,
                    "kind": "InterfacePropertyDeclaration",
                    "name": "unresolvedImports",
                    "signature": "readonly unresolvedImports: SortedReadonlyArray<string>;",
                    "source": Object {
                      "filename": "lib/typescript.d.ts",
                      "line": 5250,
                      "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5250",
                    },
                    "type": "SortedReadonlyArray<string>",
                  },
                ],
              },
              "name": "SetTypings",
              "signature": "interface SetTypings extends ProjectResponse {}",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5246,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5246",
              },
            },
            Object {
              "docs": Array [],
              "id": "server.TypesRegistryRequest",
              "kind": "InterfaceDeclaration",
              "members": Object {
                "callSignatures": Array [],
                "constructSignatures": Array [],
                "indexSignatures": Array [],
                "methods": Array [],
                "properties": Array [
                  Object {
                    "docs": Array [],
                    "id": "server.TypesRegistryRequest.kind",
                    "isOptional": false,
                    "isReadonly": true,
                    "kind": "InterfacePropertyDeclaration",
                    "name": "kind",
                    "signature": "readonly kind: 'typesRegistry';",
                    "source": Object {
                      "filename": "lib/typescript.d.ts",
                      "line": 5209,
                      "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5209",
                    },
                    "type": "string",
                  },
                ],
              },
              "name": "TypesRegistryRequest",
              "signature": "interface TypesRegistryRequest {}",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5208,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5208",
              },
            },
            Object {
              "docs": Array [],
              "id": "server.TypingInstallerRequestWithProjectName",
              "kind": "InterfaceDeclaration",
              "members": Object {
                "callSignatures": Array [],
                "constructSignatures": Array [],
                "indexSignatures": Array [],
                "methods": Array [],
                "properties": Array [
                  Object {
                    "docs": Array [],
                    "id": "server.TypingInstallerRequestWithProjectName.projectName",
                    "isOptional": false,
                    "isReadonly": true,
                    "kind": "InterfacePropertyDeclaration",
                    "name": "projectName",
                    "signature": "readonly projectName: string;",
                    "source": Object {
                      "filename": "lib/typescript.d.ts",
                      "line": 5193,
                      "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5193",
                    },
                    "type": "string",
                  },
                ],
              },
              "name": "TypingInstallerRequestWithProjectName",
              "signature": "interface TypingInstallerRequestWithProjectName {}",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5192,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5192",
              },
            },
            Object {
              "docs": Array [],
              "id": "server.TypingInstallerResponse",
              "kind": "InterfaceDeclaration",
              "members": Object {
                "callSignatures": Array [],
                "constructSignatures": Array [],
                "indexSignatures": Array [],
                "methods": Array [],
                "properties": Array [
                  Object {
                    "docs": Array [],
                    "id": "server.TypingInstallerResponse.kind",
                    "isOptional": false,
                    "isReadonly": true,
                    "kind": "InterfacePropertyDeclaration",
                    "name": "kind",
                    "signature": "readonly kind:
    | ActionSet
    | ActionInvalidate
    | EventTypesRegistry
    | ActionPackageInstalled
    | EventBeginInstallTypes
    | EventEndInstallTypes
    | EventInitializationFailed;",
                    "source": Object {
                      "filename": "lib/typescript.d.ts",
                      "line": 5190,
                      "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5190",
                    },
                    "type": "\\"action::set\\" | \\"action::invalidate\\" | \\"event::typesRegistry\\" | \\"action::packageInstalled\\" | \\"event::beginInstallTypes\\" | \\"event::endInstallTypes\\" | \\"event::initializationFailed\\"",
                  },
                ],
              },
              "name": "TypingInstallerResponse",
              "signature": "interface TypingInstallerResponse {}",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5189,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5189",
              },
            },
          ],
          "namespaces": Array [],
          "typeAliases": Array [
            Object {
              "docs": Array [],
              "id": "server.ActionInvalidate",
              "kind": "TypeAliasDeclaration",
              "name": "ActionInvalidate",
              "signature": "type ActionInvalidate = 'action::invalidate';",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5181,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5181",
              },
            },
            Object {
              "docs": Array [],
              "id": "server.ActionPackageInstalled",
              "kind": "TypeAliasDeclaration",
              "name": "ActionPackageInstalled",
              "signature": "type ActionPackageInstalled = 'action::packageInstalled';",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5182,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5182",
              },
            },
            Object {
              "docs": Array [],
              "id": "server.ActionSet",
              "kind": "TypeAliasDeclaration",
              "name": "ActionSet",
              "signature": "type ActionSet = 'action::set';",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5180,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5180",
              },
            },
            Object {
              "docs": Array [],
              "id": "server.EventBeginInstallTypes",
              "kind": "TypeAliasDeclaration",
              "name": "EventBeginInstallTypes",
              "signature": "type EventBeginInstallTypes = 'event::beginInstallTypes';",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5184,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5184",
              },
            },
            Object {
              "docs": Array [],
              "id": "server.EventEndInstallTypes",
              "kind": "TypeAliasDeclaration",
              "name": "EventEndInstallTypes",
              "signature": "type EventEndInstallTypes = 'event::endInstallTypes';",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5185,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5185",
              },
            },
            Object {
              "docs": Array [],
              "id": "server.EventInitializationFailed",
              "kind": "TypeAliasDeclaration",
              "name": "EventInitializationFailed",
              "signature": "type EventInitializationFailed = 'event::initializationFailed';",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5186,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5186",
              },
            },
            Object {
              "docs": Array [],
              "id": "server.EventTypesRegistry",
              "kind": "TypeAliasDeclaration",
              "name": "EventTypesRegistry",
              "signature": "type EventTypesRegistry = 'event::typesRegistry';",
              "source": Object {
                "filename": "lib/typescript.d.ts",
                "line": 5183,
                "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5183",
              },
            },
          ],
          "variables": Array [],
        },
        "docs": Array [],
        "id": "server",
        "kind": "NamespaceDeclaration",
        "name": "server",
        "signature": "namespace server {}",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 5179,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5179",
        },
      },
    ],
    "typeAliases": Array [
      Object {
        "docs": Array [],
        "id": "AbstractKeyword",
        "kind": "TypeAliasDeclaration",
        "name": "AbstractKeyword",
        "signature": "type AbstractKeyword = ModifierToken<SyntaxKind.AbstractKeyword>;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 596,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L596",
        },
      },
      Object {
        "docs": Array [],
        "id": "AccessExpression",
        "kind": "TypeAliasDeclaration",
        "name": "AccessExpression",
        "signature": "type AccessExpression = PropertyAccessExpression | ElementAccessExpression;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 1214,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1214",
        },
      },
      Object {
        "docs": Array [],
        "id": "AccessibilityModifier",
        "kind": "TypeAliasDeclaration",
        "name": "AccessibilityModifier",
        "signature": "type AccessibilityModifier = PublicKeyword | PrivateKeyword | ProtectedKeyword;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 610,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L610",
        },
      },
      Object {
        "docs": Array [],
        "id": "AccessorDeclaration",
        "kind": "TypeAliasDeclaration",
        "name": "AccessorDeclaration",
        "signature": "type AccessorDeclaration = GetAccessorDeclaration | SetAccessorDeclaration;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 835,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L835",
        },
      },
      Object {
        "docs": Array [],
        "id": "AdditiveOperator",
        "kind": "TypeAliasDeclaration",
        "name": "AdditiveOperator",
        "signature": "type AdditiveOperator = SyntaxKind.PlusToken | SyntaxKind.MinusToken;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 1063,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1063",
        },
      },
      Object {
        "docs": Array [],
        "id": "AdditiveOperatorOrHigher",
        "kind": "TypeAliasDeclaration",
        "name": "AdditiveOperatorOrHigher",
        "signature": "type AdditiveOperatorOrHigher = MultiplicativeOperatorOrHigher | AdditiveOperator;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 1064,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1064",
        },
      },
      Object {
        "docs": Array [],
        "id": "AffectedFileResult",
        "kind": "TypeAliasDeclaration",
        "name": "AffectedFileResult",
        "signature": "type AffectedFileResult<T> =
    | {
          result: T;
          affected: SourceFile | Program;
      }
    | undefined;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4828,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4828",
        },
      },
      Object {
        "docs": Array [],
        "id": "ArrayBindingElement",
        "kind": "TypeAliasDeclaration",
        "name": "ArrayBindingElement",
        "signature": "type ArrayBindingElement = BindingElement | OmittedExpression;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 778,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L778",
        },
      },
      Object {
        "docs": Array [],
        "id": "ArrayBindingOrAssignmentElement",
        "kind": "TypeAliasDeclaration",
        "name": "ArrayBindingOrAssignmentElement",
        "signature": "type ArrayBindingOrAssignmentElement =
    | BindingElement
    | OmittedExpression
    | SpreadElement
    | ArrayLiteralExpression
    | ObjectLiteralExpression
    | AssignmentExpression<EqualsToken>
    | Identifier
    | PropertyAccessExpression
    | ElementAccessExpression;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 1101,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1101",
        },
      },
      Object {
        "docs": Array [],
        "id": "ArrayBindingOrAssignmentPattern",
        "kind": "TypeAliasDeclaration",
        "name": "ArrayBindingOrAssignmentPattern",
        "signature": "type ArrayBindingOrAssignmentPattern = ArrayBindingPattern | ArrayLiteralExpression;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 1105,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1105",
        },
      },
      Object {
        "docs": Array [],
        "id": "AssertionExpression",
        "kind": "TypeAliasDeclaration",
        "name": "AssertionExpression",
        "signature": "type AssertionExpression = TypeAssertion | AsExpression;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 1292,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1292",
        },
      },
      Object {
        "docs": Array [],
        "id": "AssertsKeyword",
        "kind": "TypeAliasDeclaration",
        "name": "AssertsKeyword",
        "signature": "type AssertsKeyword = KeywordToken<SyntaxKind.AssertsKeyword>;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 588,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L588",
        },
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`AssertsKeyword\` instead. */",
        ],
        "id": "AssertsToken",
        "kind": "TypeAliasDeclaration",
        "name": "AssertsToken",
        "signature": "type AssertsToken = AssertsKeyword;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 593,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L593",
        },
      },
      Object {
        "docs": Array [],
        "id": "AssignmentOperator",
        "kind": "TypeAliasDeclaration",
        "name": "AssignmentOperator",
        "signature": "type AssignmentOperator = SyntaxKind.EqualsToken | CompoundAssignmentOperator;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 1076,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1076",
        },
      },
      Object {
        "docs": Array [],
        "id": "AssignmentOperatorOrHigher",
        "kind": "TypeAliasDeclaration",
        "name": "AssignmentOperatorOrHigher",
        "signature": "type AssignmentOperatorOrHigher =
    | SyntaxKind.QuestionQuestionToken
    | LogicalOperatorOrHigher
    | AssignmentOperator;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 1077,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1077",
        },
      },
      Object {
        "docs": Array [],
        "id": "AssignmentOperatorToken",
        "kind": "TypeAliasDeclaration",
        "name": "AssignmentOperatorToken",
        "signature": "type AssignmentOperatorToken = Token<AssignmentOperator>;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 1087,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1087",
        },
      },
      Object {
        "docs": Array [],
        "id": "AssignmentPattern",
        "kind": "TypeAliasDeclaration",
        "name": "AssignmentPattern",
        "signature": "type AssignmentPattern = ObjectLiteralExpression | ArrayLiteralExpression;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 1106,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1106",
        },
      },
      Object {
        "docs": Array [],
        "id": "AsteriskToken",
        "kind": "TypeAliasDeclaration",
        "name": "AsteriskToken",
        "signature": "type AsteriskToken = PunctuationToken<SyntaxKind.AsteriskToken>;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 581,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L581",
        },
      },
      Object {
        "docs": Array [],
        "id": "AsyncKeyword",
        "kind": "TypeAliasDeclaration",
        "name": "AsyncKeyword",
        "signature": "type AsyncKeyword = ModifierToken<SyntaxKind.AsyncKeyword>;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 597,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L597",
        },
      },
      Object {
        "docs": Array [],
        "id": "AwaitKeyword",
        "kind": "TypeAliasDeclaration",
        "name": "AwaitKeyword",
        "signature": "type AwaitKeyword = KeywordToken<SyntaxKind.AwaitKeyword>;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 589,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L589",
        },
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`AwaitKeyword\` instead. */",
        ],
        "id": "AwaitKeywordToken",
        "kind": "TypeAliasDeclaration",
        "name": "AwaitKeywordToken",
        "signature": "type AwaitKeywordToken = AwaitKeyword;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 591,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L591",
        },
      },
      Object {
        "docs": Array [],
        "id": "BaseType",
        "kind": "TypeAliasDeclaration",
        "name": "BaseType",
        "signature": "type BaseType = ObjectType | IntersectionType | TypeVariable;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 2562,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2562",
        },
      },
      Object {
        "docs": Array [],
        "id": "BinaryOperator",
        "kind": "TypeAliasDeclaration",
        "name": "BinaryOperator",
        "signature": "type BinaryOperator = AssignmentOperatorOrHigher | SyntaxKind.CommaToken;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 1078,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1078",
        },
      },
      Object {
        "docs": Array [],
        "id": "BinaryOperatorToken",
        "kind": "TypeAliasDeclaration",
        "name": "BinaryOperatorToken",
        "signature": "type BinaryOperatorToken = Token<BinaryOperator>;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 1080,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1080",
        },
      },
      Object {
        "docs": Array [],
        "id": "BindingName",
        "kind": "TypeAliasDeclaration",
        "name": "BindingName",
        "signature": "type BindingName = Identifier | BindingPattern;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 688,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L688",
        },
      },
      Object {
        "docs": Array [],
        "id": "BindingOrAssignmentElement",
        "kind": "TypeAliasDeclaration",
        "name": "BindingOrAssignmentElement",
        "signature": "type BindingOrAssignmentElement =
    | VariableDeclaration
    | ParameterDeclaration
    | ObjectBindingOrAssignmentElement
    | ArrayBindingOrAssignmentElement;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 1099,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1099",
        },
      },
      Object {
        "docs": Array [],
        "id": "BindingOrAssignmentElementRestIndicator",
        "kind": "TypeAliasDeclaration",
        "name": "BindingOrAssignmentElementRestIndicator",
        "signature": "type BindingOrAssignmentElementRestIndicator =
    | DotDotDotToken
    | SpreadElement
    | SpreadAssignment;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 1102,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1102",
        },
      },
      Object {
        "docs": Array [],
        "id": "BindingOrAssignmentElementTarget",
        "kind": "TypeAliasDeclaration",
        "name": "BindingOrAssignmentElementTarget",
        "signature": "type BindingOrAssignmentElementTarget =
    | BindingOrAssignmentPattern
    | Identifier
    | PropertyAccessExpression
    | ElementAccessExpression
    | OmittedExpression;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 1103,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1103",
        },
      },
      Object {
        "docs": Array [],
        "id": "BindingOrAssignmentPattern",
        "kind": "TypeAliasDeclaration",
        "name": "BindingOrAssignmentPattern",
        "signature": "type BindingOrAssignmentPattern =
    | ObjectBindingOrAssignmentPattern
    | ArrayBindingOrAssignmentPattern;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 1107,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1107",
        },
      },
      Object {
        "docs": Array [],
        "id": "BindingPattern",
        "kind": "TypeAliasDeclaration",
        "name": "BindingPattern",
        "signature": "type BindingPattern = ObjectBindingPattern | ArrayBindingPattern;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 777,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L777",
        },
      },
      Object {
        "docs": Array [],
        "id": "BitwiseOperator",
        "kind": "TypeAliasDeclaration",
        "name": "BitwiseOperator",
        "signature": "type BitwiseOperator =
    | SyntaxKind.AmpersandToken
    | SyntaxKind.BarToken
    | SyntaxKind.CaretToken;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 1071,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1071",
        },
      },
      Object {
        "docs": Array [],
        "id": "BitwiseOperatorOrHigher",
        "kind": "TypeAliasDeclaration",
        "name": "BitwiseOperatorOrHigher",
        "signature": "type BitwiseOperatorOrHigher = EqualityOperatorOrHigher | BitwiseOperator;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 1072,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1072",
        },
      },
      Object {
        "docs": Array [],
        "id": "BlockLike",
        "kind": "TypeAliasDeclaration",
        "name": "BlockLike",
        "signature": "type BlockLike = SourceFile | Block | ModuleBlock | CaseOrDefaultClause;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 1399,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1399",
        },
      },
      Object {
        "docs": Array [],
        "id": "BooleanLiteral",
        "kind": "TypeAliasDeclaration",
        "name": "BooleanLiteral",
        "signature": "type BooleanLiteral = TrueLiteral | FalseLiteral;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 1023,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1023",
        },
      },
      Object {
        "docs": Array [],
        "id": "BreakOrContinueStatement",
        "kind": "TypeAliasDeclaration",
        "name": "BreakOrContinueStatement",
        "signature": "type BreakOrContinueStatement = BreakStatement | ContinueStatement;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 1456,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1456",
        },
      },
      Object {
        "docs": Array [],
        "id": "CallLikeExpression",
        "kind": "TypeAliasDeclaration",
        "name": "CallLikeExpression",
        "signature": "type CallLikeExpression =
    | CallExpression
    | NewExpression
    | TaggedTemplateExpression
    | Decorator
    | JsxOpeningLikeElement;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 1281,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1281",
        },
      },
      Object {
        "docs": Array [],
        "id": "CaseOrDefaultClause",
        "kind": "TypeAliasDeclaration",
        "name": "CaseOrDefaultClause",
        "signature": "type CaseOrDefaultClause = CaseClause | DefaultClause;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 1488,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1488",
        },
      },
      Object {
        "docs": Array [],
        "id": "ClassLikeDeclaration",
        "kind": "TypeAliasDeclaration",
        "name": "ClassLikeDeclaration",
        "signature": "type ClassLikeDeclaration = ClassDeclaration | ClassExpression;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 1528,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1528",
        },
      },
      Object {
        "docs": Array [],
        "id": "ClassMemberModifier",
        "kind": "TypeAliasDeclaration",
        "name": "ClassMemberModifier",
        "signature": "type ClassMemberModifier = AccessibilityModifier | ReadonlyKeyword | StaticKeyword;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 612,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L612",
        },
      },
      Object {
        "docs": Array [],
        "id": "CodeActionCommand",
        "kind": "TypeAliasDeclaration",
        "name": "CodeActionCommand",
        "signature": "type CodeActionCommand = InstallPackageAction;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 5748,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5748",
        },
      },
      Object {
        "docs": Array [],
        "id": "ColonToken",
        "kind": "TypeAliasDeclaration",
        "name": "ColonToken",
        "signature": "type ColonToken = PunctuationToken<SyntaxKind.ColonToken>;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 579,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L579",
        },
      },
      Object {
        "docs": Array [],
        "id": "CommentKind",
        "kind": "TypeAliasDeclaration",
        "name": "CommentKind",
        "signature": "type CommentKind =
    | SyntaxKind.SingleLineCommentTrivia
    | SyntaxKind.MultiLineCommentTrivia;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 1688,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1688",
        },
      },
      Object {
        "docs": Array [],
        "id": "CompilerOptionsValue",
        "kind": "TypeAliasDeclaration",
        "name": "CompilerOptionsValue",
        "signature": "type CompilerOptionsValue =
    | string
    | number
    | boolean
    | (string | number)[]
    | string[]
    | MapLike<string[]>
    | PluginImport[]
    | ProjectReference[]
    | null
    | undefined;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 2784,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2784",
        },
      },
      Object {
        "docs": Array [],
        "id": "CompletionsTriggerCharacter",
        "kind": "TypeAliasDeclaration",
        "name": "CompletionsTriggerCharacter",
        "signature": "type CompletionsTriggerCharacter = '.' | '\\"' | \\"'\\" | '\`' | '/' | '@' | '<' | '#';",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 5588,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5588",
        },
      },
      Object {
        "docs": Array [],
        "id": "CompoundAssignmentOperator",
        "kind": "TypeAliasDeclaration",
        "name": "CompoundAssignmentOperator",
        "signature": "type CompoundAssignmentOperator =
    | SyntaxKind.PlusEqualsToken
    | SyntaxKind.MinusEqualsToken
    | SyntaxKind.AsteriskAsteriskEqualsToken
    | SyntaxKind.AsteriskEqualsToken
    | SyntaxKind.SlashEqualsToken
    | SyntaxKind.PercentEqualsToken
    | SyntaxKind.AmpersandEqualsToken
    | SyntaxKind.BarEqualsToken
    | SyntaxKind.CaretEqualsToken
    | SyntaxKind.LessThanLessThanEqualsToken
    | SyntaxKind.GreaterThanGreaterThanGreaterThanEqualsToken
    | SyntaxKind.GreaterThanGreaterThanEqualsToken
    | SyntaxKind.BarBarEqualsToken
    | SyntaxKind.AmpersandAmpersandEqualsToken
    | SyntaxKind.QuestionQuestionEqualsToken;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 1075,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1075",
        },
      },
      Object {
        "docs": Array [],
        "id": "ConciseBody",
        "kind": "TypeAliasDeclaration",
        "name": "ConciseBody",
        "signature": "type ConciseBody = FunctionBody | Expression;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 1117,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1117",
        },
      },
      Object {
        "docs": Array [],
        "id": "ConstKeyword",
        "kind": "TypeAliasDeclaration",
        "name": "ConstKeyword",
        "signature": "type ConstKeyword = ModifierToken<SyntaxKind.ConstKeyword>;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 598,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L598",
        },
      },
      Object {
        "docs": Array [
          "/** Create the program with rootNames and options, if they are undefined, oldProgram and new configFile diagnostics create new program */",
        ],
        "id": "CreateProgram",
        "kind": "TypeAliasDeclaration",
        "name": "CreateProgram",
        "signature": "type CreateProgram<T extends BuilderProgram> = (
    rootNames: readonly string[] | undefined,
    options: CompilerOptions | undefined,
    host?: CompilerHost,
    oldProgram?: T,
    configFileParsingDiagnostics?: readonly Diagnostic[],
    projectReferences?: readonly ProjectReference[] | undefined
) => T;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4975,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4975",
        },
      },
      Object {
        "docs": Array [],
        "id": "CustomTransformerFactory",
        "kind": "TypeAliasDeclaration",
        "name": "CustomTransformerFactory",
        "signature": "type CustomTransformerFactory = (
    context: TransformationContext
) => CustomTransformer;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 2104,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2104",
        },
      },
      Object {
        "docs": Array [],
        "id": "DeclarationName",
        "kind": "TypeAliasDeclaration",
        "name": "DeclarationName",
        "signature": "type DeclarationName =
    | Identifier
    | PrivateIdentifier
    | StringLiteralLike
    | NumericLiteral
    | ComputedPropertyName
    | ElementAccessExpression
    | BindingPattern
    | EntityNameExpression;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 641,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L641",
        },
      },
      Object {
        "docs": Array [],
        "id": "DeclarationWithTypeParameterChildren",
        "kind": "TypeAliasDeclaration",
        "name": "DeclarationWithTypeParameterChildren",
        "signature": "type DeclarationWithTypeParameterChildren =
    | SignatureDeclaration
    | ClassLikeDeclaration
    | InterfaceDeclaration
    | TypeAliasDeclaration
    | JSDocTemplateTag;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 1512,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1512",
        },
      },
      Object {
        "docs": Array [],
        "id": "DeclarationWithTypeParameters",
        "kind": "TypeAliasDeclaration",
        "name": "DeclarationWithTypeParameters",
        "signature": "type DeclarationWithTypeParameters =
    | DeclarationWithTypeParameterChildren
    | JSDocTypedefTag
    | JSDocCallbackTag
    | JSDocSignature;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 1511,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1511",
        },
      },
      Object {
        "docs": Array [],
        "id": "DeclareKeyword",
        "kind": "TypeAliasDeclaration",
        "name": "DeclareKeyword",
        "signature": "type DeclareKeyword = ModifierToken<SyntaxKind.DeclareKeyword>;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 599,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L599",
        },
      },
      Object {
        "docs": Array [],
        "id": "DefaultKeyword",
        "kind": "TypeAliasDeclaration",
        "name": "DefaultKeyword",
        "signature": "type DefaultKeyword = ModifierToken<SyntaxKind.DefaultKeyword>;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 600,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L600",
        },
      },
      Object {
        "docs": Array [],
        "id": "DestructuringAssignment",
        "kind": "TypeAliasDeclaration",
        "name": "DestructuringAssignment",
        "signature": "type DestructuringAssignment =
    | ObjectDestructuringAssignment
    | ArrayDestructuringAssignment;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 1098,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1098",
        },
      },
      Object {
        "docs": Array [],
        "id": "DestructuringPattern",
        "kind": "TypeAliasDeclaration",
        "name": "DestructuringPattern",
        "signature": "type DestructuringPattern =
    | BindingPattern
    | ObjectLiteralExpression
    | ArrayLiteralExpression;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 2503,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2503",
        },
      },
      Object {
        "docs": Array [],
        "id": "DiagnosticReporter",
        "kind": "TypeAliasDeclaration",
        "name": "DiagnosticReporter",
        "signature": "type DiagnosticReporter = (diagnostic: Diagnostic) => void;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4550,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4550",
        },
      },
      Object {
        "docs": Array [],
        "id": "DirectoryWatcherCallback",
        "kind": "TypeAliasDeclaration",
        "name": "DirectoryWatcherCallback",
        "signature": "type DirectoryWatcherCallback = (fileName: string) => void;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 3889,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3889",
        },
      },
      Object {
        "docs": Array [],
        "id": "DocumentRegistryBucketKey",
        "kind": "TypeAliasDeclaration",
        "name": "DocumentRegistryBucketKey",
        "signature": "type DocumentRegistryBucketKey = string & {
    __bucketKey: any;
};",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 6386,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6386",
        },
      },
      Object {
        "docs": Array [],
        "id": "DotDotDotToken",
        "kind": "TypeAliasDeclaration",
        "name": "DotDotDotToken",
        "signature": "type DotDotDotToken = PunctuationToken<SyntaxKind.DotDotDotToken>;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 576,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L576",
        },
      },
      Object {
        "docs": Array [],
        "id": "DotToken",
        "kind": "TypeAliasDeclaration",
        "name": "DotToken",
        "signature": "type DotToken = PunctuationToken<SyntaxKind.DotToken>;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 575,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L575",
        },
      },
      Object {
        "docs": Array [],
        "id": "EmitHelperUniqueNameCallback",
        "kind": "TypeAliasDeclaration",
        "name": "EmitHelperUniqueNameCallback",
        "signature": "type EmitHelperUniqueNameCallback = (name: string) => string;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 3139,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3139",
        },
      },
      Object {
        "docs": Array [],
        "id": "EndOfFileToken",
        "kind": "TypeAliasDeclaration",
        "name": "EndOfFileToken",
        "signature": "type EndOfFileToken = Token<SyntaxKind.EndOfFileToken> & JSDocContainer;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 572,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L572",
        },
      },
      Object {
        "docs": Array [],
        "id": "EntityName",
        "kind": "TypeAliasDeclaration",
        "name": "EntityName",
        "signature": "type EntityName = Identifier | QualifiedName;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 639,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L639",
        },
      },
      Object {
        "docs": Array [],
        "id": "EntityNameExpression",
        "kind": "TypeAliasDeclaration",
        "name": "EntityNameExpression",
        "signature": "type EntityNameExpression = Identifier | PropertyAccessEntityNameExpression;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 1212,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1212",
        },
      },
      Object {
        "docs": Array [],
        "id": "EntityNameOrEntityNameExpression",
        "kind": "TypeAliasDeclaration",
        "name": "EntityNameOrEntityNameExpression",
        "signature": "type EntityNameOrEntityNameExpression = EntityName | EntityNameExpression;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 1213,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1213",
        },
      },
      Object {
        "docs": Array [],
        "id": "EqualityOperator",
        "kind": "TypeAliasDeclaration",
        "name": "EqualityOperator",
        "signature": "type EqualityOperator =
    | SyntaxKind.EqualsEqualsToken
    | SyntaxKind.EqualsEqualsEqualsToken
    | SyntaxKind.ExclamationEqualsEqualsToken
    | SyntaxKind.ExclamationEqualsToken;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 1069,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1069",
        },
      },
      Object {
        "docs": Array [],
        "id": "EqualityOperatorOrHigher",
        "kind": "TypeAliasDeclaration",
        "name": "EqualityOperatorOrHigher",
        "signature": "type EqualityOperatorOrHigher = RelationalOperatorOrHigher | EqualityOperator;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 1070,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1070",
        },
      },
      Object {
        "docs": Array [],
        "id": "EqualsGreaterThanToken",
        "kind": "TypeAliasDeclaration",
        "name": "EqualsGreaterThanToken",
        "signature": "type EqualsGreaterThanToken = PunctuationToken<SyntaxKind.EqualsGreaterThanToken>;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 582,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L582",
        },
      },
      Object {
        "docs": Array [],
        "id": "EqualsToken",
        "kind": "TypeAliasDeclaration",
        "name": "EqualsToken",
        "signature": "type EqualsToken = PunctuationToken<SyntaxKind.EqualsToken>;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 580,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L580",
        },
      },
      Object {
        "docs": Array [],
        "id": "ErrorCallback",
        "kind": "TypeAliasDeclaration",
        "name": "ErrorCallback",
        "signature": "type ErrorCallback = (message: DiagnosticMessage, length: number) => void;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 3939,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3939",
        },
      },
      Object {
        "docs": Array [],
        "id": "ExclamationToken",
        "kind": "TypeAliasDeclaration",
        "name": "ExclamationToken",
        "signature": "type ExclamationToken = PunctuationToken<SyntaxKind.ExclamationToken>;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 578,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L578",
        },
      },
      Object {
        "docs": Array [],
        "id": "ExponentiationOperator",
        "kind": "TypeAliasDeclaration",
        "name": "ExponentiationOperator",
        "signature": "type ExponentiationOperator = SyntaxKind.AsteriskAsteriskToken;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 1060,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1060",
        },
      },
      Object {
        "docs": Array [],
        "id": "ExportKeyword",
        "kind": "TypeAliasDeclaration",
        "name": "ExportKeyword",
        "signature": "type ExportKeyword = ModifierToken<SyntaxKind.ExportKeyword>;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 601,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L601",
        },
      },
      Object {
        "docs": Array [],
        "id": "FileWatcherCallback",
        "kind": "TypeAliasDeclaration",
        "name": "FileWatcherCallback",
        "signature": "type FileWatcherCallback = (
    fileName: string,
    eventKind: FileWatcherEventKind
) => void;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 3888,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3888",
        },
      },
      Object {
        "docs": Array [],
        "id": "FlowNode",
        "kind": "TypeAliasDeclaration",
        "name": "FlowNode",
        "signature": "type FlowNode =
    | FlowStart
    | FlowLabel
    | FlowAssignment
    | FlowCall
    | FlowCondition
    | FlowSwitchClause
    | FlowArrayMutation
    | FlowCall
    | FlowReduceLabel;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 1874,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1874",
        },
      },
      Object {
        "docs": Array [],
        "id": "FlowType",
        "kind": "TypeAliasDeclaration",
        "name": "FlowType",
        "signature": "type FlowType = Type | IncompleteType;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 1912,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1912",
        },
      },
      Object {
        "docs": Array [],
        "id": "ForInitializer",
        "kind": "TypeAliasDeclaration",
        "name": "ForInitializer",
        "signature": "type ForInitializer = VariableDeclarationList | Expression;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 1429,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1429",
        },
      },
      Object {
        "docs": Array [],
        "id": "ForInOrOfStatement",
        "kind": "TypeAliasDeclaration",
        "name": "ForInOrOfStatement",
        "signature": "type ForInOrOfStatement = ForInStatement | ForOfStatement;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 1436,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1436",
        },
      },
      Object {
        "docs": Array [],
        "id": "FunctionBody",
        "kind": "TypeAliasDeclaration",
        "name": "FunctionBody",
        "signature": "type FunctionBody = Block;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 1116,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1116",
        },
      },
      Object {
        "docs": Array [
          "/** @deprecated Use SignatureDeclaration */",
        ],
        "id": "FunctionLike",
        "kind": "TypeAliasDeclaration",
        "name": "FunctionLike",
        "signature": "type FunctionLike = SignatureDeclaration;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 796,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L796",
        },
      },
      Object {
        "docs": Array [],
        "id": "FunctionLikeDeclaration",
        "kind": "TypeAliasDeclaration",
        "name": "FunctionLikeDeclaration",
        "signature": "type FunctionLikeDeclaration =
    | FunctionDeclaration
    | MethodDeclaration
    | GetAccessorDeclaration
    | SetAccessorDeclaration
    | ConstructorDeclaration
    | FunctionExpression
    | ArrowFunction;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 794,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L794",
        },
      },
      Object {
        "docs": Array [],
        "id": "FunctionOrConstructorTypeNode",
        "kind": "TypeAliasDeclaration",
        "name": "FunctionOrConstructorTypeNode",
        "signature": "type FunctionOrConstructorTypeNode = FunctionTypeNode | ConstructorTypeNode;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 856,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L856",
        },
      },
      Object {
        "docs": Array [],
        "id": "HasExpressionInitializer",
        "kind": "TypeAliasDeclaration",
        "name": "HasExpressionInitializer",
        "signature": "type HasExpressionInitializer =
    | VariableDeclaration
    | ParameterDeclaration
    | BindingElement
    | PropertySignature
    | PropertyDeclaration
    | PropertyAssignment
    | EnumMember;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 565,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L565",
        },
      },
      Object {
        "docs": Array [],
        "id": "HasInitializer",
        "kind": "TypeAliasDeclaration",
        "name": "HasInitializer",
        "signature": "type HasInitializer =
    | HasExpressionInitializer
    | ForStatement
    | ForInStatement
    | ForOfStatement
    | JsxAttribute;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 564,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L564",
        },
      },
      Object {
        "docs": Array [],
        "id": "HasJSDoc",
        "kind": "TypeAliasDeclaration",
        "name": "HasJSDoc",
        "signature": "type HasJSDoc =
    | ParameterDeclaration
    | CallSignatureDeclaration
    | ConstructSignatureDeclaration
    | MethodSignature
    | PropertySignature
    | ArrowFunction
    | ParenthesizedExpression
    | SpreadAssignment
    | ShorthandPropertyAssignment
    | PropertyAssignment
    | FunctionExpression
    | LabeledStatement
    | ExpressionStatement
    | VariableStatement
    | FunctionDeclaration
    | ConstructorDeclaration
    | MethodDeclaration
    | PropertyDeclaration
    | AccessorDeclaration
    | ClassLikeDeclaration
    | InterfaceDeclaration
    | TypeAliasDeclaration
    | EnumMember
    | EnumDeclaration
    | ModuleDeclaration
    | ImportEqualsDeclaration
    | ImportDeclaration
    | NamespaceExportDeclaration
    | ExportAssignment
    | IndexSignatureDeclaration
    | FunctionTypeNode
    | ConstructorTypeNode
    | JSDocFunctionType
    | ExportDeclaration
    | NamedTupleMember
    | EndOfFileToken;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 561,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L561",
        },
      },
      Object {
        "docs": Array [],
        "id": "HasType",
        "kind": "TypeAliasDeclaration",
        "name": "HasType",
        "signature": "type HasType =
    | SignatureDeclaration
    | VariableDeclaration
    | ParameterDeclaration
    | PropertySignature
    | PropertyDeclaration
    | TypePredicateNode
    | ParenthesizedTypeNode
    | TypeOperatorNode
    | MappedTypeNode
    | AssertionExpression
    | TypeAliasDeclaration
    | JSDocTypeExpression
    | JSDocNonNullableType
    | JSDocNullableType
    | JSDocOptionalType
    | JSDocVariadicType;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 562,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L562",
        },
      },
      Object {
        "docs": Array [],
        "id": "HasTypeArguments",
        "kind": "TypeAliasDeclaration",
        "name": "HasTypeArguments",
        "signature": "type HasTypeArguments =
    | CallExpression
    | NewExpression
    | TaggedTemplateExpression
    | JsxOpeningElement
    | JsxSelfClosingElement;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 563,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L563",
        },
      },
      Object {
        "docs": Array [],
        "id": "ImportOrExportSpecifier",
        "kind": "TypeAliasDeclaration",
        "name": "ImportOrExportSpecifier",
        "signature": "type ImportOrExportSpecifier = ImportSpecifier | ExportSpecifier;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 1670,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1670",
        },
      },
      Object {
        "docs": Array [
          "/** Deprecated, please use UpdateExpression */",
        ],
        "id": "IncrementExpression",
        "kind": "TypeAliasDeclaration",
        "name": "IncrementExpression",
        "signature": "type IncrementExpression = UpdateExpression;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 989,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L989",
        },
      },
      Object {
        "docs": Array [],
        "id": "InvalidatedProject",
        "kind": "TypeAliasDeclaration",
        "name": "InvalidatedProject",
        "signature": "type InvalidatedProject<T extends BuilderProgram> =
    | UpdateOutputFileStampsProject
    | BuildInvalidedProject<T>
    | UpdateBundleProject<T>;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 5177,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5177",
        },
      },
      Object {
        "docs": Array [],
        "id": "JSDocNamespaceBody",
        "kind": "TypeAliasDeclaration",
        "name": "JSDocNamespaceBody",
        "signature": "type JSDocNamespaceBody = Identifier | JSDocNamespaceDeclaration;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 1581,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1581",
        },
      },
      Object {
        "docs": Array [],
        "id": "JSDocSyntaxKind",
        "kind": "TypeAliasDeclaration",
        "name": "JSDocSyntaxKind",
        "signature": "type JSDocSyntaxKind =
    | SyntaxKind.EndOfFileToken
    | SyntaxKind.WhitespaceTrivia
    | SyntaxKind.AtToken
    | SyntaxKind.NewLineTrivia
    | SyntaxKind.AsteriskToken
    | SyntaxKind.OpenBraceToken
    | SyntaxKind.CloseBraceToken
    | SyntaxKind.LessThanToken
    | SyntaxKind.GreaterThanToken
    | SyntaxKind.OpenBracketToken
    | SyntaxKind.CloseBracketToken
    | SyntaxKind.EqualsToken
    | SyntaxKind.CommaToken
    | SyntaxKind.DotToken
    | SyntaxKind.Identifier
    | SyntaxKind.BacktickToken
    | SyntaxKind.Unknown
    | KeywordSyntaxKind;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 490,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L490",
        },
      },
      Object {
        "docs": Array [],
        "id": "JSDocTypeReferencingNode",
        "kind": "TypeAliasDeclaration",
        "name": "JSDocTypeReferencingNode",
        "signature": "type JSDocTypeReferencingNode =
    | JSDocVariadicType
    | JSDocOptionalType
    | JSDocNullableType
    | JSDocNonNullableType;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 1739,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1739",
        },
      },
      Object {
        "docs": Array [
          "/** @deprecated Use FileExtensionInfo instead. */",
        ],
        "id": "JsFileExtensionInfo",
        "kind": "TypeAliasDeclaration",
        "name": "JsFileExtensionInfo",
        "signature": "type JsFileExtensionInfo = FileExtensionInfo;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 2698,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2698",
        },
      },
      Object {
        "docs": Array [],
        "id": "JsonObjectExpression",
        "kind": "TypeAliasDeclaration",
        "name": "JsonObjectExpression",
        "signature": "type JsonObjectExpression =
    | ObjectLiteralExpression
    | ArrayLiteralExpression
    | JsonMinusNumericLiteral
    | NumericLiteral
    | StringLiteral
    | BooleanLiteral
    | NullLiteral;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 2013,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2013",
        },
      },
      Object {
        "docs": Array [],
        "id": "JsxAttributeLike",
        "kind": "TypeAliasDeclaration",
        "name": "JsxAttributeLike",
        "signature": "type JsxAttributeLike = JsxAttribute | JsxSpreadAttribute;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 1312,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1312",
        },
      },
      Object {
        "docs": Array [],
        "id": "JsxChild",
        "kind": "TypeAliasDeclaration",
        "name": "JsxChild",
        "signature": "type JsxChild =
    | JsxText
    | JsxExpression
    | JsxElement
    | JsxSelfClosingElement
    | JsxFragment;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 1375,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1375",
        },
      },
      Object {
        "docs": Array [],
        "id": "JsxOpeningLikeElement",
        "kind": "TypeAliasDeclaration",
        "name": "JsxOpeningLikeElement",
        "signature": "type JsxOpeningLikeElement = JsxSelfClosingElement | JsxOpeningElement;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 1311,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1311",
        },
      },
      Object {
        "docs": Array [],
        "id": "JsxTagNameExpression",
        "kind": "TypeAliasDeclaration",
        "name": "JsxTagNameExpression",
        "signature": "type JsxTagNameExpression = Identifier | ThisExpression | JsxTagNamePropertyAccess;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 1313,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1313",
        },
      },
      Object {
        "docs": Array [],
        "id": "JsxTokenSyntaxKind",
        "kind": "TypeAliasDeclaration",
        "name": "JsxTokenSyntaxKind",
        "signature": "type JsxTokenSyntaxKind =
    | SyntaxKind.LessThanSlashToken
    | SyntaxKind.EndOfFileToken
    | SyntaxKind.ConflictMarkerTrivia
    | SyntaxKind.JsxText
    | SyntaxKind.JsxTextAllWhiteSpaces
    | SyntaxKind.OpenBraceToken
    | SyntaxKind.LessThanToken;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 489,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L489",
        },
      },
      Object {
        "docs": Array [],
        "id": "KeywordSyntaxKind",
        "kind": "TypeAliasDeclaration",
        "name": "KeywordSyntaxKind",
        "signature": "type KeywordSyntaxKind =
    | SyntaxKind.AbstractKeyword
    | SyntaxKind.AnyKeyword
    | SyntaxKind.AsKeyword
    | SyntaxKind.AssertsKeyword
    | SyntaxKind.AsyncKeyword
    | SyntaxKind.AwaitKeyword
    | SyntaxKind.BigIntKeyword
    | SyntaxKind.BooleanKeyword
    | SyntaxKind.BreakKeyword
    | SyntaxKind.CaseKeyword
    | SyntaxKind.CatchKeyword
    | SyntaxKind.ClassKeyword
    | SyntaxKind.ConstKeyword
    | SyntaxKind.ConstructorKeyword
    | SyntaxKind.ContinueKeyword
    | SyntaxKind.DebuggerKeyword
    | SyntaxKind.DeclareKeyword
    | SyntaxKind.DefaultKeyword
    | SyntaxKind.DeleteKeyword
    | SyntaxKind.DoKeyword
    | SyntaxKind.ElseKeyword
    | SyntaxKind.EnumKeyword
    | SyntaxKind.ExportKeyword
    | SyntaxKind.ExtendsKeyword
    | SyntaxKind.FalseKeyword
    | SyntaxKind.FinallyKeyword
    | SyntaxKind.ForKeyword
    | SyntaxKind.FromKeyword
    | SyntaxKind.FunctionKeyword
    | SyntaxKind.GetKeyword
    | SyntaxKind.GlobalKeyword
    | SyntaxKind.IfKeyword
    | SyntaxKind.ImplementsKeyword
    | SyntaxKind.ImportKeyword
    | SyntaxKind.InferKeyword
    | SyntaxKind.InKeyword
    | SyntaxKind.InstanceOfKeyword
    | SyntaxKind.InterfaceKeyword
    | SyntaxKind.IntrinsicKeyword
    | SyntaxKind.IsKeyword
    | SyntaxKind.KeyOfKeyword
    | SyntaxKind.LetKeyword
    | SyntaxKind.ModuleKeyword
    | SyntaxKind.NamespaceKeyword
    | SyntaxKind.NeverKeyword
    | SyntaxKind.NewKeyword
    | SyntaxKind.NullKeyword
    | SyntaxKind.NumberKeyword
    | SyntaxKind.ObjectKeyword
    | SyntaxKind.OfKeyword
    | SyntaxKind.PackageKeyword
    | SyntaxKind.PrivateKeyword
    | SyntaxKind.ProtectedKeyword
    | SyntaxKind.PublicKeyword
    | SyntaxKind.ReadonlyKeyword
    | SyntaxKind.RequireKeyword
    | SyntaxKind.ReturnKeyword
    | SyntaxKind.SetKeyword
    | SyntaxKind.StaticKeyword
    | SyntaxKind.StringKeyword
    | SyntaxKind.SuperKeyword
    | SyntaxKind.SwitchKeyword
    | SyntaxKind.SymbolKeyword
    | SyntaxKind.ThisKeyword
    | SyntaxKind.ThrowKeyword
    | SyntaxKind.TrueKeyword
    | SyntaxKind.TryKeyword
    | SyntaxKind.TypeKeyword
    | SyntaxKind.TypeOfKeyword
    | SyntaxKind.UndefinedKeyword
    | SyntaxKind.UniqueKeyword
    | SyntaxKind.UnknownKeyword
    | SyntaxKind.VarKeyword
    | SyntaxKind.VoidKeyword
    | SyntaxKind.WhileKeyword
    | SyntaxKind.WithKeyword
    | SyntaxKind.YieldKeyword;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 485,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L485",
        },
      },
      Object {
        "docs": Array [],
        "id": "KeywordTypeSyntaxKind",
        "kind": "TypeAliasDeclaration",
        "name": "KeywordTypeSyntaxKind",
        "signature": "type KeywordTypeSyntaxKind =
    | SyntaxKind.AnyKeyword
    | SyntaxKind.BigIntKeyword
    | SyntaxKind.BooleanKeyword
    | SyntaxKind.IntrinsicKeyword
    | SyntaxKind.NeverKeyword
    | SyntaxKind.NumberKeyword
    | SyntaxKind.ObjectKeyword
    | SyntaxKind.StringKeyword
    | SyntaxKind.SymbolKeyword
    | SyntaxKind.UndefinedKeyword
    | SyntaxKind.UnknownKeyword
    | SyntaxKind.VoidKeyword;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 487,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L487",
        },
      },
      Object {
        "docs": Array [],
        "id": "LiteralSyntaxKind",
        "kind": "TypeAliasDeclaration",
        "name": "LiteralSyntaxKind",
        "signature": "type LiteralSyntaxKind =
    | SyntaxKind.NumericLiteral
    | SyntaxKind.BigIntLiteral
    | SyntaxKind.StringLiteral
    | SyntaxKind.JsxText
    | SyntaxKind.JsxTextAllWhiteSpaces
    | SyntaxKind.RegularExpressionLiteral
    | SyntaxKind.NoSubstitutionTemplateLiteral;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 482,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L482",
        },
      },
      Object {
        "docs": Array [],
        "id": "LiteralToken",
        "kind": "TypeAliasDeclaration",
        "name": "LiteralToken",
        "signature": "type LiteralToken =
    | NumericLiteral
    | BigIntLiteral
    | StringLiteral
    | JsxText
    | RegularExpressionLiteral
    | NoSubstitutionTemplateLiteral;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 1160,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1160",
        },
      },
      Object {
        "docs": Array [],
        "id": "LogicalOperator",
        "kind": "TypeAliasDeclaration",
        "name": "LogicalOperator",
        "signature": "type LogicalOperator = SyntaxKind.AmpersandAmpersandToken | SyntaxKind.BarBarToken;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 1073,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1073",
        },
      },
      Object {
        "docs": Array [],
        "id": "LogicalOperatorOrHigher",
        "kind": "TypeAliasDeclaration",
        "name": "LogicalOperatorOrHigher",
        "signature": "type LogicalOperatorOrHigher = BitwiseOperatorOrHigher | LogicalOperator;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 1074,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1074",
        },
      },
      Object {
        "docs": Array [],
        "id": "LogicalOrCoalescingAssignmentOperator",
        "kind": "TypeAliasDeclaration",
        "name": "LogicalOrCoalescingAssignmentOperator",
        "signature": "type LogicalOrCoalescingAssignmentOperator =
    | SyntaxKind.AmpersandAmpersandEqualsToken
    | SyntaxKind.BarBarEqualsToken
    | SyntaxKind.QuestionQuestionEqualsToken;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 1079,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1079",
        },
      },
      Object {
        "docs": Array [],
        "id": "MinusToken",
        "kind": "TypeAliasDeclaration",
        "name": "MinusToken",
        "signature": "type MinusToken = PunctuationToken<SyntaxKind.MinusToken>;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 584,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L584",
        },
      },
      Object {
        "docs": Array [],
        "id": "Modifier",
        "kind": "TypeAliasDeclaration",
        "name": "Modifier",
        "signature": "type Modifier =
    | AbstractKeyword
    | AsyncKeyword
    | ConstKeyword
    | DeclareKeyword
    | DefaultKeyword
    | ExportKeyword
    | PrivateKeyword
    | ProtectedKeyword
    | PublicKeyword
    | ReadonlyKeyword
    | StaticKeyword;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 609,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L609",
        },
      },
      Object {
        "docs": Array [],
        "id": "ModifiersArray",
        "kind": "TypeAliasDeclaration",
        "name": "ModifiersArray",
        "signature": "type ModifiersArray = NodeArray<Modifier>;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 613,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L613",
        },
      },
      Object {
        "docs": Array [],
        "id": "ModifierSyntaxKind",
        "kind": "TypeAliasDeclaration",
        "name": "ModifierSyntaxKind",
        "signature": "type ModifierSyntaxKind =
    | SyntaxKind.AbstractKeyword
    | SyntaxKind.AsyncKeyword
    | SyntaxKind.ConstKeyword
    | SyntaxKind.DeclareKeyword
    | SyntaxKind.DefaultKeyword
    | SyntaxKind.ExportKeyword
    | SyntaxKind.PrivateKeyword
    | SyntaxKind.ProtectedKeyword
    | SyntaxKind.PublicKeyword
    | SyntaxKind.ReadonlyKeyword
    | SyntaxKind.StaticKeyword;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 486,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L486",
        },
      },
      Object {
        "docs": Array [],
        "id": "ModuleBody",
        "kind": "TypeAliasDeclaration",
        "name": "ModuleBody",
        "signature": "type ModuleBody = NamespaceBody | JSDocNamespaceBody;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 1569,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1569",
        },
      },
      Object {
        "docs": Array [],
        "id": "ModuleName",
        "kind": "TypeAliasDeclaration",
        "name": "ModuleName",
        "signature": "type ModuleName = Identifier | StringLiteral;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 1568,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1568",
        },
      },
      Object {
        "docs": Array [],
        "id": "ModuleReference",
        "kind": "TypeAliasDeclaration",
        "name": "ModuleReference",
        "signature": "type ModuleReference = EntityName | ExternalModuleReference;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 1591,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1591",
        },
      },
      Object {
        "docs": Array [],
        "id": "MultiplicativeOperator",
        "kind": "TypeAliasDeclaration",
        "name": "MultiplicativeOperator",
        "signature": "type MultiplicativeOperator =
    | SyntaxKind.AsteriskToken
    | SyntaxKind.SlashToken
    | SyntaxKind.PercentToken;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 1061,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1061",
        },
      },
      Object {
        "docs": Array [],
        "id": "MultiplicativeOperatorOrHigher",
        "kind": "TypeAliasDeclaration",
        "name": "MultiplicativeOperatorOrHigher",
        "signature": "type MultiplicativeOperatorOrHigher =
    | ExponentiationOperator
    | MultiplicativeOperator;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 1062,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1062",
        },
      },
      Object {
        "docs": Array [],
        "id": "NamedExportBindings",
        "kind": "TypeAliasDeclaration",
        "name": "NamedExportBindings",
        "signature": "type NamedExportBindings = NamespaceExport | NamedExports;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 1616,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1616",
        },
      },
      Object {
        "docs": Array [],
        "id": "NamedImportBindings",
        "kind": "TypeAliasDeclaration",
        "name": "NamedImportBindings",
        "signature": "type NamedImportBindings = NamespaceImport | NamedImports;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 1615,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1615",
        },
      },
      Object {
        "docs": Array [],
        "id": "NamedImportsOrExports",
        "kind": "TypeAliasDeclaration",
        "name": "NamedImportsOrExports",
        "signature": "type NamedImportsOrExports = NamedImports | NamedExports;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 1657,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1657",
        },
      },
      Object {
        "docs": Array [],
        "id": "NamespaceBody",
        "kind": "TypeAliasDeclaration",
        "name": "NamespaceBody",
        "signature": "type NamespaceBody = ModuleBlock | NamespaceDeclaration;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 1576,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1576",
        },
      },
      Object {
        "docs": Array [],
        "id": "ObjectBindingOrAssignmentElement",
        "kind": "TypeAliasDeclaration",
        "name": "ObjectBindingOrAssignmentElement",
        "signature": "type ObjectBindingOrAssignmentElement =
    | BindingElement
    | PropertyAssignment
    | ShorthandPropertyAssignment
    | SpreadAssignment;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 1100,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1100",
        },
      },
      Object {
        "docs": Array [],
        "id": "ObjectBindingOrAssignmentPattern",
        "kind": "TypeAliasDeclaration",
        "name": "ObjectBindingOrAssignmentPattern",
        "signature": "type ObjectBindingOrAssignmentPattern =
    | ObjectBindingPattern
    | ObjectLiteralExpression;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 1104,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1104",
        },
      },
      Object {
        "docs": Array [
          "/** Unlike ObjectLiteralElement, excludes JSXAttribute and JSXSpreadAttribute. */",
        ],
        "id": "ObjectLiteralElementLike",
        "kind": "TypeAliasDeclaration",
        "name": "ObjectLiteralElementLike",
        "signature": "type ObjectLiteralElementLike =
    | PropertyAssignment
    | ShorthandPropertyAssignment
    | SpreadAssignment
    | MethodDeclaration
    | AccessorDeclaration;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 740,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L740",
        },
      },
      Object {
        "docs": Array [],
        "id": "ObjectTypeDeclaration",
        "kind": "TypeAliasDeclaration",
        "name": "ObjectTypeDeclaration",
        "signature": "type ObjectTypeDeclaration =
    | ClassLikeDeclaration
    | InterfaceDeclaration
    | TypeLiteralNode;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 1510,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1510",
        },
      },
      Object {
        "docs": Array [],
        "id": "OptionalChain",
        "kind": "TypeAliasDeclaration",
        "name": "OptionalChain",
        "signature": "type OptionalChain =
    | PropertyAccessChain
    | ElementAccessChain
    | CallChain
    | NonNullChain;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 1257,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1257",
        },
      },
      Object {
        "docs": Array [],
        "id": "OrganizeImportsScope",
        "kind": "TypeAliasDeclaration",
        "name": "OrganizeImportsScope",
        "signature": "type OrganizeImportsScope = CombinedCodeFixScope;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 5587,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5587",
        },
      },
      Object {
        "docs": Array [],
        "id": "ParameterPropertyDeclaration",
        "kind": "TypeAliasDeclaration",
        "name": "ParameterPropertyDeclaration",
        "signature": "type ParameterPropertyDeclaration = ParameterDeclaration & {
    parent: ConstructorDeclaration;
    name: Identifier;
};",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4030,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4030",
        },
      },
      Object {
        "docs": Array [],
        "id": "ParameterPropertyModifier",
        "kind": "TypeAliasDeclaration",
        "name": "ParameterPropertyModifier",
        "signature": "type ParameterPropertyModifier = AccessibilityModifier | ReadonlyKeyword;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 611,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L611",
        },
      },
      Object {
        "docs": Array [],
        "id": "Path",
        "kind": "TypeAliasDeclaration",
        "name": "Path",
        "signature": "type Path = string & {
    __pathBrand: any;
};",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 94,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L94",
        },
      },
      Object {
        "docs": Array [],
        "id": "PlusToken",
        "kind": "TypeAliasDeclaration",
        "name": "PlusToken",
        "signature": "type PlusToken = PunctuationToken<SyntaxKind.PlusToken>;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 583,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L583",
        },
      },
      Object {
        "docs": Array [],
        "id": "PostfixUnaryOperator",
        "kind": "TypeAliasDeclaration",
        "name": "PostfixUnaryOperator",
        "signature": "type PostfixUnaryOperator = SyntaxKind.PlusPlusToken | SyntaxKind.MinusMinusToken;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 999,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L999",
        },
      },
      Object {
        "docs": Array [],
        "id": "PrefixUnaryOperator",
        "kind": "TypeAliasDeclaration",
        "name": "PrefixUnaryOperator",
        "signature": "type PrefixUnaryOperator =
    | SyntaxKind.PlusPlusToken
    | SyntaxKind.MinusMinusToken
    | SyntaxKind.PlusToken
    | SyntaxKind.MinusToken
    | SyntaxKind.TildeToken
    | SyntaxKind.ExclamationToken;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 993,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L993",
        },
      },
      Object {
        "docs": Array [],
        "id": "PrivateKeyword",
        "kind": "TypeAliasDeclaration",
        "name": "PrivateKeyword",
        "signature": "type PrivateKeyword = ModifierToken<SyntaxKind.PrivateKeyword>;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 602,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L602",
        },
      },
      Object {
        "docs": Array [],
        "id": "PropertyName",
        "kind": "TypeAliasDeclaration",
        "name": "PropertyName",
        "signature": "type PropertyName =
    | Identifier
    | StringLiteral
    | NumericLiteral
    | ComputedPropertyName
    | PrivateIdentifier;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 640,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L640",
        },
      },
      Object {
        "docs": Array [],
        "id": "PropertyNameLiteral",
        "kind": "TypeAliasDeclaration",
        "name": "PropertyNameLiteral",
        "signature": "type PropertyNameLiteral = Identifier | StringLiteralLike | NumericLiteral;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 963,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L963",
        },
      },
      Object {
        "docs": Array [],
        "id": "ProtectedKeyword",
        "kind": "TypeAliasDeclaration",
        "name": "ProtectedKeyword",
        "signature": "type ProtectedKeyword = ModifierToken<SyntaxKind.ProtectedKeyword>;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 603,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L603",
        },
      },
      Object {
        "docs": Array [],
        "id": "PseudoLiteralSyntaxKind",
        "kind": "TypeAliasDeclaration",
        "name": "PseudoLiteralSyntaxKind",
        "signature": "type PseudoLiteralSyntaxKind =
    | SyntaxKind.TemplateHead
    | SyntaxKind.TemplateMiddle
    | SyntaxKind.TemplateTail;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 483,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L483",
        },
      },
      Object {
        "docs": Array [],
        "id": "PseudoLiteralToken",
        "kind": "TypeAliasDeclaration",
        "name": "PseudoLiteralToken",
        "signature": "type PseudoLiteralToken = TemplateHead | TemplateMiddle | TemplateTail;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 1173,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1173",
        },
      },
      Object {
        "docs": Array [],
        "id": "PublicKeyword",
        "kind": "TypeAliasDeclaration",
        "name": "PublicKeyword",
        "signature": "type PublicKeyword = ModifierToken<SyntaxKind.PublicKeyword>;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 604,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L604",
        },
      },
      Object {
        "docs": Array [],
        "id": "PunctuationSyntaxKind",
        "kind": "TypeAliasDeclaration",
        "name": "PunctuationSyntaxKind",
        "signature": "type PunctuationSyntaxKind =
    | SyntaxKind.OpenBraceToken
    | SyntaxKind.CloseBraceToken
    | SyntaxKind.OpenParenToken
    | SyntaxKind.CloseParenToken
    | SyntaxKind.OpenBracketToken
    | SyntaxKind.CloseBracketToken
    | SyntaxKind.DotToken
    | SyntaxKind.DotDotDotToken
    | SyntaxKind.SemicolonToken
    | SyntaxKind.CommaToken
    | SyntaxKind.QuestionDotToken
    | SyntaxKind.LessThanToken
    | SyntaxKind.LessThanSlashToken
    | SyntaxKind.GreaterThanToken
    | SyntaxKind.LessThanEqualsToken
    | SyntaxKind.GreaterThanEqualsToken
    | SyntaxKind.EqualsEqualsToken
    | SyntaxKind.ExclamationEqualsToken
    | SyntaxKind.EqualsEqualsEqualsToken
    | SyntaxKind.ExclamationEqualsEqualsToken
    | SyntaxKind.EqualsGreaterThanToken
    | SyntaxKind.PlusToken
    | SyntaxKind.MinusToken
    | SyntaxKind.AsteriskToken
    | SyntaxKind.AsteriskAsteriskToken
    | SyntaxKind.SlashToken
    | SyntaxKind.PercentToken
    | SyntaxKind.PlusPlusToken
    | SyntaxKind.MinusMinusToken
    | SyntaxKind.LessThanLessThanToken
    | SyntaxKind.GreaterThanGreaterThanToken
    | SyntaxKind.GreaterThanGreaterThanGreaterThanToken
    | SyntaxKind.AmpersandToken
    | SyntaxKind.BarToken
    | SyntaxKind.CaretToken
    | SyntaxKind.ExclamationToken
    | SyntaxKind.TildeToken
    | SyntaxKind.AmpersandAmpersandToken
    | SyntaxKind.BarBarToken
    | SyntaxKind.QuestionQuestionToken
    | SyntaxKind.QuestionToken
    | SyntaxKind.ColonToken
    | SyntaxKind.AtToken
    | SyntaxKind.BacktickToken
    | SyntaxKind.EqualsToken
    | SyntaxKind.PlusEqualsToken
    | SyntaxKind.MinusEqualsToken
    | SyntaxKind.AsteriskEqualsToken
    | SyntaxKind.AsteriskAsteriskEqualsToken
    | SyntaxKind.SlashEqualsToken
    | SyntaxKind.PercentEqualsToken
    | SyntaxKind.LessThanLessThanEqualsToken
    | SyntaxKind.GreaterThanGreaterThanEqualsToken
    | SyntaxKind.GreaterThanGreaterThanGreaterThanEqualsToken
    | SyntaxKind.AmpersandEqualsToken
    | SyntaxKind.BarEqualsToken
    | SyntaxKind.CaretEqualsToken;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 484,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L484",
        },
      },
      Object {
        "docs": Array [],
        "id": "QuestionDotToken",
        "kind": "TypeAliasDeclaration",
        "name": "QuestionDotToken",
        "signature": "type QuestionDotToken = PunctuationToken<SyntaxKind.QuestionDotToken>;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 585,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L585",
        },
      },
      Object {
        "docs": Array [],
        "id": "QuestionToken",
        "kind": "TypeAliasDeclaration",
        "name": "QuestionToken",
        "signature": "type QuestionToken = PunctuationToken<SyntaxKind.QuestionToken>;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 577,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L577",
        },
      },
      Object {
        "docs": Array [],
        "id": "ReadonlyKeyword",
        "kind": "TypeAliasDeclaration",
        "name": "ReadonlyKeyword",
        "signature": "type ReadonlyKeyword = ModifierToken<SyntaxKind.ReadonlyKeyword>;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 605,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L605",
        },
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`ReadonlyKeyword\` instead. */",
        ],
        "id": "ReadonlyToken",
        "kind": "TypeAliasDeclaration",
        "name": "ReadonlyToken",
        "signature": "type ReadonlyToken = ReadonlyKeyword;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 608,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L608",
        },
      },
      Object {
        "docs": Array [],
        "id": "RefactorTriggerReason",
        "kind": "TypeAliasDeclaration",
        "name": "RefactorTriggerReason",
        "signature": "type RefactorTriggerReason = 'implicit' | 'invoked';",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 5805,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5805",
        },
      },
      Object {
        "docs": Array [],
        "id": "RelationalOperator",
        "kind": "TypeAliasDeclaration",
        "name": "RelationalOperator",
        "signature": "type RelationalOperator =
    | SyntaxKind.LessThanToken
    | SyntaxKind.LessThanEqualsToken
    | SyntaxKind.GreaterThanToken
    | SyntaxKind.GreaterThanEqualsToken
    | SyntaxKind.InstanceOfKeyword
    | SyntaxKind.InKeyword;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 1067,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1067",
        },
      },
      Object {
        "docs": Array [],
        "id": "RelationalOperatorOrHigher",
        "kind": "TypeAliasDeclaration",
        "name": "RelationalOperatorOrHigher",
        "signature": "type RelationalOperatorOrHigher = ShiftOperatorOrHigher | RelationalOperator;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 1068,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1068",
        },
      },
      Object {
        "docs": Array [],
        "id": "RenameInfo",
        "kind": "TypeAliasDeclaration",
        "name": "RenameInfo",
        "signature": "type RenameInfo = RenameInfoSuccess | RenameInfoFailure;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 5988,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5988",
        },
      },
      Object {
        "docs": Array [],
        "id": "ReportEmitErrorSummary",
        "kind": "TypeAliasDeclaration",
        "name": "ReportEmitErrorSummary",
        "signature": "type ReportEmitErrorSummary = (errorCount: number) => void;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 5103,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5103",
        },
      },
      Object {
        "docs": Array [
          "/**
     * Branded string for keeping track of when we've turned an ambiguous path
     * specified like \\"./blah\\" to an absolute path to an actual
     * tsconfig file, e.g. \\"/root/blah/tsconfig.json\\"
     */",
        ],
        "id": "ResolvedConfigFileName",
        "kind": "TypeAliasDeclaration",
        "name": "ResolvedConfigFileName",
        "signature": "type ResolvedConfigFileName = string & {
    _isResolvedConfigFileName: never;
};",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 2039,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2039",
        },
      },
      Object {
        "docs": Array [],
        "id": "ShiftOperator",
        "kind": "TypeAliasDeclaration",
        "name": "ShiftOperator",
        "signature": "type ShiftOperator =
    | SyntaxKind.LessThanLessThanToken
    | SyntaxKind.GreaterThanGreaterThanToken
    | SyntaxKind.GreaterThanGreaterThanGreaterThanToken;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 1065,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1065",
        },
      },
      Object {
        "docs": Array [],
        "id": "ShiftOperatorOrHigher",
        "kind": "TypeAliasDeclaration",
        "name": "ShiftOperatorOrHigher",
        "signature": "type ShiftOperatorOrHigher = AdditiveOperatorOrHigher | ShiftOperator;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 1066,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1066",
        },
      },
      Object {
        "docs": Array [],
        "id": "SignatureDeclaration",
        "kind": "TypeAliasDeclaration",
        "name": "SignatureDeclaration",
        "signature": "type SignatureDeclaration =
    | CallSignatureDeclaration
    | ConstructSignatureDeclaration
    | MethodSignature
    | IndexSignatureDeclaration
    | FunctionTypeNode
    | ConstructorTypeNode
    | JSDocFunctionType
    | FunctionDeclaration
    | MethodDeclaration
    | ConstructorDeclaration
    | AccessorDeclaration
    | FunctionExpression
    | ArrowFunction;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 681,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L681",
        },
      },
      Object {
        "docs": Array [],
        "id": "SignatureHelpRetriggerCharacter",
        "kind": "TypeAliasDeclaration",
        "name": "SignatureHelpRetriggerCharacter",
        "signature": "type SignatureHelpRetriggerCharacter = SignatureHelpTriggerCharacter | ')';",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 5601,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5601",
        },
      },
      Object {
        "docs": Array [],
        "id": "SignatureHelpTriggerCharacter",
        "kind": "TypeAliasDeclaration",
        "name": "SignatureHelpTriggerCharacter",
        "signature": "type SignatureHelpTriggerCharacter = ',' | '(' | '<';",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 5600,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5600",
        },
      },
      Object {
        "docs": Array [],
        "id": "SignatureHelpTriggerReason",
        "kind": "TypeAliasDeclaration",
        "name": "SignatureHelpTriggerReason",
        "signature": "type SignatureHelpTriggerReason =
    | SignatureHelpInvokedReason
    | SignatureHelpCharacterTypedReason
    | SignatureHelpRetriggeredReason;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 5605,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5605",
        },
      },
      Object {
        "docs": Array [],
        "id": "StaticKeyword",
        "kind": "TypeAliasDeclaration",
        "name": "StaticKeyword",
        "signature": "type StaticKeyword = ModifierToken<SyntaxKind.StaticKeyword>;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 606,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L606",
        },
      },
      Object {
        "docs": Array [],
        "id": "StringLiteralLike",
        "kind": "TypeAliasDeclaration",
        "name": "StringLiteralLike",
        "signature": "type StringLiteralLike = StringLiteral | NoSubstitutionTemplateLiteral;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 962,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L962",
        },
      },
      Object {
        "docs": Array [],
        "id": "StructuredType",
        "kind": "TypeAliasDeclaration",
        "name": "StructuredType",
        "signature": "type StructuredType = ObjectType | UnionType | IntersectionType;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 2614,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2614",
        },
      },
      Object {
        "docs": Array [],
        "id": "SuperProperty",
        "kind": "TypeAliasDeclaration",
        "name": "SuperProperty",
        "signature": "type SuperProperty = SuperPropertyAccessExpression | SuperElementAccessExpression;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 1246,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1246",
        },
      },
      Object {
        "docs": Array [
          "/** SymbolTable based on ES6 Map interface. */",
        ],
        "id": "SymbolTable",
        "kind": "TypeAliasDeclaration",
        "name": "SymbolTable",
        "signature": "type SymbolTable = UnderscoreEscapedMap<Symbol>;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 2452,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2452",
        },
      },
      Object {
        "docs": Array [],
        "id": "TemplateLiteral",
        "kind": "TypeAliasDeclaration",
        "name": "TemplateLiteral",
        "signature": "type TemplateLiteral = TemplateExpression | NoSubstitutionTemplateLiteral;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 1180,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1180",
        },
      },
      Object {
        "docs": Array [],
        "id": "TemplateLiteralToken",
        "kind": "TypeAliasDeclaration",
        "name": "TemplateLiteralToken",
        "signature": "type TemplateLiteralToken = NoSubstitutionTemplateLiteral | PseudoLiteralToken;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 1174,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1174",
        },
      },
      Object {
        "docs": Array [],
        "id": "TokenSyntaxKind",
        "kind": "TypeAliasDeclaration",
        "name": "TokenSyntaxKind",
        "signature": "type TokenSyntaxKind =
    | SyntaxKind.Unknown
    | SyntaxKind.EndOfFileToken
    | TriviaSyntaxKind
    | LiteralSyntaxKind
    | PseudoLiteralSyntaxKind
    | PunctuationSyntaxKind
    | SyntaxKind.Identifier
    | KeywordSyntaxKind;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 488,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L488",
        },
      },
      Object {
        "docs": Array [
          "/**
     * A function that transforms a node.
     */",
        ],
        "id": "Transformer",
        "kind": "TypeAliasDeclaration",
        "name": "Transformer",
        "signature": "type Transformer<T extends Node> = (node: T) => T;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 3678,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3678",
        },
      },
      Object {
        "docs": Array [
          "/**
     * A function that is used to initialize and return a \`Transformer\` callback, which in turn
     * will be used to transform one or more nodes.
     */",
        ],
        "id": "TransformerFactory",
        "kind": "TypeAliasDeclaration",
        "name": "TransformerFactory",
        "signature": "type TransformerFactory<T extends Node> = (
    context: TransformationContext
) => Transformer<T>;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 3674,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3674",
        },
      },
      Object {
        "docs": Array [],
        "id": "TriviaSyntaxKind",
        "kind": "TypeAliasDeclaration",
        "name": "TriviaSyntaxKind",
        "signature": "type TriviaSyntaxKind =
    | SyntaxKind.SingleLineCommentTrivia
    | SyntaxKind.MultiLineCommentTrivia
    | SyntaxKind.NewLineTrivia
    | SyntaxKind.WhitespaceTrivia
    | SyntaxKind.ShebangTrivia
    | SyntaxKind.ConflictMarkerTrivia;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 481,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L481",
        },
      },
      Object {
        "docs": Array [],
        "id": "TypeOfTag",
        "kind": "TypeAliasDeclaration",
        "name": "TypeOfTag",
        "signature": "type TypeOfTag =
    | 'undefined'
    | 'number'
    | 'bigint'
    | 'boolean'
    | 'string'
    | 'symbol'
    | 'object'
    | 'function';",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 3157,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3157",
        },
      },
      Object {
        "docs": Array [],
        "id": "TypeOnlyCompatibleAliasDeclaration",
        "kind": "TypeAliasDeclaration",
        "name": "TypeOnlyCompatibleAliasDeclaration",
        "signature": "type TypeOnlyCompatibleAliasDeclaration =
    | ImportClause
    | NamespaceImport
    | ImportOrExportSpecifier;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 1671,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1671",
        },
      },
      Object {
        "docs": Array [],
        "id": "TypePredicate",
        "kind": "TypeAliasDeclaration",
        "name": "TypePredicate",
        "signature": "type TypePredicate =
    | ThisTypePredicate
    | IdentifierTypePredicate
    | AssertsThisTypePredicate
    | AssertsIdentifierTypePredicate;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 2342,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2342",
        },
      },
      Object {
        "docs": Array [],
        "id": "TypeReferenceType",
        "kind": "TypeAliasDeclaration",
        "name": "TypeReferenceType",
        "signature": "type TypeReferenceType = TypeReferenceNode | ExpressionWithTypeArguments;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 870,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L870",
        },
      },
      Object {
        "docs": Array [],
        "id": "TypeVariable",
        "kind": "TypeAliasDeclaration",
        "name": "TypeVariable",
        "signature": "type TypeVariable = TypeParameter | IndexedAccessType;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 2630,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2630",
        },
      },
      Object {
        "docs": Array [],
        "id": "UnionOrIntersectionTypeNode",
        "kind": "TypeAliasDeclaration",
        "name": "UnionOrIntersectionTypeNode",
        "signature": "type UnionOrIntersectionTypeNode = UnionTypeNode | IntersectionTypeNode;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 913,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L913",
        },
      },
      Object {
        "docs": Array [],
        "id": "UnparsedNode",
        "kind": "TypeAliasDeclaration",
        "name": "UnparsedNode",
        "signature": "type UnparsedNode =
    | UnparsedPrologue
    | UnparsedSourceText
    | UnparsedSyntheticReference;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 1977,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1977",
        },
      },
      Object {
        "docs": Array [],
        "id": "UnparsedSourceText",
        "kind": "TypeAliasDeclaration",
        "name": "UnparsedSourceText",
        "signature": "type UnparsedSourceText = UnparsedPrepend | UnparsedTextLike;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 1976,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L1976",
        },
      },
      Object {
        "docs": Array [],
        "id": "VariableLikeDeclaration",
        "kind": "TypeAliasDeclaration",
        "name": "VariableLikeDeclaration",
        "signature": "type VariableLikeDeclaration =
    | VariableDeclaration
    | ParameterDeclaration
    | BindingElement
    | PropertyDeclaration
    | PropertyAssignment
    | PropertySignature
    | JsxAttribute
    | ShorthandPropertyAssignment
    | EnumMember
    | JSDocPropertyTag
    | JSDocParameterTag;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 763,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L763",
        },
      },
      Object {
        "docs": Array [
          "/**
     * A function that accepts and possibly transforms a node.
     */",
        ],
        "id": "Visitor",
        "kind": "TypeAliasDeclaration",
        "name": "Visitor",
        "signature": "type Visitor = (node: Node) => VisitResult<Node>;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 3682,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3682",
        },
      },
      Object {
        "docs": Array [],
        "id": "VisitResult",
        "kind": "TypeAliasDeclaration",
        "name": "VisitResult",
        "signature": "type VisitResult<T extends Node> = T | T[] | undefined;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 3691,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3691",
        },
      },
      Object {
        "docs": Array [],
        "id": "WatchStatusReporter",
        "kind": "TypeAliasDeclaration",
        "name": "WatchStatusReporter",
        "signature": "type WatchStatusReporter = (
    diagnostic: Diagnostic,
    newLine: string,
    options: CompilerOptions,
    errorCount?: number
) => void;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4973,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4973",
        },
      },
      Object {
        "docs": Array [],
        "id": "WithMetadata",
        "kind": "TypeAliasDeclaration",
        "name": "WithMetadata",
        "signature": "type WithMetadata<T> = T & {
    metadata?: unknown;
};",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 5417,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L5417",
        },
      },
      Object {
        "docs": Array [],
        "id": "WriteFileCallback",
        "kind": "TypeAliasDeclaration",
        "name": "WriteFileCallback",
        "signature": "type WriteFileCallback = (
    fileName: string,
    data: string,
    writeByteOrderMark: boolean,
    onError?: (message: string) => void,
    sourceFiles?: readonly SourceFile[]
) => void;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 2042,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L2042",
        },
      },
    ],
    "variables": Array [
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.createArrowFunction\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "createArrowFunction",
        "kind": "VariableDeclaration",
        "name": "createArrowFunction",
        "signature": "const createArrowFunction: {
    (
        modifiers: readonly Modifier[] | undefined,
        typeParameters: readonly TypeParameterDeclaration[] | undefined,
        parameters: readonly ParameterDeclaration[],
        type: TypeNode | undefined,
        equalsGreaterThanToken: EqualsGreaterThanToken | undefined,
        body: ConciseBody
    ): ArrowFunction;
    (
        modifiers: readonly Modifier[] | undefined,
        typeParameters: readonly TypeParameterDeclaration[] | undefined,
        parameters: readonly ParameterDeclaration[],
        type: TypeNode | undefined,
        body: ConciseBody
    ): ArrowFunction;
};",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 7128,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L7128",
        },
        "type": "{ (modifiers: readonly Modifier[] | undefined, typeParameters: readonly TypeParameterDeclaration[] | undefined, parameters: readonly ParameterDeclaration[], type: TypeNode | undefined, equalsGreaterThanToken: EqualsGreaterThanToken | undefined, body: ConciseBody): ArrowFunction; (modifiers: readonly Modifier[] | undefined, typeParameters: readonly TypeParameterDeclaration[] | undefined, parameters: readonly ParameterDeclaration[], type: TypeNode | undefined, body: ConciseBody): ArrowFunction; }",
        "variableKind": "const",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.createConditional\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "createConditional",
        "kind": "VariableDeclaration",
        "name": "createConditional",
        "signature": "const createConditional: {
    (
        condition: Expression,
        whenTrue: Expression,
        whenFalse: Expression
    ): ConditionalExpression;
    (
        condition: Expression,
        questionToken: QuestionToken,
        whenTrue: Expression,
        colonToken: ColonToken,
        whenFalse: Expression
    ): ConditionalExpression;
};",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 7106,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L7106",
        },
        "type": "{ (condition: Expression, whenTrue: Expression, whenFalse: Expression): ConditionalExpression; (condition: Expression, questionToken: QuestionToken, whenTrue: Expression, colonToken: ColonToken, whenFalse: Expression): ConditionalExpression; }",
        "variableKind": "const",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.createImmediatelyInvokedArrowFunction\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "createImmediatelyInvokedArrowFunction",
        "kind": "VariableDeclaration",
        "name": "createImmediatelyInvokedArrowFunction",
        "signature": "const createImmediatelyInvokedArrowFunction: {
    (statements: readonly Statement[]): CallExpression;
    (
        statements: readonly Statement[],
        param: ParameterDeclaration,
        paramValue: Expression
    ): CallExpression;
};",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 7045,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L7045",
        },
        "type": "{ (statements: readonly Statement[]): CallExpression; (statements: readonly Statement[], param: ParameterDeclaration, paramValue: Expression): CallExpression; }",
        "variableKind": "const",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.createImmediatelyInvokedFunctionExpression\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "createImmediatelyInvokedFunctionExpression",
        "kind": "VariableDeclaration",
        "name": "createImmediatelyInvokedFunctionExpression",
        "signature": "const createImmediatelyInvokedFunctionExpression: {
    (statements: readonly Statement[]): CallExpression;
    (
        statements: readonly Statement[],
        param: ParameterDeclaration,
        paramValue: Expression
    ): CallExpression;
};",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 7040,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L7040",
        },
        "type": "{ (statements: readonly Statement[]): CallExpression; (statements: readonly Statement[], param: ParameterDeclaration, paramValue: Expression): CallExpression; }",
        "variableKind": "const",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.createStringLiteral\`, \`factory.createStringLiteralFromNode\`, \`factory.createNumericLiteral\`, \`factory.createBigIntLiteral\`, \`factory.createTrue\`, \`factory.createFalse\`, or the factory supplied by your transformation context instead. */",
        ],
        "id": "createLiteral",
        "kind": "VariableDeclaration",
        "name": "createLiteral",
        "signature": "const createLiteral: {
    (
        value:
            | string
            | StringLiteral
            | NoSubstitutionTemplateLiteral
            | NumericLiteral
            | Identifier
    ): StringLiteral;
    (value: number | PseudoBigInt): NumericLiteral;
    (value: boolean): BooleanLiteral;
    (value: string | number | PseudoBigInt | boolean): PrimaryExpression;
};",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 7078,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L7078",
        },
        "type": "{ (value: string | StringLiteral | NoSubstitutionTemplateLiteral | NumericLiteral | Identifier): StringLiteral; (value: number | PseudoBigInt): NumericLiteral; (value: boolean): BooleanLiteral; (value: string | number | PseudoBigInt | boolean): PrimaryExpression; }",
        "variableKind": "const",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.createNoSubstitutionTemplateLiteral\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "createNoSubstitutionTemplateLiteral",
        "kind": "VariableDeclaration",
        "name": "createNoSubstitutionTemplateLiteral",
        "signature": "const createNoSubstitutionTemplateLiteral: {
    (text: string, rawText?: string | undefined): NoSubstitutionTemplateLiteral;
    (text: string | undefined, rawText: string): NoSubstitutionTemplateLiteral;
};",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 6713,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6713",
        },
        "type": "{ (text: string, rawText?: string | undefined): NoSubstitutionTemplateLiteral; (text: string | undefined, rawText: string): NoSubstitutionTemplateLiteral; }",
        "variableKind": "const",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.createStringLiteral\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "createStringLiteral",
        "kind": "VariableDeclaration",
        "name": "createStringLiteral",
        "signature": "const createStringLiteral: {
    (text: string, isSingleQuote?: boolean | undefined): StringLiteral;
    (
        text: string,
        isSingleQuote?: boolean | undefined,
        hasExtendedUnicodeEscape?: boolean | undefined
    ): StringLiteral;
};",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 6445,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6445",
        },
        "type": "{ (text: string, isSingleQuote?: boolean | undefined): StringLiteral; (text: string, isSingleQuote?: boolean | undefined, hasExtendedUnicodeEscape?: boolean | undefined): StringLiteral; }",
        "variableKind": "const",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.createTaggedTemplate\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "createTaggedTemplate",
        "kind": "VariableDeclaration",
        "name": "createTaggedTemplate",
        "signature": "const createTaggedTemplate: {
    (tag: Expression, template: TemplateLiteral): TaggedTemplateExpression;
    (
        tag: Expression,
        typeArguments: readonly TypeNode[] | undefined,
        template: TemplateLiteral
    ): TaggedTemplateExpression;
};",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 7094,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L7094",
        },
        "type": "{ (tag: Expression, template: TemplateLiteral): TaggedTemplateExpression; (tag: Expression, typeArguments: readonly TypeNode[] | undefined, template: TemplateLiteral): TaggedTemplateExpression; }",
        "variableKind": "const",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.createTemplateHead\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "createTemplateHead",
        "kind": "VariableDeclaration",
        "name": "createTemplateHead",
        "signature": "const createTemplateHead: {
    (
        text: string,
        rawText?: string | undefined,
        templateFlags?: TokenFlags | undefined
    ): TemplateHead;
    (
        text: string | undefined,
        rawText: string,
        templateFlags?: TokenFlags | undefined
    ): TemplateHead;
};",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 6698,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6698",
        },
        "type": "{ (text: string, rawText?: string | undefined, templateFlags?: TokenFlags | undefined): TemplateHead; (text: string | undefined, rawText: string, templateFlags?: TokenFlags | undefined): TemplateHead; }",
        "variableKind": "const",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.createTemplateMiddle\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "createTemplateMiddle",
        "kind": "VariableDeclaration",
        "name": "createTemplateMiddle",
        "signature": "const createTemplateMiddle: {
    (
        text: string,
        rawText?: string | undefined,
        templateFlags?: TokenFlags | undefined
    ): TemplateMiddle;
    (
        text: string | undefined,
        rawText: string,
        templateFlags?: TokenFlags | undefined
    ): TemplateMiddle;
};",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 6703,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6703",
        },
        "type": "{ (text: string, rawText?: string | undefined, templateFlags?: TokenFlags | undefined): TemplateMiddle; (text: string | undefined, rawText: string, templateFlags?: TokenFlags | undefined): TemplateMiddle; }",
        "variableKind": "const",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.createTemplateTail\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "createTemplateTail",
        "kind": "VariableDeclaration",
        "name": "createTemplateTail",
        "signature": "const createTemplateTail: {
    (
        text: string,
        rawText?: string | undefined,
        templateFlags?: TokenFlags | undefined
    ): TemplateTail;
    (
        text: string | undefined,
        rawText: string,
        templateFlags?: TokenFlags | undefined
    ): TemplateTail;
};",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 6708,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6708",
        },
        "type": "{ (text: string, rawText?: string | undefined, templateFlags?: TokenFlags | undefined): TemplateTail; (text: string | undefined, rawText: string, templateFlags?: TokenFlags | undefined): TemplateTail; }",
        "variableKind": "const",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.createTypeOperatorNode\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "createTypeOperatorNode",
        "kind": "VariableDeclaration",
        "name": "createTypeOperatorNode",
        "signature": "const createTypeOperatorNode: {
    (type: TypeNode): TypeOperatorNode;
    (
        operator:
            | SyntaxKind.KeyOfKeyword
            | SyntaxKind.UniqueKeyword
            | SyntaxKind.ReadonlyKeyword,
        type: TypeNode
    ): TypeOperatorNode;
};",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 7089,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L7089",
        },
        "type": "{ (type: TypeNode): TypeOperatorNode; (operator: SyntaxKind.KeyOfKeyword | SyntaxKind.UniqueKeyword | SyntaxKind.ReadonlyKeyword, type: TypeNode): TypeOperatorNode; }",
        "variableKind": "const",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.createVariableDeclaration\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "createVariableDeclaration",
        "kind": "VariableDeclaration",
        "name": "createVariableDeclaration",
        "signature": "const createVariableDeclaration: {
    (
        name: string | BindingName,
        type?: TypeNode | undefined,
        initializer?: Expression | undefined
    ): VariableDeclaration;
    (
        name: string | BindingName,
        exclamationToken: ExclamationToken | undefined,
        type: TypeNode | undefined,
        initializer: Expression | undefined
    ): VariableDeclaration;
};",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 7138,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L7138",
        },
        "type": "{ (name: string | BindingName, type?: TypeNode | undefined, initializer?: Expression | undefined): VariableDeclaration; (name: string | BindingName, exclamationToken: ExclamationToken | undefined, type: TypeNode | undefined, initializer: Expression | undefined): VariableDeclaration; }",
        "variableKind": "const",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.createYield\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "createYield",
        "kind": "VariableDeclaration",
        "name": "createYield",
        "signature": "const createYield: {
    (expression?: Expression | undefined): YieldExpression;
    (
        asteriskToken: AsteriskToken | undefined,
        expression: Expression
    ): YieldExpression;
};",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 7111,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L7111",
        },
        "type": "{ (expression?: Expression | undefined): YieldExpression; (asteriskToken: AsteriskToken | undefined, expression: Expression): YieldExpression; }",
        "variableKind": "const",
      },
      Object {
        "docs": Array [],
        "id": "factory",
        "kind": "VariableDeclaration",
        "name": "factory",
        "signature": "const factory: NodeFactory;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4248,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4248",
        },
        "type": "NodeFactory",
        "variableKind": "const",
      },
      Object {
        "docs": Array [
          "/** The version of the language service API */",
        ],
        "id": "servicesVersion",
        "kind": "VariableDeclaration",
        "name": "servicesVersion",
        "signature": "const servicesVersion: string;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 6413,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L6413",
        },
        "type": "string",
        "variableKind": "const",
      },
      Object {
        "docs": Array [],
        "id": "sys",
        "kind": "VariableDeclaration",
        "name": "sys",
        "signature": "let sys: System;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 3935,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L3935",
        },
        "type": "System",
        "variableKind": "let",
      },
      Object {
        "docs": Array [],
        "id": "unchangedTextChangeRange",
        "kind": "VariableDeclaration",
        "name": "unchangedTextChangeRange",
        "signature": "let unchangedTextChangeRange: TextChangeRange;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 4019,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L4019",
        },
        "type": "TextChangeRange",
        "variableKind": "let",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.updateArrowFunction\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "updateArrowFunction",
        "kind": "VariableDeclaration",
        "name": "updateArrowFunction",
        "signature": "const updateArrowFunction: {
    (
        node: ArrowFunction,
        modifiers: readonly Modifier[] | undefined,
        typeParameters: readonly TypeParameterDeclaration[] | undefined,
        parameters: readonly ParameterDeclaration[],
        type: TypeNode | undefined,
        equalsGreaterThanToken: EqualsGreaterThanToken,
        body: ConciseBody
    ): ArrowFunction;
    (
        node: ArrowFunction,
        modifiers: readonly Modifier[] | undefined,
        typeParameters: readonly TypeParameterDeclaration[] | undefined,
        parameters: readonly ParameterDeclaration[],
        type: TypeNode | undefined,
        body: ConciseBody
    ): ArrowFunction;
};",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 7133,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L7133",
        },
        "type": "{ (node: ArrowFunction, modifiers: readonly Modifier[] | undefined, typeParameters: readonly TypeParameterDeclaration[] | undefined, parameters: readonly ParameterDeclaration[], type: TypeNode | undefined, equalsGreaterThanToken: EqualsGreaterThanToken, body: ConciseBody): ArrowFunction; (node: ArrowFunction, modifiers: readonly Modifier[] | undefined, typeParameters: readonly TypeParameterDeclaration[] | undefined, parameters: readonly ParameterDeclaration[], type: TypeNode | undefined, body: ConciseBody): ArrowFunction; }",
        "variableKind": "const",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.updateTaggedTemplate\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "updateTaggedTemplate",
        "kind": "VariableDeclaration",
        "name": "updateTaggedTemplate",
        "signature": "const updateTaggedTemplate: {
    (
        node: TaggedTemplateExpression,
        tag: Expression,
        template: TemplateLiteral
    ): TaggedTemplateExpression;
    (
        node: TaggedTemplateExpression,
        tag: Expression,
        typeArguments: readonly TypeNode[] | undefined,
        template: TemplateLiteral
    ): TaggedTemplateExpression;
};",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 7099,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L7099",
        },
        "type": "{ (node: TaggedTemplateExpression, tag: Expression, template: TemplateLiteral): TaggedTemplateExpression; (node: TaggedTemplateExpression, tag: Expression, typeArguments: readonly TypeNode[] | undefined, template: TemplateLiteral): TaggedTemplateExpression; }",
        "variableKind": "const",
      },
      Object {
        "docs": Array [
          "/** @deprecated Use \`factory.updateVariableDeclaration\` or the factory supplied by your transformation context instead. */",
        ],
        "id": "updateVariableDeclaration",
        "kind": "VariableDeclaration",
        "name": "updateVariableDeclaration",
        "signature": "const updateVariableDeclaration: {
    (
        node: VariableDeclaration,
        name: BindingName,
        type: TypeNode | undefined,
        initializer: Expression | undefined
    ): VariableDeclaration;
    (
        node: VariableDeclaration,
        name: BindingName,
        exclamationToken: ExclamationToken | undefined,
        type: TypeNode | undefined,
        initializer: Expression | undefined
    ): VariableDeclaration;
};",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 7143,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L7143",
        },
        "type": "{ (node: VariableDeclaration, name: BindingName, type: TypeNode | undefined, initializer: Expression | undefined): VariableDeclaration; (node: VariableDeclaration, name: BindingName, exclamationToken: ExclamationToken | undefined, type: TypeNode | undefined, initializer: Expression | undefined): VariableDeclaration; }",
        "variableKind": "const",
      },
      Object {
        "docs": Array [
          "/** The version of the TypeScript compiler release */",
        ],
        "id": "version",
        "kind": "VariableDeclaration",
        "name": "version",
        "signature": "const version: string;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 19,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L19",
        },
        "type": "string",
        "variableKind": "const",
      },
      Object {
        "docs": Array [],
        "id": "versionMajorMinor",
        "kind": "VariableDeclaration",
        "name": "versionMajorMinor",
        "signature": "const versionMajorMinor: string;",
        "source": Object {
          "filename": "lib/typescript.d.ts",
          "line": 17,
          "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts#L17",
        },
        "type": "string",
        "variableKind": "const",
      },
    ],
  },
  "files": Array [
    Object {
      "filename": "lib/typescript.d.ts",
      "isIndexFile": true,
      "url": "https://github.com/Microsoft/TypeScript/tree/v4.1.3/lib/typescript.d.ts",
    },
  ],
  "overview": undefined,
}
`;
