// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`camelcase > 6.2.0 1`] = `
{
  "declarations": {
    "classes": [],
    "enums": [],
    "functions": [
      {
        "docs": [
          "/**
Convert a dash/dot/underscore/space separated string to camelCase or PascalCase: \`foo-bar\` → \`fooBar\`.

Correctly handles Unicode strings.

@param input - String to convert to camel case.

@example
\`\`\`
import camelCase = require('camelcase');

camelCase('foo-bar');
//=> 'fooBar'

camelCase('foo_bar');
//=> 'fooBar'

camelCase('Foo-Bar');
//=> 'fooBar'

camelCase('розовый_пушистый_единороги');
//=> 'розовыйПушистыйЕдинороги'

camelCase('Foo-Bar', {pascalCase: true});
//=> 'FooBar'

camelCase('--foo.bar', {pascalCase: false});
//=> 'fooBar'

camelCase('Foo-BAR', {preserveConsecutiveUppercase: true});
//=> 'fooBAR'

camelCase('fooBAR', {pascalCase: true, preserveConsecutiveUppercase: true}));
//=> 'FooBAR'

camelCase('foo bar');
//=> 'fooBar'

console.log(process.argv[3]);
//=> '--foo-bar'
camelCase(process.argv[3]);
//=> 'fooBar'

camelCase(['foo', 'bar']);
//=> 'fooBar'

camelCase(['__foo__', '--bar'], {pascalCase: true});
//=> 'FooBar'

camelCase(['foo', 'BAR'], {pascalCase: true, preserveConsecutiveUppercase: true})
//=> 'FooBAR'

camelCase('lorem-ipsum', {locale: 'en-US'});
//=> 'loremIpsum'
\`\`\`
*/",
        ],
        "id": "camelcase",
        "kind": "FunctionDeclaration",
        "name": "camelcase",
        "signature": "camelcase: (
    input: string | readonly string[],
    options?: camelcase.Options
) => string;",
        "source": {
          "filename": "index.d.ts",
          "line": 96,
          "unpkgURL": "https://unpkg.com/browse/camelcase@6.2.0/index.d.ts#L96",
          "url": "https://github.com/sindresorhus/camelcase/tree/1321775c740c20bd93d0bdbd844703464e0e6de4/index.d.ts#L96",
        },
        "type": "(input: string | readonly string[], options?: camelcase.Options) => string",
      },
    ],
    "interfaces": [
      {
        "docs": [],
        "id": "Options",
        "kind": "InterfaceDeclaration",
        "members": {
          "callSignatures": [],
          "constructSignatures": [],
          "indexSignatures": [],
          "methods": [],
          "properties": [
            {
              "docs": [
                "/**
		The locale parameter indicates the locale to be used to convert to upper/lower case according to any locale-specific case mappings. If multiple locales are given in an array, the best available locale is used.

		Default: The host environment’s current locale.

		@example
		\`\`\`
		import camelCase = require('camelcase');

		camelCase('lorem-ipsum', {locale: 'en-US'});
		//=> 'loremIpsum'
		camelCase('lorem-ipsum', {locale: 'tr-TR'});
		//=> 'loremİpsum'
		camelCase('lorem-ipsum', {locale: ['en-US', 'en-GB']});
		//=> 'loremIpsum'
		camelCase('lorem-ipsum', {locale: ['tr', 'TR', 'tr-TR']});
		//=> 'loremİpsum'
		\`\`\`
		*/",
              ],
              "id": "Options.locale",
              "isOptional": true,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "locale",
              "signature": "readonly locale?: string | readonly string[];",
              "source": {
                "filename": "index.d.ts",
                "line": 36,
                "unpkgURL": "https://unpkg.com/browse/camelcase@6.2.0/index.d.ts#L36",
                "url": "https://github.com/sindresorhus/camelcase/tree/1321775c740c20bd93d0bdbd844703464e0e6de4/index.d.ts#L36",
              },
              "type": "string | readonly string[]",
            },
            {
              "docs": [
                "/**
		Uppercase the first character: \`foo-bar\` → \`FooBar\`.

		@default false
		*/",
              ],
              "id": "Options.pascalCase",
              "isOptional": true,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "pascalCase",
              "signature": "readonly pascalCase?: boolean;",
              "source": {
                "filename": "index.d.ts",
                "line": 8,
                "unpkgURL": "https://unpkg.com/browse/camelcase@6.2.0/index.d.ts#L8",
                "url": "https://github.com/sindresorhus/camelcase/tree/1321775c740c20bd93d0bdbd844703464e0e6de4/index.d.ts#L8",
              },
              "type": "boolean",
            },
            {
              "docs": [
                "/**
		Preserve the consecutive uppercase characters: \`foo-BAR\` → \`FooBAR\`.

		@default false
		*/",
              ],
              "id": "Options.preserveConsecutiveUppercase",
              "isOptional": true,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "preserveConsecutiveUppercase",
              "signature": "readonly preserveConsecutiveUppercase?: boolean;",
              "source": {
                "filename": "index.d.ts",
                "line": 15,
                "unpkgURL": "https://unpkg.com/browse/camelcase@6.2.0/index.d.ts#L15",
                "url": "https://github.com/sindresorhus/camelcase/tree/1321775c740c20bd93d0bdbd844703464e0e6de4/index.d.ts#L15",
              },
              "type": "boolean",
            },
          ],
        },
        "name": "Options",
        "signature": "interface Options {}",
        "source": {
          "filename": "index.d.ts",
          "line": 2,
          "unpkgURL": "https://unpkg.com/browse/camelcase@6.2.0/index.d.ts#L2",
          "url": "https://github.com/sindresorhus/camelcase/tree/1321775c740c20bd93d0bdbd844703464e0e6de4/index.d.ts#L2",
        },
      },
    ],
    "namespaces": [],
    "typeAliases": [],
    "variables": [],
  },
  "files": [
    {
      "filename": "index.d.ts",
      "isIndexFile": true,
      "unpkgURL": "https://unpkg.com/browse/camelcase@6.2.0/index.d.ts",
      "url": "https://github.com/sindresorhus/camelcase/tree/1321775c740c20bd93d0bdbd844703464e0e6de4/index.d.ts",
    },
  ],
  "overview": undefined,
}
`;
