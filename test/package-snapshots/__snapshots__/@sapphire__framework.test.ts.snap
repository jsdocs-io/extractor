// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`@sapphire/framework 1.0.0-alpha.3 1`] = `
Object {
  "declarations": Object {
    "classes": Array [
      Object {
        "constructors": Array [
          Object {
            "docs": Array [],
            "id": "Args.0-constructor",
            "kind": "ClassConstructorDeclaration",
            "name": "constructor",
            "signature": "constructor(message: any, command: Command<Args>, parser: any);",
            "source": Object {
              "filename": "dist/index.d.ts",
              "line": 165,
              "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L165",
              "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L165",
            },
          },
        ],
        "docs": Array [
          "/**
 * The argument parser to be used in [[Command]].
 */",
        ],
        "id": "Args",
        "isAbstract": false,
        "kind": "ClassDeclaration",
        "members": Object {
          "methods": Array [
            Object {
              "docs": Array [
                "/**
     * Constructs an [[ArgumentError]] with [[ArgumentError#type]] set to the [[IArgument<T>#name]].
     * @param argument The argument that caused the rejection.
     * @param parameter The parameter that triggered the argument.
     * @param message The description message for the rejection.
     */",
                "/**
     * Constructs an [[ArgumentError]] with a custom type.
     * @param argument The argument that caused the rejection.
     * @param parameter The parameter that triggered the argument.
     * @param type The identifier for the error.
     * @param message The description message for the rejection.
     */",
              ],
              "id": "Args.error",
              "isStatic": true,
              "kind": "ClassMethodDeclaration",
              "name": "error",
              "signature": "static error: {
    <T>(
        argument: IArgument<T>,
        parameter: string,
        message: string
    ): ArgumentError<T>;
    <T>(
        argument: IArgument<T>,
        parameter: string,
        type: string,
        message: string
    ): ArgumentError<T>;
};",
              "source": Object {
                "filename": "dist/index.d.ts",
                "line": 607,
                "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L607",
                "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L607",
              },
              "type": "{ <T>(argument: IArgument<T>, parameter: string, message: string): ArgumentError<T>; <T>(argument: IArgument<T>, parameter: string, type: string, message: string): ArgumentError<T>; }",
            },
            Object {
              "docs": Array [
                "/**
     * Checks if one or more flag were given.
     * @param keys The name(s) of the flag.
     * @example
     * \`\`\`typescript
     * // Suppose args are from '--f --g'.
     * console.log(args.getFlags('f'));
     * >>> true
     *
     * console.log(args.getFlags('g', 'h'));
     * >>> true
     *
     * console.log(args.getFlags('h'));
     * >>> false
     * \`\`\`
     */",
              ],
              "id": "Args.getFlags",
              "isStatic": false,
              "kind": "ClassMethodDeclaration",
              "name": "getFlags",
              "signature": "getFlags: (...keys: readonly string[]) => boolean;",
              "source": Object {
                "filename": "dist/index.d.ts",
                "line": 542,
                "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L542",
                "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L542",
              },
              "type": "(...keys: readonly string[]) => boolean",
            },
            Object {
              "docs": Array [
                "/**
     * Gets the last value of one or more options.
     * @param keys The name(s) of the option.
     * @example
     * \`\`\`typescript
     * // Suppose args are from '--a=1 --b=2 --c=3'.
     * console.log(args.getOption('a'));
     * >>> '1'
     *
     * console.log(args.getOption('b', 'c'));
     * >>> '2'
     *
     * console.log(args.getOption('d'));
     * >>> null
     * \`\`\`
     */",
              ],
              "id": "Args.getOption",
              "isStatic": false,
              "kind": "ClassMethodDeclaration",
              "name": "getOption",
              "signature": "getOption: (...keys: readonly string[]) => string | null;",
              "source": Object {
                "filename": "dist/index.d.ts",
                "line": 559,
                "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L559",
                "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L559",
              },
              "type": "(...keys: readonly string[]) => string | null",
            },
            Object {
              "docs": Array [
                "/**
     * Gets all the values of one or more option.
     * @param keys The name(s) of the option.
     * @example
     * \`\`\`typescript
     * // Suppose args are from '--a=1 --a=1 --b=2 --c=3'.
     * console.log(args.getOptions('a'));
     * >>> ['1', '1']
     *
     * console.log(args.getOptions('b', 'c'));
     * >>> ['2', '3']
     *
     * console.log(args.getOptions('d'));
     * >>> null
     * \`\`\`
     */",
              ],
              "id": "Args.getOptions",
              "isStatic": false,
              "kind": "ClassMethodDeclaration",
              "name": "getOptions",
              "signature": "getOptions: (...keys: readonly string[]) => string[] | null;",
              "source": Object {
                "filename": "dist/index.d.ts",
                "line": 576,
                "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L576",
                "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L576",
              },
              "type": "(...keys: readonly string[]) => string[] | null",
            },
            Object {
              "docs": Array [
                "/**
     * Converts a callback into an usable argument.
     * @param cb The callback to convert into an [[IArgument]].
     */",
              ],
              "id": "Args.make",
              "isStatic": true,
              "kind": "ClassMethodDeclaration",
              "name": "make",
              "signature": "static make: <T>(cb: IArgument<T>['run'], name?: string) => IArgument<T>;",
              "source": Object {
                "filename": "dist/index.d.ts",
                "line": 600,
                "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L600",
                "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L600",
              },
              "type": "<T>(cb: IArgument<T>['run'], name?: string) => IArgument<T>",
            },
            Object {
              "docs": Array [
                "/**
     * Similar to [[Args.nextMaybe]] but returns the value on success, null otherwise.
     * @example
     * \`\`\`typescript
     * // !numbers 1 2 3
     *
     * console.log(args.next());
     * // -> '1'
     * \`\`\`
     */",
                "/**
     * Similar to [[Args.nextMaybe]] but returns the value on success, null otherwise.
     * @typeparam T Output type of the [[ArgsNextCallback callback]].
     * @param cb Gives an option of either the resulting value, or nothing if failed.
     * @example
     * \`\`\`typescript
     * // !numbers 1 2 3
     * const parse = (x: string) => {
     *   const n = Number(x);
     *   return Number.isNaN(n) ? none() : some(n);
     * };
     *
     * console.log(args.nextMaybe(parse));
     * // -> 1
     * \`\`\`
     */",
              ],
              "id": "Args.next",
              "isStatic": false,
              "kind": "ClassMethodDeclaration",
              "name": "next",
              "signature": "next: { (): string; <T>(cb: ArgsNextCallback<T>): T };",
              "source": Object {
                "filename": "dist/index.d.ts",
                "line": 508,
                "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L508",
                "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L508",
              },
              "type": "{ (): string; <T>(cb: ArgsNextCallback<T>): T; }",
            },
            Object {
              "docs": Array [
                "/**
     * Retrieves the next raw argument from the parser.
     * @example
     * \`\`\`typescript
     * // !numbers 1 2 3
     *
     * console.log(args.nextMaybe());
     * // -> { exists: true, value: '1' }
     * \`\`\`
     */",
                "/**
     * Retrieves the value of the next unused ordered token, but only if it could be transformed.
     * That token will now be consider used if the transformation succeeds.
     * @typeparam T Output type of the [[ArgsNextCallback callback]].
     * @param cb Gives an option of either the resulting value, or nothing if failed.
     * @example
     * \`\`\`typescript
     * // !numbers 1 2 3
     * const parse = (x: string) => {
     *   const n = Number(x);
     *   return Number.isNaN(n) ? none() : some(n);
     * };
     *
     * console.log(args.nextMaybe(parse));
     * // -> { exists: true, value: 1 }
     * \`\`\`
     */",
              ],
              "id": "Args.nextMaybe",
              "isStatic": false,
              "kind": "ClassMethodDeclaration",
              "name": "nextMaybe",
              "signature": "nextMaybe: { (): Maybe<string>; <T>(cb: ArgsNextCallback<T>): any };",
              "source": Object {
                "filename": "dist/index.d.ts",
                "line": 479,
                "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L479",
                "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L479",
              },
              "type": "{ (): Maybe<string>; <T>(cb: ArgsNextCallback<T>): any; }",
            },
            Object {
              "docs": Array [
                "/**
     * Similar to [[Args.peekResult]] but returns the value on success, throwing otherwise.
     * @param type The function, custom argument, or argument name.
     * @example
     * \`\`\`typescript
     * // !bigintsumthensquarefirst 25 50 75
     * const resolver = Args.make((arg) => {
     *   try {
     *     return ok(BigInt(arg));
     *   } catch {
     *     return err(new UserError('InvalidBigInt', 'You must specify a valid number for a bigint.'));
     *   }
     * });
     *
     * const peeked = await args.peek(() => args.repeatResult(resolver));
     * await message.channel.send(\`Sum: **\${peeked.reduce((x, y) => x + y, 0)}**\`); // Sum: 150
     *
     * const first = await args.pick(resolver);
     * await message.channel.send(\`First bigint squared: \${first**2n}\`); // First bigint squared: 625
     * \`\`\`
     */",
                "/**
     * Similar to [[Args.peekResult]] but returns the value on success, throwing otherwise.
     * @param type The function, custom argument, or argument name.
     * @example
     * \`\`\`typescript
     * // !createdat 730159185517477900
     * const snowflakeResolver = Args.make((arg) =>
     * 	 SnowflakeRegex.test(arg) ? ok(BigInt(arg)) : err(new UserError('InvalidSnowflake', 'You must specify a valid snowflake.'));
     * );
     *
     * const snowflake = await args.peek(snowflakeResolver);
     * const timestamp = Number((snowflake >> 22n) + DiscordSnowflake.Epoch);
     * const createdAt = new Date(timestamp);
     *
     * await message.channel.send(
     *   \`The snowflake \${snowflake} was registered on \${createdAt.toUTCString()}.\`
     * ); // The snowflake 730159185517477900 was registered on Tue, 07 Jul 2020 20:31:55 GMT.
     *
     * const id = await args.pick('string');
     * await message.channel.send(\`Your ID, reversed: \${id.split('').reverse().join('')}\`); // Your ID, reversed: 009774715581951037
     * \`\`\`
     */",
                "/**
     * Similar to [[Args.peekResult]] but returns the value on success, throwing otherwise.
     * @param type The function, custom argument, or argument name.
     * @example
     * \`\`\`typescript
     * // !messagelink https://discord.com/channels/737141877803057244/737142209639350343/791843123898089483
     * const remoteMessage = await args.peek('message');
     * await message.channel.send(
     *   \`\${remoteMessage.author.tag}: \${remoteMessage.content}\`
     * ); // RealShadowNova#7462: Yeah, Sapphire has been a great experience so far, especially being able to help and contribute.
     *
     * const url = await args.pick('hyperlink');
     * await message.channel.send(\`Hostname: \${url.hostname}\`); // Hostname: discord.com
     * \`\`\`
     */",
              ],
              "id": "Args.peek",
              "isStatic": false,
              "kind": "ClassMethodDeclaration",
              "name": "peek",
              "signature": "peek: {
    <T>(type: () => ArgumentResult<T>): Promise<T>;
    <T>(type: IArgument<T>, options?: ArgOptions): Promise<T>;
    <K extends keyof ArgType>(
        type: K | (() => any),
        options?: ArgOptions
    ): Promise<ArgType[K]>;
};",
              "source": Object {
                "filename": "dist/index.d.ts",
                "line": 429,
                "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L429",
                "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L429",
              },
              "type": "{ <T>(type: () => ArgumentResult<T>): Promise<T>; <T>(type: IArgument<T>, options?: ArgOptions): Promise<T>; <K extends keyof ArgType>(type: K | (() => any), options?: ArgOptions): Promise<ArgType[K]>; }",
            },
            Object {
              "docs": Array [
                "/**
     * Peeks the following parameter(s) without advancing the parser's state.
     * Passing a function as a parameter allows for returning [[Args.pickResult]], [[Args.repeatResult]],
     * or [[Args.restResult]]; otherwise, passing the custom argument or the argument type with options
     * will use [[Args.pickResult]] and only peek a single argument.
     * @param type The function, custom argument, or argument name.
     * @example
     * \`\`\`typescript
     * // !reversedandscreamfirst hello world
     * const resolver = Args.make((arg) => ok(arg.split('').reverse().join('')));
     *
     * const result = await args.peekResult(() => args.repeatResult(resolver));
     * if (isOk(result)) await message.channel.send(
     *   \`Reversed \${result.value.length} word(s): \${result.value.join(' ')}\`
     * ); // Reversed 2 word(s): olleh dlrow
     *
     * const firstWord = await args.pickResult('string');
     * if (isOk(firstWord)) await message.channel.send(firstWord.value.toUpperCase()); // HELLO
     * \`\`\`
     */",
                "/**
     * Peeks the following parameter(s) without advancing the parser's state.
     * Passing a function as a parameter allows for returning [[Args.pickResult]], [[Args.repeatResult]],
     * or [[Args.restResult]]; otherwise, passing the custom argument or the argument type with options
     * will use [[Args.pickResult]] and only peek a single argument.
     * @param type The function, custom argument, or argument name.
     * @wxample
     * \`\`\`typescript
     * // !reverseandscreamfirst sapphire project
     * const resolver = Args.make((arg) => ok(arg.split('').reverse().join('')));
     *
     * const peekedWord = await args.peekResult(resolver);
     * if (isOk(peekedWord)) await message.channel.send(peekedWord.value); // erihppas
     *
     * const firstWord = await args.pickResult('string');
     * if (isOk(firstWord)) await message.channel.send(firstWord.value.toUpperCase()); // SAPPHIRE
     * \`\`\`
     */",
                "/**
     * Peeks the following parameter(s) without advancing the parser's state.
     * Passing a function as a parameter allows for returning [[Args.pickResult]], [[Args.repeatResult]],
     * or [[Args.restResult]]; otherwise, passing the custom argument or the argument type with options
     * will use [[Args.pickResult]] and only peek a single argument.
     * @param type The function, custom argument, or argument name.
     * @example
     * \`\`\`typescript
     * // !datethenaddtwo 1608867472611
     * const date = await args.peekResult('date');
     * if (isOk(date)) await message.channel.send(
     *   \`Your date (in UTC): \${date.value.toUTCString()}\`
     * ); // Your date (in UTC): Fri, 25 Dec 2020 03:37:52 GMT
     *
     * const result = await args.pickResult('number', { maximum: Number.MAX_SAFE_INTEGER - 2 });
     * if (isOk(result)) await message.channel.send(\`Your number plus two: \${result.value + 2}\`); // Your number plus two: 1608867472613
     * \`\`\`
     */",
              ],
              "id": "Args.peekResult",
              "isStatic": false,
              "kind": "ClassMethodDeclaration",
              "name": "peekResult",
              "signature": "peekResult: {
    <T>(type: () => ArgumentResult<T>): Promise<Result<T, UserError>>;
    <T>(type: IArgument<T>, options?: ArgOptions): Promise<any>;
    <K extends keyof ArgType>(
        type: K | (() => any),
        options?: ArgOptions
    ): Promise<any>;
};",
              "source": Object {
                "filename": "dist/index.d.ts",
                "line": 369,
                "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L369",
                "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L369",
              },
              "type": "{ <T>(type: () => ArgumentResult<T>): Promise<Result<T, UserError>>; <T>(type: IArgument<T>, options?: ArgOptions): Promise<any>; <K extends keyof ArgType>(type: K | (() => any), options?: ArgOptions): Promise<any>; }",
            },
            Object {
              "docs": Array [
                "/**
     * Similar to [[Args.pickResult]] but returns the value on success, throwing otherwise.
     * @param type The type of the argument.
     * @example
     * \`\`\`typescript
     * // !square 5
     * const resolver = Args.make((arg) => {
     *   const parsed = Number(argument);
     *   if (Number.isNaN(parsed)) return err(new UserError('ArgumentNumberNaN', 'You must write a valid number.'));
     *   return ok(parsed);
     * });
     * const a = await args.pick(resolver);
     *
     * await message.channel.send(\`The result is: \${a ** 2}!\`);
     * // Sends \\"The result is: 25\\"
     * \`\`\`
     */",
                "/**
     * Similar to [[Args.pickResult]] but returns the value on success, throwing otherwise.
     * @param type The type of the argument.
     * @example
     * \`\`\`typescript
     * // !add 1 2
     * const a = await args.pick('integer');
     * const b = await args.pick('integer');
     * await message.channel.send(\`The result is: \${a + b}!\`);
     * // Sends \\"The result is: 3\\"
     * \`\`\`
     */",
              ],
              "id": "Args.pick",
              "isStatic": false,
              "kind": "ClassMethodDeclaration",
              "name": "pick",
              "signature": "pick: {
    <T>(type: IArgument<T>, options?: ArgOptions): Promise<T>;
    <K extends keyof ArgType>(type: K, options?: ArgOptions): Promise<
        ArgType[K]
    >;
};",
              "source": Object {
                "filename": "dist/index.d.ts",
                "line": 223,
                "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L223",
                "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L223",
              },
              "type": "{ <T>(type: IArgument<T>, options?: ArgOptions): Promise<T>; <K extends keyof ArgType>(type: K, options?: ArgOptions): Promise<ArgType[K]>; }",
            },
            Object {
              "docs": Array [
                "/**
     * Retrieves the next parameter and parses it. Advances index on success.
     * @param type The type of the argument.
     * @example
     * \`\`\`typescript
     * // !square 5
     * const resolver = Args.make((arg) => {
     *   const parsed = Number(argument);
     *   if (Number.isNaN(parsed)) return err(new UserError('ArgumentNumberNaN', 'You must write a valid number.'));
     *   return ok(parsed);
     * });
     * const a = await args.pickResult(resolver);
     * if (!a.success) throw new UserError('ArgumentNumberNaN', 'You must write a valid number.');
     *
     * await message.channel.send(\`The result is: \${a.value ** 2}!\`);
     * // Sends \\"The result is: 25\\"
     * \`\`\`
     */",
                "/**
     * Retrieves the next parameter and parses it. Advances index on success.
     * @param type The type of the argument.
     * @example
     * \`\`\`typescript
     * // !add 1 2
     * const a = await args.pickResult('integer');
     * if (!a.success) throw new UserError('AddArgumentError', 'You must write two numbers, but the first one did not match.');
     *
     * const b = await args.pickResult('integer');
     * if (!b.success) throw new UserError('AddArgumentError', 'You must write two numbers, but the second one did not match.');
     *
     * await message.channel.send(\`The result is: \${a.value + b.value}!\`);
     * // Sends \\"The result is: 3\\"
     * \`\`\`
     */",
              ],
              "id": "Args.pickResult",
              "isStatic": false,
              "kind": "ClassMethodDeclaration",
              "name": "pickResult",
              "signature": "pickResult: {
    <T>(type: IArgument<T>, options?: ArgOptions): Promise<Result<T, UserError>>;
    <K extends keyof ArgType>(type: K, options?: ArgOptions): Promise<any>;
};",
              "source": Object {
                "filename": "dist/index.d.ts",
                "line": 188,
                "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L188",
                "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L188",
              },
              "type": "{ <T>(type: IArgument<T>, options?: ArgOptions): Promise<Result<T, UserError>>; <K extends keyof ArgType>(type: K, options?: ArgOptions): Promise<any>; }",
            },
            Object {
              "docs": Array [
                "/**
     * Similar to [[Args.repeatResult]] but returns the value on success, throwing otherwise.
     * @param type The type of the argument.
     * @example
     * \`\`\`typescript
     * // !reverse-each 2 Hello World!
     * const resolver = Args.make((arg) => ok(arg.split('').reverse()));
     * const result = await args.repeat(resolver, { times: 5 });
     * await message.channel.send(\`You have written \${result.length} word(s): \${result.join(' ')}\`);
     * // Sends \\"You have written 2 word(s): Hello World!\\"
     * \`\`\`
     */",
                "/**
     * Similar to [[Args.repeatResult]] but returns the value on success, throwing otherwise.
     * @param type The type of the argument.
     * @example
     * \`\`\`typescript
     * // !add 2 Hello World!
     * const words = await args.repeat('string', { times: 5 });
     * await message.channel.send(\`You have written \${words.length} word(s): \${words.join(' ')}\`);
     * // Sends \\"You have written 2 word(s): Hello World!\\"
     * \`\`\`
     */",
              ],
              "id": "Args.repeat",
              "isStatic": false,
              "kind": "ClassMethodDeclaration",
              "name": "repeat",
              "signature": "repeat: {
    <T>(type: IArgument<T>, options?: RepeatArgOptions): Promise<T[]>;
    <K extends keyof ArgType>(type: K, options?: RepeatArgOptions): Promise<
        ArgType[K][]
    >;
};",
              "source": Object {
                "filename": "dist/index.d.ts",
                "line": 336,
                "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L336",
                "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L336",
              },
              "type": "{ <T>(type: IArgument<T>, options?: RepeatArgOptions): Promise<T[]>; <K extends keyof ArgType>(type: K, options?: RepeatArgOptions): Promise<ArgType[K][]>; }",
            },
            Object {
              "docs": Array [
                "/**
     * Retrieves all the following arguments.
     * @param type The type of the argument.
     * @example
     * \`\`\`typescript
     * // !add 2 Hello World!
     * const resolver = Args.make((arg) => ok(arg.split('').reverse()));
     * const result = await args.repeatResult(resolver, { times: 5 });
     * if (!result.success) throw new UserError('CountArgumentError', 'You must write up to 5 words.');
     *
     * await message.channel.send(\`You have written \${result.value.length} word(s): \${result.value.join(' ')}\`);
     * // Sends \\"You have written 2 word(s): olleH !dlroW\\"
     * \`\`\`
     */",
                "/**
     * Retrieves all the following arguments.
     * @param type The type of the argument.
     * @example
     * \`\`\`typescript
     * // !reverse-each 2 Hello World!
     * const result = await args.repeatResult('string', { times: 5 });
     * if (!result.success) throw new UserError('CountArgumentError', 'You must write up to 5 words.');
     *
     * await message.channel.send(\`You have written \${result.value.length} word(s): \${result.value.join(' ')}\`);
     * // Sends \\"You have written 2 word(s): Hello World!\\"
     * \`\`\`
     */",
              ],
              "id": "Args.repeatResult",
              "isStatic": false,
              "kind": "ClassMethodDeclaration",
              "name": "repeatResult",
              "signature": "repeatResult: {
    <T>(type: IArgument<T>, options?: RepeatArgOptions): Promise<
        Result<T[], UserError>
    >;
    <K extends keyof ArgType>(type: K, options?: RepeatArgOptions): Promise<any>;
};",
              "source": Object {
                "filename": "dist/index.d.ts",
                "line": 309,
                "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L309",
                "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L309",
              },
              "type": "{ <T>(type: IArgument<T>, options?: RepeatArgOptions): Promise<Result<T[], UserError>>; <K extends keyof ArgType>(type: K, options?: RepeatArgOptions): Promise<any>; }",
            },
            Object {
              "docs": Array [
                "/**
     * Similar to [[Args.restResult]] but returns the value on success, throwing otherwise.
     * @param type The type of the argument.
     * @example
     * \`\`\`typescript
     * // !reverse Hello world!
     * const resolver = Args.make((arg) => ok(arg.split('').reverse()));
     * const a = await args.rest(resolver);
     * await message.channel.send(\`The reversed value is... \${a}\`);
     * // Sends \\"The reversed value is... !dlrow olleH\\"
     * \`\`\`
     */",
                "/**
     * Similar to [[Args.restResult]] but returns the value on success, throwing otherwise.
     * @param type The type of the argument.
     * @example
     * \`\`\`typescript
     * // !add 2 Hello World!
     * const a = await args.pick('integer');
     * const b = await args.rest('string', { minimum: 1 });
     * await message.channel.send(\`The repeated value is... \${b.repeat(a)}!\`);
     * // Sends \\"The repeated value is... Hello World!Hello World!\\"
     * \`\`\`
     */",
              ],
              "id": "Args.rest",
              "isStatic": false,
              "kind": "ClassMethodDeclaration",
              "name": "rest",
              "signature": "rest: {
    <T>(type: IArgument<T>, options?: ArgOptions): Promise<T>;
    <K extends keyof ArgType>(type: K, options?: ArgOptions): Promise<
        ArgType[K]
    >;
};",
              "source": Object {
                "filename": "dist/index.d.ts",
                "line": 281,
                "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L281",
                "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L281",
              },
              "type": "{ <T>(type: IArgument<T>, options?: ArgOptions): Promise<T>; <K extends keyof ArgType>(type: K, options?: ArgOptions): Promise<ArgType[K]>; }",
            },
            Object {
              "docs": Array [
                "/**
     * Restores the previously saved state from the stack.
     * @seealso [[Args.save]]
     */",
              ],
              "id": "Args.restore",
              "isStatic": false,
              "kind": "ClassMethodDeclaration",
              "name": "restore",
              "signature": "restore: () => void;",
              "source": Object {
                "filename": "dist/index.d.ts",
                "line": 586,
                "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L586",
                "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L586",
              },
              "type": "() => void",
            },
            Object {
              "docs": Array [
                "/**
     * Retrieves all the following arguments.
     * @param type The type of the argument.
     * @example
     * \`\`\`typescript
     * // !reverse Hello world!
     * const resolver = Args.make((arg) => ok(arg.split('').reverse()));
     * const a = await args.restResult(resolver);
     * if (!a.success) throw new UserError('AddArgumentError', 'You must write some text.');
     *
     * await message.channel.send(\`The reversed value is... \${a.value}\`);
     * // Sends \\"The reversed value is... !dlrow olleH\\"
     * \`\`\`
     */",
                "/**
     * Retrieves all the following arguments.
     * @param type The type of the argument.
     * @example
     * \`\`\`typescript
     * // !add 2 Hello World!
     * const a = await args.pickResult('integer');
     * if (!a.success) throw new UserError('AddArgumentError', 'You must write a number and a text, but the former did not match.');
     *
     * const b = await args.restResult('string', { minimum: 1 });
     * if (!b.success) throw new UserError('AddArgumentError', 'You must write a number and a text, but the latter did not match.');
     *
     * await message.channel.send(\`The repeated value is... \${b.value.repeat(a.value)}!\`);
     * // Sends \\"The repeated value is... Hello World!Hello World!\\"
     * \`\`\`
     */",
              ],
              "id": "Args.restResult",
              "isStatic": false,
              "kind": "ClassMethodDeclaration",
              "name": "restResult",
              "signature": "restResult: {
    <T>(type: IArgument<T>, options?: ArgOptions): Promise<Result<T, UserError>>;
    <K extends keyof ArgType>(type: K, options?: ArgOptions): Promise<any>;
};",
              "source": Object {
                "filename": "dist/index.d.ts",
                "line": 251,
                "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L251",
                "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L251",
              },
              "type": "{ <T>(type: IArgument<T>, options?: ArgOptions): Promise<Result<T, UserError>>; <K extends keyof ArgType>(type: K, options?: ArgOptions): Promise<any>; }",
            },
            Object {
              "docs": Array [
                "/**
     * Saves the current state into the stack following a FILO strategy (first-in, last-out).
     * @seealso [[Args.restore]]
     */",
              ],
              "id": "Args.save",
              "isStatic": false,
              "kind": "ClassMethodDeclaration",
              "name": "save",
              "signature": "save: () => void;",
              "source": Object {
                "filename": "dist/index.d.ts",
                "line": 581,
                "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L581",
                "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L581",
              },
              "type": "() => void",
            },
            Object {
              "docs": Array [
                "/**
     * Sets the parser to the first token.
     */",
              ],
              "id": "Args.start",
              "isStatic": false,
              "kind": "ClassMethodDeclaration",
              "name": "start",
              "signature": "start: () => Args;",
              "source": Object {
                "filename": "dist/index.d.ts",
                "line": 169,
                "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L169",
                "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L169",
              },
              "type": "() => Args",
            },
          ],
          "properties": Array [
            Object {
              "docs": Array [
                "/**
     * The command that is being run.
     */",
              ],
              "id": "Args.command",
              "isStatic": false,
              "kind": "ClassPropertyDeclaration",
              "name": "command",
              "signature": "readonly command: Command<Args>;",
              "source": Object {
                "filename": "dist/index.d.ts",
                "line": 162,
                "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L162",
                "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L162",
              },
              "type": "Command<Args>",
            },
            Object {
              "docs": Array [
                "/**
     * Whether all arguments have been consumed.
     */",
              ],
              "id": "Args.finished",
              "isStatic": false,
              "kind": "ClassPropertyDeclaration",
              "name": "finished",
              "signature": "readonly finished: boolean;",
              "source": Object {
                "filename": "dist/index.d.ts",
                "line": 590,
                "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L590",
                "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L590",
              },
              "type": "boolean",
            },
            Object {
              "docs": Array [
                "/**
     * The original message that triggered the command.
     */",
              ],
              "id": "Args.message",
              "isStatic": false,
              "kind": "ClassPropertyDeclaration",
              "name": "message",
              "signature": "readonly message: any;",
              "source": Object {
                "filename": "dist/index.d.ts",
                "line": 158,
                "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L158",
                "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L158",
              },
              "type": "any",
            },
          ],
        },
        "name": "Args",
        "signature": "class Args {}",
        "source": Object {
          "filename": "dist/index.d.ts",
          "line": 154,
          "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L154",
          "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L154",
        },
      },
      Object {
        "constructors": Array [],
        "docs": Array [
          "/**
 * The base argument class. This class is abstract and is to be extended by subclasses implementing the methods. In
 * Sapphire's workflow, arguments are called when using [[Args]]'s methods (usually used inside [[Command]]s by default).
 *
 * @example
 * \`\`\`typescript
 * // TypeScript:
 * import { Argument, ArgumentResult, PieceContext } from '(at)sapphire/framework';
 * import { URL } from 'url';
 *
 * // Define a class extending \`Argument\`, then export it.
 * // NOTE: You can use \`export default\` or \`export =\` too.
 * export class CoreArgument extends Argument<URL> {
 *   public constructor(context: PieceContext) {
 *     super(context, { name: 'hyperlink', aliases: ['url'] });
 *   }
 *
 *   public run(argument: string): ArgumentResult<URL> {
 *     try {
 *       return this.ok(new URL(argument));
 *     } catch {
 *       return this.error(argument, 'ArgumentHyperlinkInvalidURL', 'The argument did not resolve to a valid URL.');
 *     }
 *   }
 * }
 *
 * // Augment the ArgType structure so \`args.pick('url')\`, \`args.repeat('url')\`
 * // and others have a return type of \`URL\`.
 * declare module 'sapphire/framework/dist/lib/utils/Args' {
 *   export interface ArgType {
 *     url: URL;
 *   }
 * }
 * \`\`\`
 *
 * @example
 * \`\`\`javascript
 * // JavaScript:
 * const { Argument } = require('(at)sapphire/framework');
 *
 * // Define a class extending \`Argument\`, then export it.
 * module.exports = class CoreArgument extends Argument {
 *   constructor(context) {
 *     super(context, { name: 'hyperlink', aliases: ['url'] });
 *   }
 *
 *   run(argument) {
 *     try {
 *       return this.ok(new URL(argument));
 *     } catch {
 *       return this.error(argument, 'ArgumentHyperlinkInvalidURL', 'The argument did not resolve to a valid URL.');
 *     }
 *   }
 * }
 * \`\`\`
 */",
        ],
        "id": "Argument",
        "isAbstract": true,
        "kind": "ClassDeclaration",
        "members": Object {
          "methods": Array [
            Object {
              "docs": Array [
                "/**
     * Constructs an [[ArgumentError]] with [[ArgumentError#type]] set to the [[IArgument<T>#name]].
     * @param parameter The parameter that triggered the argument.
     * @param message The description message for the rejection.
     */",
                "/**
     * Constructs an [[ArgumentError]] with a custom type.
     * @param parameter The parameter that triggered the argument.
     * @param type The identifier for the error.
     * @param message The description message for the rejection.
     */",
              ],
              "id": "Argument.error",
              "isStatic": false,
              "kind": "ClassMethodDeclaration",
              "name": "error",
              "signature": "error: {
    (parameter: string, message: string): any;
    (parameter: string, type: string, message: string): any;
};",
              "source": Object {
                "filename": "dist/index.d.ts",
                "line": 1147,
                "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L1147",
                "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L1147",
              },
              "type": "{ (parameter: string, message: string): any; (parameter: string, type: string, message: string): any; }",
            },
            Object {
              "docs": Array [
                "/**
     * Wraps a value into a successful value.
     * @param value The value to wrap.
     */",
              ],
              "id": "Argument.ok",
              "isStatic": false,
              "kind": "ClassMethodDeclaration",
              "name": "ok",
              "signature": "ok: (value: T) => any;",
              "source": Object {
                "filename": "dist/index.d.ts",
                "line": 1141,
                "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L1141",
                "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L1141",
              },
              "type": "(value: T) => any",
            },
            Object {
              "docs": Array [],
              "id": "Argument.run",
              "isStatic": false,
              "kind": "ClassMethodDeclaration",
              "name": "run",
              "signature": "abstract run: (argument: string, context: ArgumentContext) => any;",
              "source": Object {
                "filename": "dist/index.d.ts",
                "line": 1136,
                "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L1136",
                "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L1136",
              },
              "type": "(argument: string, context: ArgumentContext) => any",
            },
          ],
          "properties": Array [],
        },
        "name": "Argument",
        "signature": "abstract class Argument<T = unknown> extends AliasPiece implements IArgument<T> {}",
        "source": Object {
          "filename": "dist/index.d.ts",
          "line": 1135,
          "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L1135",
          "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L1135",
        },
      },
      Object {
        "constructors": Array [
          Object {
            "docs": Array [],
            "id": "ArgumentError.0-constructor",
            "kind": "ClassConstructorDeclaration",
            "name": "constructor",
            "signature": "constructor(
    argument: IArgument<T>,
    parameter: string,
    type: string,
    message: string
);",
            "source": Object {
              "filename": "dist/index.d.ts",
              "line": 1173,
              "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L1173",
              "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L1173",
            },
          },
        ],
        "docs": Array [
          "/**
 * Errors thrown by the argument parser
 * @property name This will be \`'ArgumentError'\` and can be used to distinguish the type of error when any error gets thrown
 */",
        ],
        "id": "ArgumentError",
        "isAbstract": false,
        "kind": "ClassDeclaration",
        "members": Object {
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "ArgumentError.argument",
              "isStatic": false,
              "kind": "ClassPropertyDeclaration",
              "name": "argument",
              "signature": "readonly argument: IArgument<T>;",
              "source": Object {
                "filename": "dist/index.d.ts",
                "line": 1171,
                "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L1171",
                "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L1171",
              },
              "type": "IArgument<T>",
            },
            Object {
              "docs": Array [],
              "id": "ArgumentError.parameter",
              "isStatic": false,
              "kind": "ClassPropertyDeclaration",
              "name": "parameter",
              "signature": "readonly parameter: string;",
              "source": Object {
                "filename": "dist/index.d.ts",
                "line": 1172,
                "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L1172",
                "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L1172",
              },
              "type": "string",
            },
          ],
        },
        "name": "ArgumentError",
        "signature": "class ArgumentError<T> extends UserError {}",
        "source": Object {
          "filename": "dist/index.d.ts",
          "line": 1170,
          "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L1170",
          "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L1170",
        },
      },
      Object {
        "constructors": Array [
          Object {
            "docs": Array [],
            "id": "ArgumentStore.0-constructor",
            "kind": "ClassConstructorDeclaration",
            "name": "constructor",
            "signature": "constructor();",
            "source": Object {
              "filename": "dist/index.d.ts",
              "line": 1239,
              "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L1239",
              "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L1239",
            },
          },
        ],
        "docs": Array [],
        "id": "ArgumentStore",
        "isAbstract": false,
        "kind": "ClassDeclaration",
        "members": Object {
          "methods": Array [],
          "properties": Array [],
        },
        "name": "ArgumentStore",
        "signature": "class ArgumentStore extends AliasStore<Argument> {}",
        "source": Object {
          "filename": "dist/index.d.ts",
          "line": 1238,
          "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L1238",
          "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L1238",
        },
      },
      Object {
        "constructors": Array [
          Object {
            "docs": Array [
              "/**
     * @since 1.0.0
     * @param context The context.
     * @param options Optional Command settings.
     */",
            ],
            "id": "Command.0-constructor",
            "kind": "ClassConstructorDeclaration",
            "name": "constructor",
            "signature": "protected constructor(context: any, { name, ...options }?: CommandOptions);",
            "source": Object {
              "filename": "dist/index.d.ts",
              "line": 988,
              "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L988",
              "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L988",
            },
          },
        ],
        "docs": Array [],
        "id": "Command",
        "isAbstract": true,
        "kind": "ClassDeclaration",
        "members": Object {
          "methods": Array [
            Object {
              "docs": Array [
                "/**
     * The pre-parse method. This method can be overriden by plugins to define their own argument parser.
     * @param message The message that triggered the command.
     * @param parameters The raw parameters as a single string.
     */",
              ],
              "id": "Command.preParse",
              "isStatic": false,
              "kind": "ClassMethodDeclaration",
              "name": "preParse",
              "signature": "preParse: (message: any, parameters: string) => any;",
              "source": Object {
                "filename": "dist/index.d.ts",
                "line": 994,
                "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L994",
                "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L994",
              },
              "type": "(message: any, parameters: string) => any",
            },
            Object {
              "docs": Array [
                "/**
     * Executes the command's logic.
     * @param message The message that triggered the command.
     * @param args The value returned by [[Command.preParse]], by default an instance of [[Args]].
     */",
              ],
              "id": "Command.run",
              "isStatic": false,
              "kind": "ClassMethodDeclaration",
              "name": "run",
              "signature": "abstract run: (message: any, args: T, context: CommandContext) => any;",
              "source": Object {
                "filename": "dist/index.d.ts",
                "line": 1000,
                "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L1000",
                "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L1000",
              },
              "type": "(message: any, args: T, context: CommandContext) => any",
            },
            Object {
              "docs": Array [
                "/**
     * Defines the JSON.stringify behavior of the command.
     */",
              ],
              "id": "Command.toJSON",
              "isStatic": false,
              "kind": "ClassMethodDeclaration",
              "name": "toJSON",
              "signature": "toJSON: () => Record<string, any>;",
              "source": Object {
                "filename": "dist/index.d.ts",
                "line": 1004,
                "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L1004",
                "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L1004",
              },
              "type": "() => Record<string, any>",
            },
          ],
          "properties": Array [
            Object {
              "docs": Array [
                "/**
     * A basic summary about the command
     * @since 1.0.0
     */",
              ],
              "id": "Command.description",
              "isStatic": false,
              "kind": "ClassPropertyDeclaration",
              "name": "description",
              "signature": "description: string;",
              "source": Object {
                "filename": "dist/index.d.ts",
                "line": 967,
                "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L967",
                "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L967",
              },
              "type": "string",
            },
            Object {
              "docs": Array [
                "/**
     * Longer version of command's summary and how to use it
     * @since 1.0.0
     */",
              ],
              "id": "Command.detailedDescription",
              "isStatic": false,
              "kind": "ClassPropertyDeclaration",
              "name": "detailedDescription",
              "signature": "detailedDescription: string;",
              "source": Object {
                "filename": "dist/index.d.ts",
                "line": 977,
                "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L977",
                "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L977",
              },
              "type": "string",
            },
            Object {
              "docs": Array [
                "/**
     * The preconditions to be run.
     * @since 1.0.0
     */",
              ],
              "id": "Command.preconditions",
              "isStatic": false,
              "kind": "ClassPropertyDeclaration",
              "name": "preconditions",
              "signature": "preconditions: IPreconditionContainer;",
              "source": Object {
                "filename": "dist/index.d.ts",
                "line": 972,
                "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L972",
                "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L972",
              },
              "type": "IPreconditionContainer",
            },
            Object {
              "docs": Array [
                "/**
     * The strategy to use for the lexer.
     * @since 1.0.0
     */",
              ],
              "id": "Command.strategy",
              "isStatic": false,
              "kind": "ClassPropertyDeclaration",
              "name": "strategy",
              "signature": "strategy: any;",
              "source": Object {
                "filename": "dist/index.d.ts",
                "line": 982,
                "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L982",
                "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L982",
              },
              "type": "any",
            },
          ],
        },
        "name": "Command",
        "signature": "abstract class Command<T = Args> extends AliasPiece {}",
        "source": Object {
          "filename": "dist/index.d.ts",
          "line": 961,
          "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L961",
          "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L961",
        },
      },
      Object {
        "constructors": Array [
          Object {
            "docs": Array [],
            "id": "CommandStore.0-constructor",
            "kind": "ClassConstructorDeclaration",
            "name": "constructor",
            "signature": "constructor();",
            "source": Object {
              "filename": "dist/index.d.ts",
              "line": 1247,
              "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L1247",
              "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L1247",
            },
          },
        ],
        "docs": Array [
          "/**
 * Stores all Command pieces
 * @since 1.0.0
 */",
        ],
        "id": "CommandStore",
        "isAbstract": false,
        "kind": "ClassDeclaration",
        "members": Object {
          "methods": Array [],
          "properties": Array [],
        },
        "name": "CommandStore",
        "signature": "class CommandStore extends AliasStore<Command> {}",
        "source": Object {
          "filename": "dist/index.d.ts",
          "line": 1246,
          "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L1246",
          "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L1246",
        },
      },
      Object {
        "constructors": Array [
          Object {
            "docs": Array [],
            "id": "Event.0-constructor",
            "kind": "ClassConstructorDeclaration",
            "name": "constructor",
            "signature": "constructor(context: any, options?: EventOptions);",
            "source": Object {
              "filename": "dist/index.d.ts",
              "line": 1294,
              "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L1294",
              "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L1294",
            },
          },
        ],
        "docs": Array [
          "/**
 * The base event class. This class is abstract and is to be extended by subclasses, which should implement the methods. In
 * Sapphire's workflow, events are called when the emitter they listen on emits a new message with the same event name.
 *
 * @example
 * \`\`\`typescript
 * // TypeScript:
 * import { Event, Events, PieceContext } from '(at)sapphire/framework';
 *
 * // Define a class extending \`CoreEvent\`, then export it.
 * // NOTE: You can use \`export default\` or \`export =\` too.
 * export class CoreEvent extends Event<Events.Ready> {
 *   public constructor(context: PieceContext) {
 *     super(context, { event: Events.Ready, once: true });
 *   }
 *
 *   public run() {
 *     if (!this.client.id) this.client.id = this.client.user?.id ?? null;
 *   }
 * }
 * \`\`\`
 *
 * @example
 * \`\`\`javascript
 * // JavaScript:
 * const { Event, Events } = require('(at)sapphire/framework');
 *
 * // Define a class extending \`CoreEvent\`, then export it.
 * module.exports = class CoreEvent extends Event {
 *   constructor(context) {
 *     super(context, { event: Events.Ready, once: true });
 *   }
 *
 *   run() {
 *     if (!this.client.id) this.client.id = this.client.user?.id ?? null;
 *   }
 * }
 * \`\`\`
 */",
        ],
        "id": "Event",
        "isAbstract": true,
        "kind": "ClassDeclaration",
        "members": Object {
          "methods": Array [
            Object {
              "docs": Array [],
              "id": "Event.onLoad",
              "isStatic": false,
              "kind": "ClassMethodDeclaration",
              "name": "onLoad",
              "signature": "onLoad: () => void;",
              "source": Object {
                "filename": "dist/index.d.ts",
                "line": 1296,
                "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L1296",
                "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L1296",
              },
              "type": "() => void",
            },
            Object {
              "docs": Array [],
              "id": "Event.onUnload",
              "isStatic": false,
              "kind": "ClassMethodDeclaration",
              "name": "onUnload",
              "signature": "onUnload: () => void;",
              "source": Object {
                "filename": "dist/index.d.ts",
                "line": 1297,
                "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L1297",
                "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L1297",
              },
              "type": "() => void",
            },
            Object {
              "docs": Array [],
              "id": "Event.run",
              "isStatic": false,
              "kind": "ClassMethodDeclaration",
              "name": "run",
              "signature": "abstract run: (
    ...args: E extends keyof ClientEvents ? ClientEvents[E] : unknown[]
) => unknown;",
              "source": Object {
                "filename": "dist/index.d.ts",
                "line": 1295,
                "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L1295",
                "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L1295",
              },
              "type": "(...args: E extends keyof ClientEvents ? ClientEvents[E] : unknown[]) => unknown",
            },
            Object {
              "docs": Array [],
              "id": "Event.toJSON",
              "isStatic": false,
              "kind": "ClassMethodDeclaration",
              "name": "toJSON",
              "signature": "toJSON: () => Record<PropertyKey, unknown>;",
              "source": Object {
                "filename": "dist/index.d.ts",
                "line": 1298,
                "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L1298",
                "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L1298",
              },
              "type": "() => Record<PropertyKey, unknown>",
            },
          ],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "Event.emitter",
              "isStatic": false,
              "kind": "ClassPropertyDeclaration",
              "name": "emitter",
              "signature": "readonly emitter: any;",
              "source": Object {
                "filename": "dist/index.d.ts",
                "line": 1291,
                "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L1291",
                "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L1291",
              },
              "type": "any",
            },
            Object {
              "docs": Array [],
              "id": "Event.event",
              "isStatic": false,
              "kind": "ClassPropertyDeclaration",
              "name": "event",
              "signature": "readonly event: string;",
              "source": Object {
                "filename": "dist/index.d.ts",
                "line": 1292,
                "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L1292",
                "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L1292",
              },
              "type": "string",
            },
            Object {
              "docs": Array [],
              "id": "Event.once",
              "isStatic": false,
              "kind": "ClassPropertyDeclaration",
              "name": "once",
              "signature": "readonly once: boolean;",
              "source": Object {
                "filename": "dist/index.d.ts",
                "line": 1293,
                "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L1293",
                "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L1293",
              },
              "type": "boolean",
            },
          ],
        },
        "name": "Event",
        "signature": "abstract class Event<E extends keyof ClientEvents | symbol = ''> extends Piece {}",
        "source": Object {
          "filename": "dist/index.d.ts",
          "line": 1289,
          "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L1289",
          "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L1289",
        },
      },
      Object {
        "constructors": Array [
          Object {
            "docs": Array [],
            "id": "EventStore.0-constructor",
            "kind": "ClassConstructorDeclaration",
            "name": "constructor",
            "signature": "constructor();",
            "source": Object {
              "filename": "dist/index.d.ts",
              "line": 1309,
              "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L1309",
              "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L1309",
            },
          },
        ],
        "docs": Array [],
        "id": "EventStore",
        "isAbstract": false,
        "kind": "ClassDeclaration",
        "members": Object {
          "methods": Array [],
          "properties": Array [],
        },
        "name": "EventStore",
        "signature": "class EventStore extends Store<Event> {}",
        "source": Object {
          "filename": "dist/index.d.ts",
          "line": 1308,
          "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L1308",
          "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L1308",
        },
      },
      Object {
        "constructors": Array [
          Object {
            "docs": Array [],
            "id": "ExtendedArgument.0-constructor",
            "kind": "ClassConstructorDeclaration",
            "name": "constructor",
            "signature": "constructor(context: any, options: ExtendedArgumentOptions<K>);",
            "source": Object {
              "filename": "dist/index.d.ts",
              "line": 1679,
              "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L1679",
              "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L1679",
            },
          },
        ],
        "docs": Array [
          "/**
 * The extended argument class. This class is abstract and is to be extended by subclasses which
 * will implement the [[ExtendedArgument#handle]] method.
 * Much like the [[Argument]] class, this class handles parsing user-specified command arguments
 * into typed command parameters. However, this class can be used to expand upon an existing
 * argument in order to process its transformed value rather than just the argument string.
 *
 * @example
 * \`\`\`typescript
 * // TypeScript:
 * import { ApplyOptions } from '@sapphire/decorators';
 * import { ArgumentResult, ExtendedArgument, ExtendedArgumentContext, ExtendedArgumentOptions } from '(at)sapphire/framework';
 * import type { Channel, TextChannel } from 'discord.js';
 *
 * // Just like with \`Argument\`, you can use \`export default\` or \`export =\` too.
 * @ApplyOptions<ExtendedArgumentOptions>({
 *   name: 'textChannel',
 *   baseArgument: 'channel'
 * })
 * export class TextChannelArgument extends ExtendedArgument<'channel', TextChannel> {
 *   public handle(parsed: Channel, { argument }: ExtendedArgumentContext): ArgumentResult<TextChannel> {
 *     return parsed.type === 'text'
 *       ? this.ok(parsed as TextChannel)
 *       : this.error(argument, 'ArgumentTextChannelInvalidTextChannel', 'The argument did not resolve to a text channel.');
 *   }
 * }
 * \`\`\`
 *
 * @example
 * \`\`\`javascript
 * // JavaScript:
 * const { ExtendedArgument } = require('(at)sapphire/framework');
 *
 * module.exports = class TextChannelArgument extends ExtendedArgument {
 *   constructor(context) {
 *     super(context, { name: 'textChannel', baseArgument: 'channel' });
 *   }
 *
 *   handle(parsed, { argument }) {
 *     return parsed.type === 'text'
 *       ? this.ok(parsed)
 *       : this.error(argument, 'ArgumentTextChannelInvalidTextChannel', 'The argument did not resolve to a text channel/');
 *   }
 * }
 * \`\`\`
 */",
        ],
        "id": "ExtendedArgument",
        "isAbstract": true,
        "kind": "ClassDeclaration",
        "members": Object {
          "methods": Array [
            Object {
              "docs": Array [],
              "id": "ExtendedArgument.handle",
              "isStatic": false,
              "kind": "ClassMethodDeclaration",
              "name": "handle",
              "signature": "abstract handle: (parsed: ArgType[K], context: ExtendedArgumentContext) => any;",
              "source": Object {
                "filename": "dist/index.d.ts",
                "line": 1686,
                "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L1686",
                "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L1686",
              },
              "type": "(parsed: ArgType[K], context: ExtendedArgumentContext) => any",
            },
            Object {
              "docs": Array [],
              "id": "ExtendedArgument.run",
              "isStatic": false,
              "kind": "ClassMethodDeclaration",
              "name": "run",
              "signature": "run: (argument: string, context: ArgumentContext) => AsyncArgumentResult<T>;",
              "source": Object {
                "filename": "dist/index.d.ts",
                "line": 1685,
                "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L1685",
                "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L1685",
              },
              "type": "(argument: string, context: ArgumentContext) => AsyncArgumentResult<T>",
            },
          ],
          "properties": Array [
            Object {
              "docs": Array [
                "/**
     * Represents the underlying argument that transforms the raw argument
     * into the value used to compute the extended argument's value.
     */",
              ],
              "id": "ExtendedArgument.base",
              "isStatic": false,
              "kind": "ClassPropertyDeclaration",
              "name": "base",
              "signature": "readonly base: IArgument<ArgType[K]>;",
              "source": Object {
                "filename": "dist/index.d.ts",
                "line": 1684,
                "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L1684",
                "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L1684",
              },
              "type": "IArgument<ArgType[K]>",
            },
            Object {
              "docs": Array [],
              "id": "ExtendedArgument.baseArgument",
              "isStatic": false,
              "kind": "ClassPropertyDeclaration",
              "name": "baseArgument",
              "signature": "baseArgument: keyof ArgType;",
              "source": Object {
                "filename": "dist/index.d.ts",
                "line": 1678,
                "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L1678",
                "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L1678",
              },
              "type": "keyof ArgType",
            },
          ],
        },
        "name": "ExtendedArgument",
        "signature": "abstract class ExtendedArgument<K extends keyof ArgType, T> extends Argument<T> {}",
        "source": Object {
          "filename": "dist/index.d.ts",
          "line": 1677,
          "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L1677",
          "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L1677",
        },
      },
      Object {
        "constructors": Array [
          Object {
            "docs": Array [],
            "id": "Logger.0-constructor",
            "kind": "ClassConstructorDeclaration",
            "name": "constructor",
            "signature": "constructor(level: LogLevel);",
            "source": Object {
              "filename": "dist/index.d.ts",
              "line": 1825,
              "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L1825",
              "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L1825",
            },
          },
        ],
        "docs": Array [],
        "id": "Logger",
        "isAbstract": false,
        "kind": "ClassDeclaration",
        "members": Object {
          "methods": Array [
            Object {
              "docs": Array [],
              "id": "Logger.debug",
              "isStatic": false,
              "kind": "ClassMethodDeclaration",
              "name": "debug",
              "signature": "debug: (...values: readonly unknown[]) => void;",
              "source": Object {
                "filename": "dist/index.d.ts",
                "line": 1827,
                "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L1827",
                "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L1827",
              },
              "type": "(...values: readonly unknown[]) => void",
            },
            Object {
              "docs": Array [],
              "id": "Logger.error",
              "isStatic": false,
              "kind": "ClassMethodDeclaration",
              "name": "error",
              "signature": "error: (...values: readonly unknown[]) => void;",
              "source": Object {
                "filename": "dist/index.d.ts",
                "line": 1830,
                "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L1830",
                "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L1830",
              },
              "type": "(...values: readonly unknown[]) => void",
            },
            Object {
              "docs": Array [],
              "id": "Logger.fatal",
              "isStatic": false,
              "kind": "ClassMethodDeclaration",
              "name": "fatal",
              "signature": "fatal: (...values: readonly unknown[]) => void;",
              "source": Object {
                "filename": "dist/index.d.ts",
                "line": 1831,
                "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L1831",
                "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L1831",
              },
              "type": "(...values: readonly unknown[]) => void",
            },
            Object {
              "docs": Array [],
              "id": "Logger.info",
              "isStatic": false,
              "kind": "ClassMethodDeclaration",
              "name": "info",
              "signature": "info: (...values: readonly unknown[]) => void;",
              "source": Object {
                "filename": "dist/index.d.ts",
                "line": 1828,
                "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L1828",
                "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L1828",
              },
              "type": "(...values: readonly unknown[]) => void",
            },
            Object {
              "docs": Array [],
              "id": "Logger.trace",
              "isStatic": false,
              "kind": "ClassMethodDeclaration",
              "name": "trace",
              "signature": "trace: (...values: readonly unknown[]) => void;",
              "source": Object {
                "filename": "dist/index.d.ts",
                "line": 1826,
                "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L1826",
                "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L1826",
              },
              "type": "(...values: readonly unknown[]) => void",
            },
            Object {
              "docs": Array [],
              "id": "Logger.warn",
              "isStatic": false,
              "kind": "ClassMethodDeclaration",
              "name": "warn",
              "signature": "warn: (...values: readonly unknown[]) => void;",
              "source": Object {
                "filename": "dist/index.d.ts",
                "line": 1829,
                "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L1829",
                "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L1829",
              },
              "type": "(...values: readonly unknown[]) => void",
            },
            Object {
              "docs": Array [],
              "id": "Logger.write",
              "isStatic": false,
              "kind": "ClassMethodDeclaration",
              "name": "write",
              "signature": "write: (level: LogLevel, ...values: readonly unknown[]) => void;",
              "source": Object {
                "filename": "dist/index.d.ts",
                "line": 1832,
                "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L1832",
                "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L1832",
              },
              "type": "(level: LogLevel, ...values: readonly unknown[]) => void",
            },
          ],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "Logger.level",
              "isStatic": false,
              "kind": "ClassPropertyDeclaration",
              "name": "level",
              "signature": "level: LogLevel;",
              "source": Object {
                "filename": "dist/index.d.ts",
                "line": 1824,
                "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L1824",
                "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L1824",
              },
              "type": "LogLevel",
            },
            Object {
              "docs": Array [],
              "id": "Logger.levels",
              "isStatic": true,
              "kind": "ClassPropertyDeclaration",
              "name": "levels",
              "signature": "protected static readonly levels: Map<LogLevel, LogMethods>;",
              "source": Object {
                "filename": "dist/index.d.ts",
                "line": 1833,
                "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L1833",
                "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L1833",
              },
              "type": "Map<LogLevel, LogMethods>",
            },
          ],
        },
        "name": "Logger",
        "signature": "class Logger implements ILogger {}",
        "source": Object {
          "filename": "dist/index.d.ts",
          "line": 1823,
          "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L1823",
          "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L1823",
        },
      },
      Object {
        "constructors": Array [
          Object {
            "docs": Array [
              "/**
     * Constructs a precondition container entry.
     * @param permissions The permissions that will be required by this command.
     */",
            ],
            "id": "PermissionsPrecondition.0-constructor",
            "kind": "ClassConstructorDeclaration",
            "name": "constructor",
            "signature": "constructor(permissions: any);",
            "source": Object {
              "filename": "dist/index.d.ts",
              "line": 1877,
              "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L1877",
              "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L1877",
            },
          },
        ],
        "docs": Array [
          "/**
 * Constructs a contextful permissions precondition requirement.
 * @since 1.0.0
 * @example
 * \`\`\`typescript
 * export class CoreCommand extends Command {
 *   public constructor(context: PieceContext) {
 *     super(context, {
 *       preconditions: [
 *         'GuildOnly',
 *         new PermissionsPrecondition('ADD_REACTIONS')
 *       ]
 *     });
 *   }
 *
 *   public run(message: Message, args: Args) {
 *     // ...
 *   }
 * }
 * \`\`\`
 */",
        ],
        "id": "PermissionsPrecondition",
        "isAbstract": false,
        "kind": "ClassDeclaration",
        "members": Object {
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "PermissionsPrecondition.context",
              "isStatic": false,
              "kind": "ClassPropertyDeclaration",
              "name": "context",
              "signature": "context: PreconditionContext;",
              "source": Object {
                "filename": "dist/index.d.ts",
                "line": 1872,
                "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L1872",
                "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L1872",
              },
              "type": "PreconditionContext",
            },
            Object {
              "docs": Array [],
              "id": "PermissionsPrecondition.name",
              "isStatic": false,
              "kind": "ClassPropertyDeclaration",
              "name": "name",
              "signature": "name: string;",
              "source": Object {
                "filename": "dist/index.d.ts",
                "line": 1871,
                "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L1871",
                "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L1871",
              },
              "type": "string",
            },
          ],
        },
        "name": "PermissionsPrecondition",
        "signature": "class PermissionsPrecondition implements PreconditionSingleResolvableDetails {}",
        "source": Object {
          "filename": "dist/index.d.ts",
          "line": 1870,
          "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L1870",
          "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L1870",
        },
      },
      Object {
        "constructors": Array [],
        "docs": Array [],
        "id": "Plugin",
        "isAbstract": true,
        "kind": "ClassDeclaration",
        "members": Object {
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "Plugin.[postInitialization]",
              "isStatic": true,
              "kind": "ClassPropertyDeclaration",
              "name": "[postInitialization]",
              "signature": "static [postInitialization]?: (this: SapphireClient, options: any) => void;",
              "source": Object {
                "filename": "dist/index.d.ts",
                "line": 1626,
                "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L1626",
                "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L1626",
              },
              "type": "(this: SapphireClient, options: any) => void",
            },
            Object {
              "docs": Array [],
              "id": "Plugin.[postLogin]",
              "isStatic": true,
              "kind": "ClassPropertyDeclaration",
              "name": "[postLogin]",
              "signature": "static [postLogin]?: (this: SapphireClient, options: any) => any;",
              "source": Object {
                "filename": "dist/index.d.ts",
                "line": 1628,
                "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L1628",
                "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L1628",
              },
              "type": "(this: SapphireClient, options: any) => any",
            },
            Object {
              "docs": Array [],
              "id": "Plugin.[preGenericsInitialization]",
              "isStatic": true,
              "kind": "ClassPropertyDeclaration",
              "name": "[preGenericsInitialization]",
              "signature": "static [preGenericsInitialization]?: (
    this: SapphireClient,
    options: any
) => void;",
              "source": Object {
                "filename": "dist/index.d.ts",
                "line": 1624,
                "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L1624",
                "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L1624",
              },
              "type": "(this: SapphireClient, options: any) => void",
            },
            Object {
              "docs": Array [],
              "id": "Plugin.[preInitialization]",
              "isStatic": true,
              "kind": "ClassPropertyDeclaration",
              "name": "[preInitialization]",
              "signature": "static [preInitialization]?: (this: SapphireClient, options: any) => void;",
              "source": Object {
                "filename": "dist/index.d.ts",
                "line": 1625,
                "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L1625",
                "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L1625",
              },
              "type": "(this: SapphireClient, options: any) => void",
            },
            Object {
              "docs": Array [],
              "id": "Plugin.[preLogin]",
              "isStatic": true,
              "kind": "ClassPropertyDeclaration",
              "name": "[preLogin]",
              "signature": "static [preLogin]?: (this: SapphireClient, options: any) => any;",
              "source": Object {
                "filename": "dist/index.d.ts",
                "line": 1627,
                "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L1627",
                "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L1627",
              },
              "type": "(this: SapphireClient, options: any) => any",
            },
          ],
        },
        "name": "Plugin",
        "signature": "abstract class Plugin {}",
        "source": Object {
          "filename": "dist/index.d.ts",
          "line": 1623,
          "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L1623",
          "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L1623",
        },
      },
      Object {
        "constructors": Array [],
        "docs": Array [],
        "id": "PluginManager",
        "isAbstract": false,
        "kind": "ClassDeclaration",
        "members": Object {
          "methods": Array [
            Object {
              "docs": Array [],
              "id": "PluginManager.registerHook",
              "isStatic": false,
              "kind": "ClassMethodDeclaration",
              "name": "registerHook",
              "signature": "registerHook: {
    (hook: SapphirePluginHook, type: SyncPluginHooks, name?: string): this;
    (hook: SapphirePluginAsyncHook, type: AsyncPluginHooks, name?: string): this;
};",
              "source": Object {
                "filename": "dist/index.d.ts",
                "line": 1225,
                "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L1225",
                "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L1225",
              },
              "type": "{ (hook: SapphirePluginHook, type: SyncPluginHooks, name?: string): this; (hook: SapphirePluginAsyncHook, type: AsyncPluginHooks, name?: string): this; }",
            },
            Object {
              "docs": Array [],
              "id": "PluginManager.registerPostInitializationHook",
              "isStatic": false,
              "kind": "ClassMethodDeclaration",
              "name": "registerPostInitializationHook",
              "signature": "registerPostInitializationHook: (
    hook: SapphirePluginHook,
    name?: string
) => this;",
              "source": Object {
                "filename": "dist/index.d.ts",
                "line": 1229,
                "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L1229",
                "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L1229",
              },
              "type": "(hook: SapphirePluginHook, name?: string) => this",
            },
            Object {
              "docs": Array [],
              "id": "PluginManager.registerPostLoginHook",
              "isStatic": false,
              "kind": "ClassMethodDeclaration",
              "name": "registerPostLoginHook",
              "signature": "registerPostLoginHook: (hook: SapphirePluginAsyncHook, name?: string) => this;",
              "source": Object {
                "filename": "dist/index.d.ts",
                "line": 1231,
                "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L1231",
                "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L1231",
              },
              "type": "(hook: SapphirePluginAsyncHook, name?: string) => this",
            },
            Object {
              "docs": Array [],
              "id": "PluginManager.registerPreGenericsInitializationHook",
              "isStatic": false,
              "kind": "ClassMethodDeclaration",
              "name": "registerPreGenericsInitializationHook",
              "signature": "registerPreGenericsInitializationHook: (
    hook: SapphirePluginHook,
    name?: string
) => this;",
              "source": Object {
                "filename": "dist/index.d.ts",
                "line": 1227,
                "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L1227",
                "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L1227",
              },
              "type": "(hook: SapphirePluginHook, name?: string) => this",
            },
            Object {
              "docs": Array [],
              "id": "PluginManager.registerPreInitializationHook",
              "isStatic": false,
              "kind": "ClassMethodDeclaration",
              "name": "registerPreInitializationHook",
              "signature": "registerPreInitializationHook: (hook: SapphirePluginHook, name?: string) => this;",
              "source": Object {
                "filename": "dist/index.d.ts",
                "line": 1228,
                "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L1228",
                "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L1228",
              },
              "type": "(hook: SapphirePluginHook, name?: string) => this",
            },
            Object {
              "docs": Array [],
              "id": "PluginManager.registerPreLoginHook",
              "isStatic": false,
              "kind": "ClassMethodDeclaration",
              "name": "registerPreLoginHook",
              "signature": "registerPreLoginHook: (hook: SapphirePluginAsyncHook, name?: string) => this;",
              "source": Object {
                "filename": "dist/index.d.ts",
                "line": 1230,
                "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L1230",
                "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L1230",
              },
              "type": "(hook: SapphirePluginAsyncHook, name?: string) => this",
            },
            Object {
              "docs": Array [],
              "id": "PluginManager.use",
              "isStatic": false,
              "kind": "ClassMethodDeclaration",
              "name": "use",
              "signature": "use: (plugin: typeof Plugin) => this;",
              "source": Object {
                "filename": "dist/index.d.ts",
                "line": 1232,
                "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L1232",
                "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L1232",
              },
              "type": "(plugin: typeof Plugin) => this",
            },
            Object {
              "docs": Array [],
              "id": "PluginManager.values",
              "isStatic": false,
              "kind": "ClassMethodDeclaration",
              "name": "values",
              "signature": "values: {
    (): Generator<SapphirePluginHookEntry, void, unknown>;
    (hook: SyncPluginHooks): Generator<
        SapphirePluginHookEntry<SapphirePluginHook>,
        void,
        unknown
    >;
    (hook: AsyncPluginHooks): Generator<
        SapphirePluginHookEntry<SapphirePluginAsyncHook>,
        void,
        unknown
    >;
};",
              "source": Object {
                "filename": "dist/index.d.ts",
                "line": 1233,
                "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L1233",
                "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L1233",
              },
              "type": "{ (): Generator<SapphirePluginHookEntry, void, unknown>; (hook: SyncPluginHooks): Generator<SapphirePluginHookEntry<SapphirePluginHook>, void, unknown>; (hook: AsyncPluginHooks): Generator<SapphirePluginHookEntry<SapphirePluginAsyncHook>, void, unknown>; }",
            },
          ],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "PluginManager.registry",
              "isStatic": false,
              "kind": "ClassPropertyDeclaration",
              "name": "registry",
              "signature": "readonly registry: Set<
    SapphirePluginHookEntry<SapphirePluginAsyncHook | SapphirePluginHook>
>;",
              "source": Object {
                "filename": "dist/index.d.ts",
                "line": 1224,
                "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L1224",
                "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L1224",
              },
              "type": "Set<SapphirePluginHookEntry<SapphirePluginAsyncHook | SapphirePluginHook>>",
            },
          ],
        },
        "name": "PluginManager",
        "signature": "class PluginManager {}",
        "source": Object {
          "filename": "dist/index.d.ts",
          "line": 1223,
          "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L1223",
          "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L1223",
        },
      },
      Object {
        "constructors": Array [],
        "docs": Array [],
        "id": "Precondition",
        "isAbstract": true,
        "kind": "ClassDeclaration",
        "members": Object {
          "methods": Array [
            Object {
              "docs": Array [
                "/**
     * Constructs an [[ArgumentError]] with [[ArgumentError#type]] set to the [[IArgument<T>#name]].
     * @param message The description message for the rejection.
     */",
                "/**
     * Constructs an [[ArgumentError]] with a custom type.
     * @param type The identifier for the error.
     * @param message The description message for the rejection.
     */",
              ],
              "id": "Precondition.error",
              "isStatic": false,
              "kind": "ClassMethodDeclaration",
              "name": "error",
              "signature": "error: {
    (message: string, extras?: PreconditionErrorExtras): any;
    (type: string, message: string, extras?: object): any;
};",
              "source": Object {
                "filename": "dist/index.d.ts",
                "line": 729,
                "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L729",
                "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L729",
              },
              "type": "{ (message: string, extras?: PreconditionErrorExtras): any; (type: string, message: string, extras?: object): any; }",
            },
            Object {
              "docs": Array [],
              "id": "Precondition.ok",
              "isStatic": false,
              "kind": "ClassMethodDeclaration",
              "name": "ok",
              "signature": "ok: () => any;",
              "source": Object {
                "filename": "dist/index.d.ts",
                "line": 724,
                "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L724",
                "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L724",
              },
              "type": "() => any",
            },
            Object {
              "docs": Array [],
              "id": "Precondition.run",
              "isStatic": false,
              "kind": "ClassMethodDeclaration",
              "name": "run",
              "signature": "abstract run: (
    message: any,
    command: Command,
    context: PreconditionContext
) => any;",
              "source": Object {
                "filename": "dist/index.d.ts",
                "line": 723,
                "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L723",
                "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L723",
              },
              "type": "(message: any, command: Command, context: PreconditionContext) => any",
            },
          ],
          "properties": Array [],
        },
        "name": "Precondition",
        "signature": "abstract class Precondition extends Piece {}",
        "source": Object {
          "filename": "dist/index.d.ts",
          "line": 722,
          "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L722",
          "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L722",
        },
      },
      Object {
        "constructors": Array [
          Object {
            "docs": Array [],
            "id": "PreconditionContainerArray.0-constructor",
            "kind": "ClassConstructorDeclaration",
            "name": "constructor",
            "signature": "constructor(
    data?: PreconditionArrayResolvable,
    parent?: PreconditionContainerArray
);",
            "source": Object {
              "filename": "dist/index.d.ts",
              "line": 886,
              "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L886",
              "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L886",
            },
          },
        ],
        "docs": Array [
          "/**
 * An [[IPreconditionContainer]] that defines an array of multiple [[IPreconditionContainer]]s.
 *
 * By default, array containers run either of two conditions: AND and OR ([[PreconditionRunCondition]]), the top level
 * will always default to AND, where the nested one flips the logic (OR, then children arrays are AND, then OR...).
 *
 * This allows \`['Connect', ['Moderator', ['DJ', 'SongAuthor']]]\` to become a thrice-nested precondition container, where:
 * - Level 1: [Single(Connect), Array] runs AND, both containers must return a successful value.
 * - Level 2: [Single(Moderator), Array] runs OR, either container must return a successful value.
 * - Level 3: [Single(DJ), Single(SongAuthor)] runs AND, both containers must return a successful value.
 *
 * In other words, it is identical to doing:
 * \`\`\`typescript
 * Connect && (Moderator || (DJ && SongAuthor));
 * \`\`\`
 * @remark More advanced logic can be accomplished by adding more [[IPreconditionCondition]]s (e.g. other operators),
 * see [[PreconditionContainerArray.conditions]] for more information.
 * @since 1.0.0
 */",
        ],
        "id": "PreconditionContainerArray",
        "isAbstract": false,
        "kind": "ClassDeclaration",
        "members": Object {
          "methods": Array [
            Object {
              "docs": Array [
                "/**
     * Adds a new entry to the array.
     * @since 1.0.0
     * @param entry The value to add to the entries.
     */",
              ],
              "id": "PreconditionContainerArray.add",
              "isStatic": false,
              "kind": "ClassMethodDeclaration",
              "name": "add",
              "signature": "add: (entry: IPreconditionContainer) => this;",
              "source": Object {
                "filename": "dist/index.d.ts",
                "line": 892,
                "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L892",
                "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L892",
              },
              "type": "(entry: IPreconditionContainer) => this",
            },
            Object {
              "docs": Array [
                "/**
     * Parses the precondition entry resolvables, and adds them to the entries.
     * @since 1.0.0
     * @param entries The entries to parse.
     */",
              ],
              "id": "PreconditionContainerArray.parse",
              "isStatic": false,
              "kind": "ClassMethodDeclaration",
              "name": "parse",
              "signature": "protected parse: (entries: Iterable<PreconditionEntryResolvable>) => this;",
              "source": Object {
                "filename": "dist/index.d.ts",
                "line": 905,
                "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L905",
                "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L905",
              },
              "type": "(entries: Iterable<PreconditionEntryResolvable>) => this",
            },
            Object {
              "docs": Array [
                "/**
     * Runs the container.
     * @since 1.0.0
     * @param message The message that ran this precondition.
     * @param command The command the message invoked.
     */",
              ],
              "id": "PreconditionContainerArray.run",
              "isStatic": false,
              "kind": "ClassMethodDeclaration",
              "name": "run",
              "signature": "run: (message: any, command: Command) => any;",
              "source": Object {
                "filename": "dist/index.d.ts",
                "line": 899,
                "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L899",
                "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L899",
              },
              "type": "(message: any, command: Command) => any",
            },
          ],
          "properties": Array [
            Object {
              "docs": Array [
                "/**
     * Retrieves a condition from [[PreconditionContainerArray.conditions]], assuming existence.
     * @since 1.0.0
     */",
              ],
              "id": "PreconditionContainerArray.condition",
              "isStatic": false,
              "kind": "ClassPropertyDeclaration",
              "name": "condition",
              "signature": "readonly condition: IPreconditionCondition;",
              "source": Object {
                "filename": "dist/index.d.ts",
                "line": 910,
                "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L910",
                "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L910",
              },
              "type": "IPreconditionCondition",
            },
            Object {
              "docs": Array [
                "/**
     * The preconditions to be run. Extra ones can be added by augmenting [[PreconditionRunCondition]] and then
     * inserting [[IPreconditionCondition]]s.
     * @since 1.0.0
     * @example
     * \`\`\`typescript
     * // Adding more kinds of conditions
     *
     * // Set the new condition:
     * PreconditionContainerArray.conditions.set(2, PreconditionConditionRandom);
     *
     * // Augment Sapphire to add the new condition, in case of a JavaScript
     * // project, this can be moved to an \`Augments.d.ts\` (or any other name)
     * // file somewhere:
     * declare module '(at)sapphire/framework' {
     *   export enum PreconditionRunCondition {
     *     Random = 2
     *   }
     * }
     * \`\`\`
     */",
              ],
              "id": "PreconditionContainerArray.conditions",
              "isStatic": true,
              "kind": "ClassPropertyDeclaration",
              "name": "conditions",
              "signature": "protected static readonly conditions: any;",
              "source": Object {
                "filename": "dist/index.d.ts",
                "line": 932,
                "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L932",
                "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L932",
              },
              "type": "any",
            },
            Object {
              "docs": Array [
                "/**
     * The [[IPreconditionContainer]]s the array holds.
     * @since 1.0.0
     */",
              ],
              "id": "PreconditionContainerArray.entries",
              "isStatic": false,
              "kind": "ClassPropertyDeclaration",
              "name": "entries",
              "signature": "readonly entries: IPreconditionContainer[];",
              "source": Object {
                "filename": "dist/index.d.ts",
                "line": 880,
                "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L880",
                "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L880",
              },
              "type": "IPreconditionContainer[]",
            },
            Object {
              "docs": Array [
                "/**
     * The mode at which this precondition will run.
     * @since 1.0.0
     */",
              ],
              "id": "PreconditionContainerArray.mode",
              "isStatic": false,
              "kind": "ClassPropertyDeclaration",
              "name": "mode",
              "signature": "readonly mode: PreconditionRunMode;",
              "source": Object {
                "filename": "dist/index.d.ts",
                "line": 875,
                "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L875",
                "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L875",
              },
              "type": "PreconditionRunMode",
            },
            Object {
              "docs": Array [
                "/**
     * The [[PreconditionRunCondition]] that defines how entries must be handled.
     * @since 1.0.0
     */",
              ],
              "id": "PreconditionContainerArray.runCondition",
              "isStatic": false,
              "kind": "ClassPropertyDeclaration",
              "name": "runCondition",
              "signature": "readonly runCondition: PreconditionRunCondition;",
              "source": Object {
                "filename": "dist/index.d.ts",
                "line": 885,
                "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L885",
                "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L885",
              },
              "type": "PreconditionRunCondition",
            },
          ],
        },
        "name": "PreconditionContainerArray",
        "signature": "class PreconditionContainerArray implements IPreconditionContainer {}",
        "source": Object {
          "filename": "dist/index.d.ts",
          "line": 870,
          "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L870",
          "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L870",
        },
      },
      Object {
        "constructors": Array [
          Object {
            "docs": Array [],
            "id": "PreconditionContainerSingle.0-constructor",
            "kind": "ClassConstructorDeclaration",
            "name": "constructor",
            "signature": "constructor(data: PreconditionSingleResolvable);",
            "source": Object {
              "filename": "dist/index.d.ts",
              "line": 779,
              "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L779",
              "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L779",
            },
          },
        ],
        "docs": Array [
          "/**
 * An [[IPreconditionContainer]] which runs a single precondition from [[SapphireClient.preconditions]].
 * @since 1.0.0
 */",
        ],
        "id": "PreconditionContainerSingle",
        "isAbstract": false,
        "kind": "ClassDeclaration",
        "members": Object {
          "methods": Array [
            Object {
              "docs": Array [
                "/**
     * Runs the container.
     * @since 1.0.0
     * @param message The message that ran this precondition.
     * @param command The command the message invoked.
     */",
              ],
              "id": "PreconditionContainerSingle.run",
              "isStatic": false,
              "kind": "ClassMethodDeclaration",
              "name": "run",
              "signature": "run: (message: any, command: Command) => any;",
              "source": Object {
                "filename": "dist/index.d.ts",
                "line": 786,
                "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L786",
                "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L786",
              },
              "type": "(message: any, command: Command) => any",
            },
          ],
          "properties": Array [
            Object {
              "docs": Array [
                "/**
     * The context to be used when calling [[Precondition.run]]. This will always be an empty object (\`{}\`) when the
     * container was constructed with a string, otherwise it is a direct reference to the value from
     * [[PreconditionSingleResolvableDetails.context]].
     * @since 1.0.0
     */",
              ],
              "id": "PreconditionContainerSingle.context",
              "isStatic": false,
              "kind": "ClassPropertyDeclaration",
              "name": "context",
              "signature": "readonly context: PreconditionContext;",
              "source": Object {
                "filename": "dist/index.d.ts",
                "line": 773,
                "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L773",
                "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L773",
              },
              "type": "PreconditionContext",
            },
            Object {
              "docs": Array [
                "/**
     * The name of the precondition to run.
     * @since 1.0.0
     */",
              ],
              "id": "PreconditionContainerSingle.name",
              "isStatic": false,
              "kind": "ClassPropertyDeclaration",
              "name": "name",
              "signature": "readonly name: string;",
              "source": Object {
                "filename": "dist/index.d.ts",
                "line": 778,
                "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L778",
                "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L778",
              },
              "type": "string",
            },
          ],
        },
        "name": "PreconditionContainerSingle",
        "signature": "class PreconditionContainerSingle implements IPreconditionContainer {}",
        "source": Object {
          "filename": "dist/index.d.ts",
          "line": 766,
          "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L766",
          "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L766",
        },
      },
      Object {
        "constructors": Array [
          Object {
            "docs": Array [],
            "id": "PreconditionError.0-constructor",
            "kind": "ClassConstructorDeclaration",
            "name": "constructor",
            "signature": "constructor(argument: Precondition, type: string, message: string, extras?: {});",
            "source": Object {
              "filename": "dist/index.d.ts",
              "line": 717,
              "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L717",
              "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L717",
            },
          },
        ],
        "docs": Array [
          "/**
 * Errors thrown by preconditions
 * @property name This will be \`'PreconditionError'\` and can be used to distinguish the type of error when any error gets thrown
 */",
        ],
        "id": "PreconditionError",
        "isAbstract": false,
        "kind": "ClassDeclaration",
        "members": Object {
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "PreconditionError.extras",
              "isStatic": false,
              "kind": "ClassPropertyDeclaration",
              "name": "extras",
              "signature": "readonly extras: {};",
              "source": Object {
                "filename": "dist/index.d.ts",
                "line": 716,
                "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L716",
                "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L716",
              },
              "type": "{}",
            },
            Object {
              "docs": Array [],
              "id": "PreconditionError.precondition",
              "isStatic": false,
              "kind": "ClassPropertyDeclaration",
              "name": "precondition",
              "signature": "readonly precondition: Precondition;",
              "source": Object {
                "filename": "dist/index.d.ts",
                "line": 715,
                "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L715",
                "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L715",
              },
              "type": "Precondition",
            },
          ],
        },
        "name": "PreconditionError",
        "signature": "class PreconditionError extends UserError {}",
        "source": Object {
          "filename": "dist/index.d.ts",
          "line": 714,
          "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L714",
          "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L714",
        },
      },
      Object {
        "constructors": Array [
          Object {
            "docs": Array [],
            "id": "PreconditionStore.0-constructor",
            "kind": "ClassConstructorDeclaration",
            "name": "constructor",
            "signature": "constructor();",
            "source": Object {
              "filename": "dist/index.d.ts",
              "line": 1313,
              "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L1313",
              "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L1313",
            },
          },
        ],
        "docs": Array [],
        "id": "PreconditionStore",
        "isAbstract": false,
        "kind": "ClassDeclaration",
        "members": Object {
          "methods": Array [],
          "properties": Array [],
        },
        "name": "PreconditionStore",
        "signature": "class PreconditionStore extends Store<Precondition> {}",
        "source": Object {
          "filename": "dist/index.d.ts",
          "line": 1312,
          "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L1312",
          "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L1312",
        },
      },
      Object {
        "constructors": Array [
          Object {
            "docs": Array [],
            "id": "SapphireClient.0-constructor",
            "kind": "ClassConstructorDeclaration",
            "name": "constructor",
            "signature": "constructor(options?: any);",
            "source": Object {
              "filename": "dist/index.d.ts",
              "line": 1548,
              "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L1548",
              "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L1548",
            },
          },
        ],
        "docs": Array [
          "/**
 * The base [[Client]] extension that makes Sapphire work. When building a Discord bot with the framework, the developer
 * must either use this class, or extend it.
 *
 * Sapphire also automatically detects the folders to scan for pieces, please read
 * [[SapphireClient.registerUserDirectories]] for reference. This method is called at the start of the
 * [[SapphireClient.login]] method.
 *
 * @since 1.0.0
 * @example
 * \`\`\`typescript
 * const client = new SapphireClient({
 *   presence: {
 *     activity: {
 *       name: 'for commands!',
 *       type: 'LISTENING'
 *     }
 *   }
 * });
 *
 * client.login(process.env.DISCORD_TOKEN)
 *   .catch(console.error);
 * \`\`\`
 *
 * @example
 * \`\`\`typescript
 * // Automatically scan from a specific directory, e.g. the main
 * // file is at \`/home/me/bot/index.js\` and all your pieces are at
 * // \`/home/me/bot/pieces\` (e.g. \`/home/me/bot/pieces/commands/MyCommand.js\`):
 * const client = new SapphireClient({
 *   baseUserDirectory: join(__dirname, 'pieces'),
 *   // More options...
 * });
 * \`\`\`
 *
 * @example
 * \`\`\`typescript
 * // Opt-out automatic scanning:
 * const client = new SapphireClient({
 *   baseUserDirectory: null,
 *   // More options...
 * });
 * \`\`\`
 */",
        ],
        "id": "SapphireClient",
        "isAbstract": false,
        "kind": "ClassDeclaration",
        "members": Object {
          "methods": Array [
            Object {
              "docs": Array [
                "/**
     * Deregisters a store.
     * @since 1.0.0
     * @param store The store to deregister.
     */",
              ],
              "id": "SapphireClient.deregisterStore",
              "isStatic": false,
              "kind": "ClassMethodDeclaration",
              "name": "deregisterStore",
              "signature": "deregisterStore: <T extends any>(store: any) => this;",
              "source": Object {
                "filename": "dist/index.d.ts",
                "line": 1583,
                "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L1583",
                "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L1583",
              },
              "type": "<T extends any>(store: any) => this",
            },
            Object {
              "docs": Array [
                "/**
     * Loads all pieces, then logs the client in, establishing a websocket connection to Discord.
     * @since 1.0.0
     * @param token Token of the account to log in with.
     * @retrun Token of the account used.
     */",
              ],
              "id": "SapphireClient.login",
              "isStatic": false,
              "kind": "ClassMethodDeclaration",
              "name": "login",
              "signature": "login: (token?: string) => Promise<string>;",
              "source": Object {
                "filename": "dist/index.d.ts",
                "line": 1590,
                "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L1590",
                "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L1590",
              },
              "type": "(token?: string) => Promise<string>",
            },
            Object {
              "docs": Array [
                "/**
     * Registers a store.
     * @param store The store to register.
     */",
              ],
              "id": "SapphireClient.registerStore",
              "isStatic": false,
              "kind": "ClassMethodDeclaration",
              "name": "registerStore",
              "signature": "registerStore: <T extends any>(store: any) => this;",
              "source": Object {
                "filename": "dist/index.d.ts",
                "line": 1577,
                "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L1577",
                "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L1577",
              },
              "type": "<T extends any>(store: any) => this",
            },
            Object {
              "docs": Array [
                "/**
     * Registers all user directories from the process working directory, the default value is obtained by assuming
     * CommonJS (high accuracy) but with fallback for ECMAScript Modules (reads package.json's \`main\` entry, fallbacks
     * to \`process.cwd()\`).
     *
     * By default, if you have this folder structure:
     * \`\`\`
     * /home/me/my-bot
     * ├─ src
     * │  ├─ commands
     * │  ├─ events
     * │  └─ main.js
     * └─ package.json
     * \`\`\`
     *
     * And you run \`node src/main.js\`, the directories \`/home/me/my-bot/src/commands\` and \`/home/me/my-bot/src/events\` will
     * be registered for the commands and events stores respectively, since both directories are located in the same
     * directory as your main file.
     *
     * **Note**: this also registers directories for all other stores, even if they don't have a folder, this allows you
     * to create new pieces and hot-load them later anytime.
     * @param rootDirectory The root directory to register pieces at.
     */",
              ],
              "id": "SapphireClient.registerUserDirectories",
              "isStatic": false,
              "kind": "ClassMethodDeclaration",
              "name": "registerUserDirectories",
              "signature": "registerUserDirectories: (rootDirectory?: string) => void;",
              "source": Object {
                "filename": "dist/index.d.ts",
                "line": 1572,
                "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L1572",
                "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L1572",
              },
              "type": "(rootDirectory?: string) => void",
            },
            Object {
              "docs": Array [],
              "id": "SapphireClient.use",
              "isStatic": true,
              "kind": "ClassMethodDeclaration",
              "name": "use",
              "signature": "static use: (plugin: typeof Plugin) => typeof SapphireClient;",
              "source": Object {
                "filename": "dist/index.d.ts",
                "line": 1592,
                "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L1592",
                "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L1592",
              },
              "type": "(plugin: typeof Plugin) => typeof SapphireClient",
            },
          ],
          "properties": Array [
            Object {
              "docs": Array [
                "/**
     * The arguments the framework has registered.
     * @since 1.0.0
     */",
              ],
              "id": "SapphireClient.arguments",
              "isStatic": false,
              "kind": "ClassPropertyDeclaration",
              "name": "arguments",
              "signature": "arguments: ArgumentStore;",
              "source": Object {
                "filename": "dist/index.d.ts",
                "line": 1527,
                "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L1527",
                "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L1527",
              },
              "type": "ArgumentStore",
            },
            Object {
              "docs": Array [
                "/**
     * The commands the framework has registered.
     * @since 1.0.0
     */",
              ],
              "id": "SapphireClient.commands",
              "isStatic": false,
              "kind": "ClassPropertyDeclaration",
              "name": "commands",
              "signature": "commands: CommandStore;",
              "source": Object {
                "filename": "dist/index.d.ts",
                "line": 1532,
                "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L1532",
                "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L1532",
              },
              "type": "CommandStore",
            },
            Object {
              "docs": Array [
                "/**
     * The events the framework has registered.
     * @since 1.0.0
     */",
              ],
              "id": "SapphireClient.events",
              "isStatic": false,
              "kind": "ClassPropertyDeclaration",
              "name": "events",
              "signature": "events: EventStore;",
              "source": Object {
                "filename": "dist/index.d.ts",
                "line": 1537,
                "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L1537",
                "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L1537",
              },
              "type": "EventStore",
            },
            Object {
              "docs": Array [
                "/**
     * The method to be overriden by the developer.
     * @since 1.0.0
     * @return A string for a single prefix, an array of strings for matching multiple, or null for no match (mention prefix only).
     * @example
     * \`\`\`typescript
     * // Return always the same prefix (unconfigurable):
     * client.fetchPrefix = () => '!';
     * \`\`\`
     * @example
     * \`\`\`typescript
     * // Retrieving the prefix from a SQL database:
     * client.fetchPrefix = async (message) => {
     *   // note: driver is something generic and depends on how you connect to your database
     *   const guild = await driver.getOne('SELECT prefix FROM public.guild WHERE id = $1', [message.guild.id]);
     *   return guild?.prefix ?? '!';
     * };
     * \`\`\`
     * @example
     * \`\`\`typescript
     * // Retrieving the prefix from an ORM:
     * client.fetchPrefix = async (message) => {
     *   // note: driver is something generic and depends on how you connect to your database
     *   const guild = await driver.getRepository(GuildEntity).findOne({ id: message.guild.id });
     *   return guild?.prefix ?? '!';
     * };
     * \`\`\`
     */",
              ],
              "id": "SapphireClient.fetchPrefix",
              "isStatic": false,
              "kind": "ClassPropertyDeclaration",
              "name": "fetchPrefix",
              "signature": "fetchPrefix: SapphirePrefixHook;",
              "source": Object {
                "filename": "dist/index.d.ts",
                "line": 1516,
                "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L1516",
                "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L1516",
              },
              "type": "SapphirePrefixHook",
            },
            Object {
              "docs": Array [
                "/**
     * The client's ID, used for the user prefix.
     * @since 1.0.0
     */",
              ],
              "id": "SapphireClient.id",
              "isStatic": false,
              "kind": "ClassPropertyDeclaration",
              "name": "id",
              "signature": "id: string;",
              "source": Object {
                "filename": "dist/index.d.ts",
                "line": 1487,
                "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L1487",
                "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L1487",
              },
              "type": "string",
            },
            Object {
              "docs": Array [
                "/**
     * The logger to be used by the framework and plugins. By default, a [[Logger]] instance is used, which emits the
     * messages to the console.
     * @since 1.0.0
     */",
              ],
              "id": "SapphireClient.logger",
              "isStatic": false,
              "kind": "ClassPropertyDeclaration",
              "name": "logger",
              "signature": "logger: ILogger;",
              "source": Object {
                "filename": "dist/index.d.ts",
                "line": 1522,
                "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L1522",
                "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L1522",
              },
              "type": "ILogger",
            },
            Object {
              "docs": Array [],
              "id": "SapphireClient.plugins",
              "isStatic": true,
              "kind": "ClassPropertyDeclaration",
              "name": "plugins",
              "signature": "static plugins: PluginManager;",
              "source": Object {
                "filename": "dist/index.d.ts",
                "line": 1591,
                "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L1591",
                "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L1591",
              },
              "type": "PluginManager",
            },
            Object {
              "docs": Array [
                "/**
     * The precondition the framework has registered.
     * @since 1.0.0
     */",
              ],
              "id": "SapphireClient.preconditions",
              "isStatic": false,
              "kind": "ClassPropertyDeclaration",
              "name": "preconditions",
              "signature": "preconditions: PreconditionStore;",
              "source": Object {
                "filename": "dist/index.d.ts",
                "line": 1542,
                "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L1542",
                "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L1542",
              },
              "type": "PreconditionStore",
            },
            Object {
              "docs": Array [
                "/**
     * The registered stores.
     * @since 1.0.0
     */",
              ],
              "id": "SapphireClient.stores",
              "isStatic": false,
              "kind": "ClassPropertyDeclaration",
              "name": "stores",
              "signature": "stores: Set<any>;",
              "source": Object {
                "filename": "dist/index.d.ts",
                "line": 1547,
                "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L1547",
                "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L1547",
              },
              "type": "Set<any>",
            },
          ],
        },
        "name": "SapphireClient",
        "signature": "class SapphireClient extends Client {}",
        "source": Object {
          "filename": "dist/index.d.ts",
          "line": 1482,
          "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L1482",
          "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L1482",
        },
      },
      Object {
        "constructors": Array [
          Object {
            "docs": Array [
              "/**
     * Constructs an UserError.
     * @param type The identifier, useful to localize emitted errors.
     * @param message The error message.
     */",
            ],
            "id": "UserError.0-constructor",
            "kind": "ClassConstructorDeclaration",
            "name": "constructor",
            "signature": "constructor(type: string, message: string);",
            "source": Object {
              "filename": "dist/index.d.ts",
              "line": 23,
              "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L23",
              "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L23",
            },
          },
        ],
        "docs": Array [
          "/**
 * The UserError class to be emitted in the pieces.
 * @property name This will be \`'UserError'\` and can be used to distinguish the type of error when any error gets thrown
 */",
        ],
        "id": "UserError",
        "isAbstract": false,
        "kind": "ClassDeclaration",
        "members": Object {
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [
                "/**
     * An identifier, useful to localize emitted errors.
     */",
              ],
              "id": "UserError.identifier",
              "isStatic": false,
              "kind": "ClassPropertyDeclaration",
              "name": "identifier",
              "signature": "readonly identifier: string;",
              "source": Object {
                "filename": "dist/index.d.ts",
                "line": 17,
                "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L17",
                "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L17",
              },
              "type": "string",
            },
          ],
        },
        "name": "UserError",
        "signature": "class UserError extends Error {}",
        "source": Object {
          "filename": "dist/index.d.ts",
          "line": 13,
          "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L13",
          "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L13",
        },
      },
    ],
    "enums": Array [
      Object {
        "docs": Array [
          "/**
 * The level the cooldown applies to
 */",
        ],
        "id": "BucketType",
        "isConst": true,
        "kind": "EnumDeclaration",
        "members": Array [
          Object {
            "docs": Array [
              "/**
     * Per channel cooldowns
     */",
            ],
            "id": "BucketType.Channel",
            "kind": "EnumMemberDeclaration",
            "name": "Channel",
            "signature": "Channel = 0",
            "source": Object {
              "filename": "dist/index.d.ts",
              "line": 1195,
              "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L1195",
              "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L1195",
            },
            "value": 0,
          },
          Object {
            "docs": Array [
              "/**
     * Global cooldowns
     */",
            ],
            "id": "BucketType.Global",
            "kind": "EnumMemberDeclaration",
            "name": "Global",
            "signature": "Global = 1",
            "source": Object {
              "filename": "dist/index.d.ts",
              "line": 1199,
              "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L1199",
              "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L1199",
            },
            "value": 1,
          },
          Object {
            "docs": Array [
              "/**
     * Per guild cooldowns
     */",
            ],
            "id": "BucketType.Guild",
            "kind": "EnumMemberDeclaration",
            "name": "Guild",
            "signature": "Guild = 2",
            "source": Object {
              "filename": "dist/index.d.ts",
              "line": 1203,
              "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L1203",
              "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L1203",
            },
            "value": 2,
          },
          Object {
            "docs": Array [
              "/**
     * Per user cooldowns
     */",
            ],
            "id": "BucketType.User",
            "kind": "EnumMemberDeclaration",
            "name": "User",
            "signature": "User = 3",
            "source": Object {
              "filename": "dist/index.d.ts",
              "line": 1207,
              "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L1207",
              "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L1207",
            },
            "value": 3,
          },
        ],
        "name": "BucketType",
        "signature": "const enum BucketType {
    Channel = 0,
    Global = 1,
    Guild = 2,
    User = 3,
}",
        "source": Object {
          "filename": "dist/index.d.ts",
          "line": 1191,
          "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L1191",
          "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L1191",
        },
      },
      Object {
        "docs": Array [],
        "id": "CooldownLevel",
        "isConst": true,
        "kind": "EnumDeclaration",
        "members": Array [
          Object {
            "docs": Array [],
            "id": "CooldownLevel.Author",
            "kind": "EnumMemberDeclaration",
            "name": "Author",
            "signature": "Author = 'author'",
            "source": Object {
              "filename": "dist/index.d.ts",
              "line": 1177,
              "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L1177",
              "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L1177",
            },
            "value": "author",
          },
          Object {
            "docs": Array [],
            "id": "CooldownLevel.Channel",
            "kind": "EnumMemberDeclaration",
            "name": "Channel",
            "signature": "Channel = 'channel'",
            "source": Object {
              "filename": "dist/index.d.ts",
              "line": 1178,
              "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L1178",
              "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L1178",
            },
            "value": "channel",
          },
          Object {
            "docs": Array [],
            "id": "CooldownLevel.Guild",
            "kind": "EnumMemberDeclaration",
            "name": "Guild",
            "signature": "Guild = 'guild'",
            "source": Object {
              "filename": "dist/index.d.ts",
              "line": 1179,
              "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L1179",
              "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L1179",
            },
            "value": "guild",
          },
        ],
        "name": "CooldownLevel",
        "signature": "const enum CooldownLevel {
    Author = 'author',
    Channel = 'channel',
    Guild = 'guild',
}",
        "source": Object {
          "filename": "dist/index.d.ts",
          "line": 1176,
          "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L1176",
          "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L1176",
        },
      },
      Object {
        "docs": Array [],
        "id": "Events",
        "isConst": false,
        "kind": "EnumDeclaration",
        "members": Array [
          Object {
            "docs": Array [],
            "id": "Events.ChannelCreate",
            "kind": "EnumMemberDeclaration",
            "name": "ChannelCreate",
            "signature": "ChannelCreate = 'channelCreate'",
            "source": Object {
              "filename": "dist/index.d.ts",
              "line": 1708,
              "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L1708",
              "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L1708",
            },
            "value": "channelCreate",
          },
          Object {
            "docs": Array [],
            "id": "Events.ChannelDelete",
            "kind": "EnumMemberDeclaration",
            "name": "ChannelDelete",
            "signature": "ChannelDelete = 'channelDelete'",
            "source": Object {
              "filename": "dist/index.d.ts",
              "line": 1709,
              "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L1709",
              "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L1709",
            },
            "value": "channelDelete",
          },
          Object {
            "docs": Array [],
            "id": "Events.ChannelPinsUpdate",
            "kind": "EnumMemberDeclaration",
            "name": "ChannelPinsUpdate",
            "signature": "ChannelPinsUpdate = 'channelPinsUpdate'",
            "source": Object {
              "filename": "dist/index.d.ts",
              "line": 1710,
              "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L1710",
              "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L1710",
            },
            "value": "channelPinsUpdate",
          },
          Object {
            "docs": Array [],
            "id": "Events.ChannelUpdate",
            "kind": "EnumMemberDeclaration",
            "name": "ChannelUpdate",
            "signature": "ChannelUpdate = 'channelUpdate'",
            "source": Object {
              "filename": "dist/index.d.ts",
              "line": 1711,
              "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L1711",
              "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L1711",
            },
            "value": "channelUpdate",
          },
          Object {
            "docs": Array [],
            "id": "Events.CommandAccepted",
            "kind": "EnumMemberDeclaration",
            "name": "CommandAccepted",
            "signature": "CommandAccepted = 'commandAccepted'",
            "source": Object {
              "filename": "dist/index.d.ts",
              "line": 1767,
              "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L1767",
              "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L1767",
            },
            "value": "commandAccepted",
          },
          Object {
            "docs": Array [],
            "id": "Events.CommandDenied",
            "kind": "EnumMemberDeclaration",
            "name": "CommandDenied",
            "signature": "CommandDenied = 'commandDenied'",
            "source": Object {
              "filename": "dist/index.d.ts",
              "line": 1766,
              "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L1766",
              "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L1766",
            },
            "value": "commandDenied",
          },
          Object {
            "docs": Array [],
            "id": "Events.CommandError",
            "kind": "EnumMemberDeclaration",
            "name": "CommandError",
            "signature": "CommandError = 'commandError'",
            "source": Object {
              "filename": "dist/index.d.ts",
              "line": 1771,
              "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L1771",
              "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L1771",
            },
            "value": "commandError",
          },
          Object {
            "docs": Array [],
            "id": "Events.CommandFinish",
            "kind": "EnumMemberDeclaration",
            "name": "CommandFinish",
            "signature": "CommandFinish = 'commandFinish'",
            "source": Object {
              "filename": "dist/index.d.ts",
              "line": 1770,
              "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L1770",
              "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L1770",
            },
            "value": "commandFinish",
          },
          Object {
            "docs": Array [],
            "id": "Events.CommandRun",
            "kind": "EnumMemberDeclaration",
            "name": "CommandRun",
            "signature": "CommandRun = 'commandRun'",
            "source": Object {
              "filename": "dist/index.d.ts",
              "line": 1768,
              "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L1768",
              "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L1768",
            },
            "value": "commandRun",
          },
          Object {
            "docs": Array [],
            "id": "Events.CommandSuccess",
            "kind": "EnumMemberDeclaration",
            "name": "CommandSuccess",
            "signature": "CommandSuccess = 'commandSuccess'",
            "source": Object {
              "filename": "dist/index.d.ts",
              "line": 1769,
              "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L1769",
              "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L1769",
            },
            "value": "commandSuccess",
          },
          Object {
            "docs": Array [],
            "id": "Events.Debug",
            "kind": "EnumMemberDeclaration",
            "name": "Debug",
            "signature": "Debug = 'debug'",
            "source": Object {
              "filename": "dist/index.d.ts",
              "line": 1712,
              "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L1712",
              "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L1712",
            },
            "value": "debug",
          },
          Object {
            "docs": Array [],
            "id": "Events.Disconnect",
            "kind": "EnumMemberDeclaration",
            "name": "Disconnect",
            "signature": "Disconnect = 'disconnect'",
            "source": Object {
              "filename": "dist/index.d.ts",
              "line": 1714,
              "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L1714",
              "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L1714",
            },
            "value": "disconnect",
          },
          Object {
            "docs": Array [],
            "id": "Events.EmojiCreate",
            "kind": "EnumMemberDeclaration",
            "name": "EmojiCreate",
            "signature": "EmojiCreate = 'emojiCreate'",
            "source": Object {
              "filename": "dist/index.d.ts",
              "line": 1715,
              "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L1715",
              "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L1715",
            },
            "value": "emojiCreate",
          },
          Object {
            "docs": Array [],
            "id": "Events.EmojiDelete",
            "kind": "EnumMemberDeclaration",
            "name": "EmojiDelete",
            "signature": "EmojiDelete = 'emojiDelete'",
            "source": Object {
              "filename": "dist/index.d.ts",
              "line": 1716,
              "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L1716",
              "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L1716",
            },
            "value": "emojiDelete",
          },
          Object {
            "docs": Array [],
            "id": "Events.EmojiUpdate",
            "kind": "EnumMemberDeclaration",
            "name": "EmojiUpdate",
            "signature": "EmojiUpdate = 'emojiUpdate'",
            "source": Object {
              "filename": "dist/index.d.ts",
              "line": 1717,
              "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L1717",
              "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L1717",
            },
            "value": "emojiUpdate",
          },
          Object {
            "docs": Array [],
            "id": "Events.Error",
            "kind": "EnumMemberDeclaration",
            "name": "Error",
            "signature": "Error = 'error'",
            "source": Object {
              "filename": "dist/index.d.ts",
              "line": 1718,
              "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L1718",
              "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L1718",
            },
            "value": "error",
          },
          Object {
            "docs": Array [],
            "id": "Events.EventError",
            "kind": "EnumMemberDeclaration",
            "name": "EventError",
            "signature": "EventError = 'eventError'",
            "source": Object {
              "filename": "dist/index.d.ts",
              "line": 1761,
              "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L1761",
              "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L1761",
            },
            "value": "eventError",
          },
          Object {
            "docs": Array [],
            "id": "Events.GuildBanAdd",
            "kind": "EnumMemberDeclaration",
            "name": "GuildBanAdd",
            "signature": "GuildBanAdd = 'guildBanAdd'",
            "source": Object {
              "filename": "dist/index.d.ts",
              "line": 1719,
              "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L1719",
              "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L1719",
            },
            "value": "guildBanAdd",
          },
          Object {
            "docs": Array [],
            "id": "Events.GuildBanRemove",
            "kind": "EnumMemberDeclaration",
            "name": "GuildBanRemove",
            "signature": "GuildBanRemove = 'guildBanRemove'",
            "source": Object {
              "filename": "dist/index.d.ts",
              "line": 1720,
              "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L1720",
              "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L1720",
            },
            "value": "guildBanRemove",
          },
          Object {
            "docs": Array [],
            "id": "Events.GuildCreate",
            "kind": "EnumMemberDeclaration",
            "name": "GuildCreate",
            "signature": "GuildCreate = 'guildCreate'",
            "source": Object {
              "filename": "dist/index.d.ts",
              "line": 1721,
              "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L1721",
              "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L1721",
            },
            "value": "guildCreate",
          },
          Object {
            "docs": Array [],
            "id": "Events.GuildDelete",
            "kind": "EnumMemberDeclaration",
            "name": "GuildDelete",
            "signature": "GuildDelete = 'guildDelete'",
            "source": Object {
              "filename": "dist/index.d.ts",
              "line": 1722,
              "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L1722",
              "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L1722",
            },
            "value": "guildDelete",
          },
          Object {
            "docs": Array [],
            "id": "Events.GuildIntegrationsUpdate",
            "kind": "EnumMemberDeclaration",
            "name": "GuildIntegrationsUpdate",
            "signature": "GuildIntegrationsUpdate = 'guildIntegrationsUpdate'",
            "source": Object {
              "filename": "dist/index.d.ts",
              "line": 1724,
              "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L1724",
              "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L1724",
            },
            "value": "guildIntegrationsUpdate",
          },
          Object {
            "docs": Array [],
            "id": "Events.GuildMemberAdd",
            "kind": "EnumMemberDeclaration",
            "name": "GuildMemberAdd",
            "signature": "GuildMemberAdd = 'guildMemberAdd'",
            "source": Object {
              "filename": "dist/index.d.ts",
              "line": 1725,
              "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L1725",
              "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L1725",
            },
            "value": "guildMemberAdd",
          },
          Object {
            "docs": Array [],
            "id": "Events.GuildMemberAvailable",
            "kind": "EnumMemberDeclaration",
            "name": "GuildMemberAvailable",
            "signature": "GuildMemberAvailable = 'guildMemberAvailable'",
            "source": Object {
              "filename": "dist/index.d.ts",
              "line": 1726,
              "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L1726",
              "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L1726",
            },
            "value": "guildMemberAvailable",
          },
          Object {
            "docs": Array [],
            "id": "Events.GuildMemberRemove",
            "kind": "EnumMemberDeclaration",
            "name": "GuildMemberRemove",
            "signature": "GuildMemberRemove = 'guildMemberRemove'",
            "source": Object {
              "filename": "dist/index.d.ts",
              "line": 1727,
              "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L1727",
              "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L1727",
            },
            "value": "guildMemberRemove",
          },
          Object {
            "docs": Array [],
            "id": "Events.GuildMembersChunk",
            "kind": "EnumMemberDeclaration",
            "name": "GuildMembersChunk",
            "signature": "GuildMembersChunk = 'guildMembersChunk'",
            "source": Object {
              "filename": "dist/index.d.ts",
              "line": 1728,
              "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L1728",
              "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L1728",
            },
            "value": "guildMembersChunk",
          },
          Object {
            "docs": Array [],
            "id": "Events.GuildMemberSpeaking",
            "kind": "EnumMemberDeclaration",
            "name": "GuildMemberSpeaking",
            "signature": "GuildMemberSpeaking = 'guildMemberSpeaking'",
            "source": Object {
              "filename": "dist/index.d.ts",
              "line": 1729,
              "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L1729",
              "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L1729",
            },
            "value": "guildMemberSpeaking",
          },
          Object {
            "docs": Array [],
            "id": "Events.GuildMemberUpdate",
            "kind": "EnumMemberDeclaration",
            "name": "GuildMemberUpdate",
            "signature": "GuildMemberUpdate = 'guildMemberUpdate'",
            "source": Object {
              "filename": "dist/index.d.ts",
              "line": 1730,
              "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L1730",
              "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L1730",
            },
            "value": "guildMemberUpdate",
          },
          Object {
            "docs": Array [],
            "id": "Events.GuildUnavailable",
            "kind": "EnumMemberDeclaration",
            "name": "GuildUnavailable",
            "signature": "GuildUnavailable = 'guildUnavailable'",
            "source": Object {
              "filename": "dist/index.d.ts",
              "line": 1723,
              "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L1723",
              "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L1723",
            },
            "value": "guildUnavailable",
          },
          Object {
            "docs": Array [],
            "id": "Events.GuildUpdate",
            "kind": "EnumMemberDeclaration",
            "name": "GuildUpdate",
            "signature": "GuildUpdate = 'guildUpdate'",
            "source": Object {
              "filename": "dist/index.d.ts",
              "line": 1731,
              "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L1731",
              "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L1731",
            },
            "value": "guildUpdate",
          },
          Object {
            "docs": Array [],
            "id": "Events.Invalidated",
            "kind": "EnumMemberDeclaration",
            "name": "Invalidated",
            "signature": "Invalidated = 'invalidated'",
            "source": Object {
              "filename": "dist/index.d.ts",
              "line": 1745,
              "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L1745",
              "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L1745",
            },
            "value": "invalidated",
          },
          Object {
            "docs": Array [],
            "id": "Events.InviteCreate",
            "kind": "EnumMemberDeclaration",
            "name": "InviteCreate",
            "signature": "InviteCreate = 'inviteCreate'",
            "source": Object {
              "filename": "dist/index.d.ts",
              "line": 1732,
              "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L1732",
              "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L1732",
            },
            "value": "inviteCreate",
          },
          Object {
            "docs": Array [],
            "id": "Events.InviteDelete",
            "kind": "EnumMemberDeclaration",
            "name": "InviteDelete",
            "signature": "InviteDelete = 'inviteDelete'",
            "source": Object {
              "filename": "dist/index.d.ts",
              "line": 1733,
              "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L1733",
              "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L1733",
            },
            "value": "inviteDelete",
          },
          Object {
            "docs": Array [],
            "id": "Events.MentionPrefixOnly",
            "kind": "EnumMemberDeclaration",
            "name": "MentionPrefixOnly",
            "signature": "MentionPrefixOnly = 'mentionPrefixOnly'",
            "source": Object {
              "filename": "dist/index.d.ts",
              "line": 1760,
              "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L1760",
              "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L1760",
            },
            "value": "mentionPrefixOnly",
          },
          Object {
            "docs": Array [],
            "id": "Events.Message",
            "kind": "EnumMemberDeclaration",
            "name": "Message",
            "signature": "Message = 'message'",
            "source": Object {
              "filename": "dist/index.d.ts",
              "line": 1734,
              "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L1734",
              "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L1734",
            },
            "value": "message",
          },
          Object {
            "docs": Array [],
            "id": "Events.MessageDelete",
            "kind": "EnumMemberDeclaration",
            "name": "MessageDelete",
            "signature": "MessageDelete = 'messageDelete'",
            "source": Object {
              "filename": "dist/index.d.ts",
              "line": 1735,
              "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L1735",
              "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L1735",
            },
            "value": "messageDelete",
          },
          Object {
            "docs": Array [],
            "id": "Events.MessageDeleteBulk",
            "kind": "EnumMemberDeclaration",
            "name": "MessageDeleteBulk",
            "signature": "MessageDeleteBulk = 'messageDeleteBulk'",
            "source": Object {
              "filename": "dist/index.d.ts",
              "line": 1738,
              "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L1738",
              "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L1738",
            },
            "value": "messageDeleteBulk",
          },
          Object {
            "docs": Array [],
            "id": "Events.MessageReactionAdd",
            "kind": "EnumMemberDeclaration",
            "name": "MessageReactionAdd",
            "signature": "MessageReactionAdd = 'messageReactionAdd'",
            "source": Object {
              "filename": "dist/index.d.ts",
              "line": 1739,
              "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L1739",
              "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L1739",
            },
            "value": "messageReactionAdd",
          },
          Object {
            "docs": Array [],
            "id": "Events.MessageReactionRemove",
            "kind": "EnumMemberDeclaration",
            "name": "MessageReactionRemove",
            "signature": "MessageReactionRemove = 'messageReactionRemove'",
            "source": Object {
              "filename": "dist/index.d.ts",
              "line": 1740,
              "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L1740",
              "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L1740",
            },
            "value": "messageReactionRemove",
          },
          Object {
            "docs": Array [],
            "id": "Events.MessageReactionRemoveAll",
            "kind": "EnumMemberDeclaration",
            "name": "MessageReactionRemoveAll",
            "signature": "MessageReactionRemoveAll = 'messageReactionRemoveAll'",
            "source": Object {
              "filename": "dist/index.d.ts",
              "line": 1736,
              "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L1736",
              "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L1736",
            },
            "value": "messageReactionRemoveAll",
          },
          Object {
            "docs": Array [],
            "id": "Events.MessageReactionRemoveEmoji",
            "kind": "EnumMemberDeclaration",
            "name": "MessageReactionRemoveEmoji",
            "signature": "MessageReactionRemoveEmoji = 'messageReactionRemoveEmoji'",
            "source": Object {
              "filename": "dist/index.d.ts",
              "line": 1737,
              "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L1737",
              "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L1737",
            },
            "value": "messageReactionRemoveEmoji",
          },
          Object {
            "docs": Array [],
            "id": "Events.MessageUpdate",
            "kind": "EnumMemberDeclaration",
            "name": "MessageUpdate",
            "signature": "MessageUpdate = 'messageUpdate'",
            "source": Object {
              "filename": "dist/index.d.ts",
              "line": 1741,
              "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L1741",
              "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L1741",
            },
            "value": "messageUpdate",
          },
          Object {
            "docs": Array [],
            "id": "Events.PiecePostLoad",
            "kind": "EnumMemberDeclaration",
            "name": "PiecePostLoad",
            "signature": "PiecePostLoad = 'piecePostLoad'",
            "source": Object {
              "filename": "dist/index.d.ts",
              "line": 1759,
              "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L1759",
              "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L1759",
            },
            "value": "piecePostLoad",
          },
          Object {
            "docs": Array [],
            "id": "Events.PieceUnload",
            "kind": "EnumMemberDeclaration",
            "name": "PieceUnload",
            "signature": "PieceUnload = 'pieceUnload'",
            "source": Object {
              "filename": "dist/index.d.ts",
              "line": 1758,
              "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L1758",
              "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L1758",
            },
            "value": "pieceUnload",
          },
          Object {
            "docs": Array [],
            "id": "Events.PluginLoaded",
            "kind": "EnumMemberDeclaration",
            "name": "PluginLoaded",
            "signature": "PluginLoaded = 'pluginLoaded'",
            "source": Object {
              "filename": "dist/index.d.ts",
              "line": 1772,
              "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L1772",
              "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L1772",
            },
            "value": "pluginLoaded",
          },
          Object {
            "docs": Array [],
            "id": "Events.PreCommandRun",
            "kind": "EnumMemberDeclaration",
            "name": "PreCommandRun",
            "signature": "PreCommandRun = 'preCommandRun'",
            "source": Object {
              "filename": "dist/index.d.ts",
              "line": 1765,
              "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L1765",
              "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L1765",
            },
            "value": "preCommandRun",
          },
          Object {
            "docs": Array [],
            "id": "Events.PrefixedMessage",
            "kind": "EnumMemberDeclaration",
            "name": "PrefixedMessage",
            "signature": "PrefixedMessage = 'prefixedMessage'",
            "source": Object {
              "filename": "dist/index.d.ts",
              "line": 1762,
              "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L1762",
              "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L1762",
            },
            "value": "prefixedMessage",
          },
          Object {
            "docs": Array [],
            "id": "Events.PresenceUpdate",
            "kind": "EnumMemberDeclaration",
            "name": "PresenceUpdate",
            "signature": "PresenceUpdate = 'presenceUpdate'",
            "source": Object {
              "filename": "dist/index.d.ts",
              "line": 1742,
              "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L1742",
              "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L1742",
            },
            "value": "presenceUpdate",
          },
          Object {
            "docs": Array [],
            "id": "Events.RateLimit",
            "kind": "EnumMemberDeclaration",
            "name": "RateLimit",
            "signature": "RateLimit = 'rateLimit'",
            "source": Object {
              "filename": "dist/index.d.ts",
              "line": 1743,
              "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L1743",
              "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L1743",
            },
            "value": "rateLimit",
          },
          Object {
            "docs": Array [],
            "id": "Events.Ready",
            "kind": "EnumMemberDeclaration",
            "name": "Ready",
            "signature": "Ready = 'ready'",
            "source": Object {
              "filename": "dist/index.d.ts",
              "line": 1744,
              "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L1744",
              "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L1744",
            },
            "value": "ready",
          },
          Object {
            "docs": Array [],
            "id": "Events.RoleCreate",
            "kind": "EnumMemberDeclaration",
            "name": "RoleCreate",
            "signature": "RoleCreate = 'roleCreate'",
            "source": Object {
              "filename": "dist/index.d.ts",
              "line": 1746,
              "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L1746",
              "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L1746",
            },
            "value": "roleCreate",
          },
          Object {
            "docs": Array [],
            "id": "Events.RoleDelete",
            "kind": "EnumMemberDeclaration",
            "name": "RoleDelete",
            "signature": "RoleDelete = 'roleDelete'",
            "source": Object {
              "filename": "dist/index.d.ts",
              "line": 1747,
              "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L1747",
              "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L1747",
            },
            "value": "roleDelete",
          },
          Object {
            "docs": Array [],
            "id": "Events.RoleUpdate",
            "kind": "EnumMemberDeclaration",
            "name": "RoleUpdate",
            "signature": "RoleUpdate = 'roleUpdate'",
            "source": Object {
              "filename": "dist/index.d.ts",
              "line": 1748,
              "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L1748",
              "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L1748",
            },
            "value": "roleUpdate",
          },
          Object {
            "docs": Array [],
            "id": "Events.ShardDisconnect",
            "kind": "EnumMemberDeclaration",
            "name": "ShardDisconnect",
            "signature": "ShardDisconnect = 'shardDisconnect'",
            "source": Object {
              "filename": "dist/index.d.ts",
              "line": 1753,
              "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L1753",
              "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L1753",
            },
            "value": "shardDisconnect",
          },
          Object {
            "docs": Array [],
            "id": "Events.ShardError",
            "kind": "EnumMemberDeclaration",
            "name": "ShardError",
            "signature": "ShardError = 'shardError'",
            "source": Object {
              "filename": "dist/index.d.ts",
              "line": 1754,
              "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L1754",
              "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L1754",
            },
            "value": "shardError",
          },
          Object {
            "docs": Array [],
            "id": "Events.ShardReady",
            "kind": "EnumMemberDeclaration",
            "name": "ShardReady",
            "signature": "ShardReady = 'shardReady'",
            "source": Object {
              "filename": "dist/index.d.ts",
              "line": 1755,
              "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L1755",
              "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L1755",
            },
            "value": "shardReady",
          },
          Object {
            "docs": Array [],
            "id": "Events.ShardReconnecting",
            "kind": "EnumMemberDeclaration",
            "name": "ShardReconnecting",
            "signature": "ShardReconnecting = 'shardReconnecting'",
            "source": Object {
              "filename": "dist/index.d.ts",
              "line": 1756,
              "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L1756",
              "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L1756",
            },
            "value": "shardReconnecting",
          },
          Object {
            "docs": Array [],
            "id": "Events.ShardResume",
            "kind": "EnumMemberDeclaration",
            "name": "ShardResume",
            "signature": "ShardResume = 'shardResume'",
            "source": Object {
              "filename": "dist/index.d.ts",
              "line": 1757,
              "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L1757",
              "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L1757",
            },
            "value": "shardResume",
          },
          Object {
            "docs": Array [],
            "id": "Events.TypingsStart",
            "kind": "EnumMemberDeclaration",
            "name": "TypingsStart",
            "signature": "TypingsStart = 'typingStart'",
            "source": Object {
              "filename": "dist/index.d.ts",
              "line": 1749,
              "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L1749",
              "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L1749",
            },
            "value": "typingStart",
          },
          Object {
            "docs": Array [],
            "id": "Events.UnknownCommand",
            "kind": "EnumMemberDeclaration",
            "name": "UnknownCommand",
            "signature": "UnknownCommand = 'unknownCommand'",
            "source": Object {
              "filename": "dist/index.d.ts",
              "line": 1764,
              "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L1764",
              "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L1764",
            },
            "value": "unknownCommand",
          },
          Object {
            "docs": Array [],
            "id": "Events.UnknownCommandName",
            "kind": "EnumMemberDeclaration",
            "name": "UnknownCommandName",
            "signature": "UnknownCommandName = 'unknownCommandName'",
            "source": Object {
              "filename": "dist/index.d.ts",
              "line": 1763,
              "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L1763",
              "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L1763",
            },
            "value": "unknownCommandName",
          },
          Object {
            "docs": Array [],
            "id": "Events.UserUpdate",
            "kind": "EnumMemberDeclaration",
            "name": "UserUpdate",
            "signature": "UserUpdate = 'userUpdate'",
            "source": Object {
              "filename": "dist/index.d.ts",
              "line": 1750,
              "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L1750",
              "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L1750",
            },
            "value": "userUpdate",
          },
          Object {
            "docs": Array [],
            "id": "Events.VoiceStateUpdate",
            "kind": "EnumMemberDeclaration",
            "name": "VoiceStateUpdate",
            "signature": "VoiceStateUpdate = 'voiceStateUpdate'",
            "source": Object {
              "filename": "dist/index.d.ts",
              "line": 1751,
              "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L1751",
              "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L1751",
            },
            "value": "voiceStateUpdate",
          },
          Object {
            "docs": Array [],
            "id": "Events.Warn",
            "kind": "EnumMemberDeclaration",
            "name": "Warn",
            "signature": "Warn = 'warn'",
            "source": Object {
              "filename": "dist/index.d.ts",
              "line": 1713,
              "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L1713",
              "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L1713",
            },
            "value": "warn",
          },
          Object {
            "docs": Array [],
            "id": "Events.WebhookUpdate",
            "kind": "EnumMemberDeclaration",
            "name": "WebhookUpdate",
            "signature": "WebhookUpdate = 'webhookUpdate'",
            "source": Object {
              "filename": "dist/index.d.ts",
              "line": 1752,
              "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L1752",
              "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L1752",
            },
            "value": "webhookUpdate",
          },
        ],
        "name": "Events",
        "signature": "enum Events {
    ChannelCreate = 'channelCreate',
    ChannelDelete = 'channelDelete',
    ChannelPinsUpdate = 'channelPinsUpdate',
    ChannelUpdate = 'channelUpdate',
    Debug = 'debug',
    Warn = 'warn',
    Disconnect = 'disconnect',
    EmojiCreate = 'emojiCreate',
    EmojiDelete = 'emojiDelete',
    EmojiUpdate = 'emojiUpdate',
    Error = 'error',
    GuildBanAdd = 'guildBanAdd',
    GuildBanRemove = 'guildBanRemove',
    GuildCreate = 'guildCreate',
    GuildDelete = 'guildDelete',
    GuildUnavailable = 'guildUnavailable',
    GuildIntegrationsUpdate = 'guildIntegrationsUpdate',
    GuildMemberAdd = 'guildMemberAdd',
    GuildMemberAvailable = 'guildMemberAvailable',
    GuildMemberRemove = 'guildMemberRemove',
    GuildMembersChunk = 'guildMembersChunk',
    GuildMemberSpeaking = 'guildMemberSpeaking',
    GuildMemberUpdate = 'guildMemberUpdate',
    GuildUpdate = 'guildUpdate',
    InviteCreate = 'inviteCreate',
    InviteDelete = 'inviteDelete',
    Message = 'message',
    MessageDelete = 'messageDelete',
    MessageReactionRemoveAll = 'messageReactionRemoveAll',
    MessageReactionRemoveEmoji = 'messageReactionRemoveEmoji',
    MessageDeleteBulk = 'messageDeleteBulk',
    MessageReactionAdd = 'messageReactionAdd',
    MessageReactionRemove = 'messageReactionRemove',
    MessageUpdate = 'messageUpdate',
    PresenceUpdate = 'presenceUpdate',
    RateLimit = 'rateLimit',
    Ready = 'ready',
    Invalidated = 'invalidated',
    RoleCreate = 'roleCreate',
    RoleDelete = 'roleDelete',
    RoleUpdate = 'roleUpdate',
    TypingsStart = 'typingStart',
    UserUpdate = 'userUpdate',
    VoiceStateUpdate = 'voiceStateUpdate',
    WebhookUpdate = 'webhookUpdate',
    ShardDisconnect = 'shardDisconnect',
    ShardError = 'shardError',
    ShardReady = 'shardReady',
    ShardReconnecting = 'shardReconnecting',
    ShardResume = 'shardResume',
    PieceUnload = 'pieceUnload',
    PiecePostLoad = 'piecePostLoad',
    MentionPrefixOnly = 'mentionPrefixOnly',
    EventError = 'eventError',
    PrefixedMessage = 'prefixedMessage',
    UnknownCommandName = 'unknownCommandName',
    UnknownCommand = 'unknownCommand',
    PreCommandRun = 'preCommandRun',
    CommandDenied = 'commandDenied',
    CommandAccepted = 'commandAccepted',
    CommandRun = 'commandRun',
    CommandSuccess = 'commandSuccess',
    CommandFinish = 'commandFinish',
    CommandError = 'commandError',
    PluginLoaded = 'pluginLoaded',
}",
        "source": Object {
          "filename": "dist/index.d.ts",
          "line": 1707,
          "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L1707",
          "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L1707",
        },
      },
      Object {
        "docs": Array [
          "/**
 * The logger levels for the [[ILogger]].
 */",
        ],
        "id": "LogLevel",
        "isConst": true,
        "kind": "EnumDeclaration",
        "members": Array [
          Object {
            "docs": Array [
              "/**
     * The debug level, used when calling [[ILogger.debug]].
     */",
            ],
            "id": "LogLevel.Debug",
            "kind": "EnumMemberDeclaration",
            "name": "Debug",
            "signature": "Debug = 20",
            "source": Object {
              "filename": "dist/index.d.ts",
              "line": 1327,
              "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L1327",
              "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L1327",
            },
            "value": 20,
          },
          Object {
            "docs": Array [
              "/**
     * The error level, used when calling [[ILogger.error]].
     */",
            ],
            "id": "LogLevel.Error",
            "kind": "EnumMemberDeclaration",
            "name": "Error",
            "signature": "Error = 50",
            "source": Object {
              "filename": "dist/index.d.ts",
              "line": 1339,
              "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L1339",
              "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L1339",
            },
            "value": 50,
          },
          Object {
            "docs": Array [
              "/**
     * The critical level, used when calling [[ILogger.fatal]].
     */",
            ],
            "id": "LogLevel.Fatal",
            "kind": "EnumMemberDeclaration",
            "name": "Fatal",
            "signature": "Fatal = 60",
            "source": Object {
              "filename": "dist/index.d.ts",
              "line": 1343,
              "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L1343",
              "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L1343",
            },
            "value": 60,
          },
          Object {
            "docs": Array [
              "/**
     * The info level, used when calling [[ILogger.info]].
     */",
            ],
            "id": "LogLevel.Info",
            "kind": "EnumMemberDeclaration",
            "name": "Info",
            "signature": "Info = 30",
            "source": Object {
              "filename": "dist/index.d.ts",
              "line": 1331,
              "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L1331",
              "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L1331",
            },
            "value": 30,
          },
          Object {
            "docs": Array [
              "/**
     * An unknown or uncategorized level.
     */",
            ],
            "id": "LogLevel.None",
            "kind": "EnumMemberDeclaration",
            "name": "None",
            "signature": "None = 100",
            "source": Object {
              "filename": "dist/index.d.ts",
              "line": 1347,
              "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L1347",
              "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L1347",
            },
            "value": 100,
          },
          Object {
            "docs": Array [
              "/**
     * The lowest log level, used when calling [[ILogger.trace]].
     */",
            ],
            "id": "LogLevel.Trace",
            "kind": "EnumMemberDeclaration",
            "name": "Trace",
            "signature": "Trace = 10",
            "source": Object {
              "filename": "dist/index.d.ts",
              "line": 1323,
              "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L1323",
              "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L1323",
            },
            "value": 10,
          },
          Object {
            "docs": Array [
              "/**
     * The warning level, used when calling [[ILogger.warn]].
     */",
            ],
            "id": "LogLevel.Warn",
            "kind": "EnumMemberDeclaration",
            "name": "Warn",
            "signature": "Warn = 40",
            "source": Object {
              "filename": "dist/index.d.ts",
              "line": 1335,
              "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L1335",
              "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L1335",
            },
            "value": 40,
          },
        ],
        "name": "LogLevel",
        "signature": "const enum LogLevel {
    Trace = 10,
    Debug = 20,
    Info = 30,
    Warn = 40,
    Error = 50,
    Fatal = 60,
    None = 100,
}",
        "source": Object {
          "filename": "dist/index.d.ts",
          "line": 1319,
          "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L1319",
          "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L1319",
        },
      },
      Object {
        "docs": Array [],
        "id": "PluginHook",
        "isConst": true,
        "kind": "EnumDeclaration",
        "members": Array [
          Object {
            "docs": Array [],
            "id": "PluginHook.PostInitialization",
            "kind": "EnumMemberDeclaration",
            "name": "PostInitialization",
            "signature": "PostInitialization = 'postInitialization'",
            "source": Object {
              "filename": "dist/index.d.ts",
              "line": 1184,
              "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L1184",
              "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L1184",
            },
            "value": "postInitialization",
          },
          Object {
            "docs": Array [],
            "id": "PluginHook.PostLogin",
            "kind": "EnumMemberDeclaration",
            "name": "PostLogin",
            "signature": "PostLogin = 'postLogin'",
            "source": Object {
              "filename": "dist/index.d.ts",
              "line": 1186,
              "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L1186",
              "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L1186",
            },
            "value": "postLogin",
          },
          Object {
            "docs": Array [],
            "id": "PluginHook.PreGenericsInitialization",
            "kind": "EnumMemberDeclaration",
            "name": "PreGenericsInitialization",
            "signature": "PreGenericsInitialization = 'preGenericsInitialization'",
            "source": Object {
              "filename": "dist/index.d.ts",
              "line": 1182,
              "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L1182",
              "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L1182",
            },
            "value": "preGenericsInitialization",
          },
          Object {
            "docs": Array [],
            "id": "PluginHook.PreInitialization",
            "kind": "EnumMemberDeclaration",
            "name": "PreInitialization",
            "signature": "PreInitialization = 'preInitialization'",
            "source": Object {
              "filename": "dist/index.d.ts",
              "line": 1183,
              "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L1183",
              "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L1183",
            },
            "value": "preInitialization",
          },
          Object {
            "docs": Array [],
            "id": "PluginHook.PreLogin",
            "kind": "EnumMemberDeclaration",
            "name": "PreLogin",
            "signature": "PreLogin = 'preLogin'",
            "source": Object {
              "filename": "dist/index.d.ts",
              "line": 1185,
              "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L1185",
              "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L1185",
            },
            "value": "preLogin",
          },
        ],
        "name": "PluginHook",
        "signature": "const enum PluginHook {
    PreGenericsInitialization = 'preGenericsInitialization',
    PreInitialization = 'preInitialization',
    PostInitialization = 'postInitialization',
    PreLogin = 'preLogin',
    PostLogin = 'postLogin',
}",
        "source": Object {
          "filename": "dist/index.d.ts",
          "line": 1181,
          "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L1181",
          "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L1181",
        },
      },
      Object {
        "docs": Array [
          "/**
 * The condition for a [[PreconditionContainerArray]].
 */",
        ],
        "id": "PreconditionRunCondition",
        "isConst": false,
        "kind": "EnumDeclaration",
        "members": Array [
          Object {
            "docs": Array [
              "/**
     * Defines a condition where all the entries must pass. This uses [[PreconditionConditionAnd]].
     * @since 1.0.0
     */",
            ],
            "id": "PreconditionRunCondition.And",
            "kind": "EnumMemberDeclaration",
            "name": "And",
            "signature": "And = 0",
            "source": Object {
              "filename": "dist/index.d.ts",
              "line": 815,
              "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L815",
              "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L815",
            },
            "value": 0,
          },
          Object {
            "docs": Array [
              "/**
     * Defines a condition where at least one entry must pass. This uses [[PreconditionConditionOr]].
     * @since 1.0.0
     */",
            ],
            "id": "PreconditionRunCondition.Or",
            "kind": "EnumMemberDeclaration",
            "name": "Or",
            "signature": "Or = 1",
            "source": Object {
              "filename": "dist/index.d.ts",
              "line": 820,
              "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L820",
              "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L820",
            },
            "value": 1,
          },
        ],
        "name": "PreconditionRunCondition",
        "signature": "enum PreconditionRunCondition {
    And = 0,
    Or = 1,
}",
        "source": Object {
          "filename": "dist/index.d.ts",
          "line": 810,
          "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L810",
          "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L810",
        },
      },
      Object {
        "docs": Array [
          "/**
 * The run mode for a [[PreconditionContainerArray]].
 * @since 1.0.0
 */",
        ],
        "id": "PreconditionRunMode",
        "isConst": true,
        "kind": "EnumDeclaration",
        "members": Array [
          Object {
            "docs": Array [
              "/**
     * All entries are run in parallel using \`Promise.all\`, then the results are processed after all of them have
     * completed.
     * @since 1.0.0
     */",
            ],
            "id": "PreconditionRunMode.Parallel",
            "kind": "EnumMemberDeclaration",
            "name": "Parallel",
            "signature": "Parallel = 1",
            "source": Object {
              "filename": "dist/index.d.ts",
              "line": 805,
              "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L805",
              "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L805",
            },
            "value": 1,
          },
          Object {
            "docs": Array [
              "/**
     * The entries are run sequentially, this is the default behaviour and can be slow when doing long asynchronous
     * tasks, but is performance savvy.
     * @since 1.0.0
     */",
            ],
            "id": "PreconditionRunMode.Sequential",
            "kind": "EnumMemberDeclaration",
            "name": "Sequential",
            "signature": "Sequential = 0",
            "source": Object {
              "filename": "dist/index.d.ts",
              "line": 799,
              "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L799",
              "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L799",
            },
            "value": 0,
          },
        ],
        "name": "PreconditionRunMode",
        "signature": "const enum PreconditionRunMode {
    Sequential = 0,
    Parallel = 1,
}",
        "source": Object {
          "filename": "dist/index.d.ts",
          "line": 793,
          "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L793",
          "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L793",
        },
      },
    ],
    "functions": Array [
      Object {
        "docs": Array [
          "/**
 * Creates an Err with no error.
 * @return An erroneous Result.
 */",
          "/**
 * Creates an Err.
 * @typeparam E The error's type.
 * @param x Value to use.
 * @return An erroneous Result.
 */",
        ],
        "id": "err",
        "kind": "FunctionDeclaration",
        "name": "err",
        "signature": "err: { (): any; <E>(x: E): any };",
        "source": Object {
          "filename": "dist/index.d.ts",
          "line": 58,
          "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L58",
          "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L58",
        },
        "type": "{ (): any; <E>(x: E): any; }",
      },
      Object {
        "docs": Array [
          "/**
 * Determines whether or not a result is an Err.
 * @typeparam T The result's type.
 * @typeparam E The error's type.
 */",
        ],
        "id": "isErr",
        "kind": "FunctionDeclaration",
        "name": "isErr",
        "signature": "isErr: <T, E>(x: Result<T, E>) => x is any;",
        "source": Object {
          "filename": "dist/index.d.ts",
          "line": 77,
          "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L77",
          "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L77",
        },
        "type": "<T, E>(x: Result<T, E>) => x is any",
      },
      Object {
        "docs": Array [
          "/**
 * Type-safe helper to preserve the type parameter's type.
 * @param x The value to check.
 */",
          "/**
 * Determines whether or not an arbitrary value is a Maybe.
 * @param x The value to check.
 */",
        ],
        "id": "isMaybe",
        "kind": "FunctionDeclaration",
        "name": "isMaybe",
        "signature": "isMaybe: { <T>(x: Maybe<T>): true; <T>(x: unknown): x is any };",
        "source": Object {
          "filename": "dist/index.d.ts",
          "line": 144,
          "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L144",
          "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L144",
        },
        "type": "{ <T>(x: Maybe<T>): true; <T>(x: unknown): x is any; }",
      },
      Object {
        "docs": Array [
          "/**
 * Determines whether or not a Maybe is a None.
 * @typeparam T The value's type.
 */",
        ],
        "id": "isNone",
        "kind": "FunctionDeclaration",
        "name": "isNone",
        "signature": "isNone: <T>(x: Maybe<T>) => x is any;",
        "source": Object {
          "filename": "dist/index.d.ts",
          "line": 139,
          "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L139",
          "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L139",
        },
        "type": "<T>(x: Maybe<T>) => x is any",
      },
      Object {
        "docs": Array [
          "/**
 * Determines whether or not a result is an Ok.
 * @typeparam T The result's type.
 * @typeparam E The error's type.
 */",
        ],
        "id": "isOk",
        "kind": "FunctionDeclaration",
        "name": "isOk",
        "signature": "isOk: <T, E>(x: Result<T, E>) => x is any;",
        "source": Object {
          "filename": "dist/index.d.ts",
          "line": 71,
          "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L71",
          "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L71",
        },
        "type": "<T, E>(x: Result<T, E>) => x is any",
      },
      Object {
        "docs": Array [
          "/**
 * Determines whether or not a Maybe is a Some.
 * @typeparam T The value's type.
 */",
        ],
        "id": "isSome",
        "kind": "FunctionDeclaration",
        "name": "isSome",
        "signature": "isSome: <T>(x: Maybe<T>) => x is any;",
        "source": Object {
          "filename": "dist/index.d.ts",
          "line": 134,
          "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L134",
          "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L134",
        },
        "type": "<T>(x: Maybe<T>) => x is any",
      },
      Object {
        "docs": Array [
          "/**
 * Returns the maybe itself.
 * @param value The value to convert.
 */",
          "/**
 * Creates a [[None]] from an existing [[None]] or a \`null\`.
 * @param value The value to convert.
 */",
          "/**
 * Creates a [[Some]] from a non-null value or an existing [[Some]], or a [[None]] otherwise.
 * @param value The value to convert.
 */",
          "/**
 * Creates a [[Some]] from a non-null value or an existing [[Some]].
 * @param value The value to convert.
 */",
        ],
        "id": "maybe",
        "kind": "FunctionDeclaration",
        "name": "maybe",
        "signature": "maybe: {
    <T, V extends unknown>(value: V): V;
    (value: any): any;
    <T>(value: any): any;
    <T>(value: any): any;
};",
        "source": Object {
          "filename": "dist/index.d.ts",
          "line": 97,
          "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L97",
          "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L97",
        },
        "type": "{ <T, V extends unknown>(value: V): V; (value: any): any; <T>(value: any): any; <T>(value: any): any; }",
      },
      Object {
        "docs": Array [
          "/**
 * Creates a None value.
 * @return A non-existing Maybe.
 */",
        ],
        "id": "none",
        "kind": "FunctionDeclaration",
        "name": "none",
        "signature": "none: () => any;",
        "source": Object {
          "filename": "dist/index.d.ts",
          "line": 129,
          "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L129",
          "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L129",
        },
        "type": "() => any",
      },
      Object {
        "docs": Array [
          "/**
 * Creates an Ok with no value.
 * @return A successful Result.
 */",
          "/**
 * Creates an Ok.
 * @typeparam T The result's type.
 * @param x Value to use.
 * @return A successful Result.
 */",
        ],
        "id": "ok",
        "kind": "FunctionDeclaration",
        "name": "ok",
        "signature": "ok: { (): any; <T>(x: T): any };",
        "source": Object {
          "filename": "dist/index.d.ts",
          "line": 46,
          "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L46",
          "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L46",
        },
        "type": "{ (): any; <T>(x: T): any; }",
      },
      Object {
        "docs": Array [
          "/**
 * Creates a None with no value.
 * @return An existing Maybe.
 */",
          "/**
 * Creates a None with a value.
 * @typeparam T The value's type.
 * @param x Value to use.
 * @return An existing Maybe.
 */",
        ],
        "id": "some",
        "kind": "FunctionDeclaration",
        "name": "some",
        "signature": "some: { (): any; <T>(x: T): any };",
        "source": Object {
          "filename": "dist/index.d.ts",
          "line": 117,
          "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L117",
          "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L117",
        },
        "type": "{ (): any; <T>(x: T): any; }",
      },
    ],
    "interfaces": Array [
      Object {
        "docs": Array [],
        "id": "ArgOptions",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [],
        },
        "name": "ArgOptions",
        "signature": "interface ArgOptions extends Omit<ArgumentContext, 'message' | 'command'> {}",
        "source": Object {
          "filename": "dist/index.d.ts",
          "line": 636,
          "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L636",
          "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L636",
        },
      },
      Object {
        "docs": Array [
          "/**
 * The callback used for [[Args.nextMaybe]] and [[Args.next]].
 */",
        ],
        "id": "ArgsNextCallback",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [
            Object {
              "docs": Array [
                "/**
     * The value to be mapped.
     */",
              ],
              "id": "ArgsNextCallback.0-call-signature",
              "kind": "InterfaceCallSignatureDeclaration",
              "name": "call signature",
              "signature": "(value: string): Maybe<T>;",
              "source": Object {
                "filename": "dist/index.d.ts",
                "line": 652,
                "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L652",
                "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L652",
              },
            },
          ],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [],
        },
        "name": "ArgsNextCallback",
        "signature": "interface ArgsNextCallback<T> {}",
        "source": Object {
          "filename": "dist/index.d.ts",
          "line": 648,
          "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L648",
          "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L648",
        },
      },
      Object {
        "docs": Array [],
        "id": "ArgType",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "ArgType.boolean",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "boolean",
              "signature": "boolean: boolean;",
              "source": Object {
                "filename": "dist/index.d.ts",
                "line": 618,
                "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L618",
                "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L618",
              },
              "type": "boolean",
            },
            Object {
              "docs": Array [],
              "id": "ArgType.channel",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "channel",
              "signature": "channel: Channel;",
              "source": Object {
                "filename": "dist/index.d.ts",
                "line": 619,
                "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L619",
                "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L619",
              },
              "type": "any",
            },
            Object {
              "docs": Array [],
              "id": "ArgType.date",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "date",
              "signature": "date: Date;",
              "source": Object {
                "filename": "dist/index.d.ts",
                "line": 620,
                "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L620",
                "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L620",
              },
              "type": "Date",
            },
            Object {
              "docs": Array [],
              "id": "ArgType.dmChannel",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "dmChannel",
              "signature": "dmChannel: DMChannel;",
              "source": Object {
                "filename": "dist/index.d.ts",
                "line": 621,
                "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L621",
                "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L621",
              },
              "type": "any",
            },
            Object {
              "docs": Array [],
              "id": "ArgType.float",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "float",
              "signature": "float: number;",
              "source": Object {
                "filename": "dist/index.d.ts",
                "line": 622,
                "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L622",
                "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L622",
              },
              "type": "number",
            },
            Object {
              "docs": Array [],
              "id": "ArgType.guildChannel",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "guildChannel",
              "signature": "guildChannel: GuildChannel;",
              "source": Object {
                "filename": "dist/index.d.ts",
                "line": 623,
                "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L623",
                "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L623",
              },
              "type": "any",
            },
            Object {
              "docs": Array [],
              "id": "ArgType.hyperlink",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "hyperlink",
              "signature": "hyperlink: URL;",
              "source": Object {
                "filename": "dist/index.d.ts",
                "line": 624,
                "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L624",
                "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L624",
              },
              "type": "any",
            },
            Object {
              "docs": Array [],
              "id": "ArgType.integer",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "integer",
              "signature": "integer: number;",
              "source": Object {
                "filename": "dist/index.d.ts",
                "line": 625,
                "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L625",
                "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L625",
              },
              "type": "number",
            },
            Object {
              "docs": Array [],
              "id": "ArgType.member",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "member",
              "signature": "member: GuildMember;",
              "source": Object {
                "filename": "dist/index.d.ts",
                "line": 626,
                "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L626",
                "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L626",
              },
              "type": "any",
            },
            Object {
              "docs": Array [],
              "id": "ArgType.message",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "message",
              "signature": "message: Message;",
              "source": Object {
                "filename": "dist/index.d.ts",
                "line": 627,
                "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L627",
                "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L627",
              },
              "type": "any",
            },
            Object {
              "docs": Array [],
              "id": "ArgType.newsChannel",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "newsChannel",
              "signature": "newsChannel: NewsChannel;",
              "source": Object {
                "filename": "dist/index.d.ts",
                "line": 628,
                "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L628",
                "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L628",
              },
              "type": "any",
            },
            Object {
              "docs": Array [],
              "id": "ArgType.number",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "number",
              "signature": "number: number;",
              "source": Object {
                "filename": "dist/index.d.ts",
                "line": 629,
                "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L629",
                "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L629",
              },
              "type": "number",
            },
            Object {
              "docs": Array [],
              "id": "ArgType.role",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "role",
              "signature": "role: Role;",
              "source": Object {
                "filename": "dist/index.d.ts",
                "line": 630,
                "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L630",
                "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L630",
              },
              "type": "any",
            },
            Object {
              "docs": Array [],
              "id": "ArgType.string",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "string",
              "signature": "string: string;",
              "source": Object {
                "filename": "dist/index.d.ts",
                "line": 631,
                "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L631",
                "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L631",
              },
              "type": "string",
            },
            Object {
              "docs": Array [],
              "id": "ArgType.textChannel",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "textChannel",
              "signature": "textChannel: TextChannel;",
              "source": Object {
                "filename": "dist/index.d.ts",
                "line": 632,
                "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L632",
                "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L632",
              },
              "type": "any",
            },
            Object {
              "docs": Array [],
              "id": "ArgType.user",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "user",
              "signature": "user: User;",
              "source": Object {
                "filename": "dist/index.d.ts",
                "line": 633,
                "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L633",
                "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L633",
              },
              "type": "any",
            },
            Object {
              "docs": Array [],
              "id": "ArgType.voiceChannel",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "voiceChannel",
              "signature": "voiceChannel: VoiceChannel;",
              "source": Object {
                "filename": "dist/index.d.ts",
                "line": 634,
                "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L634",
                "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L634",
              },
              "type": "any",
            },
          ],
        },
        "name": "ArgType",
        "signature": "interface ArgType {}",
        "source": Object {
          "filename": "dist/index.d.ts",
          "line": 617,
          "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L617",
          "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L617",
        },
      },
      Object {
        "docs": Array [],
        "id": "ArgumentContext",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "ArgumentContext.command",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "command",
              "signature": "command: Command;",
              "source": Object {
                "filename": "dist/index.d.ts",
                "line": 1160,
                "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L1160",
                "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L1160",
              },
              "type": "Command<Args>",
            },
            Object {
              "docs": Array [],
              "id": "ArgumentContext.inclusive",
              "isOptional": true,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "inclusive",
              "signature": "inclusive?: boolean;",
              "source": Object {
                "filename": "dist/index.d.ts",
                "line": 1163,
                "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L1163",
                "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L1163",
              },
              "type": "boolean",
            },
            Object {
              "docs": Array [],
              "id": "ArgumentContext.maximum",
              "isOptional": true,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "maximum",
              "signature": "maximum?: number;",
              "source": Object {
                "filename": "dist/index.d.ts",
                "line": 1162,
                "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L1162",
                "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L1162",
              },
              "type": "number",
            },
            Object {
              "docs": Array [],
              "id": "ArgumentContext.message",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "message",
              "signature": "message: Message;",
              "source": Object {
                "filename": "dist/index.d.ts",
                "line": 1159,
                "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L1159",
                "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L1159",
              },
              "type": "any",
            },
            Object {
              "docs": Array [],
              "id": "ArgumentContext.minimum",
              "isOptional": true,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "minimum",
              "signature": "minimum?: number;",
              "source": Object {
                "filename": "dist/index.d.ts",
                "line": 1161,
                "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L1161",
                "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L1161",
              },
              "type": "number",
            },
          ],
        },
        "name": "ArgumentContext",
        "signature": "interface ArgumentContext extends Record<PropertyKey, unknown> {}",
        "source": Object {
          "filename": "dist/index.d.ts",
          "line": 1158,
          "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L1158",
          "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L1158",
        },
      },
      Object {
        "docs": Array [],
        "id": "ArgumentOptions",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [],
        },
        "name": "ArgumentOptions",
        "signature": "interface ArgumentOptions extends AliasPieceOptions {}",
        "source": Object {
          "filename": "dist/index.d.ts",
          "line": 1156,
          "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L1156",
          "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L1156",
        },
      },
      Object {
        "docs": Array [],
        "id": "ClientLoggerOptions",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "ClientLoggerOptions.instance",
              "isOptional": true,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "instance",
              "signature": "instance?: ILogger;",
              "source": Object {
                "filename": "dist/index.d.ts",
                "line": 1596,
                "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L1596",
                "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L1596",
              },
              "type": "ILogger",
            },
            Object {
              "docs": Array [],
              "id": "ClientLoggerOptions.level",
              "isOptional": true,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "level",
              "signature": "level?: LogLevel;",
              "source": Object {
                "filename": "dist/index.d.ts",
                "line": 1595,
                "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L1595",
                "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L1595",
              },
              "type": "LogLevel",
            },
          ],
        },
        "name": "ClientLoggerOptions",
        "signature": "interface ClientLoggerOptions {}",
        "source": Object {
          "filename": "dist/index.d.ts",
          "line": 1594,
          "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L1594",
          "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L1594",
        },
      },
      Object {
        "docs": Array [],
        "id": "CommandAcceptedPayload",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "CommandAcceptedPayload.context",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "context",
              "signature": "context: CommandContext;",
              "source": Object {
                "filename": "dist/index.d.ts",
                "line": 1794,
                "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L1794",
                "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L1794",
              },
              "type": "CommandContext",
            },
            Object {
              "docs": Array [],
              "id": "CommandAcceptedPayload.parameters",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "parameters",
              "signature": "parameters: string;",
              "source": Object {
                "filename": "dist/index.d.ts",
                "line": 1793,
                "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L1793",
                "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L1793",
              },
              "type": "string",
            },
          ],
        },
        "name": "CommandAcceptedPayload",
        "signature": "interface CommandAcceptedPayload extends ICommandPayload {}",
        "source": Object {
          "filename": "dist/index.d.ts",
          "line": 1792,
          "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L1792",
          "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L1792",
        },
      },
      Object {
        "docs": Array [],
        "id": "CommandContext",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [
                "/**
     * The alias used to run this command
     */",
              ],
              "id": "CommandContext.commandName",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "commandName",
              "signature": "commandName: string;",
              "source": Object {
                "filename": "dist/index.d.ts",
                "line": 1056,
                "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L1056",
                "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L1056",
              },
              "type": "string",
            },
            Object {
              "docs": Array [
                "/**
     * The prefix used to run this command
     */",
              ],
              "id": "CommandContext.prefix",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "prefix",
              "signature": "prefix: string;",
              "source": Object {
                "filename": "dist/index.d.ts",
                "line": 1052,
                "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L1052",
                "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L1052",
              },
              "type": "string",
            },
          ],
        },
        "name": "CommandContext",
        "signature": "interface CommandContext extends Record<PropertyKey, unknown> {}",
        "source": Object {
          "filename": "dist/index.d.ts",
          "line": 1048,
          "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L1048",
          "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L1048",
        },
      },
      Object {
        "docs": Array [],
        "id": "CommandDeniedPayload",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "CommandDeniedPayload.context",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "context",
              "signature": "context: CommandContext;",
              "source": Object {
                "filename": "dist/index.d.ts",
                "line": 1790,
                "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L1790",
                "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L1790",
              },
              "type": "CommandContext",
            },
            Object {
              "docs": Array [],
              "id": "CommandDeniedPayload.parameters",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "parameters",
              "signature": "parameters: string;",
              "source": Object {
                "filename": "dist/index.d.ts",
                "line": 1789,
                "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L1789",
                "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L1789",
              },
              "type": "string",
            },
          ],
        },
        "name": "CommandDeniedPayload",
        "signature": "interface CommandDeniedPayload extends ICommandPayload {}",
        "source": Object {
          "filename": "dist/index.d.ts",
          "line": 1788,
          "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L1788",
          "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L1788",
        },
      },
      Object {
        "docs": Array [],
        "id": "CommandErrorPayload",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "CommandErrorPayload.message",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "message",
              "signature": "message: Message;",
              "source": Object {
                "filename": "dist/index.d.ts",
                "line": 1782,
                "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L1782",
                "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L1782",
              },
              "type": "any",
            },
            Object {
              "docs": Array [],
              "id": "CommandErrorPayload.piece",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "piece",
              "signature": "piece: Command;",
              "source": Object {
                "filename": "dist/index.d.ts",
                "line": 1781,
                "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L1781",
                "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L1781",
              },
              "type": "Command<Args>",
            },
          ],
        },
        "name": "CommandErrorPayload",
        "signature": "interface CommandErrorPayload extends IPieceError {}",
        "source": Object {
          "filename": "dist/index.d.ts",
          "line": 1780,
          "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L1780",
          "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L1780",
        },
      },
      Object {
        "docs": Array [
          "/**
 * The [[Command]] options.
 * @since 1.0.0
 */",
        ],
        "id": "CommandOptions",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [
                "/**
     * The description for the command.
     * @since 1.0.0
     * @default ''
     */",
              ],
              "id": "CommandOptions.description",
              "isOptional": true,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "description",
              "signature": "description?: string;",
              "source": Object {
                "filename": "dist/index.d.ts",
                "line": 1016,
                "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L1016",
                "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L1016",
              },
              "type": "string",
            },
            Object {
              "docs": Array [
                "/**
     * The detailed description for the command.
     * @since 1.0.0
     * @default ''
     */",
              ],
              "id": "CommandOptions.detailedDescription",
              "isOptional": true,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "detailedDescription",
              "signature": "detailedDescription?: string;",
              "source": Object {
                "filename": "dist/index.d.ts",
                "line": 1022,
                "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L1022",
                "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L1022",
              },
              "type": "string",
            },
            Object {
              "docs": Array [
                "/**
     * The [[Precondition]]s to be run, accepts an array of their names.
     * @seealso [[PreconditionContainerArray]]
     * @since 1.0.0
     * @default []
     */",
              ],
              "id": "CommandOptions.preconditions",
              "isOptional": true,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "preconditions",
              "signature": "preconditions?: PreconditionArrayResolvable;",
              "source": Object {
                "filename": "dist/index.d.ts",
                "line": 1029,
                "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L1029",
                "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L1029",
              },
              "type": "PreconditionArrayResolvable",
            },
            Object {
              "docs": Array [
                "/**
     * The quotes accepted by this command, pass \`[]\` to disable them.
     * @since 1.0.0
     * @default
     * [
     *   ['\\"', '\\"'], // Double quotes
     *   ['“', '”'], // Fancy quotes (on iOS)
     *   ['「', '」'] // Corner brackets (CJK)
     * ]
     */",
              ],
              "id": "CommandOptions.quotes",
              "isOptional": true,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "quotes",
              "signature": "quotes?: [string, string][];",
              "source": Object {
                "filename": "dist/index.d.ts",
                "line": 1046,
                "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L1046",
                "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L1046",
              },
              "type": "[string, string][]",
            },
            Object {
              "docs": Array [
                "/**
     * The options for the lexer strategy.
     * @since 1.0.0
     * @default {}
     */",
              ],
              "id": "CommandOptions.strategyOptions",
              "isOptional": true,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "strategyOptions",
              "signature": "strategyOptions?: FlagStrategyOptions;",
              "source": Object {
                "filename": "dist/index.d.ts",
                "line": 1035,
                "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L1035",
                "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L1035",
              },
              "type": "FlagStrategyOptions",
            },
          ],
        },
        "name": "CommandOptions",
        "signature": "interface CommandOptions extends AliasPieceOptions {}",
        "source": Object {
          "filename": "dist/index.d.ts",
          "line": 1010,
          "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L1010",
          "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L1010",
        },
      },
      Object {
        "docs": Array [],
        "id": "CommandSuccessPayload",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "CommandSuccessPayload.parameters",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "parameters",
              "signature": "parameters: string;",
              "source": Object {
                "filename": "dist/index.d.ts",
                "line": 1798,
                "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L1798",
                "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L1798",
              },
              "type": "string",
            },
            Object {
              "docs": Array [],
              "id": "CommandSuccessPayload.result",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "result",
              "signature": "result: unknown;",
              "source": Object {
                "filename": "dist/index.d.ts",
                "line": 1797,
                "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L1797",
                "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L1797",
              },
              "type": "{}",
            },
          ],
        },
        "name": "CommandSuccessPayload",
        "signature": "interface CommandSuccessPayload extends ICommandPayload {}",
        "source": Object {
          "filename": "dist/index.d.ts",
          "line": 1796,
          "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L1796",
          "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L1796",
        },
      },
      Object {
        "docs": Array [],
        "id": "EventErrorPayload",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "EventErrorPayload.piece",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "piece",
              "signature": "piece: Event;",
              "source": Object {
                "filename": "dist/index.d.ts",
                "line": 1778,
                "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L1778",
                "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L1778",
              },
              "type": "Event<\\"\\">",
            },
          ],
        },
        "name": "EventErrorPayload",
        "signature": "interface EventErrorPayload extends IPieceError {}",
        "source": Object {
          "filename": "dist/index.d.ts",
          "line": 1777,
          "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L1777",
          "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L1777",
        },
      },
      Object {
        "docs": Array [],
        "id": "EventOptions",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "EventOptions.emitter",
              "isOptional": true,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "emitter",
              "signature": "readonly emitter?: keyof Client | EventEmitter;",
              "source": Object {
                "filename": "dist/index.d.ts",
                "line": 1303,
                "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L1303",
                "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L1303",
              },
              "type": "any",
            },
            Object {
              "docs": Array [],
              "id": "EventOptions.event",
              "isOptional": true,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "event",
              "signature": "readonly event?: string;",
              "source": Object {
                "filename": "dist/index.d.ts",
                "line": 1304,
                "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L1304",
                "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L1304",
              },
              "type": "string",
            },
            Object {
              "docs": Array [],
              "id": "EventOptions.once",
              "isOptional": true,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "once",
              "signature": "readonly once?: boolean;",
              "source": Object {
                "filename": "dist/index.d.ts",
                "line": 1305,
                "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L1305",
                "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L1305",
              },
              "type": "boolean",
            },
          ],
        },
        "name": "EventOptions",
        "signature": "interface EventOptions extends PieceOptions {}",
        "source": Object {
          "filename": "dist/index.d.ts",
          "line": 1302,
          "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L1302",
          "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L1302",
        },
      },
      Object {
        "docs": Array [],
        "id": "ExtendedArgumentContext",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [
                "/**
     * The canonical argument specified by the user in the command, as
     * a string, equivalent to the first parameter of [[Argument#run]].
     * This allows [[ExtendedArgument#handle]] to access the original
     * argument, which is useful for returning [[Argument#error]] so
     * that you don't have to convert the parsed argument back into a
     * string.
     */",
              ],
              "id": "ExtendedArgumentContext.argument",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "argument",
              "signature": "argument: string;",
              "source": Object {
                "filename": "dist/index.d.ts",
                "line": 1704,
                "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L1704",
                "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L1704",
              },
              "type": "string",
            },
          ],
        },
        "name": "ExtendedArgumentContext",
        "signature": "interface ExtendedArgumentContext extends ArgumentContext {}",
        "source": Object {
          "filename": "dist/index.d.ts",
          "line": 1695,
          "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L1695",
          "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L1695",
        },
      },
      Object {
        "docs": Array [],
        "id": "ExtendedArgumentOptions",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [
                "/**
     * The name of the underlying argument whose value is used to compute
     * the extended argument value; see [[ArgType]] for valid keys.
     */",
              ],
              "id": "ExtendedArgumentOptions.baseArgument",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "baseArgument",
              "signature": "baseArgument: K;",
              "source": Object {
                "filename": "dist/index.d.ts",
                "line": 1693,
                "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L1693",
                "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L1693",
              },
              "type": "keyof ArgType",
            },
          ],
        },
        "name": "ExtendedArgumentOptions",
        "signature": "interface ExtendedArgumentOptions<K extends keyof ArgType> extends ArgumentOptions {}",
        "source": Object {
          "filename": "dist/index.d.ts",
          "line": 1688,
          "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L1688",
          "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L1688",
        },
      },
      Object {
        "docs": Array [],
        "id": "IArgument",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [
            Object {
              "docs": Array [
                "/**
     * The method which is called when invoking the argument.
     * @param argument The argument to parse.
     * @param context The context for the method call, contains the message, command, and other options.
     */",
              ],
              "id": "IArgument.run",
              "kind": "InterfaceMethodDeclaration",
              "name": "run",
              "signature": "run: (argument: string, context: ArgumentContext) => any;",
              "source": Object {
                "filename": "dist/index.d.ts",
                "line": 1077,
                "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L1077",
                "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L1077",
              },
              "type": "(argument: string, context: ArgumentContext) => any",
            },
          ],
          "properties": Array [
            Object {
              "docs": Array [
                "/**
     * The name of the argument, this is used to make the identification of an argument easier.
     */",
              ],
              "id": "IArgument.name",
              "isOptional": false,
              "isReadonly": true,
              "kind": "InterfacePropertyDeclaration",
              "name": "name",
              "signature": "readonly name: string;",
              "source": Object {
                "filename": "dist/index.d.ts",
                "line": 1071,
                "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L1071",
                "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L1071",
              },
              "type": "string",
            },
          ],
        },
        "name": "IArgument",
        "signature": "interface IArgument<T> {}",
        "source": Object {
          "filename": "dist/index.d.ts",
          "line": 1067,
          "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L1067",
          "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L1067",
        },
      },
      Object {
        "docs": Array [],
        "id": "ICommandPayload",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "ICommandPayload.command",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "command",
              "signature": "command: Command;",
              "source": Object {
                "filename": "dist/index.d.ts",
                "line": 1786,
                "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L1786",
                "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L1786",
              },
              "type": "Command<Args>",
            },
            Object {
              "docs": Array [],
              "id": "ICommandPayload.message",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "message",
              "signature": "message: Message;",
              "source": Object {
                "filename": "dist/index.d.ts",
                "line": 1785,
                "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L1785",
                "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L1785",
              },
              "type": "any",
            },
          ],
        },
        "name": "ICommandPayload",
        "signature": "interface ICommandPayload {}",
        "source": Object {
          "filename": "dist/index.d.ts",
          "line": 1784,
          "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L1784",
          "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L1784",
        },
      },
      Object {
        "docs": Array [],
        "id": "ILogger",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [
            Object {
              "docs": Array [
                "/**
     * Alias of [[ILogger.write]] with [[LogLevel.Debug]] as level.
     * @param values The values to log.
     */",
              ],
              "id": "ILogger.debug",
              "kind": "InterfaceMethodDeclaration",
              "name": "debug",
              "signature": "debug: (...values: readonly unknown[]) => void;",
              "source": Object {
                "filename": "dist/index.d.ts",
                "line": 1359,
                "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L1359",
                "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L1359",
              },
              "type": "(...values: readonly unknown[]) => void",
            },
            Object {
              "docs": Array [
                "/**
     * Alias of [[ILogger.write]] with [[LogLevel.Error]] as level.
     * @param values The values to log.
     */",
              ],
              "id": "ILogger.error",
              "kind": "InterfaceMethodDeclaration",
              "name": "error",
              "signature": "error: (...values: readonly unknown[]) => void;",
              "source": Object {
                "filename": "dist/index.d.ts",
                "line": 1374,
                "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L1374",
                "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L1374",
              },
              "type": "(...values: readonly unknown[]) => void",
            },
            Object {
              "docs": Array [
                "/**
     * Alias of [[ILogger.write]] with [[LogLevel.Fatal]] as level.
     * @param values The values to log.
     */",
              ],
              "id": "ILogger.fatal",
              "kind": "InterfaceMethodDeclaration",
              "name": "fatal",
              "signature": "fatal: (...values: readonly unknown[]) => void;",
              "source": Object {
                "filename": "dist/index.d.ts",
                "line": 1379,
                "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L1379",
                "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L1379",
              },
              "type": "(...values: readonly unknown[]) => void",
            },
            Object {
              "docs": Array [
                "/**
     * Alias of [[ILogger.write]] with [[LogLevel.Info]] as level.
     * @param values The values to log.
     */",
              ],
              "id": "ILogger.info",
              "kind": "InterfaceMethodDeclaration",
              "name": "info",
              "signature": "info: (...values: readonly unknown[]) => void;",
              "source": Object {
                "filename": "dist/index.d.ts",
                "line": 1364,
                "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L1364",
                "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L1364",
              },
              "type": "(...values: readonly unknown[]) => void",
            },
            Object {
              "docs": Array [
                "/**
     * Alias of [[ILogger.write]] with [[LogLevel.Trace]] as level.
     * @param values The values to log.
     */",
              ],
              "id": "ILogger.trace",
              "kind": "InterfaceMethodDeclaration",
              "name": "trace",
              "signature": "trace: (...values: readonly unknown[]) => void;",
              "source": Object {
                "filename": "dist/index.d.ts",
                "line": 1354,
                "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L1354",
                "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L1354",
              },
              "type": "(...values: readonly unknown[]) => void",
            },
            Object {
              "docs": Array [
                "/**
     * Alias of [[ILogger.write]] with [[LogLevel.Warn]] as level.
     * @param values The values to log.
     */",
              ],
              "id": "ILogger.warn",
              "kind": "InterfaceMethodDeclaration",
              "name": "warn",
              "signature": "warn: (...values: readonly unknown[]) => void;",
              "source": Object {
                "filename": "dist/index.d.ts",
                "line": 1369,
                "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L1369",
                "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L1369",
              },
              "type": "(...values: readonly unknown[]) => void",
            },
            Object {
              "docs": Array [
                "/**
     * Writes the log message given a level and the value(s).
     * @param level The log level.
     * @param values The values to log.
     */",
              ],
              "id": "ILogger.write",
              "kind": "InterfaceMethodDeclaration",
              "name": "write",
              "signature": "write: (level: LogLevel, ...values: readonly unknown[]) => void;",
              "source": Object {
                "filename": "dist/index.d.ts",
                "line": 1385,
                "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L1385",
                "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L1385",
              },
              "type": "(level: LogLevel, ...values: readonly unknown[]) => void",
            },
          ],
          "properties": Array [],
        },
        "name": "ILogger",
        "signature": "interface ILogger {}",
        "source": Object {
          "filename": "dist/index.d.ts",
          "line": 1349,
          "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L1349",
          "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L1349",
        },
      },
      Object {
        "docs": Array [],
        "id": "IPieceError",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "IPieceError.piece",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "piece",
              "signature": "piece: Piece;",
              "source": Object {
                "filename": "dist/index.d.ts",
                "line": 1775,
                "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L1775",
                "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L1775",
              },
              "type": "any",
            },
          ],
        },
        "name": "IPieceError",
        "signature": "interface IPieceError {}",
        "source": Object {
          "filename": "dist/index.d.ts",
          "line": 1774,
          "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L1774",
          "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L1774",
        },
      },
      Object {
        "docs": Array [
          "/**
 * Defines the condition for [[PreconditionContainerArray]]s to run.
 * @since 1.0.0
 */",
        ],
        "id": "IPreconditionCondition",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [
            Object {
              "docs": Array [
                "/**
     * Runs all the containers using \`Promise.all\`, then checks the results once all tasks finished running.
     * @seealso [[PreconditionRunMode.parallel]]
     * @since 1.0.0
     * @param message The message that ran this precondition.
     * @param command The command the message invoked.
     * @param entries The containers to run.
     */",
              ],
              "id": "IPreconditionCondition.parallel",
              "kind": "InterfaceMethodDeclaration",
              "name": "parallel",
              "signature": "parallel: (
    message: any,
    command: Command,
    entries: readonly IPreconditionContainer[]
) => any;",
              "source": Object {
                "filename": "dist/index.d.ts",
                "line": 706,
                "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L706",
                "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L706",
              },
              "type": "(message: any, command: Command, entries: readonly IPreconditionContainer[]) => any",
            },
            Object {
              "docs": Array [
                "/**
     * Runs the containers one by one.
     * @seealso [[PreconditionRunMode.sequential]]
     * @since 1.0.0
     * @param message The message that ran this precondition.
     * @param command The command the message invoked.
     * @param entries The containers to run.
     */",
              ],
              "id": "IPreconditionCondition.sequential",
              "kind": "InterfaceMethodDeclaration",
              "name": "sequential",
              "signature": "sequential: (
    message: any,
    command: Command,
    entries: readonly IPreconditionContainer[]
) => any;",
              "source": Object {
                "filename": "dist/index.d.ts",
                "line": 697,
                "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L697",
                "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L697",
              },
              "type": "(message: any, command: Command, entries: readonly IPreconditionContainer[]) => any",
            },
          ],
          "properties": Array [],
        },
        "name": "IPreconditionCondition",
        "signature": "interface IPreconditionCondition {}",
        "source": Object {
          "filename": "dist/index.d.ts",
          "line": 688,
          "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L688",
          "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L688",
        },
      },
      Object {
        "docs": Array [
          "/**
 * An abstracted precondition container to be implemented by classes.
 * @since 1.0.0
 */",
        ],
        "id": "IPreconditionContainer",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [
            Object {
              "docs": Array [
                "/**
     * Runs a precondition container.
     * @since 1.0.0
     * @param message The message that ran this precondition.
     * @param command The command the message invoked.
     */",
              ],
              "id": "IPreconditionContainer.run",
              "kind": "InterfaceMethodDeclaration",
              "name": "run",
              "signature": "run: (message: any, command: Command) => any;",
              "source": Object {
                "filename": "dist/index.d.ts",
                "line": 681,
                "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L681",
                "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L681",
              },
              "type": "(message: any, command: Command) => any",
            },
          ],
          "properties": Array [],
        },
        "name": "IPreconditionContainer",
        "signature": "interface IPreconditionContainer {}",
        "source": Object {
          "filename": "dist/index.d.ts",
          "line": 674,
          "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L674",
          "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L674",
        },
      },
      Object {
        "docs": Array [],
        "id": "PreCommandRunPayload",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [],
        },
        "name": "PreCommandRunPayload",
        "signature": "interface PreCommandRunPayload extends CommandDeniedPayload {}",
        "source": Object {
          "filename": "dist/index.d.ts",
          "line": 1800,
          "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L1800",
          "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L1800",
        },
      },
      Object {
        "docs": Array [
          "/**
 * Defines the detailed options for the [[PreconditionContainerArray]], where both the [[PreconditionRunMode]] and the
 * entries can be defined.
 * @since 1.0.0
 */",
        ],
        "id": "PreconditionArrayResolvableDetails",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [
                "/**
     * The data that will be used to resolve [[IPreconditionContainer]] dependent of this one.
     * @since 1.0.0
     */",
              ],
              "id": "PreconditionArrayResolvableDetails.entries",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "entries",
              "signature": "entries: readonly PreconditionEntryResolvable[];",
              "source": Object {
                "filename": "dist/index.d.ts",
                "line": 832,
                "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L832",
                "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L832",
              },
              "type": "readonly PreconditionEntryResolvable[]",
            },
            Object {
              "docs": Array [
                "/**
     * The mode the [[PreconditionContainerArray]] will run.
     * @since 1.0.0
     */",
              ],
              "id": "PreconditionArrayResolvableDetails.mode",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "mode",
              "signature": "mode: PreconditionRunMode;",
              "source": Object {
                "filename": "dist/index.d.ts",
                "line": 837,
                "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L837",
                "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L837",
              },
              "type": "PreconditionRunMode",
            },
          ],
        },
        "name": "PreconditionArrayResolvableDetails",
        "signature": "interface PreconditionArrayResolvableDetails {}",
        "source": Object {
          "filename": "dist/index.d.ts",
          "line": 827,
          "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L827",
          "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L827",
        },
      },
      Object {
        "docs": Array [],
        "id": "PreconditionContext",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [],
        },
        "name": "PreconditionContext",
        "signature": "interface PreconditionContext extends Record<PropertyKey, unknown> {}",
        "source": Object {
          "filename": "dist/index.d.ts",
          "line": 737,
          "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L737",
          "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L737",
        },
      },
      Object {
        "docs": Array [
          "/**
 * Defines the detailed options for the [[PreconditionContainerSingle]], where both the [[PreconditionContext]] and the
 * name of the precondition can be defined.
 * @since 1.0.0
 */",
        ],
        "id": "PreconditionSingleResolvableDetails",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [
                "/**
     * The context to be set at [[PreconditionContainerSingle.context]].
     * @since 1.0.0
     */",
              ],
              "id": "PreconditionSingleResolvableDetails.context",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "context",
              "signature": "context: PreconditionContext;",
              "source": Object {
                "filename": "dist/index.d.ts",
                "line": 755,
                "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L755",
                "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L755",
              },
              "type": "PreconditionContext",
            },
            Object {
              "docs": Array [
                "/**
     * The name of the precondition to retrieve from [[SapphireClient.preconditions]].
     * @since 1.0.0
     */",
              ],
              "id": "PreconditionSingleResolvableDetails.name",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "name",
              "signature": "name: string;",
              "source": Object {
                "filename": "dist/index.d.ts",
                "line": 750,
                "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L750",
                "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L750",
              },
              "type": "string",
            },
          ],
        },
        "name": "PreconditionSingleResolvableDetails",
        "signature": "interface PreconditionSingleResolvableDetails {}",
        "source": Object {
          "filename": "dist/index.d.ts",
          "line": 745,
          "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L745",
          "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L745",
        },
      },
      Object {
        "docs": Array [],
        "id": "RepeatArgOptions",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [
                "/**
     * The maximum amount of times the argument can be repeated.
     * @default Infinity
     */",
              ],
              "id": "RepeatArgOptions.times",
              "isOptional": true,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "times",
              "signature": "times?: number;",
              "source": Object {
                "filename": "dist/index.d.ts",
                "line": 643,
                "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L643",
                "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L643",
              },
              "type": "number",
            },
          ],
        },
        "name": "RepeatArgOptions",
        "signature": "interface RepeatArgOptions extends ArgOptions {}",
        "source": Object {
          "filename": "dist/index.d.ts",
          "line": 638,
          "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L638",
          "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L638",
        },
      },
      Object {
        "docs": Array [],
        "id": "SapphireClientOptions",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [
                "/**
     * The base user directory, if set to \`null\`, Sapphire will not call [[SapphireClient.registerUserDirectories]],
     * meaning that you will need to manually set each folder for each store. Please read the aforementioned method's
     * documentation for more information.
     * @since 1.0.0
     * @default undefined
     */",
              ],
              "id": "SapphireClientOptions.baseUserDirectory",
              "isOptional": true,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "baseUserDirectory",
              "signature": "baseUserDirectory?: string | null;",
              "source": Object {
                "filename": "dist/index.d.ts",
                "line": 1406,
                "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L1406",
                "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L1406",
              },
              "type": "string",
            },
            Object {
              "docs": Array [
                "/**
     * Whether commands can be case insensitive
     * @since 1.0.0
     * @default false
     */",
              ],
              "id": "SapphireClientOptions.caseInsensitiveCommands",
              "isOptional": true,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "caseInsensitiveCommands",
              "signature": "caseInsensitiveCommands?: boolean | null;",
              "source": Object {
                "filename": "dist/index.d.ts",
                "line": 1412,
                "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L1412",
                "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L1412",
              },
              "type": "boolean",
            },
            Object {
              "docs": Array [
                "/**
     * The default prefix, in case of \`null\`, only mention prefix will trigger the bot's commands.
     * @since 1.0.0
     * @default null
     */",
              ],
              "id": "SapphireClientOptions.defaultPrefix",
              "isOptional": true,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "defaultPrefix",
              "signature": "defaultPrefix?: SapphirePrefix;",
              "source": Object {
                "filename": "dist/index.d.ts",
                "line": 1418,
                "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L1418",
                "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L1418",
              },
              "type": "SapphirePrefix",
            },
            Object {
              "docs": Array [
                "/**
     * The prefix hook, by default it is a callback function that returns [[SapphireClientOptions.defaultPrefix]].
     * @since 1.0.0
     * @default () => client.options.defaultPrefix
     */",
              ],
              "id": "SapphireClientOptions.fetchPrefix",
              "isOptional": true,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "fetchPrefix",
              "signature": "fetchPrefix?: SapphirePrefixHook;",
              "source": Object {
                "filename": "dist/index.d.ts",
                "line": 1424,
                "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L1424",
                "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L1424",
              },
              "type": "SapphirePrefixHook",
            },
            Object {
              "docs": Array [
                "/**
     * The client's ID, this is automatically set by the CoreReady event.
     * @since 1.0.0
     * @default this.client.user?.id ?? null
     */",
              ],
              "id": "SapphireClientOptions.id",
              "isOptional": true,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "id",
              "signature": "id?: string;",
              "source": Object {
                "filename": "dist/index.d.ts",
                "line": 1430,
                "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L1430",
                "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L1430",
              },
              "type": "string",
            },
            Object {
              "docs": Array [
                "/**
     * The logger options, defaults to an instance of [[Logger]] when [[ClientLoggerOptions.instance]] is not specified.
     * @since 1.0.0
     * @default { instance: new Logger(LogLevel.Info) }
     */",
              ],
              "id": "SapphireClientOptions.logger",
              "isOptional": true,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "logger",
              "signature": "logger?: ClientLoggerOptions;",
              "source": Object {
                "filename": "dist/index.d.ts",
                "line": 1436,
                "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L1436",
                "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L1436",
              },
              "type": "ClientLoggerOptions",
            },
          ],
        },
        "name": "SapphireClientOptions",
        "signature": "interface SapphireClientOptions {}",
        "source": Object {
          "filename": "dist/index.d.ts",
          "line": 1398,
          "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L1398",
          "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L1398",
        },
      },
      Object {
        "docs": Array [],
        "id": "SapphirePluginAsyncHook",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [
            Object {
              "docs": Array [],
              "id": "SapphirePluginAsyncHook.0-call-signature",
              "kind": "InterfaceCallSignatureDeclaration",
              "name": "call signature",
              "signature": "(this: SapphireClient, options: ClientOptions): Awaited<unknown>;",
              "source": Object {
                "filename": "dist/index.d.ts",
                "line": 1212,
                "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L1212",
                "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L1212",
              },
            },
          ],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [],
        },
        "name": "SapphirePluginAsyncHook",
        "signature": "interface SapphirePluginAsyncHook {}",
        "source": Object {
          "filename": "dist/index.d.ts",
          "line": 1211,
          "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L1211",
          "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L1211",
        },
      },
      Object {
        "docs": Array [],
        "id": "SapphirePluginHook",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [
            Object {
              "docs": Array [],
              "id": "SapphirePluginHook.0-call-signature",
              "kind": "InterfaceCallSignatureDeclaration",
              "name": "call signature",
              "signature": "(this: SapphireClient, options: ClientOptions): unknown;",
              "source": Object {
                "filename": "dist/index.d.ts",
                "line": 1216,
                "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L1216",
                "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L1216",
              },
            },
          ],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [],
        },
        "name": "SapphirePluginHook",
        "signature": "interface SapphirePluginHook {}",
        "source": Object {
          "filename": "dist/index.d.ts",
          "line": 1215,
          "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L1215",
          "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L1215",
        },
      },
      Object {
        "docs": Array [],
        "id": "SapphirePluginHookEntry",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [
            Object {
              "docs": Array [],
              "id": "SapphirePluginHookEntry.hook",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "hook",
              "signature": "hook: T;",
              "source": Object {
                "filename": "dist/index.d.ts",
                "line": 1219,
                "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L1219",
                "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L1219",
              },
              "type": "{}",
            },
            Object {
              "docs": Array [],
              "id": "SapphirePluginHookEntry.name",
              "isOptional": true,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "name",
              "signature": "name?: string;",
              "source": Object {
                "filename": "dist/index.d.ts",
                "line": 1221,
                "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L1221",
                "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L1221",
              },
              "type": "string",
            },
            Object {
              "docs": Array [],
              "id": "SapphirePluginHookEntry.type",
              "isOptional": false,
              "isReadonly": false,
              "kind": "InterfacePropertyDeclaration",
              "name": "type",
              "signature": "type: PluginHook;",
              "source": Object {
                "filename": "dist/index.d.ts",
                "line": 1220,
                "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L1220",
                "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L1220",
              },
              "type": "PluginHook",
            },
          ],
        },
        "name": "SapphirePluginHookEntry",
        "signature": "interface SapphirePluginHookEntry<
    T = SapphirePluginHook | SapphirePluginAsyncHook
> {}",
        "source": Object {
          "filename": "dist/index.d.ts",
          "line": 1218,
          "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L1218",
          "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L1218",
        },
      },
      Object {
        "docs": Array [],
        "id": "SapphirePrefixHook",
        "kind": "InterfaceDeclaration",
        "members": Object {
          "callSignatures": Array [
            Object {
              "docs": Array [],
              "id": "SapphirePrefixHook.0-call-signature",
              "kind": "InterfaceCallSignatureDeclaration",
              "name": "call signature",
              "signature": "(message: Message): Awaited<SapphirePrefix>;",
              "source": Object {
                "filename": "dist/index.d.ts",
                "line": 1396,
                "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L1396",
                "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L1396",
              },
            },
          ],
          "constructSignatures": Array [],
          "indexSignatures": Array [],
          "methods": Array [],
          "properties": Array [],
        },
        "name": "SapphirePrefixHook",
        "signature": "interface SapphirePrefixHook {}",
        "source": Object {
          "filename": "dist/index.d.ts",
          "line": 1395,
          "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L1395",
          "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L1395",
        },
      },
    ],
    "namespaces": Array [],
    "typeAliases": Array [
      Object {
        "docs": Array [
          "/**
 * Defines a synchronous result of an [[Argument]], check [[AsyncArgumentResult]] for the asynchronous version.
 */",
        ],
        "id": "ArgumentResult",
        "kind": "TypeAliasDeclaration",
        "name": "ArgumentResult",
        "signature": "type ArgumentResult<T> = Awaited<Result<T, UserError>>;",
        "source": Object {
          "filename": "dist/index.d.ts",
          "line": 1062,
          "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L1062",
          "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L1062",
        },
      },
      Object {
        "docs": Array [
          "/**
 * Defines an asynchronous result of an [[Argument]], check [[ArgumentResult]] for the synchronous version.
 */",
        ],
        "id": "AsyncArgumentResult",
        "kind": "TypeAliasDeclaration",
        "name": "AsyncArgumentResult",
        "signature": "type AsyncArgumentResult<T> = Promise<Result<T, UserError>>;",
        "source": Object {
          "filename": "dist/index.d.ts",
          "line": 1066,
          "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L1066",
          "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L1066",
        },
      },
      Object {
        "docs": Array [],
        "id": "AsyncPluginHooks",
        "kind": "TypeAliasDeclaration",
        "name": "AsyncPluginHooks",
        "signature": "type AsyncPluginHooks = PluginHook.PreLogin | PluginHook.PostLogin;",
        "source": Object {
          "filename": "dist/index.d.ts",
          "line": 1210,
          "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L1210",
          "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L1210",
        },
      },
      Object {
        "docs": Array [
          "/**
 * Async-only version of [[PreconditionContainerReturn]], to be used when the run method is async.
 * @since 1.0.0
 */",
        ],
        "id": "AsyncPreconditionContainerReturn",
        "kind": "TypeAliasDeclaration",
        "name": "AsyncPreconditionContainerReturn",
        "signature": "type AsyncPreconditionContainerReturn = Promise<PreconditionContainerResult>;",
        "source": Object {
          "filename": "dist/index.d.ts",
          "line": 669,
          "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L669",
          "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L669",
        },
      },
      Object {
        "docs": Array [],
        "id": "AsyncPreconditionResult",
        "kind": "TypeAliasDeclaration",
        "name": "AsyncPreconditionResult",
        "signature": "type AsyncPreconditionResult = Promise<Result<unknown, UserError>>;",
        "source": Object {
          "filename": "dist/index.d.ts",
          "line": 721,
          "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L721",
          "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L721",
        },
      },
      Object {
        "docs": Array [
          "/**
 * The computation failed.
 * @typeparam E Type of errors.
 */",
        ],
        "id": "Err",
        "kind": "TypeAliasDeclaration",
        "name": "Err",
        "signature": "type Err<E> = Err$1<E>;",
        "source": Object {
          "filename": "dist/index.d.ts",
          "line": 41,
          "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L41",
          "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L41",
        },
      },
      Object {
        "docs": Array [],
        "id": "LogMethods",
        "kind": "TypeAliasDeclaration",
        "name": "LogMethods",
        "signature": "type LogMethods = 'trace' | 'debug' | 'info' | 'warn' | 'error';",
        "source": Object {
          "filename": "dist/index.d.ts",
          "line": 1835,
          "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L1835",
          "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L1835",
        },
      },
      Object {
        "docs": Array [
          "/**
 * A type used to express a value that may or may not exist.
 * @typeparam T The value's type.
 */",
        ],
        "id": "Maybe",
        "kind": "TypeAliasDeclaration",
        "name": "Maybe",
        "signature": "type Maybe<T> = Some<T> | None;",
        "source": Object {
          "filename": "dist/index.d.ts",
          "line": 83,
          "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L83",
          "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L83",
        },
      },
      Object {
        "docs": Array [
          "/**
 * An empty value.
 */",
        ],
        "id": "None",
        "kind": "TypeAliasDeclaration",
        "name": "None",
        "signature": "type None = option.None;",
        "source": Object {
          "filename": "dist/index.d.ts",
          "line": 92,
          "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L92",
          "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L92",
        },
      },
      Object {
        "docs": Array [
          "/**
 * The computation is successful.
 * @typeparam T Type of results.
 */",
        ],
        "id": "Ok",
        "kind": "TypeAliasDeclaration",
        "name": "Ok",
        "signature": "type Ok<T> = Ok$1<T>;",
        "source": Object {
          "filename": "dist/index.d.ts",
          "line": 36,
          "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L36",
          "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L36",
        },
      },
      Object {
        "docs": Array [
          "/**
 * Defines the data accepted by [[PreconditionContainerArray]]'s constructor.
 * @since 1.0.0
 */",
        ],
        "id": "PreconditionArrayResolvable",
        "kind": "TypeAliasDeclaration",
        "name": "PreconditionArrayResolvable",
        "signature": "type PreconditionArrayResolvable =
    | readonly PreconditionEntryResolvable[]
    | PreconditionArrayResolvableDetails;",
        "source": Object {
          "filename": "dist/index.d.ts",
          "line": 843,
          "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L843",
          "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L843",
        },
      },
      Object {
        "docs": Array [
          "/**
 * Defines the result's value for a PreconditionContainer.
 * @since 1.0.0
 */",
        ],
        "id": "PreconditionContainerResult",
        "kind": "TypeAliasDeclaration",
        "name": "PreconditionContainerResult",
        "signature": "type PreconditionContainerResult = Result<unknown, UserError>;",
        "source": Object {
          "filename": "dist/index.d.ts",
          "line": 659,
          "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L659",
          "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L659",
        },
      },
      Object {
        "docs": Array [
          "/**
 * Defines the return type of the generic [[IPreconditionContainer.run]].
 * @since 1.0.0
 */",
        ],
        "id": "PreconditionContainerReturn",
        "kind": "TypeAliasDeclaration",
        "name": "PreconditionContainerReturn",
        "signature": "type PreconditionContainerReturn = Awaited<PreconditionContainerResult>;",
        "source": Object {
          "filename": "dist/index.d.ts",
          "line": 664,
          "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L664",
          "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L664",
        },
      },
      Object {
        "docs": Array [
          "/**
 * Defines the data accepted for each entry of the array.
 * @since 1.0.0
 * @seealso [[PreconditionArrayResolvable]]
 * @seealso [[PreconditionArrayResolvableDetails.entries]]
 */",
        ],
        "id": "PreconditionEntryResolvable",
        "kind": "TypeAliasDeclaration",
        "name": "PreconditionEntryResolvable",
        "signature": "type PreconditionEntryResolvable =
    | PreconditionSingleResolvable
    | PreconditionArrayResolvable;",
        "source": Object {
          "filename": "dist/index.d.ts",
          "line": 850,
          "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L850",
          "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L850",
        },
      },
      Object {
        "docs": Array [],
        "id": "PreconditionErrorExtras",
        "kind": "TypeAliasDeclaration",
        "name": "PreconditionErrorExtras",
        "signature": "type PreconditionErrorExtras = object | null;",
        "source": Object {
          "filename": "dist/index.d.ts",
          "line": 709,
          "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L709",
          "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L709",
        },
      },
      Object {
        "docs": Array [],
        "id": "PreconditionResult",
        "kind": "TypeAliasDeclaration",
        "name": "PreconditionResult",
        "signature": "type PreconditionResult = Awaited<Result<unknown, UserError>>;",
        "source": Object {
          "filename": "dist/index.d.ts",
          "line": 720,
          "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L720",
          "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L720",
        },
      },
      Object {
        "docs": Array [
          "/**
 * Defines the data accepted by [[PreconditionContainerSingle]]'s constructor.
 * @since 1.0.0
 */",
        ],
        "id": "PreconditionSingleResolvable",
        "kind": "TypeAliasDeclaration",
        "name": "PreconditionSingleResolvable",
        "signature": "type PreconditionSingleResolvable = string | PreconditionSingleResolvableDetails;",
        "source": Object {
          "filename": "dist/index.d.ts",
          "line": 761,
          "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L761",
          "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L761",
        },
      },
      Object {
        "docs": Array [
          "/**
 * A type used to express computations that can fail.
 * @typeparam T The result's type.
 * @typeparam E The error's type.
 */",
        ],
        "id": "Result",
        "kind": "TypeAliasDeclaration",
        "name": "Result",
        "signature": "type Result<T, E> = Ok<T> | Err<E>;",
        "source": Object {
          "filename": "dist/index.d.ts",
          "line": 31,
          "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L31",
          "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L31",
        },
      },
      Object {
        "docs": Array [
          "/**
 * A valid prefix in Sapphire.
 * * \`string\`: a single prefix, e.g. \`'!'\`.
 * * \`string[]\`: an array of prefixes, e.g. \`['!', '.']\`.
 * * \`null\`: disabled prefix, locks the bot's command usage to mentions only.
 */",
        ],
        "id": "SapphirePrefix",
        "kind": "TypeAliasDeclaration",
        "name": "SapphirePrefix",
        "signature": "type SapphirePrefix = string | readonly string[] | null;",
        "source": Object {
          "filename": "dist/index.d.ts",
          "line": 1394,
          "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L1394",
          "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L1394",
        },
      },
      Object {
        "docs": Array [
          "/**
 * A value that exists.
 * @typeparam T The value's type.
 */",
        ],
        "id": "Some",
        "kind": "TypeAliasDeclaration",
        "name": "Some",
        "signature": "type Some<T> = option.Some<T>;",
        "source": Object {
          "filename": "dist/index.d.ts",
          "line": 88,
          "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L88",
          "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L88",
        },
      },
      Object {
        "docs": Array [],
        "id": "SyncPluginHooks",
        "kind": "TypeAliasDeclaration",
        "name": "SyncPluginHooks",
        "signature": "type SyncPluginHooks = Exclude<PluginHook, AsyncPluginHooks>;",
        "source": Object {
          "filename": "dist/index.d.ts",
          "line": 1214,
          "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L1214",
          "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L1214",
        },
      },
    ],
    "variables": Array [
      Object {
        "docs": Array [],
        "id": "postInitialization",
        "kind": "VariableDeclaration",
        "name": "postInitialization",
        "signature": "const postInitialization: Symbol;",
        "source": Object {
          "filename": "dist/index.d.ts",
          "line": 1619,
          "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L1619",
          "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L1619",
        },
        "type": "Symbol",
        "variableKind": "const",
      },
      Object {
        "docs": Array [],
        "id": "postLogin",
        "kind": "VariableDeclaration",
        "name": "postLogin",
        "signature": "const postLogin: Symbol;",
        "source": Object {
          "filename": "dist/index.d.ts",
          "line": 1621,
          "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L1621",
          "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L1621",
        },
        "type": "Symbol",
        "variableKind": "const",
      },
      Object {
        "docs": Array [
          "/**
 * An [[IPreconditionCondition]] which runs all containers similarly to doing (V0 && V1 [&& V2 [&& V3 ...]]).
 * @since 1.0.0
 */",
        ],
        "id": "PreconditionConditionAnd",
        "kind": "VariableDeclaration",
        "name": "PreconditionConditionAnd",
        "signature": "const PreconditionConditionAnd: IPreconditionCondition;",
        "source": Object {
          "filename": "dist/index.d.ts",
          "line": 1841,
          "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L1841",
          "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L1841",
        },
        "type": "IPreconditionCondition",
        "variableKind": "const",
      },
      Object {
        "docs": Array [
          "/**
 * An [[IPreconditionCondition]] which runs all containers similarly to doing (V0 || V1 [|| V2 [|| V3 ...]]).
 * @since 1.0.0
 */",
        ],
        "id": "PreconditionConditionOr",
        "kind": "VariableDeclaration",
        "name": "PreconditionConditionOr",
        "signature": "const PreconditionConditionOr: IPreconditionCondition;",
        "source": Object {
          "filename": "dist/index.d.ts",
          "line": 1847,
          "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L1847",
          "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L1847",
        },
        "type": "IPreconditionCondition",
        "variableKind": "const",
      },
      Object {
        "docs": Array [],
        "id": "preGenericsInitialization",
        "kind": "VariableDeclaration",
        "name": "preGenericsInitialization",
        "signature": "const preGenericsInitialization: Symbol;",
        "source": Object {
          "filename": "dist/index.d.ts",
          "line": 1617,
          "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L1617",
          "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L1617",
        },
        "type": "Symbol",
        "variableKind": "const",
      },
      Object {
        "docs": Array [],
        "id": "preInitialization",
        "kind": "VariableDeclaration",
        "name": "preInitialization",
        "signature": "const preInitialization: Symbol;",
        "source": Object {
          "filename": "dist/index.d.ts",
          "line": 1618,
          "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L1618",
          "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L1618",
        },
        "type": "Symbol",
        "variableKind": "const",
      },
      Object {
        "docs": Array [],
        "id": "preLogin",
        "kind": "VariableDeclaration",
        "name": "preLogin",
        "signature": "const preLogin: Symbol;",
        "source": Object {
          "filename": "dist/index.d.ts",
          "line": 1620,
          "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts#L1620",
          "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts#L1620",
        },
        "type": "Symbol",
        "variableKind": "const",
      },
    ],
  },
  "files": Array [
    Object {
      "filename": "dist/index.d.ts",
      "isIndexFile": true,
      "unpkgURL": "https://unpkg.com/browse/@sapphire/framework@1.0.0-alpha.3/dist/index.d.ts",
      "url": "https://github.com/sapphire-project/framework/tree/1120d5fb140278550f03492e491145faaed102de/dist/index.d.ts",
    },
  ],
  "overview": undefined,
}
`;
