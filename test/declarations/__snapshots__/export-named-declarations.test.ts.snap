// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`export named declarations 1`] = `
[
  {
    "constructors": [],
    "docs": [
      "/**
 * Class001
 */",
    ],
    "file": "/classes.ts",
    "id": "+class.Class001",
    "kind": "class",
    "line": 4,
    "methods": [],
    "name": "Class001",
    "properties": [],
    "signature": "class Class001 {}",
  },
  {
    "constructors": [],
    "docs": [],
    "file": "/classes.ts",
    "id": "+class.Class002",
    "kind": "class",
    "line": 6,
    "methods": [],
    "name": "Class002",
    "properties": [],
    "signature": "class Class002 extends Class001 {}",
  },
  {
    "constructors": [],
    "docs": [],
    "file": "/classes.ts",
    "id": "+class.Class003",
    "kind": "class",
    "line": 8,
    "methods": [],
    "name": "Class003",
    "properties": [],
    "signature": "abstract class Class003 {}",
  },
  {
    "constructors": [],
    "docs": [],
    "file": "/classes.ts",
    "id": "+class.Class004",
    "kind": "class",
    "line": 13,
    "methods": [],
    "name": "Class004",
    "properties": [],
    "signature": "class Class004 implements A, B {}",
  },
  {
    "constructors": [],
    "docs": [],
    "file": "/classes.ts",
    "id": "+class.Class005",
    "kind": "class",
    "line": 15,
    "methods": [],
    "name": "Class005",
    "properties": [],
    "signature": "class Class005 extends Class003 implements A, B {}",
  },
  {
    "constructors": [],
    "docs": [],
    "file": "/classes.ts",
    "id": "+class.Class006",
    "kind": "class",
    "line": 18,
    "methods": [],
    "name": "Class006",
    "properties": [],
    "signature": "class Class006<T> {}",
  },
  {
    "constructors": [],
    "docs": [],
    "file": "/classes.ts",
    "id": "+class.Class007",
    "kind": "class",
    "line": 20,
    "methods": [],
    "name": "Class007",
    "properties": [],
    "signature": "class Class007<T extends object, U, V extends keyof T>
  extends Class003
  implements A, B {}",
  },
  {
    "constructors": [
      {
        "docs": [],
        "file": "/classes.ts",
        "id": "+class.Class008.constructor",
        "kind": "class-constructor",
        "line": 27,
        "name": "constructor",
        "signature": "constructor(foo: string, bar: number);",
      },
      {
        "docs": [
          "/** Constructor */",
        ],
        "file": "/classes.ts",
        "id": "+class.Class008.constructor.1",
        "kind": "class-constructor",
        "line": 26,
        "name": "constructor",
        "signature": "constructor(foo: any, bar: any);",
      },
    ],
    "docs": [],
    "file": "/classes.ts",
    "id": "+class.Class008",
    "kind": "class",
    "line": 24,
    "methods": [],
    "name": "Class008",
    "properties": [],
    "signature": "class Class008 {}",
  },
  {
    "constructors": [
      {
        "docs": [],
        "file": "/classes.ts",
        "id": "+class.Class009.constructor",
        "kind": "class-constructor",
        "line": 34,
        "name": "constructor",
        "signature": "protected constructor(foo: string, bar: number);",
      },
    ],
    "docs": [],
    "file": "/classes.ts",
    "id": "+class.Class009",
    "kind": "class",
    "line": 33,
    "methods": [],
    "name": "Class009",
    "properties": [],
    "signature": "class Class009 {}",
  },
  {
    "constructors": [],
    "docs": [],
    "file": "/classes.ts",
    "id": "+class.Class010",
    "kind": "class",
    "line": 40,
    "methods": [],
    "name": "Class010",
    "properties": [],
    "signature": "class Class010 {}",
  },
  {
    "constructors": [],
    "docs": [],
    "file": "/classes.ts",
    "id": "+class.Class011",
    "kind": "class",
    "line": 47,
    "methods": [
      {
        "docs": [
          "/** Bar */",
        ],
        "file": "/classes.ts",
        "id": "+class.Class011.+method.bar",
        "kind": "class-method",
        "line": 54,
        "name": "bar",
        "signature": "static bar: () => number;",
      },
    ],
    "name": "Class011",
    "properties": [
      {
        "docs": [
          "/** Get bat */",
        ],
        "file": "/classes.ts",
        "id": "+class.Class011.+property.bat",
        "kind": "class-property",
        "line": 70,
        "name": "bat",
        "signature": "static readonly bat: string;",
      },
      {
        "docs": [
          "/** Get baz */",
        ],
        "file": "/classes.ts",
        "id": "+class.Class011.+property.baz",
        "kind": "class-property",
        "line": 59,
        "name": "baz",
        "signature": "static baz: number;",
      },
      {
        "docs": [
          "/** Foo */",
        ],
        "file": "/classes.ts",
        "id": "+class.Class011.+property.foo",
        "kind": "class-property",
        "line": 51,
        "name": "foo",
        "signature": "static readonly foo: string;",
      },
    ],
    "signature": "class Class011 {}",
  },
  {
    "constructors": [],
    "docs": [],
    "file": "/classes.ts",
    "id": "+class.Class012",
    "kind": "class",
    "line": 75,
    "methods": [
      {
        "docs": [
          "/** Bar */",
        ],
        "file": "/classes.ts",
        "id": "+class.Class012.+method.bar",
        "kind": "class-method",
        "line": 85,
        "name": "bar",
        "signature": "bar: () => number;",
      },
    ],
    "name": "Class012",
    "properties": [
      {
        "docs": [
          "/** Get bat */",
        ],
        "file": "/classes.ts",
        "id": "+class.Class012.+property.bat",
        "kind": "class-property",
        "line": 101,
        "name": "bat",
        "signature": "readonly bat: string;",
      },
      {
        "docs": [
          "/** Get baz */",
        ],
        "file": "/classes.ts",
        "id": "+class.Class012.+property.baz",
        "kind": "class-property",
        "line": 90,
        "name": "baz",
        "signature": "baz: number;",
      },
      {
        "docs": [
          "/** Foo */",
        ],
        "file": "/classes.ts",
        "id": "+class.Class012.+property.foo",
        "kind": "class-property",
        "line": 79,
        "name": "foo",
        "signature": "readonly foo: string;",
      },
      {
        "docs": [
          "/** Foobar */",
        ],
        "file": "/classes.ts",
        "id": "+class.Class012.+property.foobar",
        "kind": "class-property",
        "line": 82,
        "name": "foobar",
        "signature": "foobar?: string;",
      },
    ],
    "signature": "class Class012 {}",
  },
  {
    "constructors": [
      {
        "docs": [],
        "file": "/classes.ts",
        "id": "+class.Class013.constructor",
        "kind": "class-constructor",
        "line": 107,
        "name": "constructor",
        "signature": "constructor(
  foo?: string,
  bar: string,
  baz: string,
  qux: string,
  ...rest: number[]
);",
      },
    ],
    "docs": [],
    "file": "/classes.ts",
    "id": "+class.Class013",
    "kind": "class",
    "line": 106,
    "methods": [],
    "name": "Class013",
    "properties": [
      {
        "docs": [
          "/** Bar */",
        ],
        "file": "/classes.ts",
        "id": "+class.Class013.+property.bar",
        "kind": "class-property",
        "line": 111,
        "name": "bar",
        "signature": "protected readonly bar: string;",
      },
      {
        "docs": [
          "/** Foo */",
        ],
        "file": "/classes.ts",
        "id": "+class.Class013.+property.foo",
        "kind": "class-property",
        "line": 109,
        "name": "foo",
        "signature": "readonly foo: string;",
      },
    ],
    "signature": "class Class013 {}",
  },
  {
    "constructors": [],
    "docs": [],
    "file": "/classes.ts",
    "id": "+class.Class014",
    "kind": "class",
    "line": 118,
    "methods": [
      {
        "docs": [
          "/** Baz */",
        ],
        "file": "/classes.ts",
        "id": "+class.Class014.+method.baz",
        "kind": "class-method",
        "line": 126,
        "name": "baz",
        "signature": "abstract baz: () => number;",
      },
    ],
    "name": "Class014",
    "properties": [
      {
        "docs": [
          "/** Bar */",
        ],
        "file": "/classes.ts",
        "id": "+class.Class014.+property.bar",
        "kind": "class-property",
        "line": 123,
        "name": "bar",
        "signature": "protected abstract bar: string;",
      },
      {
        "docs": [
          "/** Foo */",
        ],
        "file": "/classes.ts",
        "id": "+class.Class014.+property.foo",
        "kind": "class-property",
        "line": 120,
        "name": "foo",
        "signature": "abstract foo: string;",
      },
    ],
    "signature": "abstract class Class014 {}",
  },
  {
    "constructors": [],
    "docs": [],
    "file": "/classes.ts",
    "id": "+class.Class016",
    "kind": "class",
    "line": 132,
    "methods": [],
    "name": "Class016",
    "properties": [
      {
        "docs": [],
        "file": "/classes.ts",
        "id": "+class.Class016.+property._quux",
        "kind": "class-property",
        "line": 137,
        "name": "_quux",
        "signature": "_quux: string;",
      },
    ],
    "signature": "class Class016 {}",
  },
  {
    "docs": [
      "/**
 * Enum1
 */",
    ],
    "file": "/enums.ts",
    "id": "+enum.Enum1",
    "kind": "enum",
    "line": 4,
    "members": [
      {
        "docs": [
          "/** Positive */",
        ],
        "file": "/enums.ts",
        "id": "+enum.Enum1.+member.Yes",
        "kind": "enum-member",
        "line": 6,
        "name": "Yes",
        "signature": "Yes",
      },
      {
        "docs": [],
        "file": "/enums.ts",
        "id": "+enum.Enum1.+member.No",
        "kind": "enum-member",
        "line": 7,
        "name": "No",
        "signature": "No",
      },
    ],
    "name": "Enum1",
    "signature": "const enum Enum1 {}",
  },
  {
    "docs": [],
    "file": "/enums.ts",
    "id": "+enum.Enum2",
    "kind": "enum",
    "line": 10,
    "members": [
      {
        "docs": [],
        "file": "/enums.ts",
        "id": "+enum.Enum2.+member.Ok",
        "kind": "enum-member",
        "line": 11,
        "name": "Ok",
        "signature": "Ok = 1",
      },
      {
        "docs": [],
        "file": "/enums.ts",
        "id": "+enum.Enum2.+member.Ko",
        "kind": "enum-member",
        "line": 12,
        "name": "Ko",
        "signature": "Ko",
      },
    ],
    "name": "Enum2",
    "signature": "enum Enum2 {}",
  },
  {
    "docs": [],
    "file": "/enums.ts",
    "id": "+enum.Enum3",
    "kind": "enum",
    "line": 15,
    "members": [
      {
        "docs": [],
        "file": "/enums.ts",
        "id": "+enum.Enum3.+member.A",
        "kind": "enum-member",
        "line": 16,
        "name": "A",
        "signature": "A = "A"",
      },
      {
        "docs": [],
        "file": "/enums.ts",
        "id": "+enum.Enum3.+member.B",
        "kind": "enum-member",
        "line": 17,
        "name": "B",
        "signature": "B = "B"",
      },
      {
        "docs": [],
        "file": "/enums.ts",
        "id": "+enum.Enum3.+member.C",
        "kind": "enum-member",
        "line": 18,
        "name": "C",
        "signature": "C = "C"",
      },
    ],
    "name": "Enum3",
    "signature": "enum Enum3 {}",
  },
  {
    "docs": [],
    "file": "/enums.ts",
    "id": "+enum.Enum4",
    "kind": "enum",
    "line": 23,
    "members": [],
    "name": "Enum4",
    "signature": "enum Enum4 {}",
  },
  {
    "docs": [],
    "file": "/enums.ts",
    "id": "+enum.Enum6",
    "kind": "enum",
    "line": 28,
    "members": [
      {
        "docs": [],
        "file": "/enums.ts",
        "id": "+enum.Enum6.+member.A",
        "kind": "enum-member",
        "line": 29,
        "name": "A",
        "signature": "A",
      },
    ],
    "name": "Enum6",
    "signature": "enum Enum6 {}",
  },
  {
    "docs": [
      "/**
 * Func1 returns the sum of two numbers.
 * @param a - the first number
 * @param b - the second number
 */",
    ],
    "file": "/functions.ts",
    "id": "+function.func1",
    "kind": "function",
    "line": 6,
    "name": "func1",
    "signature": "func1: (a: number, b: number) => number;",
  },
  {
    "docs": [
      "/**
 * Func2 returns the sum of two numbers.
 * @param a - the first number
 * @param b - the second number
 */",
    ],
    "file": "/functions.ts",
    "id": "+function.func2",
    "kind": "function",
    "line": 15,
    "name": "func2",
    "signature": "func2: ({ a, b }: { a: number; b: number }) => number;",
  },
  {
    "docs": [
      "/**
 * Func3 returns the sum of two numbers.
 * @param a - the first number
 * @param b - the second number
 */",
    ],
    "file": "/functions.ts",
    "id": "+function.func3",
    "kind": "function",
    "line": 22,
    "name": "func3",
    "signature": "func3: ({ a, b }: { a: number; b: number }) => number;",
  },
  {
    "docs": [
      "/**
 * Func4 is overloaded and returns its input.
 */",
    ],
    "file": "/functions.ts",
    "id": "+function.func4",
    "kind": "function",
    "line": 29,
    "name": "func4",
    "signature": "func4: { (a: number): number; (a: string): string };",
  },
  {
    "docs": [],
    "file": "/functions.ts",
    "id": "+function.func5",
    "kind": "function",
    "line": 37,
    "name": "func5",
    "signature": "func5: () => Promise<void>;",
  },
  {
    "docs": [],
    "file": "/functions.ts",
    "id": "+function.func8",
    "kind": "function",
    "line": 45,
    "name": "func8",
    "signature": "func8: (a: string) => number;",
  },
  {
    "callSignatures": [],
    "constructSignatures": [],
    "docs": [
      "/**
 * Interface001
 */",
    ],
    "file": "/interfaces.ts",
    "getAccessors": [],
    "id": "+interface.Interface001",
    "indexSignatures": [],
    "kind": "interface",
    "line": 4,
    "methods": [],
    "name": "Interface001",
    "properties": [
      {
        "docs": [],
        "file": "/interfaces.ts",
        "id": "+interface.Interface001.+property.x",
        "kind": "interface-property",
        "line": 5,
        "name": "x",
        "signature": "readonly x: number;",
      },
      {
        "docs": [],
        "file": "/interfaces.ts",
        "id": "+interface.Interface001.+property.y",
        "kind": "interface-property",
        "line": 6,
        "name": "y",
        "signature": "readonly y: number;",
      },
    ],
    "setAccessors": [],
    "signature": "interface Interface001 {}",
  },
  {
    "callSignatures": [],
    "constructSignatures": [],
    "docs": [],
    "file": "/interfaces.ts",
    "getAccessors": [],
    "id": "+interface.Interface002",
    "indexSignatures": [],
    "kind": "interface",
    "line": 9,
    "methods": [],
    "name": "Interface002",
    "properties": [
      {
        "docs": [],
        "file": "/interfaces.ts",
        "id": "+interface.Interface002.+property.z",
        "kind": "interface-property",
        "line": 10,
        "name": "z",
        "signature": "z?: number;",
      },
    ],
    "setAccessors": [],
    "signature": "interface Interface002 extends Interface001 {}",
  },
  {
    "callSignatures": [],
    "constructSignatures": [],
    "docs": [],
    "file": "/interfaces.ts",
    "getAccessors": [],
    "id": "+interface.Interface003",
    "indexSignatures": [],
    "kind": "interface",
    "line": 13,
    "methods": [],
    "name": "Interface003",
    "properties": [],
    "setAccessors": [],
    "signature": "interface Interface003 extends Interface001, Interface002 {}",
  },
  {
    "callSignatures": [
      {
        "docs": [],
        "file": "/interfaces.ts",
        "id": "+interface.Interface004.call-signature",
        "kind": "interface-call-signature",
        "line": 16,
        "name": "call-signature",
        "signature": "(a: string): string;",
      },
    ],
    "constructSignatures": [],
    "docs": [],
    "file": "/interfaces.ts",
    "getAccessors": [],
    "id": "+interface.Interface004",
    "indexSignatures": [],
    "kind": "interface",
    "line": 15,
    "methods": [],
    "name": "Interface004",
    "properties": [],
    "setAccessors": [],
    "signature": "interface Interface004 {}",
  },
  {
    "callSignatures": [],
    "constructSignatures": [],
    "docs": [],
    "file": "/interfaces.ts",
    "getAccessors": [],
    "id": "+interface.Interface005",
    "indexSignatures": [
      {
        "docs": [],
        "file": "/interfaces.ts",
        "id": "+interface.Interface005.index-signature",
        "kind": "interface-index-signature",
        "line": 20,
        "name": "index-signature",
        "signature": "readonly [index: string]: number | string;",
      },
    ],
    "kind": "interface",
    "line": 19,
    "methods": [],
    "name": "Interface005",
    "properties": [],
    "setAccessors": [],
    "signature": "interface Interface005 {}",
  },
  {
    "callSignatures": [],
    "constructSignatures": [],
    "docs": [],
    "file": "/interfaces.ts",
    "getAccessors": [],
    "id": "+interface.Interface006",
    "indexSignatures": [],
    "kind": "interface",
    "line": 23,
    "methods": [
      {
        "docs": [],
        "file": "/interfaces.ts",
        "id": "+interface.Interface006.+method.getAny",
        "kind": "interface-method",
        "line": 25,
        "name": "getAny",
        "signature": "getAny: () => any;",
      },
    ],
    "name": "Interface006",
    "properties": [
      {
        "docs": [],
        "file": "/interfaces.ts",
        "id": "+interface.Interface006.+property.something",
        "kind": "interface-property",
        "line": 24,
        "name": "something",
        "signature": "something: any;",
      },
    ],
    "setAccessors": [],
    "signature": "interface Interface006 {}",
  },
  {
    "callSignatures": [],
    "constructSignatures": [
      {
        "docs": [],
        "file": "/interfaces.ts",
        "id": "+interface.Interface007.construct-signature",
        "kind": "interface-construct-signature",
        "line": 29,
        "name": "construct-signature",
        "signature": "new (): Interface006;",
      },
    ],
    "docs": [],
    "file": "/interfaces.ts",
    "getAccessors": [],
    "id": "+interface.Interface007",
    "indexSignatures": [],
    "kind": "interface",
    "line": 28,
    "methods": [],
    "name": "Interface007",
    "properties": [],
    "setAccessors": [],
    "signature": "interface Interface007 {}",
  },
  {
    "callSignatures": [],
    "constructSignatures": [],
    "docs": [],
    "file": "/interfaces.ts",
    "getAccessors": [],
    "id": "+interface.Interface008",
    "indexSignatures": [],
    "kind": "interface",
    "line": 34,
    "methods": [],
    "name": "Interface008",
    "properties": [],
    "setAccessors": [],
    "signature": "interface Interface008<T> {}",
  },
  {
    "callSignatures": [],
    "constructSignatures": [],
    "docs": [],
    "file": "/interfaces.ts",
    "getAccessors": [],
    "id": "+interface.Interface009",
    "indexSignatures": [],
    "kind": "interface",
    "line": 36,
    "methods": [],
    "name": "Interface009",
    "properties": [],
    "setAccessors": [],
    "signature": "interface Interface009<T extends object, U, V extends keyof T>
  extends Interface001,
    Interface002 {}",
  },
  {
    "callSignatures": [],
    "constructSignatures": [],
    "docs": [],
    "file": "/interfaces.ts",
    "getAccessors": [],
    "id": "+interface.Interface011",
    "indexSignatures": [],
    "kind": "interface",
    "line": 43,
    "methods": [],
    "name": "Interface011",
    "properties": [
      {
        "docs": [],
        "file": "/interfaces.ts",
        "id": "+interface.Interface011.+property.baz",
        "kind": "interface-property",
        "line": 49,
        "name": "baz",
        "signature": "baz: boolean;",
      },
      {
        "docs": [],
        "file": "/interfaces.ts",
        "id": "+interface.Interface011.+property.foo",
        "kind": "interface-property",
        "line": 44,
        "name": "foo",
        "signature": "foo: string;",
      },
    ],
    "setAccessors": [],
    "signature": "interface Interface011 {}",
  },
  {
    "callSignatures": [],
    "constructSignatures": [],
    "docs": [],
    "file": "/interfaces.ts",
    "getAccessors": [],
    "id": "+interface.Interface012",
    "indexSignatures": [],
    "kind": "interface",
    "line": 52,
    "methods": [
      {
        "docs": [],
        "file": "/interfaces.ts",
        "id": "+interface.Interface012.+method.foo",
        "kind": "interface-method",
        "line": 53,
        "name": "foo",
        "signature": "foo: (a: number) => string;",
      },
    ],
    "name": "Interface012",
    "properties": [],
    "setAccessors": [],
    "signature": "interface Interface012 {}",
  },
  {
    "callSignatures": [],
    "constructSignatures": [],
    "docs": [],
    "file": "/interfaces.ts",
    "getAccessors": [],
    "id": "+interface.Interface013",
    "indexSignatures": [],
    "kind": "interface",
    "line": 56,
    "methods": [],
    "name": "Interface013",
    "properties": [],
    "setAccessors": [],
    "signature": "interface Interface013 {}",
  },
  {
    "callSignatures": [],
    "constructSignatures": [],
    "docs": [],
    "file": "/interfaces.ts",
    "getAccessors": [
      {
        "docs": [
          "/** This is a get accessor */",
        ],
        "file": "/interfaces.ts",
        "id": "+interface.Interface014.+get-accessor.foo",
        "kind": "interface-get-accessor",
        "line": 78,
        "name": "foo",
        "signature": "get foo(): any;",
      },
    ],
    "id": "+interface.Interface014",
    "indexSignatures": [],
    "kind": "interface",
    "line": 76,
    "methods": [],
    "name": "Interface014",
    "properties": [],
    "setAccessors": [
      {
        "docs": [
          "/** This is a set accessor */",
        ],
        "file": "/interfaces.ts",
        "id": "+interface.Interface014.+set-accessor.foo",
        "kind": "interface-set-accessor",
        "line": 81,
        "name": "foo",
        "signature": "set foo(value: any);",
      },
    ],
    "signature": "interface Interface014 {}",
  },
  {
    "callSignatures": [
      {
        "docs": [],
        "file": "/interfaces.ts",
        "id": "+interface.Interface015.call-signature",
        "kind": "interface-call-signature",
        "line": 85,
        "name": "call-signature",
        "signature": "(a: string): string;",
      },
      {
        "docs": [],
        "file": "/interfaces.ts",
        "id": "+interface.Interface015.call-signature.1",
        "kind": "interface-call-signature",
        "line": 86,
        "name": "call-signature",
        "signature": "(a: number): number;",
      },
      {
        "docs": [],
        "file": "/interfaces.ts",
        "id": "+interface.Interface015.call-signature.2",
        "kind": "interface-call-signature",
        "line": 87,
        "name": "call-signature",
        "signature": "(a: boolean): boolean;",
      },
    ],
    "constructSignatures": [],
    "docs": [],
    "file": "/interfaces.ts",
    "getAccessors": [],
    "id": "+interface.Interface015",
    "indexSignatures": [],
    "kind": "interface",
    "line": 84,
    "methods": [],
    "name": "Interface015",
    "properties": [],
    "setAccessors": [],
    "signature": "interface Interface015 {}",
  },
  {
    "callSignatures": [],
    "constructSignatures": [
      {
        "docs": [],
        "file": "/interfaces.ts",
        "id": "+interface.Interface016.construct-signature",
        "kind": "interface-construct-signature",
        "line": 91,
        "name": "construct-signature",
        "signature": "new (): Interface006;",
      },
      {
        "docs": [],
        "file": "/interfaces.ts",
        "id": "+interface.Interface016.construct-signature.1",
        "kind": "interface-construct-signature",
        "line": 92,
        "name": "construct-signature",
        "signature": "new (): Interface006;",
      },
    ],
    "docs": [],
    "file": "/interfaces.ts",
    "getAccessors": [],
    "id": "+interface.Interface016",
    "indexSignatures": [],
    "kind": "interface",
    "line": 90,
    "methods": [],
    "name": "Interface016",
    "properties": [],
    "setAccessors": [],
    "signature": "interface Interface016 {}",
  },
  {
    "callSignatures": [],
    "constructSignatures": [],
    "docs": [],
    "file": "/interfaces.ts",
    "getAccessors": [],
    "id": "+interface.Interface017",
    "indexSignatures": [
      {
        "docs": [],
        "file": "/interfaces.ts",
        "id": "+interface.Interface017.index-signature",
        "kind": "interface-index-signature",
        "line": 96,
        "name": "index-signature",
        "signature": "readonly [index: string]: any;",
      },
      {
        "docs": [],
        "file": "/interfaces.ts",
        "id": "+interface.Interface017.index-signature.1",
        "kind": "interface-index-signature",
        "line": 97,
        "name": "index-signature",
        "signature": "readonly [index: number]: any;",
      },
    ],
    "kind": "interface",
    "line": 95,
    "methods": [],
    "name": "Interface017",
    "properties": [],
    "setAccessors": [],
    "signature": "interface Interface017 {}",
  },
  {
    "declarations": [],
    "docs": [
      "/**
 * Namespace1.
 */",
    ],
    "file": "/namespaces.ts",
    "id": "+namespace.Namespace1",
    "kind": "namespace",
    "line": 4,
    "name": "Namespace1",
    "signature": "namespace Namespace1 {}",
  },
  {
    "declarations": [
      {
        "declarations": [
          {
            "declarations": [],
            "docs": [],
            "file": "/namespaces.ts",
            "id": "+namespace.Namespace2.+namespace.Namespace21.+namespace.Namespace22",
            "kind": "namespace",
            "line": 13,
            "name": "Namespace22",
            "signature": "namespace Namespace22 {}",
          },
          {
            "docs": [],
            "file": "/namespaces.ts",
            "id": "+namespace.Namespace2.+namespace.Namespace21.+variable.var2",
            "kind": "variable",
            "line": 11,
            "name": "var2",
            "signature": "const var2: string;",
          },
        ],
        "docs": [],
        "file": "/namespaces.ts",
        "id": "+namespace.Namespace2.+namespace.Namespace21",
        "kind": "namespace",
        "line": 10,
        "name": "Namespace21",
        "signature": "namespace Namespace21 {}",
      },
      {
        "docs": [
          "/** Var1 */",
        ],
        "file": "/namespaces.ts",
        "id": "+namespace.Namespace2.+variable.var1",
        "kind": "variable",
        "line": 8,
        "name": "var1",
        "signature": "const var1: number;",
      },
    ],
    "docs": [],
    "file": "/namespaces.ts",
    "id": "+namespace.Namespace2",
    "kind": "namespace",
    "line": 6,
    "name": "Namespace2",
    "signature": "namespace Namespace2 {}",
  },
  {
    "declarations": [
      {
        "docs": [],
        "file": "/namespaces.ts",
        "id": "+namespace.Namespace3.+variable.var1",
        "kind": "variable",
        "line": 18,
        "name": "var1",
        "signature": "const var1: number;",
      },
      {
        "docs": [],
        "file": "/namespaces.ts",
        "id": "+namespace.Namespace3.+variable.var2",
        "kind": "variable",
        "line": 22,
        "name": "var2",
        "signature": "const var2: string;",
      },
    ],
    "docs": [],
    "file": "/namespaces.ts",
    "id": "+namespace.Namespace3",
    "kind": "namespace",
    "line": 17,
    "name": "Namespace3",
    "signature": "namespace Namespace3 {}",
  },
  {
    "docs": [
      "/**
 * TypeAlias1 aliases a function.
 */",
    ],
    "file": "/type-aliases.ts",
    "id": "+type.TypeAlias1",
    "kind": "type",
    "line": 4,
    "name": "TypeAlias1",
    "signature": "type TypeAlias1 = () => any;",
  },
  {
    "docs": [],
    "file": "/type-aliases.ts",
    "id": "+type.TypeAlias2",
    "kind": "type",
    "line": 6,
    "name": "TypeAlias2",
    "signature": "type TypeAlias2 = string;",
  },
  {
    "docs": [],
    "file": "/type-aliases.ts",
    "id": "+type.TypeAlias3",
    "kind": "type",
    "line": 8,
    "name": "TypeAlias3",
    "signature": "type TypeAlias3 = number | string;",
  },
  {
    "docs": [
      "/**
 * This is var1.
 */",
    ],
    "file": "/variables.ts",
    "id": "+variable.var1",
    "kind": "variable",
    "line": 8,
    "name": "var1",
    "signature": "const var1: string;",
  },
  {
    "docs": [],
    "file": "/variables.ts",
    "id": "+variable.var2",
    "kind": "variable",
    "line": 10,
    "name": "var2",
    "signature": "let var2: number;",
  },
  {
    "docs": [],
    "file": "/variables.ts",
    "id": "+variable.var3",
    "kind": "variable",
    "line": 12,
    "name": "var3",
    "signature": "var var3: (string | number)[];",
  },
  {
    "docs": [],
    "file": "/variables.ts",
    "id": "+variable.var4",
    "kind": "variable",
    "line": 3,
    "name": "var4",
    "signature": "const var4: string;",
  },
  {
    "docs": [],
    "file": "/variables.ts",
    "id": "+variable.var6",
    "kind": "variable",
    "line": 21,
    "name": "var6",
    "signature": "const var6: SomeType;",
  },
  {
    "docs": [],
    "file": "/variables.ts",
    "id": "+variable.var7",
    "kind": "variable",
    "line": 23,
    "name": "var7",
    "signature": "let var7: string;",
  },
]
`;
