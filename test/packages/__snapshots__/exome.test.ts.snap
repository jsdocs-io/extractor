// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`exome@2.4.0 1`] = `
{
  "analyzedAt": Any<String>,
  "analyzedIn": Any<Number>,
  "declarations": [
    {
      "constructors": [
        {
          "docs": [],
          "file": "/exome/constructor.d.ts",
          "id": "+class.Exome.constructor",
          "kind": "class-constructor",
          "line": 5,
          "name": "constructor",
          "signature": "constructor();",
        },
      ],
      "docs": [],
      "file": "/exome/constructor.d.ts",
      "id": "+class.Exome",
      "kind": "class",
      "line": 2,
      "methods": [],
      "name": "Exome",
      "properties": [],
      "signature": "class Exome {}",
    },
    {
      "docs": [],
      "file": "/exome/middleware.d.ts",
      "id": "+function.addMiddleware",
      "kind": "function",
      "line": 4,
      "name": "addMiddleware",
      "signature": "addMiddleware: (fn: Middleware) => () => void;",
    },
    {
      "docs": [],
      "file": "/exome/utils/id.d.ts",
      "id": "+function.getExomeId",
      "kind": "function",
      "line": 2,
      "name": "getExomeId",
      "signature": "getExomeId: (store: Exome) => string;",
    },
    {
      "docs": [],
      "file": "/exome/on-action.d.ts",
      "id": "+function.onAction",
      "kind": "function",
      "line": 3,
      "name": "onAction",
      "signature": "onAction: <T extends Exome>(
  Parent: new (...args: any[]) => T,
  action: "NEW" | "LOAD_STATE" | keyof T | null,
  callback: (
    instance: T,
    action: "NEW" | "LOAD_STATE" | keyof T,
    payload: any[],
    error?: Error,
  ) => void,
  type?: "before" | "after",
) => Unsubscribe;",
    },
    {
      "docs": [],
      "file": "/exome/middleware.d.ts",
      "id": "+function.runMiddleware",
      "kind": "function",
      "line": 5,
      "name": "runMiddleware",
      "signature": "runMiddleware: (
  parent: Parameters<Middleware>[0],
  key: Parameters<Middleware>[1],
  args: Parameters<Middleware>[2],
) => (error?: Error) => void;",
    },
    {
      "docs": [],
      "file": "/exome/utils/id.d.ts",
      "id": "+function.setExomeId",
      "kind": "function",
      "line": 3,
      "name": "setExomeId",
      "signature": "setExomeId: (store: Exome, id: string) => void;",
    },
    {
      "docs": [],
      "file": "/exome/subscribe.d.ts",
      "id": "+function.subscribe",
      "kind": "function",
      "line": 3,
      "name": "subscribe",
      "signature": "subscribe: <T extends Exome>(
  store: T,
  fn: (store: T) => void,
) => () => void;",
    },
    {
      "docs": [],
      "file": "/exome/subscribe.d.ts",
      "id": "+function.update",
      "kind": "function",
      "line": 4,
      "name": "update",
      "signature": "update: (store: Exome) => void;",
    },
    {
      "docs": [],
      "file": "/exome/subscribe.d.ts",
      "id": "+function.updateAll",
      "kind": "function",
      "line": 5,
      "name": "updateAll",
      "signature": "updateAll: () => void;",
    },
    {
      "docs": [],
      "file": "/exome/middleware.d.ts",
      "id": "+type.Middleware",
      "kind": "type",
      "line": 2,
      "name": "Middleware",
      "signature": "type Middleware = (
  instance: Exome,
  action: string,
  payload: any[],
) => void | ((error?: Error) => void);",
    },
    {
      "docs": [],
      "file": "/exome/constants.d.ts",
      "id": "+variable.exomeId",
      "kind": "variable",
      "line": 1,
      "name": "exomeId",
      "signature": "const exomeId: Symbol;",
    },
    {
      "docs": [],
      "file": "/exome/constants.d.ts",
      "id": "+variable.exomeName",
      "kind": "variable",
      "line": 2,
      "name": "exomeName",
      "signature": "const exomeName: Symbol;",
    },
  ],
  "dependencies": Any<Array>,
  "name": "exome",
  "overview": undefined,
  "subpath": ".",
  "types": "./exome.d.ts",
  "version": "2.4.0",
}
`;

exports[`exome@2.4.0@ghost 1`] = `
{
  "analyzedAt": Any<String>,
  "analyzedIn": Any<Number>,
  "declarations": [
    {
      "constructors": [],
      "docs": [],
      "file": "/exome/ghost.d.ts",
      "id": "+class.GhostExome",
      "kind": "class",
      "line": 2,
      "methods": [],
      "name": "GhostExome",
      "properties": [],
      "signature": "class GhostExome {}",
    },
  ],
  "dependencies": Any<Array>,
  "name": "exome",
  "overview": undefined,
  "subpath": "ghost",
  "types": "./ghost.d.ts",
  "version": "2.4.0",
}
`;
